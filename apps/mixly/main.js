(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("./blocks/index");
var io_1 = require("./io");
var flash_1 = require("./platforms/microbit/flash");
var samples_1 = require("./samples");
var server_1 = require("./server");
var hexlify_1 = require("./lib/hexlify");
function newApp() {
    var connection;
    var io = io_1.getIo();
    var samples = samples_1.newSamples();
    function initConnection(ip) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, server_1.newServerConnection(ip)];
                    case 1:
                        connection = _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
    function runCode(code) {
        if (!connection) {
            throw new Error('No connection!');
        }
        return connection.runCode(code);
    }
    function openFile() {
        return io.openFile();
    }
    function saveFile(fileName, data, ext, type) {
        return io.saveFile(fileName, data, ext, type);
    }
    function getCombinedScript(python, extensions) {
        var beforeScript = index_1.getBeforeScript(extensions);
        var newpy = python;
        newpy = newpy.replace('from gigglebot import *', '');
        newpy = newpy.replace('from scrollbit import *', '');
        newpy = newpy.replace('from envirobit import *', '');
        newpy = newpy.replace('from iotloranode import loraNode', '');
        //Automated Extensions under here
        newpy = newpy.replace('from DriveBit import *', '');
        newpy = newpy.replace('from BitBotXL import *', '');
        newpy = newpy.replace('from movemini import *', '');
        newpy = newpy.replace('from Minibit import *', '');
        var combinedScript = (beforeScript ? (beforeScript + '\n\n') : '') + newpy;
        return combinedScript;
    }
    function exportPython(fileName, python, extensions) {
        return __awaiter(this, void 0, void 0, function () {
            var combinedScript;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        combinedScript = getCombinedScript(python, extensions);
                        return [4 /*yield*/, io.saveFile(fileName, combinedScript, 'py', 'text/python;charset=utf-8')];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
    function flashHex(python, extensions, onProgress) {
        return __awaiter(this, void 0, void 0, function () {
            var combinedScript;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        combinedScript = getCombinedScript(python, extensions);
                        // const hex = getHexFile(combinedScript);
                        //await io.saveFile("jk", hex, 'hex', 'application/octet-stream');
                        return [4 /*yield*/, flash_1.flashMicroBit(combinedScript, onProgress)];
                    case 1:
                        // const hex = getHexFile(combinedScript);
                        //await io.saveFile("jk", hex, 'hex', 'application/octet-stream');
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
    function saveHex(fileName, python, extensions) {
        return __awaiter(this, void 0, void 0, function () {
            var combinedScript, hex;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        combinedScript = getCombinedScript(python, extensions);
                        hex = hexlify_1.getHexFile(combinedScript);
                        return [4 /*yield*/, io.saveFile(fileName, hex, 'hex', 'application/octet-stream')];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
    function assignTerminal(terminal) {
        if (!connection) {
            throw new Error('No connection!');
        }
        connection.on('data', function (data) { return terminal.write(data); });
        connection.on('reconnect', function () {
            terminal.reset();
            connection.resizeTerminal(terminal.cols, terminal.rows);
        });
        terminal.on('data', connection.sendData);
        terminal.on('resize', connection.resizeTerminal);
        if (terminal.cols && terminal.rows) {
            connection.resizeTerminal(terminal.cols, terminal.rows);
        }
    }
    function getThemes() {
        return [
            'Default',
            'Dark',
            'Light'
        ];
    }
    return __assign({ initConnection: initConnection,
        runCode: runCode,
        openFile: openFile,
        saveFile: saveFile,
        exportPython: exportPython,
        flashHex: flashHex,
        saveHex: saveHex,
        assignTerminal: assignTerminal,
        getThemes: getThemes }, samples);
}
exports.newApp = newApp;

},{"./blocks/index":24,"./io":105,"./lib/hexlify":115,"./platforms/microbit/flash":121,"./samples":125,"./server":126}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var advcol = "#22a6b3";
    // CPU Temp
    Blocks['import_micro'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import microcontroller');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(advcol);
            this.setTooltip('Imports the microcontroller library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['cputemp'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("microcontroller.cpu.temperature");
            this.setOutput(true, null);
            this.setColour(advcol);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    // Storage
    Blocks['import_storage'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import storage');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(advcol);
            this.setTooltip('Imports the storage library.');
            this.setHelpUrl('');
        },
    };
    Blocks['storage_remount'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("storage.remount(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(advcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['open'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("open(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(advcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['write'] = {
        init: function () {
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".write(");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(advcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    // CPU Temp 
    Python['import_micro'] = function (block) {
        var code = 'import microcontroller\n';
        return code;
    };
    Python['cputemp'] = function (block) {
        var code = 'microcontroller.cpu.temperature';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    // Storage
    Python['import_storage'] = function (block) {
        var code = 'import storage\n';
        return code;
    };
    Python['storage_remount'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'storage.remount(' + value_text1 + ', ' + value_text2 + ')\n';
        return code;
    };
    Python['open'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'open(' + value_text1 + ', ' + value_text2 + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['write'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_text1 + '.write(' + value_text2 + ')\n';
        return code;
    };
}
exports.default = define;

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_analogio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from analogio import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E67D21");
            this.setTooltip('Imports the DigitalIO library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['analog_in'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("analogin"), "pin")
                .appendField(" = AnalogIn(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E67D21");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['analog_out'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("analog_out"), "pin")
                .appendField(" = AnalogOut(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E67D21");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['analogpinvalue'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".value = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput();
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E67D21");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['valinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".value");
            this.setOutput(true, null);
            this.setColour("#E67D21");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_analogio'] = function (block) {
        var code = 'from analogio import *\n';
        return code;
    };
    Python['analog_in'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = AnalogIn(' + text_pinno + ')\n';
        return code;
    };
    Python['analog_out'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = AnalogOut(' + text_pinno + ')\n';
        return code;
    };
    Python['analogpinvalue'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.value = ' + text_text + '\n';
        return code;
    };
    Python['valinline'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ".value";
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var audiocol = "#4CE254";
    Blocks['import_audio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import audioio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip('Imports the DigitalIO library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['audio_enable'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("audio"), "pin")
                .appendField(".switch_to_output(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_conf'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("audio"), "pin")
                .appendField(" = audioio.AudioOut(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_wav'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("audio"), "pin")
                .appendField(" = audioio.WaveFile(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_open'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("data"), "data")
                .appendField(" = open(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_playing'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("audio"), "pin")
                .appendField(".playing");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_raw'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("sample"), "pin")
                .appendField(" = audioio.RawSample(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_play'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("audio"), "pin")
                .appendField(".play(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['audio_stop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("audio"), "pin")
                .appendField(".stop()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(audiocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_audio'] = function (block) {
        var code = 'import audioio\n';
        return code;
    };
    Python['audio_conf'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = audioio.AudioOut(' + text_pinno + ')\n';
        return code;
    };
    Python['audio_wav'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = audioio.WaveFile(' + text_pinno + ')\n';
        return code;
    };
    Python['audio_enable'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'value = True';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.switch_to_output(' + text_pinno + ')\n';
        return code;
    };
    Python['audio_open'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('data'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = open(' + text_pinno + ')\n';
        return code;
    };
    Python['audio_raw'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = audioio.RawSample(' + text_pinno + ')\n';
        return code;
    };
    Python['audio_play'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.play(' + text_pinno + ')\n';
        return code;
    };
    Python['audio_stop'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.stop()\n';
        return code;
    };
    Python['audio_playing'] = function (block) {
        var variable_variable = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_variable + '.playing';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var maincolour = "#ff0066";
    Blocks['import_board'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import board');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Imports the board library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_time'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import time');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Imports the time library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['pause_s'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pause()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Pause');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['random'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import random');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Imports the random library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['while_true'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while True:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Forever loop.');
            this.setHelpUrl('https://t.co/PCZC5EFe4D');
        },
    };
    Blocks['pass'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pass');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Pass to the next command');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['if'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('If Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['class'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('class');
            this.appendValueInput("class")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Class Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['varprint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print(');
            this.appendValueInput('var')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Use this to print a variable, a number, or even a string if you put in the quotes yourself.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['ifcroc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField(new Blockly.FieldDropdown([['>', '>'], ['<', '<']]), 'crocsigns')
                .appendField(new Blockly.FieldTextInput('that'), 'that')
                .appendField(':');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('If statement with greater and less than');
            this.setHelpUrl('');
        },
    };
    Blocks['varminus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('-=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Variable with - and =');
            this.setHelpUrl('');
        },
    };
    Blocks['for'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('letter')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in range(');
            this.appendValueInput('no')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('Create a for loop');
        },
    };
    Blocks['advancedforloops'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('x')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in');
            this.appendValueInput('y')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(":");
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['ifequals'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField('==')
                .appendField(new Blockly.FieldTextInput('that'), 'that');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['importinputs'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import inputs');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['return2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('return');
            this.appendValueInput('return')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setInputsInline(true);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['elif'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Elif Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['else'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('else:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Else statement');
            this.setHelpUrl('');
        },
    };
    Blocks['try'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('try:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Else statement');
            this.setHelpUrl('');
        },
    };
    Blocks['df'] = {
        init: function () {
            this.appendValueInput("def")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput("params")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('call a define function');
            this.setHelpUrl('');
        },
    };
    Blocks['whileout'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while');
            this.appendValueInput("cond")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_math'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import math');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Imports the math library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['sleep'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sleep(');
            this.appendValueInput("sleep");
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Sleep');
            this.setHelpUrl('');
        },
    };
    Blocks['sleepnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("time.sleep(");
            this.appendValueInput("sleep")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip("Wait (in milliseconds)");
            this.setHelpUrl("");
        }
    };
    //deprecated
    Blocks['print'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput('print')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Use this to print to the output box.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['printnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Use this to print a string to the output box.');
            this.setHelpUrl('');
        },
    };
    Blocks['equalsblock'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['equalsblocknew'] = {
        init: function () {
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("text2")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip("Assign, increment or decrement a variable");
            this.setHelpUrl("");
            this.setOutput(true, "Boolean");
        }
    };
    Blocks['define'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('def ');
            this.appendValueInput('1')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput('2')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['greater'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while')
                .appendField(new Blockly.FieldTextInput(''), '1')
                .appendField('>')
                .appendField(new Blockly.FieldTextInput(''), 'v')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['ifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if');
            this.appendValueInput("iftext")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('If block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['except'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('except');
            this.appendValueInput("iftext")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('Except');
            this.setHelpUrl('');
        },
    };
    Blocks['with'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('with');
            this.appendValueInput("iftext")
                .setCheck("null");
            this.appendDummyInput()
                .appendField('as');
            this.appendValueInput("iftext2")
                .setCheck("null");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('With block');
            this.setHelpUrl('');
        },
    };
    Blocks['typeanything'] = {
        init: function () {
            this.appendValueInput("stuff")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("# your own code");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip("Type any python code into this block");
            this.setHelpUrl("");
        }
    };
    Blocks['elifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif');
            this.appendValueInput('iftext')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('ElIf block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['buttonapressed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('button_')
                .appendField(new Blockly.FieldDropdown([['a', 'a'], ['b', 'b']]), 'NAME')
                .appendField('.is_pressed()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setColour(maincolour);
            this.setTooltip('Button A Pressed');
            this.setHelpUrl('');
        },
    };
    Blocks['internal'] = {
        init: function () {
            // should you translate to other languages
            // var rtlOperators = [
            //     // ['=', 'EQ'],
            //     // ['\u2260', 'NEQ'],
            //     ['\u200F<\u200F', 'LT'],
            //     ['\u200F\u2264\u200F', 'LTE'],
            //     ['\u200F>\u200F', 'GT'],
            //     ['\u200F\u2265\u200F', 'GTE']
            //   ];
            var ltrOperators = [
                ['==', '=='],
                ['!=', '!='],
                ['<', '<'],
                ['<=', '<='],
                ['>', '>'],
                ['>=', '>=']
            ];
            var OPERATORS = ltrOperators;
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(OPERATORS), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['textinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Text input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['stringinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldString(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("String input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("0", "0", "1", "1", "1", "Value"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("Text input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['varinlines'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("variable"), "var")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("value")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
    Blocks['boolstatus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([
                ["True", "True"],
                ["False", "False"]
            ]), "bool");
            this.setOutput(true, "Boolean");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['andor'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["and", "and"], ["or", "or"]]), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['not'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('not');
            this.appendValueInput("bool")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(maincolour);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip('negates a Boolean value');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['break'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('break');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour);
            this.setTooltip('breaks out of a loop');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['variables_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("var"), "VAR");
            this.setOutput(true, null);
            this.setColour("#ff0066");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['variables_set'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("var"), "VAR")
                .appendField(" = ");
            this.appendValueInput("varset")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#ff0066");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_board'] = function (block) {
        var code = 'import board\n';
        return code;
    };
    Python['import_time'] = function (block) {
        var code = 'import time\n';
        return code;
    };
    Python['pause_s'] = function (block) {
        var code = 'pause()\n';
        return code;
    };
    Python['random'] = function (block) {
        var code = 'import random\n';
        return code;
    };
    Python['while_true'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'while True:\n' + branch;
    };
    Python['pass'] = function (block) {
        var code = 'pass \n';
        return code;
    };
    Python['if'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'if ' + text_const + ':\n' + branch;
    };
    Python['class'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'class', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'class ' + text_const + ':\n' + branch;
    };
    Python['varprint'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'var', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print(' + text_const + ')\n';
        return code;
    };
    Python['ifcroc'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var dropdown_crocsigns = block.getFieldValue('crocsigns');
        var text_that = block.getFieldValue('that');
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' ' + dropdown_crocsigns + ' ' + text_that + ':\n' + branch;
        return code;
    };
    Python['varminus'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_2 = block.getFieldValue('2');
        // TODO: Assemble Python into code variable.
        var code = text_1 + ' -= ' + text_2 + '\n';
        return code;
    };
    Python['for'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_letter = Blockly.Python.valueToCode(block, 'letter', Blockly.Python.ORDER_ATOMIC);
        var text_no = Blockly.Python.valueToCode(block, 'no', Blockly.Python.ORDER_ATOMIC);
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_letter + ' in range(' + text_no + '):\n' + branch;
        return code;
    };
    Python['advancedforloops'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_x = Blockly.Python.valueToCode(block, 'x', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'y', Blockly.Python.ORDER_ATOMIC);
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_x + ' in ' + text_y + ':\n' + branch;
        return code;
    };
    Python['ifequals'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var text_that = block.getFieldValue('that');
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' == ' + text_that + ':\n' + branch;
        return code;
    };
    Python['importinputs'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import inputs\n';
        return code;
    };
    Python['return2'] = function (block) {
        var text_return = Blockly.Python.valueToCode(block, 'return', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'return ' + text_return + '\n';
        return code;
    };
    Python['elif'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'elif ' + text_const + ':\n' + branch;
    };
    Python['else'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'else:\n' + branch;
    };
    Python['try'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'try:\n' + branch;
    };
    Python['df'] = function (block) {
        var text_def = Blockly.Python.valueToCode(block, 'def', Blockly.Python.ORDER_ATOMIC);
        var text_params = Blockly.Python.valueToCode(block, 'params', Blockly.Python.ORDER_ATOMIC);
        var code = text_def + '(' + text_params + ')\n';
        return code;
    };
    Python['whileout'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, 'cond', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var code = 'while ' + text_1 + ':\n' + branch;
        return code;
    };
    Python['time'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import time\n';
        return code;
    };
    Python['import_math'] = function (block) {
        var code = 'import math\n';
        return code;
    };
    Python['sleep'] = function (block) {
        var text_sleeptime = block.getFieldValue('sleep');
        var code = 'time.sleep(' + text_sleeptime + ')\n';
        return code;
    };
    Python['print'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'print', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['sleepnew'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'sleep', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'time.sleep(' + value_name + ')\n';
        return code;
    };
    Python['printnew'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'Hello World';
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['equalsblocknew'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_text1 + ' = ' + value_text2 + '\n';
        return code;
    };
    Python['define'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, '1', Blockly.Python.ORDER_ATOMIC);
        var text_2 = Blockly.Python.valueToCode(block, '2', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // const statements_name = Blockly.Python.statementToCode(block, 'NAME');
        // TODO: Assemble Python into code variable.
        var code = 'def ' + text_1 + '(' + text_2 + '):\n' + branch;
        return code;
    };
    Python['greater'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_v = block.getFieldValue('v');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // TODO: Assemble Python into code variable.
        var code = 'while ' + text_1 + ' > ' + text_v + ':\n' + branch;
        return code;
    };
    Python['buttonapressed'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'button_' + dropdown_name + '.is_pressed()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['ifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC) || 'True';
        var code = 'if ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['except'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        var code = 'except ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['with'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        var value_iftext2 = Blockly.Python.valueToCode(block, 'iftext2', Blockly.Python.ORDER_ATOMIC);
        var code = 'with ' + value_iftext + ' as ' + value_iftext2 + ':\n' + branch;
        return code;
    };
    Python['typeanything'] = function (block) {
        var text_stuff = Blockly.Python.valueToCode(block, 'stuff', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = text_stuff + '# your own code\n';
        return code;
    };
    Python['elifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        // const statements_ifstate = Blockly.Python.statementToCode(block, 'ifstate');
        // TODO: Assemble Python into code variable.
        var code = 'elif ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['internal'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('choose');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['andor'] = Python['internal'];
    Python['not'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'not ' + value_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['break'] = function (block) {
        var code = 'break\n ';
        return code;
    };
    Python['textinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['stringinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = '"' + text_text + '"';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['sliderinline'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['varinlines'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('var'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'value', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
    Python['boolstatus'] = function (block) {
        var dropdown_bool = block.getFieldValue('bool');
        var code = dropdown_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_get'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_var;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_set'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_var + ' = ' + value_name + '\n';
        return code;
    };
}
exports.default = define;

},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var cpxcol = "#556EE6";
    Blocks['import_cpx'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from adafruit_circuitplayground.express import cpx');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(cpxcol);
            this.setTooltip('Imports the CPX library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['redled'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.red_led = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['switch'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.switch");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['detect_taps'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.detect_taps =");
            this.appendValueInput("text")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['tapped'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.tapped");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['shake'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.shake(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['light'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.light");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['acc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.acceleration");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['button'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.button_")
                .appendField(new Blockly.FieldDropdown([["a", "a"], ["b", "b"]]), "button");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['temp'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.acceleration");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['touchdrop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.touch_")
                .appendField(new Blockly.FieldDropdown([["a1", "a1"], ["a2", "a2"], ["a3", "a3"], ["a4", "a4"], ["a5", "a5"], ["a6", "a6"], ["a7", "a7"]]), "button");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['playtone'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.play_tone(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['starttone'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.start_tone(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['stoptone'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.stop_tone()");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['playfile'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("cpx.play_file(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(cpxcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_cpx'] = function (block) {
        var code = 'from adafruit_circuitplayground.express import cpx\n';
        return code;
    };
    Python['redled'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'cpx.red_led = ' + value_text + '\n';
        return code;
    };
    Python['switch'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'cpx.switch';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['detect_taps'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'cpx.detect_taps = ' + value_name + '\n';
        return code;
    };
    Python['tapped'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'cpx.tapped';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['shake'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'cpx.shake(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['light'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'cpx.light';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['acc'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'cpx.acceleration';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['button'] = function (block) {
        var dropdown_button = block.getFieldValue('button');
        // TODO: Assemble Python into code variable.
        var code = 'cpx.button_' + dropdown_button;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['temp'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'cpx.temperature';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['touchdrop'] = function (block) {
        var dropdown_button = block.getFieldValue('button');
        // TODO: Assemble Python into code variable.
        var code = 'cpx.touch_' + dropdown_button;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['playtone'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'cpx.play_tone(' + value_text1 + ', ' + value_text2 + ')\n';
        return code;
    };
    Python['starttone'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'cpx.start_tone(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['stoptone'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'cpx.stop_tone()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['playfile'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'cpx.play_file(' + value_text + ')\n';
        return code;
    };
}
exports.default = define;

},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var digitalcol = "#2C97DF";
function define(Blocks) {
    Blocks['import_digitalio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from digitalio import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(digitalcol);
            this.setTooltip('Imports the DigitalIO library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['pinconfig'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(" = DigitalInOut(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(digitalcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['pindirection'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".direction = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(digitalcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['pull'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".pull = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput();
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(digitalcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['pinvalue'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".value = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput();
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(digitalcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['valuein'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".value");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(digitalcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_digitalio'] = function (block) {
        var code = 'from digitalio import *\n';
        return code;
    };
    Python['pinconfig'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = DigitalInOut(' + text_pinno + ')\n';
        return code;
    };
    Python['pindirection'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_direction = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'Direction.OUTPUT';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.direction = ' + text_direction + '\n';
        return code;
    };
    Python['pull'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_direction = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'Pull.DOWN';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.pull = ' + text_direction + '\n';
        return code;
    };
    Python['pinvalue'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.value = ' + text_text + '\n';
        return code;
    };
    Python['valuein'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.value';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_dotstar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import adafruit_dotstar');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516");
            this.setTooltip('Scroll a Message');
            this.setHelpUrl('');
        },
    };
    Blocks['vardotstar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("led"), "led")
                .appendField(" = adafruit_dotstar.DotStar(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['ledfill'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("led"), "led")
                .appendField(".fill(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['dsbrightness'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("led"), "led")
                .appendField(".brightness = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['dsvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("led"), "led")
                .appendField("[");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("] = (");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516");
            this.setTooltip("Set Neopixel Colour");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_dotstar'] = function (block) {
        var code = 'import adafruit_dotstar\n';
        return code;
    };
    Python['vardotstar'] = function (block) {
        var variable_led = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var text_input = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_led + ' = adafruit_dotstar.DotStar(' + text_input + ')\n';
        return code;
    };
    Python['ledfill'] = function (block) {
        var variable_led = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var text_input = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_led + '.fill(' + text_input + ')\n';
        return code;
    };
    Python['dsbrightness'] = function (block) {
        var variable_led = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var text_brightness = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_led + '.brightness = ' + text_brightness + '\n';
        return code;
    };
    Python['dsvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var text_neonum = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || '';
        var text_colour = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_name + '[' + text_neonum + '] = (' + text_colour + ')\n';
        return code;
    };
}
exports.default = define;

},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['setneo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(" = neopixel.NeoPixel(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(150);
            this.setTooltip("Configure Neopixels");
            this.setHelpUrl("");
        }
    };
    Blocks['fill'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(".fill(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(150);
            this.setTooltip("Configure Neopixels");
            this.setHelpUrl("");
        }
    };
    Blocks['neovarnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField("[");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("] = (");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(150);
            this.setTooltip("Set Neopixel Colour");
            this.setHelpUrl("");
        }
    };
    Blocks['importneo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("import neopixel");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(150);
            this.setTooltip("Import Neopixel Library");
            this.setHelpUrl("");
        }
    };
    Blocks['neoshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(".show()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(150);
            this.setTooltip("Show the set neopixel config");
            this.setHelpUrl("");
        }
    };
    Blocks['neoclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(".clear()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(150);
            this.setTooltip("Clear the set neopixel config");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['setneo'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_inputneo = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        var code = variable_name + ' = neopixel.NeoPixel(' + text_inputneo + ')\n';
        return code;
    };
    Python['fill'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_inputneo = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        var code = variable_name + '.fill(' + text_inputneo + ')\n';
        return code;
    };
    Python['importneo'] = function (block) {
        var code = 'import neopixel\n';
        return code;
    };
    Python['neovarnew'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_neonum = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_colour = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '[' + text_neonum + '] = (' + text_colour + ')\n';
        return code;
    };
    Python['neoshow'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.show()\n';
        return code;
    };
    Python['neoclear'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.clear()\n';
        return code;
    };
}
exports.default = define;

},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var pwmcol = "#FF4A60";
    Blocks['import_pulseio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import pulseio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip('Imports the PulseIO library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_simpleio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import simpleio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip('Imports the PulseIO library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['pwm_conf'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pwm"), "pwm")
                .appendField(" = pulseio.PWMOut(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", duty_cycle=");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", frequency = ");
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['pwm_conf2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(" = pulseio.PWMOut(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['simple_tone'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("simple.tone(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['pwm_dc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".duty_cycle = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['pwm_freq'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("pin"), "pin")
                .appendField(".frequency = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pwmcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_pulseio'] = function (block) {
        var code = 'from pulseio import *\n';
        return code;
    };
    Python['import_simpleio'] = function (block) {
        var code = 'from simpleio import *\n';
        return code;
    };
    Python['pwm_conf'] = function (block) {
        var variable_pwm = Blockly.Python.variableDB_.getName(block.getFieldValue('pwm'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || '';
        var text_dc = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC)
            || '';
        var text_fr = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pwm + ' = pulseio.PWMOut(' + text_pin + ', duty_cycle=' + text_dc + ', frequency=' + text_fr + ')\n';
        return code;
    };
    Python['pwm_conf2'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = DigitalInOut(' + text_pinno + ')\n';
        return code;
    };
    Python['simple_tone'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = 'simpleio.tone(' + text_pinno + ')\n';
        return code;
    };
    Python['pwm_dc'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_direction = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.duty_cycle = ' + text_direction + '\n';
        return code;
    };
    Python['pwm_freq'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_direction = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.frequency = ' + text_direction + '\n';
        return code;
    };
}
exports.default = define;

},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var servocol = "#9C56B8";
    Blocks['import_servo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from adafruit_motor import servo');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(servocol);
            this.setTooltip('Imports the Adafruit Motor Servo library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['servo_conf'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("my_servo"), "pin")
                .appendField(" = servo.Servo(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(servocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['servo_value'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("my_servo"), "pin")
                .appendField(".angle = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput();
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(servocol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_servo'] = function (block) {
        var code = 'from adafruit_motor import servo\n';
        return code;
    };
    Python['servo_conf'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = servo.Servo(' + text_pinno + ')\n';
        return code;
    };
    Python['servo_value'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_angle = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + '.angle = ' + text_angle + '\n';
        return code;
    };
}
exports.default = define;

},{}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var touchcol = "#E84C3D";
    Blocks['import_touchio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import touchio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(touchcol);
            this.setTooltip('Imports the TouchIO library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['touch_conf'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("touch"), "pin")
                .appendField(" = touchio.TouchIn(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(touchcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['touch_valinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("touch"), "pin")
                .appendField(".value");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(touchcol);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_touchio'] = function (block) {
        var code = 'import touchio\n';
        return code;
    };
    Python['touch_conf'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        var text_pinno = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ' = touchio.TouchIn(' + text_pinno + ')\n';
        return code;
    };
    Python['touch_valinline'] = function (block) {
        var variable_pin = Blockly.Python.variableDB_.getName(block.getFieldValue('pin'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_pin + ".value";
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],24:[function(require,module,exports){
(function (Buffer){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });

var path = require("path");
function getToolBoxXml(extensions) {
    return __awaiter(this, void 0, void 0, function () {
        var toolBoxXml;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    toolBoxXml = '';
                    toolBoxXml += '<xml>';
                    if (!(extensions.indexOf('Web General') !== -1)) return [3 /*break*/, 25];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/imports/definitions')); })];
                case 1:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/imports/generators')); })];
                case 2:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkltcG9ydHMiIGNvbG91cj0iI2ZmMDA2NiIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gaW1wb3J0cyI+CgogIDxsYWJlbCB0ZXh0PSJJbXBvcnRzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KCiAgPGJsb2NrIHR5cGU9ImltcG9ydF90aW1lIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbXBvcnRfbWF0aCI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmFuZG9tIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbXBvcnRfcHlnYWwiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImltcG9ydF9wcm9jZXNzaW5nIj48L2Jsb2NrPgoKPC9jYXRlZ29yeT4K","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/variables/definitions')); })];
                case 3:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/variables/generators')); })];
                case 4:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlZhcmlhYmxlcyIgY3VzdG9tPSJWQVJJQUJMRSIgY29sb3VyPSIjMDAwMENEIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSB2YXJpYWJsZXMiPgogIDxidXR0b24gdGV4dD0iQSBidXR0b24iIGNhbGxiYWNrS2V5PSJteUZpcnN0QnV0dG9uUHJlc3NlZCI+PC9idXR0b24+CiAgPGJsb2NrIHR5cGU9InZhcmlhYmxlc19zZXQiPgogICAgPHZhbHVlIG5hbWU9InZhcnNldCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFyaWFibGVzX2dldCI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idGV4dGlubGluZSI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/statements/definitions')); })];
                case 5:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/statements/generators')); })];
                case 6:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlN0YXRlbWVudHMiIGNvbG91cj0iI0Y4OTYyMSIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gc3RhdGVtZW50cyI+CgogIDxsYWJlbCB0ZXh0PSJTdGF0ZW1lbnRzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0id2Vic2xlZXBuZXciPgogICAgICA8dmFsdWUgbmFtZT0ic2xlZXAiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4gCiAKICA8YmxvY2sgdHlwZT0id2VidHlwZWFueXRoaW5nIj4KICAgICAgPHZhbHVlIG5hbWU9InN0dWZmIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPiAgICAgPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICAKICA8IS0tIDxibG9jayB0eXBlPSJ3ZWJlcXVhbHNibG9ja25ldyI+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij52YXI8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgICA8dmFsdWUgbmFtZT0idGV4dDIiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MDwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4gLS0+CgogIDwhLS0gPGJsb2NrIHR5cGU9IndlYnRleHRpbmxpbmUiPjwvYmxvY2s+IC0tPgogIDxibG9jayB0eXBlPSJ3ZWJkZiI+CiAgICA8dmFsdWUgbmFtZT0iZGVmIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5mdW5jdGlvbl9uYW1lPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJwYXJhbXMiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2VicGFzcyI+PC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9IndlYnByaW50bmV3Ij4KICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+SGVsbG8gV29ybGQ8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9IndlYnZhcnByaW50Ij4KICA8dmFsdWUgbmFtZT0idmFyIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlZhcmlhYmxlPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbnB1dF93ZWIiPgogIDx2YWx1ZSBuYW1lPSJOQU1FIj4KICAgICAgICA8c2hhZG93IHR5cGU9InN0cmluZ2lubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+V2hhdCBpcyB5b3VyIG5hbWU/PC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJnbG9iYWwiPgogICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij52YXJpYWJsZTwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViaW50Ij4KICAgIDx2YWx1ZSBuYW1lPSJib29sIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0id2Vic3RyIj4KICAgIDx2YWx1ZSBuYW1lPSJib29sIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ3ZWJjb21tYSI+CiAgICA8dmFsdWUgbmFtZT0iaW4xIj4KICAgICAgPHNoYWRvdyB0eXBlPSJzdHJpbmdpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9ImluMiI+CiAgICAgIDxzaGFkb3cgdHlwZT0ic3RyaW5naW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzdHJpbmdpbmxpbmUiPjwvYmxvY2s+Cgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/logic/definitions')); })];
                case 7:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/logic/generators')); })];
                case 8:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkxvZ2ljIiBjb2xvdXI9IiM0OUIwNEQiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGxvZ2ljIj4KCiAgPGxhYmVsIHRleHQ9IkxvZ2ljIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0id2ViaWZpbmxpbmUiPgogICAgPHZhbHVlIG5hbWU9ImlmdGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViZWxpZmlubGluZSI+CiAgICA8dmFsdWUgbmFtZT0iaWZ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4gCiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViZWxzZSI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViaW50ZXJuYWwiPgogICAgPHZhbHVlIG5hbWU9ImZpcnN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4gCiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0ibGFzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViYW5kb3IiPgogICAgPHZhbHVlIG5hbWU9ImZpcnN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJsYXN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ3ZWJub3QiPgogICAgPHZhbHVlIG5hbWU9ImJvb2wiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+Cgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/lists/definitions')); })];
                case 9:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/lists/generators')); })];
                case 10:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ikxpc3RzIiBjb2xvdXI9IiMxNUJBRDQiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGxpc3RzIj4KCiAgPGxhYmVsIHRleHQ9Ikxpc3RzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0iY3JlYXRlX2xpc3QiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xLCAyLCAzLCA0PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJjYWxsbGlzdCI+PC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InNlbGVjdGxpc3QiPgogICAgPHZhbHVlIG5hbWU9Ik5BTUUiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4zPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJzZWxlY3RsaXN0MiI+CiAgICA8dmFsdWUgbmFtZT0iTkFNRSI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjM8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im9wdGlvbmxpc3QiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4zPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+Cgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/loops/definitions')); })];
                case 11:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/loops/generators')); })];
                case 12:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ikxvb3BzIiBjb2xvdXI9IiM2NDRBOUUiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGxvb3BzIj4KCiAgPGxhYmVsIHRleHQ9Ikxvb3BzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KCiAgPGJsb2NrIHR5cGU9IndlYndoaWxlb3V0Ij4KICAgIDx2YWx1ZSBuYW1lPSJjb25kIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ3ZWJmb3IiPgogICAgPHZhbHVlIG5hbWU9ImxldHRlciI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmk8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0ibm8iPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5udW1iZXI8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViYWR2YW5jZWRmb3Jsb29wcyI+CiAgICA8dmFsdWUgbmFtZT0ieCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPng8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0ieSI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnk8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViX2JyZWFrIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJsb29wX2dldCI+PC9ibG9jaz4KPC9jYXRlZ29yeT4K","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/definitions/definitions')); })];
                case 13:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/definitions/generators')); })];
                case 14:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkRlZmluaXRpb25zIiBjb2xvdXI9IiNDRERBMzYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGRlZmluaXRpb25zIj4KCiAgPGxhYmVsIHRleHQ9IkRlZmluaXRpb25zIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0id2ViZGVmaW5lIj4KICAgIDx2YWx1ZSBuYW1lPSIxIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+ZnVuY3Rpb248L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0iMiI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ3ZWJyZXR1cm4yIj4KICAgIDx2YWx1ZSBuYW1lPSJyZXR1cm4iPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5mdW5jdGlvbjwvZmllbGQ+IAogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2ViY2xhc3MiPgogICAgPHZhbHVlIG5hbWU9ImNsYXNzIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+Y2xhc3M8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iaW5saW5lX2RlZiI+CiAgICA8dmFsdWUgbmFtZT0iZGVmIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+ZnVuY3Rpb248L2ZpZWxkPiAKICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9ImlucHV0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4gCiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzZWxmIj4KICAgIDx2YWx1ZSBuYW1lPSJ2YXJzZXQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CjwvY2F0ZWdvcnk+Cg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/math/definitions')); })];
                case 15:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/math/generators')); })];
                case 16:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ik1hdGgiIGNvbG91cj0iIzFCMTczRCIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gbWF0aCI+CgogIDxsYWJlbCB0ZXh0PSJNYXRoIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KCiAgPGJsb2NrIHR5cGU9Im9wZXJhdG9yczIiPgogICAgPHZhbHVlIG5hbWU9ImZpcnN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJsYXN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9hY29zIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX2Fjb3NoIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX2FzaW4iPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfYXNpbmgiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfYXRhbiI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9hdGFuaCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9jZWlsIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX2NvcyI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9hY29zaCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9kZWdyZWVzIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX2V4cCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9mYWJzIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX2ZhY3RvcmlhbCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9mbG9vciI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9oeXBvdCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0ibWF0aF9sb2ciPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfbG9nMTAiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfcG93Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX3JhZGlhbnMiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfc2luIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX3NpbmgiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfc3QiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfdGFuIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJtYXRoX3RhbmgiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9Im1hdGhfdHJ1bmMiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/turtle/definitions')); })];
                case 17:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/turtle/generators')); })];
                case 18:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlR1cnRsZSIgY29sb3VyPSIyNDAiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHR1cnRsZSI+CiAgICA8YmxvY2sgdHlwZT0iaW1wb3J0X3R1cnRsZSI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJ0dXJ0bGUiPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic2NyZWVuaW5pdCI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJjb2xvdXJtb2RlIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MjU1LCAwLCAwPC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iYmFja2dyb3VuZCI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjI1NSwgMCwgMDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImRpcmVjdGlvbnMiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij45MDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InR1cnRsZXNwZWVkIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTAwPC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0idHVydGxlc2hhcGUiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJzdHJpbmdpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnR1cnRsZTwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImNvbG91ciI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjI1NSwgMCwgMDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImNvbG91cnBlbiI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjI1NSwgMCwgMDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InBlbnVkIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InBlbndpZHRoIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MjA8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJjaXJjbGUiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij41MDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImdvdG8iPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij41LCA1PC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CjwvY2F0ZWdvcnk+ICAK","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/graphs/definitions')); })];
                case 19:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/graphs/generators')); })];
                case 20:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkdyYXBocyIgY29sb3VyPSIjMDA4RkQxIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSBncmFwaHMiPgoKCiAgPGxhYmVsIHRleHQ9IkdyYXBocyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CgogIDxibG9jayB0eXBlPSJjaGFydF90eXBlIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJjaGFydF90aXRsZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0ic3RyaW5naW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+TXkgYXdlc29tZSBjaGFydDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0iY2hhcnRfYWRkIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJzdHJpbmdpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5MYWJlbDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KCiAgICA8dmFsdWUgbmFtZT0idGV4dDEiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xLCAzLCA4LCAzPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJjaGFydF94bGFiZWxzIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJjaGFydF9yZW5kZXIiPjwvYmxvY2s+Cgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/random/definitions')); })];
                case 21:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/random/generators')); })];
                case 22:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlJhbmRvbSIgY29sb3VyPSIjOEJDMjQ4IiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSByYW5kb20iPgoKCiAgPGxhYmVsIHRleHQ9IlJhbmRvbSIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CgogIDxibG9jayB0eXBlPSJyYW5kb21fY2hvaWNlIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJyYW5kb21fcmFuZGludCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icmFuZG9tX3JhbmRvbSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogCiAgPGJsb2NrIHR5cGU9InJhbmRvbV9yYW5kcmFuZ2UiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InJhbmRvbV9zZWVkIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJyYW5kb21fc2h1ZmZsZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICAgIDxibG9jayB0eXBlPSJyYW5kb21fdW5pZm9ybSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKPC9jYXRlZ29yeT4K","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/processing/definitions')); })];
                case 23:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./web/processing/generators')); })];
                case 24:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlByb2Nlc3NpbmciIGNvbG91cj0iI2M1MWE0YSIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gcHJvY2Vzc2luZyI+CgoKICA8bGFiZWwgdGV4dD0iUHJvY2Vzc2luZyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CgogIDxibG9jayB0eXBlPSJwX2FyYyI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9iYWNrZ3JvdW5kIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2JsdWUiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfcmVkIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2dyZWVuIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2NvbG9yTW9kZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9lbGxpcHNlIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2VsbGlwc2VNb2RlIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2V4aXQiPjwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2ZpbGwiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfZnJhbWVyYXRlX3NldCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9mcmFtZXJhdGVfZ2V0Ij48L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9nZXQiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfbGluZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9sb2FkUGl4ZWxzIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX2xvb3AiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfbm9sb29wIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX25vbG9vcCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9ub2ZpbGwiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfbm9zbW9vdGgiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfc21vb3RoIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX25vc3Ryb2tlIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX3BvaW50Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX3F1YWQiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfcmVjdCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9yZWN0bW9kZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9yb3RhdGUiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfcnVuIj48L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9zY2FsZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9zZXQiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfc2l6ZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF9zdHJva2UiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfbm9zdHJva2UiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InBfc3Ryb2tlMyI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF90ZXh0Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJwX3RyYW5zbGF0ZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icF90cmlhbmdsZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKPC9jYXRlZ29yeT4K","base64");
                    _a.label = 25;
                case 25:
                    if (!(extensions.indexOf('CircuitPython General') !== -1)) return [3 /*break*/, 50];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/basic/definitions')); })];
                case 26:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/basic/generators')); })];
                case 27:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkJhc2ljIiBjb2xvdXI9IiNmZjAwNjYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGJhc2ljIj4KCiAgPGxhYmVsIHRleHQ9IkltcG9ydHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgoKICA8YmxvY2sgdHlwZT0iaW1wb3J0X2JvYXJkIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbXBvcnRfdGltZSI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iaW1wb3J0X21hdGgiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InJhbmRvbSI+PC9ibG9jaz4KCgogIDxsYWJlbCB0ZXh0PSJTdGF0ZW1lbnRzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0ic2xlZXBuZXciPgogICAgICA8dmFsdWUgbmFtZT0ic2xlZXAiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idHlwZWFueXRoaW5nIj4KICAgICAgPHZhbHVlIG5hbWU9InN0dWZmIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPiAgICAgPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDwhLS0gPGJsb2NrIHR5cGU9ImVxdWFsc2Jsb2NrbmV3Ij4KICAgICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnZhcjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPiAtLT4KCiAgPCEtLSA8YmxvY2sgdHlwZT0idGV4dGlubGluZSI+PC9ibG9jaz4gLS0+CiAgPGJsb2NrIHR5cGU9InZhcmlubGluZXMiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ2YWx1ZSI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ2YXJpYWJsZXNfZ2V0Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkZiI+CiAgICA8dmFsdWUgbmFtZT0iZGVmIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5mdW5jdGlvbl9uYW1lPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJwYXJhbXMiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icGFzcyI+PC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InByaW50bmV3Ij4KICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+SGVsbG8gV29ybGQ8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InZhcnByaW50Ij4KICA8dmFsdWUgbmFtZT0idmFyIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlZhcmlhYmxlPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8bGFiZWwgdGV4dD0iTG9naWMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJpbnRlcm5hbCI+CiAgICA8dmFsdWUgbmFtZT0iZmlyc3QiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9Imxhc3QiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFuZG9yIj4KICAgIDx2YWx1ZSBuYW1lPSJmaXJzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0ibGFzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ibm90Ij4KICAgIDx2YWx1ZSBuYW1lPSJib29sIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8bGFiZWwgdGV4dD0iTG9vcHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgoKICA8YmxvY2sgdHlwZT0id2hpbGVvdXQiPgogICAgPHZhbHVlIG5hbWU9ImNvbmQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImZvciI+CiAgICA8dmFsdWUgbmFtZT0ibGV0dGVyIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+aTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJubyI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPm51bWJlcjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJhZHZhbmNlZGZvcmxvb3BzIj4KICAgIDx2YWx1ZSBuYW1lPSJ4Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+eDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJ5Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+eTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJicmVhayI+PC9ibG9jaz4KICAKICA8bGFiZWwgdGV4dD0iQ29uZGl0aW9ucyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImlmaW5saW5lIj4KICAgIDx2YWx1ZSBuYW1lPSJpZnRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImVsaWZpbmxpbmUiPgogICAgPHZhbHVlIG5hbWU9ImlmdGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iZWxzZSI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id2l0aCI+CiAgICA8dmFsdWUgbmFtZT0iaWZ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9ImlmdGV4dDIiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idHJ5Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJleGNlcHQiPgogICAgPHZhbHVlIG5hbWU9ImlmdGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKCiAgPGxhYmVsIHRleHQ9IkRlZmluaXRpb25zIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0iZGVmaW5lIj4KICAgIDx2YWx1ZSBuYW1lPSIxIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9IjIiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmV0dXJuMiI+CiAgICA8dmFsdWUgbmFtZT0icmV0dXJuIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImNsYXNzIj4KICAgIDx2YWx1ZSBuYW1lPSJjbGFzcyI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmNsYXNzbmFtZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/variables/definitions')); })];
                case 28:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/variables/generators')); })];
                case 29:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlZhcmlhYmxlcyIgY3VzdG9tPSJWQVJJQUJMRSIgY29sb3VyPSIjMDAwMENEIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSB2YXJpYWJsZXMiPgogIDxidXR0b24gdGV4dD0iQSBidXR0b24iIGNhbGxiYWNrS2V5PSJteUZpcnN0QnV0dG9uUHJlc3NlZCI+PC9idXR0b24+CiAgPGJsb2NrIHR5cGU9InZhcmlhYmxlc19zZXQiPgogICAgPHZhbHVlIG5hbWU9InZhcnNldCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFyaWFibGVzX2dldCI+PC9ibG9jaz4KPC9jYXRlZ29yeT4K","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/digital/definitions')); })];
                case 30:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/digital/generators')); })];
                case 31:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkRpZ2l0YWwiIGNvbG91cj0iIzJDOTdERiIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gcGlucyI+IAogIDxsYWJlbCB0ZXh0PSJEaWdpdGFsIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0iaW1wb3J0X2RpZ2l0YWxpbyI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icGluY29uZmlnIj4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InBpbmRpcmVjdGlvbiI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPkRpcmVjdGlvbi5PVVRQVVQ8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icHVsbCI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlB1bGwuRE9XTjwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICA8L3ZhbHVlPiAKICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJwaW52YWx1ZSI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICA8L3ZhbHVlPiAKICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ2YWx1ZWluIj48L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/analog/definitions')); })];
                case 32:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/analog/generators')); })];
                case 33:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkFuYWxvZyIgY29sb3VyPSIjRTY3RDIxIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSBhbmFsb2ciPgogIDxsYWJlbCB0ZXh0PSJBbmFsb2ciIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJpbXBvcnRfYW5hbG9naW8iPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFuYWxvZ19pbiI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmJvYXJkLkExPC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFuYWxvZ19vdXQiPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5ib2FyZC5BMTwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICA8L3ZhbHVlPiAKICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJhbmFsb2dwaW52YWx1ZSI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFsaW5saW5lIj48L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/neopixel/definitions')); })];
                case 34:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/neopixel/generators')); })];
                case 35:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ik5lb3BpeGVsIiBjb2xvdXI9IjE1MCIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gbmVvcGl4ZWwiPgogIDxsYWJlbCB0ZXh0PSJOZW9waXhlbCIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImltcG9ydG5lbyI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ic2V0bmVvIj4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9Im5lb3Zhcm5ldyI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjI1NSwgMCwgMTI4PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgo8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJmaWxsIj4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9Im5lb3Nob3ciPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9Im5lb2NsZWFyIj48L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/touch/definitions')); })];
                case 36:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/touch/generators')); })];
                case 37:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlRvdWNoIiBjb2xvdXI9IiNFODRDM0QiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHRvdWNoIj4KICAgIDxsYWJlbCB0ZXh0PSJUb3VjaCIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0iaW1wb3J0X3RvdWNoaW8iPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0idG91Y2hfY29uZiI+CiAgICA8dmFsdWUgbmFtZT0idGV4dDEiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmJvYXJkLkExPC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJ0b3VjaF92YWxpbmxpbmUiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/servo/definitions')); })];
                case 38:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/servo/generators')); })];
                case 39:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlNlcnZvIiBjb2xvdXI9IiM5QzU2QjgiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHNlcnZvIj4KICAgIDxsYWJlbCB0ZXh0PSJTZXJ2byIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0iaW1wb3J0X3NlcnZvIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNlcnZvX2NvbmYiPgogICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNlcnZvX3ZhbHVlIj4KICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+YW5nbGU8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/audio/definitions')); })];
                case 40:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/audio/generators')); })];
                case 41:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkF1ZGlvIiBjb2xvdXI9IiM0Q0UyNTQiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIG11c2ljIj4KICAgIDxsYWJlbCB0ZXh0PSJBdWRpbyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0iaW1wb3J0X2F1ZGlvIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImF1ZGlvX2NvbmYiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICA8L3ZhbHVlPiAKICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iYXVkaW9fcmF3Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImF1ZGlvX2VuYWJsZSI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+dmFsdWUgPSBUcnVlPC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJhdWRpb19vcGVuIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImF1ZGlvX3dhdiI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJhdWRpb19wbGF5Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gIAogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJhdWRpb19wbGF5aW5nIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImF1ZGlvX3N0b3AiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/pwm/definitions')); })];
                case 42:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/pwm/generators')); })];
                case 43:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlBXTSIgY29sb3VyPSIjRkY0QTYwIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSBwd20iPgogICAgPGxhYmVsIHRleHQ9IlBXTSIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0iaW1wb3J0X3B1bHNlaW8iPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iaW1wb3J0X3NpbXBsZWlvIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InB3bV9jb25mIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+Qm9hcmQuRDEzPC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogIDx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAo8dmFsdWUgbmFtZT0idGV4dDMiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjUwPC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJwd21fY29uZjIiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICA8L3ZhbHVlPiAKICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0icHdtX2RjIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InB3bV9mcmVxIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNpbXBsZV90b25lIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgICA8L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/dotstar/definitions')); })];
                case 44:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/dotstar/generators')); })];
                case 45:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkRvdHN0YXIiIGNvbG91cj0iI0MzRTUxNiIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gZG90c3RhciI+CiAgPGxhYmVsIHRleHQ9IkRvdHN0YXIiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJpbXBvcnRfZG90c3RhciI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFyZG90c3RhciI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICA8L3ZhbHVlPiAKICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkc2JyaWdodG5lc3MiPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgPC92YWx1ZT4gCiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iZHN2YXIiPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+Cjx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+ICAKICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJsZWRmaWxsIj4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgIDwvc2hhZG93PgogIDwvdmFsdWU+IAogIDwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/advanced/definitions')); })];
                case 46:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/advanced/generators')); })];
                case 47:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkFkdmFuY2VkIiBjb2xvdXI9IiMyMmE2YjMiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGFkdmFuY2VkIj4KICAgIDxsYWJlbCB0ZXh0PSJDUFUgVGVtcGVyYXR1cmUiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9ImltcG9ydF9taWNybyI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJjcHV0ZW1wIj48L2Jsb2NrPgogICAgPGxhYmVsIHRleHQ9IlN0b3JhZ2UiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9ImltcG9ydF9zdG9yYWdlIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InN0b3JhZ2VfcmVtb3VudCI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJzdHJpbmdpbmxpbmUiPgogICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+LzwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQyIj4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9Im9wZW4iPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0ic3RyaW5naW5saW5lIj4KICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPi9oZWxsby50eHQ8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5hPC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0id3JpdGUiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5mcDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQyIj4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgoKPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/cpx/definitions')); })];
                case 48:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./circuitpython/cpx/generators')); })];
                case 49:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkNQWCBFYXN5IiBjb2xvdXI9IiM1NTZFRTYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGNweCI+CiAgICA8bGFiZWwgdGV4dD0iQ2lyY3VpdCBQbGF5Z3JvdW5kIEVhc3kiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9ImltcG9ydF9jcHgiPjwvYmxvY2s+CiAgICA8bGFiZWwgdGV4dD0iUmVkIExFRCIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0icmVkbGVkIj4KICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGxhYmVsIHRleHQ9IlNsaWRlIFN3aXRjaCIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0ic3dpdGNoIj48L2Jsb2NrPgogICAgPGxhYmVsIHRleHQ9IlRhcHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9ImRldGVjdF90YXBzIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0idGFwcGVkIj48L2Jsb2NrPgogICAgPGxhYmVsIHRleHQ9IlNoYWtlIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICAgIDxibG9jayB0eXBlPSJzaGFrZSI+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGxhYmVsIHRleHQ9IkxpZ2h0IiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICAgIDxibG9jayB0eXBlPSJsaWdodCI+PC9ibG9jaz4KICAgIDxsYWJlbCB0ZXh0PSJBY2NlbGVyYXRpb24iIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9ImFjYyI+PC9ibG9jaz4KICAgIDxsYWJlbCB0ZXh0PSJCdXR0b25zIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICAgIDxibG9jayB0eXBlPSJidXR0b24iPjwvYmxvY2s+CiAgICA8bGFiZWwgdGV4dD0iVGVtcGVyYXR1cmUiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9InRlbXAiPjwvYmxvY2s+CiAgICA8bGFiZWwgdGV4dD0iVG91Y2giIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9InRvdWNoZHJvcCI+PC9ibG9jaz4KICAgIDxsYWJlbCB0ZXh0PSJNdXNpYyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0icGxheXRvbmUiPgogICAgICA8dmFsdWUgbmFtZT0idGV4dDEiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MjYyPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgICAgPHZhbHVlIG5hbWU9InRleHQyIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjE8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJwbGF5ZmlsZSI+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICA8c2hhZG93IHR5cGU9InN0cmluZ2lubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+ZmlsZW5hbWUud2F2PC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic3RhcnR0b25lIj4KICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MjYyPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic3RvcHRvbmUiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    _a.label = 50;
                case 50:
                    if (!(extensions.indexOf('micro:bit General') !== -1)) return [3 /*break*/, 73];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/basic/definitions')); })];
                case 51:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/basic/generators')); })];
                case 52:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkJhc2ljIiBjb2xvdXI9IiNmZjAwNjYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGJhc2ljIj4KCiAgPGxhYmVsIHRleHQ9IkltcG9ydHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgoKICA8YmxvY2sgdHlwZT0iaW1wb3J0X21pY3JvYml0Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbXBvcnRfbWF0aCI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmFuZG9tIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbXBvcnRfYXVkaW8iPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImltcG9ydF91dGltZSI+PC9ibG9jaz4KCiAgPGxhYmVsIHRleHQ9IlN0YXRlbWVudHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJzbGVlcG5ldyI+CiAgICA8dmFsdWUgbmFtZT0ic2xlZXAiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xMDAwPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJ0eXBlYW55dGhpbmciPgogICAgPHZhbHVlIG5hbWU9InN0dWZmIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPCEtLSA8YmxvY2sgdHlwZT0iZXF1YWxzYmxvY2tuZXciPgogICAgICA8dmFsdWUgbmFtZT0idGV4dDEiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+dmFyPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgICAgPHZhbHVlIG5hbWU9InRleHQyIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogIDwvYmxvY2s+IC0tPgoKICA8IS0tIDxibG9jayB0eXBlPSJ0ZXh0aW5saW5lIj48L2Jsb2NrPiAtLT4KICA8YmxvY2sgdHlwZT0idmFyaW5saW5lcyI+CiAgICA8dmFsdWUgbmFtZT0idmFsdWUiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImRmIj4KICAgIDx2YWx1ZSBuYW1lPSJkZWYiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5mdW5jdGlvbl9uYW1lPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9InBhcmFtcyI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJwYXNzIj48L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0icHJpbnRuZXciPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5IZWxsbyBXb3JsZDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ2YXJwcmludCI+CiAgICA8dmFsdWUgbmFtZT0idmFyIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VmFyaWFibGU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ic2xlZXB1cyI+CiAgICA8dmFsdWUgbmFtZT0ic2xlZXAiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yMDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJ0aWNrcyI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ibWJpbnQiPgogICAgPHZhbHVlIG5hbWU9ImJvb2wiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxsYWJlbCB0ZXh0PSJMb2dpYyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImludGVybmFsIj4KICAgIDx2YWx1ZSBuYW1lPSJmaXJzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0ibGFzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iYW5kb3IiPgogICAgPHZhbHVlIG5hbWU9ImZpcnN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJsYXN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJub3QiPgogICAgPHZhbHVlIG5hbWU9ImJvb2wiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9Im9wZXJhdG9yczMiPgogICAgPHZhbHVlIG5hbWU9ImZpcnN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJsYXN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8bGFiZWwgdGV4dD0iTG9vcHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgoKICA8YmxvY2sgdHlwZT0id2hpbGVvdXQiPgogICAgPHZhbHVlIG5hbWU9ImNvbmQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImZvciI+CiAgICA8dmFsdWUgbmFtZT0ibGV0dGVyIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+aTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJubyI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPm51bWJlcjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJhZHZhbmNlZGZvcmxvb3BzIj4KICAgIDx2YWx1ZSBuYW1lPSJ4Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+eDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJ5Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+eTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJicmVhayI+PC9ibG9jaz4KCiAgPGxhYmVsIHRleHQ9IkNvbmRpdGlvbnMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJpZmlubGluZSI+CiAgICA8dmFsdWUgbmFtZT0iaWZ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJlbGlmaW5saW5lIj4KICAgIDx2YWx1ZSBuYW1lPSJpZnRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImVsc2UiPjwvYmxvY2s+CgoKICA8bGFiZWwgdGV4dD0iRGVmaW5pdGlvbnMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJkZWZpbmUiPgogICAgPHZhbHVlIG5hbWU9IjEiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0iMiI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXR1cm4yIj4KICAgIDx2YWx1ZSBuYW1lPSJyZXR1cm4iPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iY2xhc3MiPgogICAgPHZhbHVlIG5hbWU9ImNsYXNzIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+Y2xhc3NuYW1lPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+Cgo8L2NhdGVnb3J5Pgo=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/variables/definitions')); })];
                case 53:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/variables/generators')); })];
                case 54:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlZhcmlhYmxlcyIgY3VzdG9tPSJWQVJJQUJMRSIgY29sb3VyPSIjMDAwMENEIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSB2YXJpYWJsZXMiPgogIDxidXR0b24gdGV4dD0iQSBidXR0b24iIGNhbGxiYWNrS2V5PSJteUZpcnN0QnV0dG9uUHJlc3NlZCI+PC9idXR0b24+CiAgPGJsb2NrIHR5cGU9InZhcmlhYmxlc19zZXQiPgogICAgPHZhbHVlIG5hbWU9InZhcnNldCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFyaWFibGVzX2dldCI+PC9ibG9jaz4KPC9jYXRlZ29yeT4K","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/display/definitions')); })];
                case 55:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/display/generators')); })];
                case 56:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkRpc3BsYXkiIGNvbG91cj0iI0MzRTUxNiIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gZGlzcGxheSI+CiAgPGxhYmVsIHRleHQ9IkRpc3BsYXkiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogIDxibG9jayB0eXBlPSJzY3JvbGxuZXciPgogICAgPHZhbHVlIG5hbWU9ImRpc3BsYXl0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+SGVsbG8gV29ybGQ8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ic2Nyb2xsdmFybmV3Ij4KCiAgICA8dmFsdWUgbmFtZT0iZGlzcGxheXRleHR2YXIiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJpbWFnZW5ldyI+CiAgICA8dmFsdWUgbmFtZT0iaW1hZ2V2YXIiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5JbWFnZS5IQVBQWTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJleHByZXNzaW9ucyI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iY2xvY2tzIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzaGFwZXMiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFuaW1hbHMiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InNldHBpeGVsbmV3Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MCwgMCwgNTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkaXNjbGVhciI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iZGlzb25vZmYiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImltYWdlY3JlYXRlIj48L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/buttons/definitions')); })];
                case 57:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/buttons/generators')); })];
                case 58:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkJ1dHRvbnMiIGNvbG91cj0iIzE2N0VFNSIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gYnV0dG9ucyI+CiAgICA8bGFiZWwgdGV4dD0iQnV0dG9ucyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0iYnV0dG9uaXNwcmVzc2VkIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImJ1dHRvbndhc3ByZXNzZWQiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/accelerometer/definitions')); })];
                case 59:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/accelerometer/generators')); })];
                case 60:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkFjY2VsZXJvbWV0ZXIiIGNvbG91cj0iI0U1N0UxNiIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gYWNjIj4KICAgIDxsYWJlbCB0ZXh0PSJBY2NlbGVyb21ldGVyIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICAgIDxibG9jayB0eXBlPSJhY2Npc2dlc3R1cmVuZXciPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9ImFjY2dlc3R1cmVzIj4KICAgICAgICA8ZmllbGQgbmFtZT0iZ2VzdHVyZXMiPidzaGFrZSc8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJhY2N3YXNnZXN0dXJlbmV3Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJhY2NnZXN0dXJlcyI+CiAgICAgICAgPGZpZWxkIG5hbWU9Imdlc3R1cmVzIj4nc2hha2UnPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFjY2dlc3R1cmVzIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJhY2NjdXJyZW50Z2VzdHVyZSI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iYWNjZ2V0Ij48L2Jsb2NrPgo8L2NhdGVnb3J5PiA=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/compass/definitions')); })];
                case 61:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/compass/generators')); })];
                case 62:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkNvbXBhc3MiIGNvbG91cj0iI0EwMTZFNSIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gY29tcGFzcyI+CjxsYWJlbCB0ZXh0PSJDb21wYXNzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0iY29tcGFzc2NhbGlicmF0ZSI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iY29tcGFzc2NhbGlicmF0ZWQiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/radio/definitions')); })];
                case 63:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/radio/generators')); })];
                case 64:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlJhZGlvIiBjb2xvdXI9IiM3RUU1MTYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHJhZGlvIj4KPGxhYmVsIHRleHQ9IlJhZGlvIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0iaW1yYWRpbyI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmFkaW9vbiI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmFkaW9zZW5kbmV3Ij4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPiJoZWxsbyI8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmFkaW9jb25mbmV3Ij4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmNoYW5uZWw9NzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpZnJhZGlvIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJpbmNvbWluZyI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/speech/definitions')); })];
                case 65:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/speech/generators')); })];
                case 66:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlNwZWVjaCIgY29sb3VyPSIjMTZFNUU1IiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSBzcGVlY2giPgo8bGFiZWwgdGV4dD0iU3BlZWNoIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICAgIDxibG9jayB0eXBlPSJpbXNwZWVjaCI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJzcGVlY2hzYXluZXciPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5JIGFtIGEgREFMRUsgLSBFWFRFUk1JTkFURTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic3BlZWNocHJvbmV3Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+L0hFSExPVzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic3BlZWNoc2luZ25ldyI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmhlbGxvPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/music/definitions')); })];
                case 67:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/music/generators')); })];
                case 68:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ik11c2ljIiBjb2xvdXI9IiNFNUJDMTYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIG11c2ljIj4KICAgIDxsYWJlbCB0ZXh0PSJNdXNpYyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgICA8YmxvY2sgdHlwZT0ibXVzaWNpbXBvcnQiPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ibXVzaWNwbGF5Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJzb25ncyI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJtdXNpY3BpdGNoIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJtdXNpY3RlbXBvIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJtdXNpY3Jlc2V0Ij48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9Im11c2ljc3RvcCI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJtdXNpY2dldHRlbXBvIj48L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/neopixel/definitions')); })];
                case 69:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/neopixel/generators')); })];
                case 70:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ik5lb3BpeGVsIiBjb2xvdXI9IiMxNkU1N0UiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIG5lb3BpeGVsIj4gCiAgPGxhYmVsIHRleHQ9Ik5lb1BpeGVsIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0iaW1wb3J0bmVvIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzZXRuZW9uZXciPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+cGluMSwgODwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJuZW92YXJuZXciPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8dmFsdWUgbmFtZT0idGV4dDEiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yNTUsIDAsIDEyODwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJuZW9zaG93Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJuZW9jbGVhciI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/pins/definitions')); })];
                case 71:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/pins/generators')); })];
                case 72:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlBpbnMiIGNvbG91cj0iI0U1MTYxNiIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gcGlucyI+CjxsYWJlbCB0ZXh0PSJQaW5zIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0icGludG91Y2hlZG5ldyI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFuYWxvZ3JlYWRuZXciPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkaWdpdGFscmVhZG5ldyI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9IndyaXRlYW5hbG9nbmV3Ij4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgPHNoYWRvdyB0eXBlPSJzbGlkZXJpbmxpbmUiPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0id3JpdGVkaWdpdGFsbmV3Ij4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgPHNoYWRvdyB0eXBlPSJzbGlkZXJpbmxpbmUiPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KIDxibG9jayB0eXBlPSJwaW5fcHVsbCI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnBpbjAuTk9fUFVMTDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgo8L2NhdGVnb3J5Pgo=","base64");
                    _a.label = 73;
                case 73:
                    if (!(extensions.indexOf('scrollbit') !== -1)) return [3 /*break*/, 76];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/scrollbit/definitions')); })];
                case 74:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/scrollbit/generators')); })];
                case 75:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9InNjcm9sbDpiaXQiIGNvbG91cj0iODQzIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSBzY3JvbGwiPgogICAgPGxhYmVsIHRleHQ9IlBpbW9yb25pIHNjcm9sbDpiaXQiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogICAgPGJsb2NrIHR5cGU9InNjcm9sbGJpdF9pbXBvcnQiPjwvYmxvY2s+CgogICAgPGJsb2NrIHR5cGU9InNjcm9sbGJpdF9zY3JvbGwiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InN0cmluZ2lubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPkhlbGxvIFdvcmxkPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgoKICAgIDxibG9jayB0eXBlPSJzY3JvbGxiaXRfd3JpdGUiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InN0cmluZ2lubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPkhpITwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic2Nyb2xsYml0X2RyYXciPgogICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+Y29sPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgoKICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnJvdzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KCiAgICA8dmFsdWUgbmFtZT0idGV4dDMiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5pY29uPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJzY3JvbGxiaXRfcGl4ZWwiPgogICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+Y29sPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgoKICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnJvdzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KCiAgICA8dmFsdWUgbmFtZT0idGV4dDMiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yNTU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNjcm9sbGJpdF9zaG93Ij48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNjcm9sbGJpdF9jbGVhciI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    _a.label = 76;
                case 76:
                    if (!(extensions.indexOf('GiggleBot') !== -1)) return [3 /*break*/, 79];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/gigglebot/definitions')); })];
                case 77:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/gigglebot/generators')); })];
                case 78:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkdpZ2dsZUJvdCIgY29sb3VyPSIjNDZCRkIxIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSByb2JvdCI+CjxsYWJlbCB0ZXh0PSJHaWdnbGVCb3QiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogPGJsb2NrIHR5cGU9ImltcG9ydF9naWdnbGVib3QiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0iZ2lnZ2xlYm90X2luaXQiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0iZHJpdmUiPjwvYmxvY2s+CjxibG9jayB0eXBlPSJkcml2ZV94X21pbGxpc2Vjb25kcyI+CiAgICA8dmFsdWUgbmFtZT0ibWlsbGlzZWNvbmRzIj4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjEwMDA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxibG9jayB0eXBlPSJ0dXJuIj48L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0idHVybl94X21pbGxpc2Vjb25kcyI+CiAgICA8dmFsdWUgbmFtZT0ibWlsbGlzZWNvbmRzIj4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjEwMDA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+Cgo8YmxvY2sgdHlwZT0ic3RvcCI+PC9ibG9jaz4KPGJsb2NrIHR5cGU9InNldF9zcGVlZCI+CiAgICA8dmFsdWUgbmFtZT0icG93ZXJfbGVmdCI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xMDA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9InBvd2VyX3JpZ2h0Ij4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjEwMDwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CjwvYmxvY2s+CjxibG9jayB0eXBlPSJzZXRfc2Vydm8iPgogICAgPHZhbHVlIG5hbWU9ImRlZ3JlZXMiPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+OTA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgo8L2Jsb2NrPgo8YmxvY2sgdHlwZT0ic2Vydm9fb2ZmIj48L2Jsb2NrPgo8YmxvY2sgdHlwZT0ic2V0X3NtaWxlIj4KICAgIDx2YWx1ZSBuYW1lPSJSIj4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9IkciPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MDwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0iQiI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KPC9ibG9jaz4KPGJsb2NrIHR5cGU9InNldF9leWVzIj4KICAgIDx2YWx1ZSBuYW1lPSJSIj4KICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9IkciPgogICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MDwvZmllbGQ+CiAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0iQiI+CiAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KPC9ibG9jaz4KPGJsb2NrIHR5cGU9InJlYWRfc2Vuc29yIj48L2Jsb2NrPgo8YmxvY2sgdHlwZT0idm9sdCI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    _a.label = 79;
                case 79:
                    if (!(extensions.indexOf('DriveBit') !== -1)) return [3 /*break*/, 82];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/DriveBit/definitions')); })];
                case 80:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/DriveBit/generators')); })];
                case 81:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkRyaXZlQml0IiBjb2xvdXI9IiNjNTFhNGEiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHJvYm90Ij4KPGxhYmVsIHRleHQ9IkRyaXZlQml0IiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KIDxibG9jayB0eXBlPSJpbXBvcnRfRHJpdmVCaXQiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0iRHJpdmVCaXRfaW5pdCI+PC9ibG9jaz4KIDxibG9jayB0eXBlPSJEcml2ZUJpdF9kaXJlY3Rpb24iPgogICAgPHZhbHVlIG5hbWU9Ik5BTUUiPgogICAgICAgIDxzaGFkb3cgdHlwZT0ic2xpZGVyaW5saW5lcm9ib3QiPgogICAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJEcml2ZUJpdF9zdG9wIj48L2Jsb2NrPgo8L2NhdGVnb3J5Pg==","base64");
                    _a.label = 82;
                case 82:
                    if (!(extensions.indexOf('BitBotXL') !== -1)) return [3 /*break*/, 85];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/BitBotXL/definitions')); })];
                case 83:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/BitBotXL/generators')); })];
                case 84:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkJpdEJvdCBYTCIgY29sb3VyPSIjMDAwMDAwIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSByb2JvdCI+CjxsYWJlbCB0ZXh0PSJCaXRCb3QgWEwiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgogPGJsb2NrIHR5cGU9ImltcG9ydF9iaXRib3QiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0iYml0Ym90X2luaXQiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0iYml0Ym90X2RpcmVjdGlvbiI+CiAgICA8dmFsdWUgbmFtZT0iTkFNRSI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJzbGlkZXJpbmxpbmVyb2JvdCI+CiAgICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImJpdGJvdF9zdG9wIj4KICA8dmFsdWUgbmFtZT0ic3RvcCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+YnJha2U9RmFsc2U8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iYml0Ym90X3NvbmFyIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJiaXRib3RuZW92YXJuZXciPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8dmFsdWUgbmFtZT0idGV4dDEiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yNTUsIDAsIDEyODwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJiaXRib3RuZW9zaG93Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJiaXRib3RuZW9jbGVhciI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    _a.label = 85;
                case 85:
                    if (!(extensions.indexOf('MoveMini') !== -1)) return [3 /*break*/, 88];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/MoveMini/definitions')); })];
                case 86:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/MoveMini/generators')); })];
                case 87:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ik1vdmVNaW5pIiBjb2xvdXI9IiMwMkFENEQiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHJvYm90Ij4KPGxhYmVsIHRleHQ9IktpdHJvbmlrIE1vdmVNaW5pIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KIDxibG9jayB0eXBlPSJpbXBvcnRfbW92ZW1pbmkiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0ibW92ZW1pbmlfaW5pdCI+PC9ibG9jaz4KIDxibG9jayB0eXBlPSJtb3ZlbWluaV9kaXJlY3Rpb24iPgogICAgPHZhbHVlIG5hbWU9Ik5BTUUiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjEwMDA8L2ZpZWxkPgogICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9Im1vdmVtaW5pX3N0b3AiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    _a.label = 88;
                case 88:
                    if (!(extensions.indexOf('Minibit') !== -1)) return [3 /*break*/, 91];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/Minibit/definitions')); })];
                case 89:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./microbit/Minibit/generators')); })];
                case 90:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9Ik1pbmliaXQiIGNvbG91cj0iIzBEMkQ2QSIgaWNvbmNsYXNzPSJibG9ja2x5VHJlZUljb25DdXN0b20gcm9ib3QiPgo8bGFiZWwgdGV4dD0iTWluaWJpdCIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiA8YmxvY2sgdHlwZT0iaW1wb3J0X21pbmliaXQiPjwvYmxvY2s+CiA8YmxvY2sgdHlwZT0ibWluaWJpdF9pbml0Ij48L2Jsb2NrPgogPGJsb2NrIHR5cGU9Im1pbmliaXRfZGlyZWN0aW9uIj4KICAgIDx2YWx1ZSBuYW1lPSJOQU1FIj4KICAgICAgICA8c2hhZG93IHR5cGU9InNsaWRlcmlubGluZXJvYm90Ij4KICAgICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ibWluaWJpdF9zdG9wIj4KICA8dmFsdWUgbmFtZT0ic3RvcCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+YnJha2U9RmFsc2U8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ibWluaWJpdF9zb25hciI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ibWluaW5lb3Zhcm5ldyI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjI1NSwgMCwgMTI4PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9Im1pbmluZW9zaG93Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJtaW5pbmVvY2xlYXIiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+","base64");
                    _a.label = 91;
                case 91:
                    if (!(extensions.indexOf('Pi General') !== -1)) return [3 /*break*/, 114];
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/basic/definitions')); })];
                case 92:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/basic/generators')); })];
                case 93:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkJhc2ljIiBjb2xvdXI9IiNmZjAwNjYiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGJhc2ljIj4KCiAgPGxhYmVsIHRleHQ9IkltcG9ydHMiIHdlYi1jbGFzcz0ibXlMYWJlbFN0eWxlIj48L2xhYmVsPgoKICA8YmxvY2sgdHlwZT0iaW1wb3J0X3RpbWUiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImltcG9ydF9tYXRoIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyYW5kb20iPjwvYmxvY2s+CgogIDxsYWJlbCB0ZXh0PSJTdGF0ZW1lbnRzIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICA8YmxvY2sgdHlwZT0ic2xlZXBuZXciPgogICAgPHZhbHVlIG5hbWU9InNsZWVwIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgoKICA8YmxvY2sgdHlwZT0idHlwZWFueXRoaW5nIj4KICAgIDx2YWx1ZSBuYW1lPSJzdHVmZiI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDwhLS0gPGJsb2NrIHR5cGU9ImVxdWFsc2Jsb2NrbmV3Ij4KICAgICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnZhcjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MiI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4wPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICA8L2Jsb2NrPiAtLT4KCiAgPCEtLSA8YmxvY2sgdHlwZT0idGV4dGlubGluZSI+PC9ibG9jaz4gLS0+CiAgPGJsb2NrIHR5cGU9InZhcmlubGluZXMiPgogICAgPHZhbHVlIG5hbWU9InZhbHVlIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+MTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkZiI+CiAgICA8dmFsdWUgbmFtZT0iZGVmIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+ZnVuY3Rpb25fbmFtZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJwYXJhbXMiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icGFzcyI+PC9ibG9jaz4KCiAgPGJsb2NrIHR5cGU9InByaW50bmV3Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+SGVsbG8gV29ybGQ8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFycHJpbnQiPgogICAgPHZhbHVlIG5hbWU9InZhciI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlZhcmlhYmxlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxsYWJlbCB0ZXh0PSJMb2dpYyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImludGVybmFsIj4KICAgIDx2YWx1ZSBuYW1lPSJmaXJzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgICA8dmFsdWUgbmFtZT0ibGFzdCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iYW5kb3IiPgogICAgPHZhbHVlIG5hbWU9ImZpcnN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSJsYXN0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VHJ1ZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJub3QiPgogICAgPHZhbHVlIG5hbWU9ImJvb2wiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CgogIDxsYWJlbCB0ZXh0PSJMb29wcyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CgogIDxibG9jayB0eXBlPSJ3aGlsZW91dCI+CiAgICA8dmFsdWUgbmFtZT0iY29uZCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iZm9yIj4KICAgIDx2YWx1ZSBuYW1lPSJsZXR0ZXIiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5pPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9Im5vIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+bnVtYmVyPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImFkdmFuY2VkZm9ybG9vcHMiPgogICAgPHZhbHVlIG5hbWU9IngiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij54PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogICAgPHZhbHVlIG5hbWU9InkiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij55PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImJyZWFrIj48L2Jsb2NrPgoKICA8bGFiZWwgdGV4dD0iQ29uZGl0aW9ucyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImlmaW5saW5lIj4KICAgIDx2YWx1ZSBuYW1lPSJpZnRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UcnVlPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImVsaWZpbmxpbmUiPgogICAgPHZhbHVlIG5hbWU9ImlmdGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlRydWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iZWxzZSI+PC9ibG9jaz4KCgogIDxsYWJlbCB0ZXh0PSJEZWZpbml0aW9ucyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImRlZmluZSI+CiAgICA8dmFsdWUgbmFtZT0iMSI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICAgIDx2YWx1ZSBuYW1lPSIyIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InJldHVybjIiPgogICAgPHZhbHVlIG5hbWU9InJldHVybiI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJjbGFzcyI+CiAgICA8dmFsdWUgbmFtZT0iY2xhc3MiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5jbGFzc25hbWU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KPC9jYXRlZ29yeT4K","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/variables/definitions')); })];
                case 94:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/variables/generators')); })];
                case 95:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlZhcmlhYmxlcyIgY3VzdG9tPSJWQVJJQUJMRSIgY29sb3VyPSIjMDAwMENEIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSB2YXJpYWJsZXMiPgogIDxidXR0b24gdGV4dD0iQSBidXR0b24iIGNhbGxiYWNrS2V5PSJteUZpcnN0QnV0dG9uUHJlc3NlZCI+PC9idXR0b24+CiAgPGJsb2NrIHR5cGU9InZhcmlhYmxlc19zZXQiPgogICAgPHZhbHVlIG5hbWU9InZhcnNldCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjA8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0idmFyaWFibGVzX2dldCI+PC9ibG9jaz4KPC9jYXRlZ29yeT4g","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/minecraft/definitions')); })];
                case 96:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/minecraft/generators')); })];
                case 97:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/gpiozero/definitions')); })];
                case 98:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/gpiozero/generators')); })];
                case 99:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/sonicpi/definitions')); })];
                case 100:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/sonicpi/generators')); })];
                case 101:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlNvbmljIFBpIiBjb2xvdXI9IiMxNkUzRTMiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHNvbmljIj4KICA8YmxvY2sgdHlwZT0iaW1wb3J0X3NvbmljIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzYW1wbGVzb24iPgogIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+UFJPUEhFVDwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJwbGF5Ij4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjYwPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InNsZWVwMSI+CiAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4xPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InN5bnRoIj4KICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPlNBVzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJsaXZlbG9vcCI+PC9ibG9jaz4KPC9jYXRlZ29yeT4g","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/pimoroni/definitions')); })];
                case 102:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/pimoroni/generators')); })];
                case 103:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlBpbW9yb25pIiBjb2xvdXI9IiMwMDAwMDAiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIHBpbW9yb25pIj4KICA8Y2F0ZWdvcnkgbmFtZT0iRXhwbG9yZXIgSGF0IiBjb2xvdXI9IiMwMDAwMDAiPgogICAgPGJsb2NrIHR5cGU9ImVoaW1wb3J0Ij48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImVodG91Y2giPgogICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJlaGlucHV0Ij4KICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iZWhvdXRwdXQiPgogICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJlaGxpZ2h0cyI+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImVoYW5hbG9nIj4KICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iZWhtb3RvciI+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogIDwvY2F0ZWdvcnk+CiAgPGNhdGVnb3J5IG5hbWU9IkJsaW5rdCEiIGNvbG91cj0iOTAiPgogICAgPGJsb2NrIHR5cGU9ImJsaW5rdGltcG9ydCI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJibGlua3RzZXRwaXhlbCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5waXhlbG5vPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPnI8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgICA8dmFsdWUgbmFtZT0idGV4dDIiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+ZzwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MyI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5iPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iYmxpbmt0c2hvdyI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJibGlua3RzZXRicmlnaHRuZXNzIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPm51bWJlcjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImJsaW5rdHNldGFsbCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5yPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmc8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgICA8dmFsdWUgbmFtZT0idGV4dDIiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+YjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImJsaW5rdHNldGFsbGJyaWdodCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5yPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgICAgPHZhbHVlIG5hbWU9InRleHQxIj4KICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPmc8L2ZpZWxkPgogICAgICAgIDwvc2hhZG93PgogICAgICA8L3ZhbHVlPgogICAgICA8dmFsdWUgbmFtZT0idGV4dDIiPgogICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+YjwvZmllbGQ+CiAgICAgICAgPC9zaGFkb3c+CiAgICAgIDwvdmFsdWU+CiAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MyI+CiAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5icmlnaHRuZXNzPC9maWVsZD4KICAgICAgICA8L3NoYWRvdz4KICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iYmxpbmt0Y2xlYXIiPjwvYmxvY2s+CiAgPC9jYXRlZ29yeT4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/requests/definitions')); })];
                case 104:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/requests/generators')); })];
                case 105:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlJlcXVlc3RzIiBjb2xvdXI9IiNDMkU0MzQiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGh0dHAiPgogIDxsYWJlbCB0ZXh0PSJSZXF1ZXN0cyIgd2ViLWNsYXNzPSJteUxhYmVsU3R5bGUiPjwvbGFiZWw+CiAgPGJsb2NrIHR5cGU9ImltcG9ydF9yZXF1ZXN0cyI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0iaW1wb3J0X2pzb24iPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InJlcXVlc3RzX2dldCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPidodHRwczovL2FwaS5naXRodWIuY29tL2V2ZW50cyc8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmVxdWVzdHNfcG9zdCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPidodHRwczovL2h0dHBiaW4ub3JnL3Bvc3QnLCBkYXRhID0geydrZXknOid2YWx1ZSd9PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InJlcXVlc3RzX3B1dCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPidodHRwczovL2h0dHBiaW4ub3JnL3B1dCcsIGRhdGEgPSB7J2tleSc6J3ZhbHVlJ308L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0icmVxdWVzdHNfZGVsZXRlIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+J2h0dHBzOi8vaHR0cGJpbi5vcmcvZGVsZXRlJzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXF1ZXN0c19oZWFkIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+J2h0dHBzOi8vaHR0cGJpbi5vcmcvZ2V0JzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXF1ZXN0c19vcHRpb25zIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+J2h0dHBzOi8vaHR0cGJpbi5vcmcvZ2V0JzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXF1ZXN0c191cmwiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InJlcXVlc3RzX2Nvb2tpZXMiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4nZXhhbXBsZV9jb29raWVfbmFtZTwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXF1ZXN0c19yamFyIj48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXF1ZXN0c19qc2V0Ij4KICAgIDx2YWx1ZSBuYW1lPSJOQU1FIj4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+J3Rhc3R5X2Nvb2tpZScsICd5dW0nLCBkb21haW49J2h0dHBiaW4ub3JnJywgcGF0aD0nL2Nvb2tpZXMnPC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9InJlcXVlc3RzX2hnZXQiPgogICAgPHZhbHVlIG5hbWU9Ik5BTUUiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4nY29udGVudC10eXBlJzwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJyZXF1ZXN0c19yYWlzZSI+PC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/sensehat/definitions')); })];
                case 106:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/sensehat/generators')); })];
                case 107:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlNlbnNlIEhhdCIgY29sb3VyPSIjRTU1RjJCIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSBzZW5zZSI+CiAgPGJsb2NrIHR5cGU9InNlbnNlaW1wb3J0Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzZW5zZWltcG9ydGVtdSI+PC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ic2Vuc2Vpbml0Ij48L2Jsb2NrPgogIDxibG9jayB0eXBlPSJzZW5zZXNob3ciPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij5UZXh0IEhlcmU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ic2Vuc2VzaG93dmFyIj4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+VmFyaWFibGU8L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KPC9jYXRlZ29yeT4=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/bitio/definitions')); })];
                case 108:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/bitio/generators')); })];
                case 109:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IkJpdElPIiBjb2xvdXI9IiNDMjI3RTIiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGJpdGlvIj4KICA8YmxvY2sgdHlwZT0iaW1wb3J0bWIiPjwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImRpc3BsYXlzY3JvbGx0ZXh0Ij4KICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgPC9zaGFkb3c+CiAgICA8L3ZhbHVlPgogIDwvYmxvY2s+CiAgPGJsb2NrIHR5cGU9ImRpc3BsYXlzY3JvbGx2YXIiPgogICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICA8L3NoYWRvdz4KICAgIDwvdmFsdWU+CiAgPC9ibG9jaz4KICA8YmxvY2sgdHlwZT0ibWljcm9zbGVlcCI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkaXNwbGF5c2hvdyI+CiAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgIDwvc2hhZG93PgogICAgPC92YWx1ZT4KICA8L2Jsb2NrPgogIDxibG9jayB0eXBlPSJkaXNwbGF5Y2xlYXIiPjwvYmxvY2s+CjwvY2F0ZWdvcnk+ICA=","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/turtle/definitions')); })];
                case 110:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/turtle/generators')); })];
                case 111:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlR1cnRsZSIgY29sb3VyPSIjNzI4OURBIiBpY29uY2xhc3M9ImJsb2NrbHlUcmVlSWNvbkN1c3RvbSB0dXJ0bGUiPgogICAgPGJsb2NrIHR5cGU9ImltcG9ydF90dXJ0bGUiPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0idHVydGxlIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNjcmVlbmluaXQiPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iY29sb3VybW9kZSI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjI1NSwgMCwgMDwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImJhY2tncm91bmQiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yNTUsIDAsIDA8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJkaXJlY3Rpb25zIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+OTA8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJjb2xvdXIiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yNTUsIDAsIDA8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJjb2xvdXJwZW4iPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij4yNTUsIDAsIDA8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJwZW51ZCI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJwZW53aWR0aCI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjIwPC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iY2lyY2xlIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+NTA8L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJnb3RvIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+NSwgNTwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgo8L2NhdGVnb3J5PiAg","base64");
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/picamera/definitions')); })];
                case 112:
                    (_a.sent()).default(Blockly.Blocks);
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('./pi/picamera/generators')); })];
                case 113:
                    (_a.sent()).default(Blockly.Python);
                    toolBoxXml += Buffer("PGNhdGVnb3J5IG5hbWU9IlBpQ2FtZXJhIiBjb2xvdXI9IiMxQjE3M0MiIGljb25jbGFzcz0iYmxvY2tseVRyZWVJY29uQ3VzdG9tIGNhbWVyYSI+CgogICAgPGxhYmVsIHRleHQ9IlBpQ2FtZXJhIiB3ZWItY2xhc3M9Im15TGFiZWxTdHlsZSI+PC9sYWJlbD4KICAgIDxibG9jayB0eXBlPSJpbXBvcnRfcGljYW1lcmEiPjwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iY3JlYXRlX2NhbWVyYSI+PC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJzZXRyb3RhdGlvbiI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InN0YXJ0X3ByZXZpZXciPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJzdG9wX3ByZXZpZXciPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJjYXB0dXJlX3NhdmVwYXRoIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iY2FwdHVyZV9zYXZlcGF0aG1vcmUiPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJzdGFydF9yZWNvcmRpbmciPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgPC9ibG9jaz4KICAgIDxibG9jayB0eXBlPSJ3YWl0X3JlY29yZGluZyI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InN0b3BfcmVjb3JkaW5nIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic2V0X3Jlc29sdXRpb24iPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0Ij4KICAgICAgICAgICAgPHNoYWRvdyB0eXBlPSJ0ZXh0aW5saW5lIj4KICAgICAgICAgICAgICAgIDxmaWVsZCBuYW1lPSJ0ZXh0Ij48L2ZpZWxkPgogICAgICAgICAgICA8L3NoYWRvdz4KICAgICAgICA8L3ZhbHVlPgogICAgICAgIDx2YWx1ZSBuYW1lPSJ0ZXh0MSI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic2V0X2ZyYW1lcmF0ZSI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNldF90ZXh0c2l6ZSI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNob3dfdGV4dCI+CiAgICAgICAgPHZhbHVlIG5hbWU9InRleHQiPgogICAgICAgICAgICA8c2hhZG93IHR5cGU9InRleHRpbmxpbmUiPgogICAgICAgICAgICAgICAgPGZpZWxkIG5hbWU9InRleHQiPjwvZmllbGQ+CiAgICAgICAgICAgIDwvc2hhZG93PgogICAgICAgIDwvdmFsdWU+CiAgICA8L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9InNldF9icmlnaHRuZXNzIj4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0ic2V0X2NvbnRyYXN0Ij4KICAgICAgICA8dmFsdWUgbmFtZT0idGV4dCI+CiAgICAgICAgICAgIDxzaGFkb3cgdHlwZT0idGV4dGlubGluZSI+CiAgICAgICAgICAgICAgICA8ZmllbGQgbmFtZT0idGV4dCI+PC9maWVsZD4KICAgICAgICAgICAgPC9zaGFkb3c+CiAgICAgICAgPC92YWx1ZT4KICAgIDwvYmxvY2s+CiAgICA8YmxvY2sgdHlwZT0iaW1hZ2VfZWZmZWN0Ij48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImF3Yl9tb2RlIj48L2Jsb2NrPgogICAgPGJsb2NrIHR5cGU9ImV4cG9zdXJlX21vZGUiPjwvYmxvY2s+CiAgICAKPC9jYXRlZ29yeT4gIA==","base64");
                    _a.label = 114;
                case 114:
                    toolBoxXml += '</xml>';
                    return [2 /*return*/, toolBoxXml];
            }
        });
    });
}
exports.getToolBoxXml = getToolBoxXml;
function getBeforeScript(extensions) {
    if (extensions.indexOf('scrollbit') !== -1) {
        return Buffer("ZnJvbSBtaWNyb2JpdCBpbXBvcnQgc2xlZXAsIGkyYywgSW1hZ2UgYXMgSQoKV0lEVEggPSAxNwpIRUlHSFQgPSA3CgpvcmllbnRhdGlvbiA9IDAKTk9STUFMID0gMApJTlZFUlQgPSAxCgpfZiA9IDAKX2IgPSBieXRlYXJyYXkoMTQ1KQpfaSA9IFtnZXRhdHRyKEkseCkgZm9yIHggaW4gZGlyKEkpIGlmIGhhc2F0dHIoZ2V0YXR0cihJLHgpLCdnZXRfcGl4ZWwnKV0KCmRlZiBfdygqYXJncyk6CiAgICBpZiBsZW4oYXJncykgPT0gMTogYXJncyA9IGFyZ3NbMF0KICAgIGkyYy53cml0ZSgxMTYsIGJ5dGVzKGFyZ3MpKQoKZGVmIGNsZWFyKCk6CiAgICBnbG9iYWwgX2IKICAgIGRlbCBfYgogICAgX2IgPSBieXRlYXJyYXkoMTQ1KQogICAgCmRlZiBpY29uX2Zvcm1hdCh0ZXh0KToKICAgIHIgPSB7fQogICAgZm9yIGFfbiBpbiBkaXIoSSk6CiAgICAgICBhID0gZ2V0YXR0cihJLCBhX24pCiAgICAgICBpZiBhIGluIF9pIGFuZCBhX24gaW4gdGV4dDoKICAgICAgICAgICByW2Ffbl0gPSBjaHIoMTI4K19pLmluZGV4KGEpKQoKICAgIHJldHVybiB0ZXh0LmZvcm1hdCgqKnIpCgpkZWYgc2hvdygpOgogICAgZ2xvYmFsIF9mCiAgICBfZiA9IG5vdCBfZgogICAgX3coMjUzLCBfZikKICAgIF9iWzBdID0gMzYKICAgIF93KF9iKQogICAgX3coMjUzLCAxMSkKICAgIF93KDEsIF9mKQoKZGVmIHNjcm9sbCh0ZXh0LCBicmlnaHRuZXNzPTI1NSwgZGVsYXk9MTAsIGljb25zPVRydWUpOgogICAgaWYgaWNvbnM6IHRleHQgPSBpY29uX2Zvcm1hdCh0ZXh0KQogICAgZm9yIHggaW4gcmFuZ2UodGV4dF9sZW4odGV4dCkgKyBXSURUSCk6CiAgICAgICAgY2xlYXIoKQogICAgICAgIHdyaXRlKHRleHQsIC14ICsgV0lEVEgsIDEsIGJyaWdodG5lc3MpCiAgICAgICAgc2hvdygpCiAgICAgICAgc2xlZXAoZGVsYXkpCgpkZWYgY2hhcl9sZW4oY2hhcik6CiAgICBpZiBjaGFyIGluIGIiXCIqKy0wMTIzPD0+QUJDREVGSEtMT1BRU1VYWltdXmJjZGVmZ2hqa2xub3BxcnN4ensiOgogICAgICAgIHJldHVybiA0CiAgICBpZiBjaGFyIGluIGIiIScuOml8IjoKICAgICAgICByZXR1cm4gMgogICAgaWYgY2hhciBpbiBiIiAoKSw7SWB9IjoKICAgICAgICByZXR1cm4gMwogICAgcmV0dXJuIDUKCmRlZiB0ZXh0X2xlbih0ZXh0KToKICAgIHJldHVybiBzdW0oY2hhcl9sZW4oYykgKyAxIGZvciBjIGluIHRleHQpCgpkZWYgd3JpdGUodGV4dCwgb2Zmc2V0X2NvbD0wLCBvZmZzZXRfcm93PTAsIGJyaWdodG5lc3M9MjU1KToKICAgIGkgPSBOb25lCiAgICBmb3IgbGV0dGVyIGluIHRleHQ6CiAgICAgICAgaSA9IE5vbmUKICAgICAgICBsZXR0ZXJfd2lkdGggPSBjaGFyX2xlbihsZXR0ZXIpCgogICAgICAgIGlmIGxldHRlciAhPSAiICIgYW5kIChvZmZzZXRfY29sICsgbGV0dGVyX3dpZHRoKSA+PSAxOgogICAgICAgICAgICBpZiBvcmQobGV0dGVyKSA+IDEyNzoKICAgICAgICAgICAgICAgIGkgPSBfaVtvcmQobGV0dGVyKSAtIDEyOF0KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBpID0gSShsZXR0ZXIpCiAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgcGFzcwoKICAgICAgICBpZiBpIGlzIG5vdCBOb25lOgogICAgICAgICAgICBpZiBub3QgZHJhd19pY29uKG9mZnNldF9jb2wsIG9mZnNldF9yb3csIGksIGJyaWdodG5lc3MpOgogICAgICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIG9mZnNldF9jb2wgKz0gbGV0dGVyX3dpZHRoICsgMQoKICAgIGRlbCBpCgpkZWYgZHJhd19pY29uKGNvbCwgcm93LCBpY29uLCBicmlnaHRuZXNzPTI1NSk6CiAgICBicmlnaHRuZXNzIC8vPSA5CiAgICBmb3IgeCBpbiByYW5nZSg1KToKICAgICAgICBpZiBjb2wgKyB4IDwgMDoKICAgICAgICAgICAgY29udGludWUKICAgICAgICBpZiBjb2wgKyB4ID49IFdJRFRIOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBmb3IgeSBpbiByYW5nZSg1KToKICAgICAgICAgICAgaWYgbm90IGljb24uZ2V0X3BpeGVsKHgsIHkpOiBjb250aW51ZQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBzZXRfcGl4ZWwoeCArIGNvbCwgeSArIHJvdywgaWNvbi5nZXRfcGl4ZWwoeCwgeSkgKiBicmlnaHRuZXNzKQogICAgICAgICAgICBleGNlcHQgSW5kZXhFcnJvcjoKICAgICAgICAgICAgICAgIHBhc3MKICAgIHJldHVybiBUcnVlCgpkZWYgc2V0X3BpeGVsKGNvbCwgcm93LCBicmlnaHRuZXNzKToKICAgIF9iW19waXhlbF9hZGRyKGNvbCwgcm93KV0gPSBicmlnaHRuZXNzCgpkZWYgZ2V0X3BpeGVsKGNvbCwgcm93KToKICAgIHJldHVybiBfYltfcGl4ZWxfYWRkcihjb2wsIHJvdyldCiAgICAKZGVmIF9waXhlbF9hZGRyKHgsIHkpOgogICAgeSA9ICAoNyAtICh5ICsgMSkpKigxIC0gb3JpZW50YXRpb24pICsgb3JpZW50YXRpb24qeQogICAgeCA9ICgxNyAtICh4ICsgMSkpKm9yaWVudGF0aW9uICsgKDEgLSBvcmllbnRhdGlvbikqeAoKICAgIGlmIHggPiA4OgogICAgICAgIHggPSB4IC0gOAogICAgICAgIHkgPSA2IC0gKHkgKyA4KQogICAgZWxzZToKICAgICAgICB4ID0gOCAtIHgKCiAgICByZXR1cm4gKHggKiAxNiArIHkpICsgMQoKZGVmIHJlY3RhbmdsZSh4MSwgeTEsIHgyLCB5MiwgYnJpZ2h0bmVzcyk6CiAgICBmb3IgeSBpbiByYW5nZSh5MSwgeTIrMSk6CiAgICAgICAgZm9yIHggaW4gcmFuZ2UoeDEsIHgyKzEpOgogICAgICAgICAgICBzZXRfcGl4ZWwoeCwgeSwgYnJpZ2h0bmVzcykKCgpkZWYgX3NpZ24obik6CiAgICByZXR1cm4gKG4+MCkgLSAobjwwKQoKCmRlZiBsaW5lKHgwLCB5MCwgeDEsIHkxLGJyaWdodG5lc3MpOgogICAgZHgsIGR5ID0gYWJzKHgxIC0geDApLCBhYnMoeTEgLSB5MCkKICAgIHgsIHkgPSB4MCwgeTAKICAgIHN4LCBzeSA9IF9zaWduKHgxLXgwKSwgX3NpZ24oeTEteTApCiAgICBpZiBkeCA+IGR5OgogICAgICAgIGVyciA9IGR4IC8gMi4wCiAgICAgICAgd2hpbGUgeCAhPSB4MTogICAgICAgCiAgICAgICAgICAgIHNldF9waXhlbCh4LCB5LCBicmlnaHRuZXNzKSAgICAgICAgICAKICAgICAgICAgICAgZXJyIC09IGR5CiAgICAgICAgICAgIGlmIGVyciA8IDA6CiAgICAgICAgICAgICAgICB5ICs9IHN5CiAgICAgICAgICAgICAgICBlcnIgKz0gZHgKICAgICAgICAgICAgeCArPSBzeAogICAgZWxzZToKICAgICAgICBlcnIgPSBkeSAvIDIuMAogICAgICAgIHdoaWxlIHkgIT0geTE6ICAgICAgICAgIAogICAgICAgICAgICBzZXRfcGl4ZWwoeCwgeSwgYnJpZ2h0bmVzcykgICAgICAgICAgCiAgICAgICAgICAgIGVyciAtPSBkeAogICAgICAgICAgICBpZiBlcnIgPCAwOgogICAgICAgICAgICAgICAgeCArPSBzeAogICAgICAgICAgICAgICAgZXJyICs9IGR5CiAgICAgICAgICAgIHkgKz0gc3kgICAgICAgICAgICAgICAgCiAgICBzZXRfcGl4ZWwoeCwgeSwgYnJpZ2h0bmVzcykgICAgICAgICAgCgoKX3coMjUzLCAxMSkKc2xlZXAoMTAwKQpfdygxMCwgMCkKc2xlZXAoMTAwKQpfdygxMCwgMSkKc2xlZXAoMTAwKQpfdygwLCAwKQpfdyg2LCAwKQpmb3IgYmFuayBpbiBbMSwwXToKICAgIF93KDI1MywgYmFuaykKICAgIF93KFswXSArIFsyNTVdICogMTcpCmNsZWFyKCkKc2hvdygp","base64");
    }
    if (extensions.indexOf('GiggleBot') !== -1) {
        return Buffer("aW1wb3J0IG1pY3JvYml0CgpHRVRfRklSTVdBUkVfVkVSU0lPTiA9IDEKR0VUX0JPQVJEID0gMwpHRVRfVk9MVEFHRV9CQVRURVJZID0gNApHRVRfTElORV9TRU5TT1JTID0gNQpHRVRfTElHSFRfU0VOU09SUyA9IDYKU0VUX01PVE9SX1BPV0VSUyA9IDEwCkxFRlQgPSAwClJJR0hUID0gMQpCT1RIID0gMgpGT1JXQVJEID0gMQpCQUNLV0FSRCA9IC0xCm1vdG9yX3Bvd2VyX2xlZnQgPSA1MAptb3Rvcl9wb3dlcl9yaWdodCA9IDUwCm5lb3BpeGVsc3RyaXAgPSBOb25lCgpkZWYgX3JlYWQocmVnLCBzaXplPTgsIHJlcGVhdD1GYWxzZSk6CgltaWNyb2JpdC5pMmMud3JpdGUoMHgwNCwgYnl0ZXMoW3JlZ10pLCByZXBlYXQpCglvdXRidWYgPSBtaWNyb2JpdC5pMmMucmVhZCgweDA0LCAxIGlmIHNpemU9PTggZWxzZSAyLCByZXBlYXQpCglyZXR1cm4gb3V0YnVmWzBdIGlmIHNpemU9PTggZWxzZSBvdXRidWZbMF0gKiAyNTUgKyBvdXRidWZbMV0KCmRlZiBfZ2V0X3NlbnNvcnMocmVnLCByZXBlYXQ9RmFsc2UpOgoJbWljcm9iaXQuaTJjLndyaXRlKDB4MDQsIGJ5dGVzKFtyZWddKSwgcmVwZWF0KQoJb3V0YnVmID0gW10KCWJ1ZiA9IG1pY3JvYml0LmkyYy5yZWFkKDB4MDQsIDMsIHJlcGVhdCkKCW91dGJ1Zi5hcHBlbmQoMTAyMyAtICggYnVmWzBdIDw8IDIgfCAoKGJ1ZlsyXSAmIDB4QzApID4+IDYpKSkKCW91dGJ1Zi5hcHBlbmQoMTAyMyAtICggYnVmWzFdIDw8IDIgfCAoKGJ1ZlsyXSAmIDB4MzApID4+IDQpKSkKCXJldHVybiBvdXRidWYKCmRlZiB2b2x0KCk6CglyZXR1cm4gKF9yZWFkKEdFVF9WT0xUQUdFX0JBVFRFUlksIHNpemU9MTYpLzEwMDApCgpkZWYgZHJpdmUoZGlyPUZPUldBUkQsIG1pbGxpc2Vjb25kcz0tMSk6CgltaWNyb2JpdC5pMmMud3JpdGUoMHgwNCwgYnl0ZXMoW1NFVF9NT1RPUl9QT1dFUlMsIG1vdG9yX3Bvd2VyX2xlZnQqZGlyLCBtb3Rvcl9wb3dlcl9yaWdodCpkaXJdKSwgRmFsc2UpCglpZiBtaWxsaXNlY29uZHMgPj0gMDoKCQltaWNyb2JpdC5zbGVlcChtaWxsaXNlY29uZHMpCgkJc3RvcCgpCgpkZWYgdHVybihkaXI9TEVGVCwgbWlsbGlzZWNvbmRzPS0xKToKCWlmIGRpcj09TEVGVDogbWljcm9iaXQuaTJjLndyaXRlKDB4MDQsIGJ5dGVzKFtTRVRfTU9UT1JfUE9XRVJTLCBtb3Rvcl9wb3dlcl9sZWZ0LCAwXSksIEZhbHNlKQoJaWYgZGlyPT1SSUdIVDogbWljcm9iaXQuaTJjLndyaXRlKDB4MDQsIGJ5dGVzKFtTRVRfTU9UT1JfUE9XRVJTLCAwLCBtb3Rvcl9wb3dlcl9yaWdodF0pLCBGYWxzZSkKCWlmIG1pbGxpc2Vjb25kcyA+PSAwOgoJCW1pY3JvYml0LnNsZWVwKG1pbGxpc2Vjb25kcykKCQlzdG9wKCkgICAgICAgIAoKZGVmIHNldF9zcGVlZChwb3dlcl9sZWZ0LCBwb3dlcl9yaWdodCk6CglnbG9iYWwgbW90b3JfcG93ZXJfbGVmdCwgbW90b3JfcG93ZXJfcmlnaHQKCW1vdG9yX3Bvd2VyX2xlZnQgPSBwb3dlcl9sZWZ0Cgltb3Rvcl9wb3dlcl9yaWdodCA9IHBvd2VyX3JpZ2h0CgpkZWYgc3RvcCgpOgoJbWljcm9iaXQuaTJjLndyaXRlKDB4MDQsIGJ5dGVzKFtTRVRfTU9UT1JfUE9XRVJTLCAwLCAwXSksIEZhbHNlKQoKZGVmIHNldF9zZXJ2byh3aGljaCwgZGVncmVlcyk6Cgl1cyA9IG1pbigyNDAwLCBtYXgoNjAwLCA2MDAgKyAoMTgwMCAqIGRlZ3JlZXMgLy8gMTgwKSkpCglkdXR5ID0gcm91bmQodXMgKiAxMDI0ICogNTAgLy8gMTAwMDAwMCkKCWlmIHdoaWNoID09IExFRlQgb3Igd2hpY2ggPT0gQk9USDoKCQltaWNyb2JpdC5waW4xNC5zZXRfYW5hbG9nX3BlcmlvZCgyMCkKCQltaWNyb2JpdC5waW4xNC53cml0ZV9hbmFsb2coZHV0eSkKCWlmIHdoaWNoID09IFJJR0hUIG9yIHdoaWNoID09IEJPVEg6CgkJbWljcm9iaXQucGluMTMuc2V0X2FuYWxvZ19wZXJpb2QoMjApCgkJbWljcm9iaXQucGluMTMud3JpdGVfYW5hbG9nKGR1dHkpCgkJCmRlZiBzZXJ2b19vZmYod2hpY2gpOgoJaWYgd2hpY2ggPT0gTEVGVCBvciB3aGljaCA9PSBCT1RIOiBtaWNyb2JpdC5waW4xNC53cml0ZV9kaWdpdGFsKDApCglpZiB3aGljaCA9PSBSSUdIVCBvciB3aGljaCA9PSBCT1RIOiBtaWNyb2JpdC5waW4xMy53cml0ZV9kaWdpdGFsKDApCgkKZGVmIHNldF9zbWlsZShSPTI1LEc9MCxCPTApOgoJbmVvcGl4ID0gcmFuZ2UoMiw5KQoJZm9yIGkgaW4gbmVvcGl4OiBuZW9waXhlbHN0cmlwW2ldID0gKFIsRyxCKQoJbmVvcGl4ZWxzdHJpcC5zaG93KCkKCmRlZiBzZXRfZXllcyh3aGljaD1CT1RILCBSPTAsIEc9MCwgQj0xMCk6CglpZiB3aGljaCAhPSBMRUZUOgoJCW5lb3BpeGVsc3RyaXBbMF0gPSAoUixHLEIpCglpZiB3aGljaCAhPSBSSUdIVDoKCQluZW9waXhlbHN0cmlwWzFdPSAoUixHLEIpCgluZW9waXhlbHN0cmlwLnNob3coKQoKZGVmIHNldF9leWVfY29sb3Jfb25fc3RhcnQoKToKCWlmIF9yZWFkKEdFVF9WT0xUQUdFX0JBVFRFUlksIHNpemU9MTYpIDwgMzQwMDoKCQluZW9waXhlbHN0cmlwWzBdID0gKDEwLCAwLCAwKQoJCW5lb3BpeGVsc3RyaXBbMV09ICgxMCwgMCwgMCkKCWVsc2U6CgkJbmVvcGl4ZWxzdHJpcFswXSA9ICgwLCAwLCAxMCkKCQluZW9waXhlbHN0cmlwWzFdPSAoMCwgMCwgMTApCgluZW9waXhlbHN0cmlwLnNob3coKQoKZGVmIHJlYWRfc2Vuc29yKHdoaWNoX3NlbnNvciwgd2hpY2hfc2lkZSk6CglpZiAod2hpY2hfc2lkZSA9PSBMRUZUKTogcmV0dXJuIF9nZXRfc2Vuc29ycyh3aGljaF9zZW5zb3IpWzBdCgllbGlmICh3aGljaF9zaWRlID09IFJJR0hUKTogcmV0dXJuIF9nZXRfc2Vuc29ycyh3aGljaF9zZW5zb3IpWzFdCgllbHNlOiByZXR1cm4gX2dldF9zZW5zb3JzKHdoaWNoX3NlbnNvcikKCmRlZiBwaXhlbHNfb2ZmKCk6Cglmb3IgaSBpbiByYW5nZSg5KToKCQluZW9waXhlbHN0cmlwW2ldID0gKDAsMCwwKQoJbmVvcGl4ZWxzdHJpcC5zaG93KCkKIApkZWYgaW5pdCgpOiAKCWZyb20gbmVvcGl4ZWwgaW1wb3J0IE5lb1BpeGVsCglnbG9iYWwgbmVvcGl4ZWxzdHJpcAoJc3RvcCgpCgluZW9waXhlbHN0cmlwID0gTmVvUGl4ZWwobWljcm9iaXQucGluOCwgOSk7IHBpeGVsc19vZmYoKQoJZXllc3RyaXAgPSBOZW9QaXhlbChtaWNyb2JpdC5waW44LCAyKQoJc2V0X2V5ZV9jb2xvcl9vbl9zdGFydCgp","base64");
    }
    if (extensions.indexOf('Minibit') !== -1) {
        return Buffer("ZnJvbSBtaWNyb2JpdCBpbXBvcnQgKgppbXBvcnQgbmVvcGl4ZWwKZnJvbSB1dGltZSBpbXBvcnQgdGlja3NfdXMsIHNsZWVwX3VzCgpjbGFzcyBtaW5pQml0OgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHBhc3MKCiAgICBsZWRzID0gbmVvcGl4ZWwuTmVvUGl4ZWwocGluMTMsIDQpCgogICAgZGVmIGZvcndhcmQoc2VsZiwgc3BlZWQpOgogICAgICAgIGlmIChzcGVlZCA+IDEwMjMpIG9yIChzcGVlZCA8IDEpOgogICAgICAgICAgICBwcmludCgiRXJyb3IsIHNwZWVkIG11c3QgYmUgYSBudW1iZXIgMS0xMDIzIikKICAgICAgICAgICAgZGlzcGxheS5zY3JvbGwoIlNwZWVkIG11c3QgYmUgYSBudW1iZXIgMS0xMDIzIikKICAgICAgICBlbHNlOgogICAgICAgICAgICBwaW4xMi53cml0ZV9hbmFsb2coc3BlZWQpCiAgICAgICAgICAgIHBpbjgud3JpdGVfZGlnaXRhbCgwKQogICAgICAgICAgICBwaW4xNi53cml0ZV9hbmFsb2coc3BlZWQpCiAgICAgICAgICAgIHBpbjE0LndyaXRlX2RpZ2l0YWwoMCkKCiAgICBkZWYgYmFja3dhcmQoc2VsZiwgc3BlZWQpOgogICAgICAgIGlmIChzcGVlZCA+IDEwMjMpIG9yIChzcGVlZCA8IDEpOgogICAgICAgICAgICBwcmludCgiRXJyb3IsIHNwZWVkIG11c3QgYmUgYSBudW1iZXIgMS0xMDIzIikKICAgICAgICAgICAgZGlzcGxheS5zY3JvbGwoIlNwZWVkIG11c3QgYmUgYSBudW1iZXIgMS0xMDIzIikKICAgICAgICBlbHNlOgogICAgICAgICAgICBwaW4xMi53cml0ZV9kaWdpdGFsKDApCiAgICAgICAgICAgIHBpbjgud3JpdGVfYW5hbG9nKHNwZWVkKQogICAgICAgICAgICBwaW4xNi53cml0ZV9kaWdpdGFsKDApCiAgICAgICAgICAgIHBpbjE0LndyaXRlX2FuYWxvZyhzcGVlZCkKCiAgICBkZWYgbGVmdChzZWxmLCBzcGVlZCk6CiAgICAgICAgaWYgKHNwZWVkID4gMTAyMykgb3IgKHNwZWVkIDwgMSk6CiAgICAgICAgICAgIHByaW50KCJFcnJvciwgc3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgICAgICBkaXNwbGF5LnNjcm9sbCgiU3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZyhzcGVlZCkKICAgICAgICAgICAgcGluOC53cml0ZV9kaWdpdGFsKDApCiAgICAgICAgICAgIHBpbjE2LndyaXRlX2FuYWxvZygxMDIzKQogICAgICAgICAgICBwaW4xNC53cml0ZV9hbmFsb2coMTAyMykKCiAgICBkZWYgcmlnaHQoc2VsZiwgc3BlZWQpOgogICAgICAgIGlmIChzcGVlZCA+IDEwMjMpIG9yIChzcGVlZCA8IDEpOgogICAgICAgICAgICBwcmludCgiRXJyb3IsIHNwZWVkIG11c3QgYmUgYSBudW1iZXIgMS0xMDIzIikKICAgICAgICAgICAgZGlzcGxheS5zY3JvbGwoIlNwZWVkIG11c3QgYmUgYSBudW1iZXIgMS0xMDIzIikKICAgICAgICBlbHNlOgogICAgICAgICAgICBwaW4xNi53cml0ZV9hbmFsb2coc3BlZWQpCiAgICAgICAgICAgIHBpbjE0LndyaXRlX2RpZ2l0YWwoMCkKICAgICAgICAgICAgcGluMTIud3JpdGVfYW5hbG9nKDEwMjMpCiAgICAgICAgICAgIHBpbjgud3JpdGVfYW5hbG9nKDEwMjMpCgogICAgZGVmIHN0b3Aoc2VsZiwgYnJha2U9VHJ1ZSk6CiAgICAgICAgaWYgYnJha2U9PVRydWU6CiAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZygxMDIzKQogICAgICAgICAgICBwaW44LndyaXRlX2FuYWxvZygxMDIzKQogICAgICAgICAgICBwaW4xNi53cml0ZV9hbmFsb2coMTAyMykKICAgICAgICAgICAgcGluMTQud3JpdGVfYW5hbG9nKDEwMjMpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcGluMTIud3JpdGVfZGlnaXRhbCgwKQogICAgICAgICAgICBwaW44LndyaXRlX2RpZ2l0YWwoMCkKICAgICAgICAgICAgcGluMTYud3JpdGVfZGlnaXRhbCgwKQogICAgICAgICAgICBwaW4xNC53cml0ZV9kaWdpdGFsKDApCgogICAgZGVmIHNvbmFyX2NtKHNlbGYpOgogICAgICAgIHBpbjE1LndyaXRlX2RpZ2l0YWwoMSkKICAgICAgICBzbGVlcF91cygxMCkKICAgICAgICBwaW4xNS53cml0ZV9kaWdpdGFsKDApCiAgICAgICAgd2hpbGUgcGluMTUucmVhZF9kaWdpdGFsKCkgPT0gMDoKICAgICAgICAgICAgcGFzcwogICAgICAgIHN0YXJ0ID0gdGlja3NfdXMoKQogICAgICAgIHdoaWxlIHBpbjE1LnJlYWRfZGlnaXRhbCgpID09IDE6CiAgICAgICAgICAgIHBhc3MKICAgICAgICBlbmQgPSB0aWNrc191cygpCiAgICAgICAgZWNobyA9IGVuZC1zdGFydAogICAgICAgIGRpc3RhbmNlID0gaW50KDAuMDE3MTUgKiBlY2hvKQogICAgICAgIHJldHVybiBkaXN0YW5jZQoKICAgIGRlZiBzb25hcl9tbShzZWxmKToKICAgICAgICBwaW4xNS53cml0ZV9kaWdpdGFsKDEpCiAgICAgICAgc2xlZXBfdXMoMTApCiAgICAgICAgcGluMTUud3JpdGVfZGlnaXRhbCgwKQogICAgICAgIHdoaWxlIHBpbjE1LnJlYWRfZGlnaXRhbCgpID09IDA6CiAgICAgICAgICAgIHBhc3MKICAgICAgICBzdGFydCA9IHRpY2tzX3VzKCkKICAgICAgICB3aGlsZSBwaW4xNS5yZWFkX2RpZ2l0YWwoKSA9PSAxOgogICAgICAgICAgICBwYXNzCiAgICAgICAgZW5kID0gdGlja3NfdXMoKQogICAgICAgIGVjaG8gPSBlbmQtc3RhcnQKICAgICAgICBkaXN0YW5jZSA9IGludCgwLjAxNzE1ICogZWNobyoxMCkKICAgICAgICByZXR1cm4gZGlzdGFuY2U=","base64");
    }
    //Automated Scripts under here
    if (extensions.indexOf('DriveBit') !== -1) {
        return Buffer("ZnJvbSBtaWNyb2JpdCBpbXBvcnQgKgoKY2xhc3MgRHJpdmVCaXQ6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgcGFzcwoKICAgIGNsYXNzIG1vdG9yOgogICAgICAgIGNsYXNzIG9uZToKICAgICAgICAgICAgZGVmIGZvcndhcmQoc3BlZWQpOgogICAgICAgICAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZyAoc3BlZWQpCiAgICAgICAgICAgICAgICAgICAgcGluMTMud3JpdGVfYW5hbG9nICgwKQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICBkZWYgYmFja3dhcmQoc3BlZWQpOgogICAgICAgICAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZyAoMCkKICAgICAgICAgICAgICAgICAgICBwaW4xMy53cml0ZV9hbmFsb2cgKHNwZWVkKQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICBkZWYgc3RvcCgpOgogICAgICAgICAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZyAoMCkKICAgICAgICAgICAgICAgICAgICBwaW4xMy53cml0ZV9hbmFsb2cgKDApCiAgICAgICAgCiAgICAgICAgY2xhc3MgdHdvOgogICAgICAgICAgICBkZWYgZm9yd2FyZChzcGVlZCk6CiAgICAgICAgICAgICAgICAgICAgcGluMTQud3JpdGVfYW5hbG9nIChzcGVlZCkKICAgICAgICAgICAgICAgICAgICBwaW4xNS53cml0ZV9hbmFsb2cgKDApCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGRlZiBiYWNrd2FyZChzcGVlZCk6CiAgICAgICAgICAgICAgICAgICAgcGluMTQud3JpdGVfYW5hbG9nICgwKQogICAgICAgICAgICAgICAgICAgIHBpbjE1LndyaXRlX2FuYWxvZyAoc3BlZWQpCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGRlZiBzdG9wKCk6CiAgICAgICAgICAgICAgICAgICAgcGluMTQud3JpdGVfYW5hbG9nICgwKQogICAgICAgICAgICAgICAgICAgIHBpbjE1LndyaXRlX2FuYWxvZyAoMCk=","base64");
    }
    if (extensions.indexOf('BitBotXL') !== -1) {
        return Buffer("ZnJvbSBtaWNyb2JpdCBpbXBvcnQgKgppbXBvcnQgbmVvcGl4ZWwKZnJvbSB1dGltZSBpbXBvcnQgdGlja3NfdXMsIHNsZWVwX3VzCgpjbGFzcyBiaXRCb3RYTDoKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBwYXNzCgogICAgbGVkcyA9IG5lb3BpeGVsLk5lb1BpeGVsKHBpbjEzLCAxMikKCiAgICBkZWYgZm9yd2FyZChzZWxmLCBzcGVlZCk6CiAgICAgICAgaWYgKHNwZWVkID4gMTAyMykgb3IgKHNwZWVkIDwgMSk6CiAgICAgICAgICAgIHByaW50KCJFcnJvciwgc3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgICAgICBkaXNwbGF5LnNjcm9sbCgiU3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHBpbjE2LndyaXRlX2FuYWxvZyhzcGVlZCkKICAgICAgICAgICAgcGluOC53cml0ZV9kaWdpdGFsKDApCiAgICAgICAgICAgIHBpbjE0LndyaXRlX2FuYWxvZyhzcGVlZCkKICAgICAgICAgICAgcGluMTIud3JpdGVfZGlnaXRhbCgwKQoKICAgIGRlZiBiYWNrd2FyZChzZWxmLCBzcGVlZCk6CiAgICAgICAgaWYgKHNwZWVkID4gMTAyMykgb3IgKHNwZWVkIDwgMSk6CiAgICAgICAgICAgIHByaW50KCJFcnJvciwgc3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgICAgICBkaXNwbGF5LnNjcm9sbCgiU3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHBpbjE2LndyaXRlX2RpZ2l0YWwoMCkKICAgICAgICAgICAgcGluOC53cml0ZV9hbmFsb2coc3BlZWQpCiAgICAgICAgICAgIHBpbjE0LndyaXRlX2RpZ2l0YWwoMCkKICAgICAgICAgICAgcGluMTIud3JpdGVfYW5hbG9nKHNwZWVkKQoKICAgIGRlZiBsZWZ0KHNlbGYsIHNwZWVkKToKICAgICAgICBpZiAoc3BlZWQgPiAxMDIzKSBvciAoc3BlZWQgPCAxKToKICAgICAgICAgICAgcHJpbnQoIkVycm9yLCBzcGVlZCBtdXN0IGJlIGEgbnVtYmVyIDEtMTAyMyIpCiAgICAgICAgICAgIGRpc3BsYXkuc2Nyb2xsKCJTcGVlZCBtdXN0IGJlIGEgbnVtYmVyIDEtMTAyMyIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcGluMTQud3JpdGVfYW5hbG9nKDApCiAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZygwKQogICAgICAgICAgICBwaW4xNi53cml0ZV9hbmFsb2coc3BlZWQpCiAgICAgICAgICAgIHBpbjgud3JpdGVfZGlnaXRhbCgwKQoKICAgIGRlZiByaWdodChzZWxmLCBzcGVlZCk6CiAgICAgICAgaWYgKHNwZWVkID4gMTAyMykgb3IgKHNwZWVkIDwgMSk6CiAgICAgICAgICAgIHByaW50KCJFcnJvciwgc3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgICAgICBkaXNwbGF5LnNjcm9sbCgiU3BlZWQgbXVzdCBiZSBhIG51bWJlciAxLTEwMjMiKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHBpbjE2LndyaXRlX2FuYWxvZygwKQogICAgICAgICAgICBwaW44LndyaXRlX2FuYWxvZygwKQogICAgICAgICAgICBwaW4xNC53cml0ZV9hbmFsb2coc3BlZWQpCiAgICAgICAgICAgIHBpbjEyLndyaXRlX2RpZ2l0YWwoMCkKCiAgICBkZWYgc3RvcChzZWxmLCBicmFrZT1UcnVlKToKICAgICAgICBpZiBicmFrZT09VHJ1ZToKICAgICAgICAgICAgcGluMTYud3JpdGVfYW5hbG9nKDEwMjMpCiAgICAgICAgICAgIHBpbjgud3JpdGVfYW5hbG9nKDEwMjMpCiAgICAgICAgICAgIHBpbjE0LndyaXRlX2FuYWxvZygxMDIzKQogICAgICAgICAgICBwaW4xMi53cml0ZV9hbmFsb2coMTAyMykKICAgICAgICBlbHNlOgogICAgICAgICAgICBwaW4xNi53cml0ZV9hbmFsb2coMCkKICAgICAgICAgICAgcGluOC53cml0ZV9hbmFsb2coMCkKICAgICAgICAgICAgcGluMTQud3JpdGVfYW5hbG9nKDApCiAgICAgICAgICAgIHBpbjEyLndyaXRlX2FuYWxvZygwKQoKICAgIGRlZiBzb25hcl9jbShzZWxmKToKICAgICAgICBwaW4xNS53cml0ZV9kaWdpdGFsKDEpCiAgICAgICAgc2xlZXBfdXMoMTApCiAgICAgICAgcGluMTUud3JpdGVfZGlnaXRhbCgwKQogICAgICAgIHdoaWxlIHBpbjE1LnJlYWRfZGlnaXRhbCgpID09IDA6CiAgICAgICAgICAgIHBhc3MKICAgICAgICBzdGFydCA9IHRpY2tzX3VzKCkKICAgICAgICB3aGlsZSBwaW4xNS5yZWFkX2RpZ2l0YWwoKSA9PSAxOgogICAgICAgICAgICBwYXNzCiAgICAgICAgZW5kID0gdGlja3NfdXMoKQogICAgICAgIGVjaG8gPSBlbmQtc3RhcnQKICAgICAgICBkaXN0YW5jZSA9IGludCgwLjAxNzE1ICogZWNobykKICAgICAgICByZXR1cm4gZGlzdGFuY2UKCiAgICBkZWYgc29uYXJfbW0oc2VsZik6CiAgICAgICAgcGluMTUud3JpdGVfZGlnaXRhbCgxKQogICAgICAgIHNsZWVwX3VzKDEwKQogICAgICAgIHBpbjE1LndyaXRlX2RpZ2l0YWwoMCkKICAgICAgICB3aGlsZSBwaW4xNS5yZWFkX2RpZ2l0YWwoKSA9PSAwOgogICAgICAgICAgICBwYXNzCiAgICAgICAgc3RhcnQgPSB0aWNrc191cygpCiAgICAgICAgd2hpbGUgcGluMTUucmVhZF9kaWdpdGFsKCkgPT0gMToKICAgICAgICAgICAgcGFzcwogICAgICAgIGVuZCA9IHRpY2tzX3VzKCkKICAgICAgICBlY2hvID0gZW5kLXN0YXJ0CiAgICAgICAgZGlzdGFuY2UgPSBpbnQoMC4wMTcxNSAqIGVjaG8qMTApCiAgICAgICAgcmV0dXJuIGRpc3RhbmNl","base64");
    }
    if (extensions.indexOf('MoveMini') !== -1) {
        return Buffer("cGluMS5zZXRfYW5hbG9nX3BlcmlvZCgyMCkKcGluMi5zZXRfYW5hbG9nX3BlcmlvZCgyMCkKCmNsYXNzIE1vdmVNaW5pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHBhc3MKCiAgICBkZWYgZm9yd2FyZChzZWxmLCB0aW1lKToKICAgICAgICBwaW4xLndyaXRlX2FuYWxvZygxODApCiAgICAgICAgcGluMi53cml0ZV9hbmFsb2coMSkKICAgICAgICBzbGVlcCh0aW1lKQoKICAgIGRlZiBiYWNrd2FyZChzZWxmLCB0aW1lKToKICAgICAgICBwaW4xLndyaXRlX2FuYWxvZygxKQogICAgICAgIHBpbjIud3JpdGVfYW5hbG9nKDE4MCkKICAgICAgICBzbGVlcCh0aW1lKQoKICAgIGRlZiBsZWZ0KHNlbGYsIHRpbWUpOgogICAgICAgIHBpbjEud3JpdGVfYW5hbG9nKDEpCiAgICAgICAgcGluMi53cml0ZV9hbmFsb2coMSkKICAgICAgICBzbGVlcCh0aW1lKQoKICAgIGRlZiByaWdodChzZWxmLCB0aW1lKToKICAgICAgICBwaW4xLndyaXRlX2FuYWxvZygxODApCiAgICAgICAgcGluMi53cml0ZV9hbmFsb2coMTgwKQogICAgICAgIHNsZWVwKHRpbWUpCgogICAgZGVmIHN0b3Aoc2VsZik6CiAgICAgICAgcGluMS53cml0ZV9hbmFsb2coMCkKICAgICAgICBwaW4yLndyaXRlX2FuYWxvZygwKQogICAgICAgIHNsZWVwKHRpbWUpCiAgICA=","base64");
    }
}
exports.getBeforeScript = getBeforeScript;

}).call(this,require("buffer").Buffer)
},{"./circuitpython/advanced/definitions":2,"./circuitpython/advanced/generators":3,"./circuitpython/analog/definitions":4,"./circuitpython/analog/generators":5,"./circuitpython/audio/definitions":6,"./circuitpython/audio/generators":7,"./circuitpython/basic/definitions":8,"./circuitpython/basic/generators":9,"./circuitpython/cpx/definitions":10,"./circuitpython/cpx/generators":11,"./circuitpython/digital/definitions":12,"./circuitpython/digital/generators":13,"./circuitpython/dotstar/definitions":14,"./circuitpython/dotstar/generators":15,"./circuitpython/neopixel/definitions":16,"./circuitpython/neopixel/generators":17,"./circuitpython/pwm/definitions":18,"./circuitpython/pwm/generators":19,"./circuitpython/servo/definitions":20,"./circuitpython/servo/generators":21,"./circuitpython/touch/definitions":22,"./circuitpython/touch/generators":23,"./microbit/BitBotXL/definitions":25,"./microbit/BitBotXL/generators":26,"./microbit/DriveBit/definitions":27,"./microbit/DriveBit/generators":28,"./microbit/Minibit/definitions":29,"./microbit/Minibit/generators":30,"./microbit/MoveMini/definitions":31,"./microbit/MoveMini/generators":32,"./microbit/accelerometer/definitions":33,"./microbit/accelerometer/generators":34,"./microbit/basic/definitions":35,"./microbit/basic/generators":36,"./microbit/buttons/definitions":37,"./microbit/buttons/generators":38,"./microbit/compass/definitions":39,"./microbit/compass/generators":40,"./microbit/display/definitions":41,"./microbit/display/generators":42,"./microbit/gigglebot/definitions":43,"./microbit/gigglebot/generators":44,"./microbit/music/definitions":45,"./microbit/music/generators":46,"./microbit/neopixel/definitions":47,"./microbit/neopixel/generators":48,"./microbit/pins/definitions":49,"./microbit/pins/generators":50,"./microbit/radio/definitions":51,"./microbit/radio/generators":52,"./microbit/scrollbit/definitions":53,"./microbit/scrollbit/generators":54,"./microbit/speech/definitions":55,"./microbit/speech/generators":56,"./microbit/variables/definitions":57,"./microbit/variables/generators":58,"./pi/basic/definitions":59,"./pi/basic/generators":60,"./pi/bitio/definitions":61,"./pi/bitio/generators":62,"./pi/gpiozero/definitions":63,"./pi/gpiozero/generators":64,"./pi/minecraft/definitions":65,"./pi/minecraft/generators":66,"./pi/picamera/definitions":67,"./pi/picamera/generators":68,"./pi/pimoroni/definitions":69,"./pi/pimoroni/generators":70,"./pi/requests/definitions":71,"./pi/requests/generators":72,"./pi/sensehat/definitions":73,"./pi/sensehat/generators":74,"./pi/sonicpi/definitions":75,"./pi/sonicpi/generators":76,"./pi/turtle/definitions":77,"./pi/turtle/generators":78,"./pi/variables/definitions":79,"./pi/variables/generators":80,"./web/definitions/definitions":81,"./web/definitions/generators":82,"./web/graphs/definitions":83,"./web/graphs/generators":84,"./web/imports/definitions":85,"./web/imports/generators":86,"./web/lists/definitions":87,"./web/lists/generators":88,"./web/logic/definitions":89,"./web/logic/generators":90,"./web/loops/definitions":91,"./web/loops/generators":92,"./web/math/definitions":93,"./web/math/generators":94,"./web/processing/definitions":95,"./web/processing/generators":96,"./web/random/definitions":97,"./web/random/generators":98,"./web/statements/definitions":99,"./web/statements/generators":100,"./web/turtle/definitions":101,"./web/turtle/generators":102,"./web/variables/definitions":103,"./web/variables/generators":104,"buffer":153,"path":182}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_bitbot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from BitBotXL import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Imports bitbot library.");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbot_init'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(" = bitBotXL()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Initialise bitbot");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbot_direction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["forward", "forward"], ["backward", "backward"], ["left", "left"], ["right", "right"]]), "directions")
                .appendField("(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Drive the bitbot");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinlinerobot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("1023", "0", "1023", "1", "1", "Speed"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("Slider input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbotneovarnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".leds[");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("] = (");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Set Neopixel Colour");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbotneoshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField("leds.show()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Show the set neopixel config");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbotneoclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField("leds.clear()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Clear the set neopixel config");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbot_stop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".stop(");
            this.appendValueInput("stop")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#000000");
            this.setTooltip("Stop the robot");
            this.setHelpUrl("");
        }
    };
    Blocks['bitbot_sonar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".sonar_")
                .appendField(new Blockly.FieldDropdown([["cm", "cm"], ["mm", "mm"]]), "measure")
                .appendField("()");
            this.setOutput(true, null);
            this.setColour("#000000");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Measure the sonar distance");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_bitbot'] = function (block) {
        var code = 'from BitBotXL import *\n';
        return code;
    };
    Python['bitbot_init'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + ' = bitBotXL()\n';
        return code;
    };
    Python['bitbot_direction'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_directions = block.getFieldValue('directions');
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.' + dropdown_directions + '(' + value_name + ')\n';
        return code;
    };
    Python['bitbotneovarnew'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var text_neonum = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var text_colour = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.leds[' + text_neonum + '] = (' + text_colour + ')\n';
        return code;
    };
    Python['bitbotneoshow'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + 'leds.show()\n';
        return code;
    };
    Python['bitbotneoclear'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + 'leds.clear()\n';
        return code;
    };
    Python['sliderinlinerobot'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['bitbot_stop'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var value_stop = Blockly.Python.valueToCode(block, 'stop', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.stop(' + value_stop + ')\n';
        return code;
    };
    Python['bitbot_sonar'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_measure = block.getFieldValue('measure');
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.sonar_' + dropdown_measure + '()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_DriveBit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from DriveBit import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#c51a4a");
            this.setTooltip("Imports DriveBit library.");
            this.setHelpUrl("");
        }
    };
    Blocks['DriveBit_init'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(" = DriveBit()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#c51a4a");
            this.setTooltip("Initialise DriveBit");
            this.setHelpUrl("");
        }
    };
    Blocks['DriveBit_direction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".motor.")
                .appendField(new Blockly.FieldDropdown([["one", "one"], ["two", "two"]]), "motor")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["forward", "forward"], ["backward", "backward"]]), "direction")
                .appendField("(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#c51a4a");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['DriveBit_stop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".motor.")
                .appendField(new Blockly.FieldDropdown([["one", "one"], ["two", "two"]]), "motor")
                .appendField(".stop()");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#c51a4a");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinlinerobot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("1023", "0", "1023", "1", "1", "Speed"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("Slider input for inline input");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_DriveBit'] = function (block) {
        var code = 'from DriveBit import *\n';
        return code;
    };
    Python['DriveBit_init'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + ' = DriveBit()\n';
        return code;
    };
    Python['DriveBit_direction'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_motor = block.getFieldValue('motor');
        var dropdown_direction = block.getFieldValue('direction');
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.motor.' + dropdown_motor + '.' + dropdown_direction + '(' + value_name + ')\n';
        return code;
    };
    Python['DriveBit_stop'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_motor = block.getFieldValue('motor');
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.motor.' + dropdown_motor + '.stop()\n';
        return code;
    };
    Python['sliderinlinerobot'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_minibit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from Minibit import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Imports gigglebot library.");
            this.setHelpUrl("");
        }
    };
    Blocks['minibit_init'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(" = miniBit()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Initialise minibit");
            this.setHelpUrl("");
        }
    };
    Blocks['minibit_direction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["forward", "forward"], ["backward", "backward"], ["left", "left"], ["right", "right"]]), "directions")
                .appendField("(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Drive the Minibit");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinlinerobot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("1023", "0", "1023", "1", "1", "Speed"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("Slider input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['minineovarnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".leds[");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("] = (");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Set Neopixel Colour");
            this.setHelpUrl("");
        }
    };
    Blocks['minineoshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField("leds.show()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Show the set neopixel config");
            this.setHelpUrl("");
        }
    };
    Blocks['minineoclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField("leds.clear()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Clear the set neopixel config");
            this.setHelpUrl("");
        }
    };
    Blocks['minibit_stop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".stop(");
            this.appendValueInput("stop")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0D2D6A");
            this.setTooltip("Stop the robot");
            this.setHelpUrl("");
        }
    };
    Blocks['minibit_sonar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".sonar_")
                .appendField(new Blockly.FieldDropdown([["cm", "cm"], ["mm", "mm"]]), "measure")
                .appendField("()");
            this.setOutput(true, null);
            this.setColour("#0D2D6A");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Measure the sonar distance");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_minibit'] = function (block) {
        var code = 'from Minibit import *\n';
        return code;
    };
    Python['minibit_init'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + ' = miniBit()\n';
        return code;
    };
    Python['minibit_direction'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_directions = block.getFieldValue('directions');
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.' + dropdown_directions + '(' + value_name + ')\n';
        return code;
    };
    Python['minineovarnew'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var text_neonum = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var text_colour = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.leds[' + text_neonum + '] = (' + text_colour + ')\n';
        return code;
    };
    Python['minineoshow'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + 'leds.show()\n';
        return code;
    };
    Python['minineoclear'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + 'leds.clear()\n';
        return code;
    };
    Python['sliderinlinerobot'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['minibit_stop'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var value_stop = Blockly.Python.valueToCode(block, 'stop', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.stop(' + value_stop + ')\n';
        return code;
    };
    Python['minibit_sonar'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_measure = block.getFieldValue('measure');
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.sonar_' + dropdown_measure + '()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_movemini'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from movemini import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#02AD4D");
            this.setTooltip("Imports movemini library.");
            this.setHelpUrl("");
        }
    };
    Blocks['movemini_init'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(" = MoveMini()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#02AD4D");
            this.setTooltip("Initialise movemini");
            this.setHelpUrl("");
        }
    };
    Blocks['movemini_direction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["forward", "forward"], ["backward", "backward"], ["left", "left"], ["right", "right"]]), "directions")
                .appendField("(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#02AD4D");
            this.setTooltip("Drive the movemini");
            this.setHelpUrl("");
        }
    };
    Blocks['movemini_stop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("robot"), "robot")
                .appendField(".stop()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#02AD4D");
            this.setTooltip("Stop the robot");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_movemini'] = function (block) {
        var code = 'from movemini import *\n';
        return code;
    };
    Python['movemini_init'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + ' = MoveMini()\n';
        return code;
    };
    Python['movemini_direction'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        var dropdown_directions = block.getFieldValue('directions');
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.' + dropdown_directions + '(' + value_name + ')\n';
        return code;
    };
    Python['movemini_stop'] = function (block) {
        var variable_robot = Blockly.Python.variableDB_.getName(block.getFieldValue('robot'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_robot + '.stop()\n';
        return code;
    };
}
exports.default = define;

},{}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['accisgesturenew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("accelerometer.is_gesture(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setOutput(true, null);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['accisgesture'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('accelerometer.is_gesture(')
                .appendField(new Blockly.FieldTextInput(""), "gesture1")
                .appendField(')');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip('If the gesture is this, then do this');
            this.setHelpUrl('');
        },
    };
    Blocks['accwasgesturenew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("accelerometer.was_gesture(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['accwasgesture'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('accelerometer.was_gesture(')
                .appendField(new Blockly.FieldTextInput(""), "gesture2")
                .appendField(')');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip('If the gesture is this, then do this');
            this.setHelpUrl('');
        },
    };
    var gesture_dropdown = [
        ["'shake'", "'shake'"],
        ["'up'", "'up'"],
        ["'down'", "'down'"],
        ["'left'", "'left'"],
        ["'right'", "'right'"],
        ["'face up'", "'face up'"],
        ["'face down'", "'face down'"],
        ["'freefall'", "'freefall'"],
        ["'3g'", "'3g'"],
        ["'6g'", "'6g'"],
        ["'8g'", "'8g'"],
    ];
    Blocks['accgestures'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(gesture_dropdown), "gestures");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip("list of possible gestures");
            this.setHelpUrl("");
        }
    };
    Blocks["acccurrentgesture"] = {
        init: function () {
            this.appendDummyInput()
                .appendField("accelerometer.current_gesture()");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip("reads the current gesture");
        }
    };
    Blocks['accget'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("accelerometer.")
                .appendField(new Blockly.FieldDropdown([
                ["get_x()", "get_x()"],
                ["get_y()", "get_y()"],
                ["get_z()", "get_z()"]
            ]), "axis");
            this.setOutput(true, "Number");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E57E16", "#E57E16", "#b87533");
            this.setTooltip("reads the current movement on the selected axis");
        }
    };
}
exports.default = define;

},{}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['accisgesturenew'] = function (block) {
        var text_gesture1 = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '\'shake\'';
        var code = 'accelerometer.is_gesture(' + text_gesture1 + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['accisgesture'] = function (block) {
        var text_gesture1 = block.getFieldValue('gesture1');
        var code = 'accelerometer.is_gesture(' + text_gesture1 + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['accwasgesturenew'] = function (block) {
        var text_gesture2 = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '\'shake\'';
        var code = 'accelerometer.was_gesture(' + text_gesture2 + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['accwasgesture'] = function (block) {
        var text_gesture2 = block.getFieldValue('gesture2');
        var code = 'accelerometer.was_gesture(' + text_gesture2 + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['accgestures'] = function (block) {
        var text_gesture = block.getFieldValue('gestures');
        return [text_gesture, Blockly.Python.ORDER_ATOMIC];
    };
    Python['acccurrentgesture'] = function (block) {
        var code = 'accelerometer.current_gesture()';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['accget'] = function (block) {
        var text_axis = block.getFieldValue('axis');
        var code = 'accelerometer.' + text_axis;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var maincolour = "#ff0066";
    var bordercolour = "#b3235a";
    var inputcolour = "#ff0066";
    Blocks['import_microbit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from microbit import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the microbit library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_signal'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from signal import pause');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the signal library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_utime'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import utime');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the utime library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['pause_s'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pause()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Pause');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['random'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import random');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the random library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['while_true'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while True:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Forever loop.');
            this.setHelpUrl('https://t.co/PCZC5EFe4D');
        },
    };
    Blocks['pass'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pass');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Pass to the next command');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['if'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('If Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['class'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('class');
            this.appendValueInput("class")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Class Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['varprint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print(');
            this.appendValueInput('var')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Use this to print a variable, a number, or even a string if you put in the quotes yourself.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['ifcroc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField(new Blockly.FieldDropdown([['>', '>'], ['<', '<']]), 'crocsigns')
                .appendField(new Blockly.FieldTextInput('that'), 'that')
                .appendField(':');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('If statement with greater and less than');
            this.setHelpUrl('');
        },
    };
    Blocks['varminus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('-=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Variable with - and =');
            this.setHelpUrl('');
        },
    };
    Blocks['for'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('letter')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in range(');
            this.appendValueInput('no')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('Create a for loop');
        },
    };
    Blocks['advancedforloops'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('x')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in');
            this.appendValueInput('y')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(":");
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['ifequals'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField('==')
                .appendField(new Blockly.FieldTextInput('that'), 'that');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['importinputs'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import inputs');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['return2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('return');
            this.appendValueInput('return')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setInputsInline(true);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['elif'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Elif Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['else'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('else:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Else statement');
            this.setHelpUrl('');
        },
    };
    Blocks['df'] = {
        init: function () {
            this.appendValueInput("def")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput("params")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('call a define function');
            this.setHelpUrl('');
        },
    };
    Blocks['whileout'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while');
            this.appendValueInput("cond")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_math'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import math');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the math library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_audio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import audio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the audio library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['sleep'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sleep(');
            this.appendValueInput("sleep");
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Sleep');
            this.setHelpUrl('');
        },
    };
    Blocks['sleepnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("sleep(");
            this.appendValueInput("sleep")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Wait (in milliseconds)");
            this.setHelpUrl("");
        }
    };
    Blocks['sleepus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("utime.sleep_us(");
            this.appendValueInput("sleep")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Wait (in milliseconds)");
            this.setHelpUrl("");
        }
    };
    //deprecated
    Blocks['print'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput('print')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Use this to print to the output box.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['printnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Use this to print a string to the output box.');
            this.setHelpUrl('');
        },
    };
    Blocks['equalsblock'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['equalsblocknew'] = {
        init: function () {
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("text2")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Assign, increment or decrement a variable");
            this.setHelpUrl("");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setOutput(true, "Boolean");
        }
    };
    Blocks['define'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('def ');
            this.appendValueInput('1')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput('2')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['greater'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while')
                .appendField(new Blockly.FieldTextInput(''), '1')
                .appendField('>')
                .appendField(new Blockly.FieldTextInput(''), 'v')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['ifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if');
            this.appendValueInput("iftext")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('If block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['typeanything'] = {
        init: function () {
            this.appendValueInput("stuff")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("# your own code");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Type any python code into this block");
            this.setHelpUrl("");
        }
    };
    Blocks['elifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif');
            this.appendValueInput('iftext')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('ElIf block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['buttonapressed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('button_')
                .appendField(new Blockly.FieldDropdown([['a', 'a'], ['b', 'b']]), 'NAME')
                .appendField('.is_pressed()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Button A Pressed');
            this.setHelpUrl('');
        },
    };
    Blocks['internal'] = {
        init: function () {
            // should you translate to other languages
            // var rtlOperators = [
            //     // ['=', 'EQ'],
            //     // ['\u2260', 'NEQ'],
            //     ['\u200F<\u200F', 'LT'],
            //     ['\u200F\u2264\u200F', 'LTE'],
            //     ['\u200F>\u200F', 'GT'],
            //     ['\u200F\u2265\u200F', 'GTE']
            //   ];
            var ltrOperators = [
                ['==', '=='],
                ['!=', '!='],
                ['<', '<'],
                ['<=', '<='],
                ['>', '>'],
                ['>=', '>=']
            ];
            var OPERATORS = ltrOperators;
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(OPERATORS), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['textinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", bordercolour);
            this.setTooltip("Text input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['stringinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldString(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", bordercolour);
            this.setTooltip("String input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("0", "0", "1", "1", "1", "Value"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", bordercolour);
            this.setTooltip("Slider input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['varinlines'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("variable"), "var")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("value")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
    Blocks['boolstatus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([
                ["True", "True"],
                ["False", "False"]
            ]), "bool");
            this.setOutput(true, "Boolean");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['andor'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["and", "and"], ["or", "or"]]), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['not'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('not');
            this.appendValueInput("bool")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('negates a Boolean value');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['operators3'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["+", "+"], ["-", "-"], ["/", "/"], ["%", "%"], ["*", "*"]]), "operators");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['mbint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('int(');
            this.appendValueInput("bool")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Changes to an int');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['ticks'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('utime.ticks_us()');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Ticks US, Utime');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['break'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('break');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('breaks out of a loop');
            this.setHelpUrl('http://www.example.com/');
        },
    };
}
exports.default = define;

},{}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_microbit'] = function (block) {
        var code = 'from microbit import *\n';
        return code;
    };
    Python['import_signal'] = function (block) {
        var code = 'from signal import pause\n';
        return code;
    };
    Python['import_utime'] = function (block) {
        var code = 'import utime\n';
        return code;
    };
    Python['pause_s'] = function (block) {
        var code = 'pause()\n';
        return code;
    };
    Python['random'] = function (block) {
        var code = 'import random\n';
        return code;
    };
    Python['while_true'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'while True:\n' + branch;
    };
    Python['pass'] = function (block) {
        var code = 'pass \n';
        return code;
    };
    Python['if'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'if ' + text_const + ':\n' + branch;
    };
    Python['class'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'class', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'class ' + text_const + ':\n' + branch;
    };
    Python['varprint'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'var', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print(' + text_const + ')\n';
        return code;
    };
    Python['ifcroc'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var dropdown_crocsigns = block.getFieldValue('crocsigns');
        var text_that = block.getFieldValue('that');
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' ' + dropdown_crocsigns + ' ' + text_that + ':\n' + branch;
        return code;
    };
    Python['varminus'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_2 = block.getFieldValue('2');
        // TODO: Assemble Python into code variable.
        var code = text_1 + ' -= ' + text_2 + '\n';
        return code;
    };
    Python['for'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_letter = Blockly.Python.valueToCode(block, 'letter', Blockly.Python.ORDER_ATOMIC);
        var text_no = Blockly.Python.valueToCode(block, 'no', Blockly.Python.ORDER_ATOMIC);
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_letter + ' in range(' + text_no + '):\n' + branch;
        return code;
    };
    Python['advancedforloops'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_x = Blockly.Python.valueToCode(block, 'x', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'y', Blockly.Python.ORDER_ATOMIC);
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_x + ' in ' + text_y + ':\n' + branch;
        return code;
    };
    Python['ifequals'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var text_that = block.getFieldValue('that');
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' == ' + text_that + ':\n' + branch;
        return code;
    };
    Python['importinputs'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import inputs\n';
        return code;
    };
    Python['return2'] = function (block) {
        var text_return = Blockly.Python.valueToCode(block, 'return', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'return ' + text_return + '\n';
        return code;
    };
    Python['elif'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'elif ' + text_const + ':\n' + branch;
    };
    Python['else'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'else:\n' + branch;
    };
    Python['df'] = function (block) {
        var text_def = Blockly.Python.valueToCode(block, 'def', Blockly.Python.ORDER_ATOMIC);
        var text_params = Blockly.Python.valueToCode(block, 'params', Blockly.Python.ORDER_ATOMIC);
        var code = text_def + '(' + text_params + ')\n';
        return code;
    };
    Python['whileout'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, 'cond', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var code = 'while ' + text_1 + ':\n' + branch;
        return code;
    };
    Python['time'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import time\n';
        return code;
    };
    Python['import_math'] = function (block) {
        var code = 'import math\n';
        return code;
    };
    Python['import_audio'] = function (block) {
        var code = 'import audio\n';
        return code;
    };
    Python['sleep'] = function (block) {
        var text_sleeptime = block.getFieldValue('sleep');
        var code = 'sleep(' + text_sleeptime + ')\n';
        return code;
    };
    Python['print'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'print', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['sleepnew'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'sleep', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'sleep(' + value_name + ')\n';
        return code;
    };
    Python['sleepus'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'sleep', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'utime.sleep_us(' + value_name + ')\n';
        return code;
    };
    Python['printnew'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'Hello World';
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['equalsblocknew'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_text1 + ' = ' + value_text2 + '\n';
        return code;
    };
    Python['define'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, '1', Blockly.Python.ORDER_ATOMIC);
        var text_2 = Blockly.Python.valueToCode(block, '2', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // const statements_name = Blockly.Python.statementToCode(block, 'NAME');
        // TODO: Assemble Python into code variable.
        var code = 'def ' + text_1 + '(' + text_2 + '):\n' + branch;
        return code;
    };
    Python['greater'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_v = block.getFieldValue('v');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // TODO: Assemble Python into code variable.
        var code = 'while ' + text_1 + ' > ' + text_v + ':\n' + branch;
        return code;
    };
    Python['buttonapressed'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'button_' + dropdown_name + '.is_pressed()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['ifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        var code = 'if ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['typeanything'] = function (block) {
        var text_stuff = Blockly.Python.valueToCode(block, 'stuff', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = text_stuff + '# your own code\n';
        return code;
    };
    Python['elifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        // const statements_ifstate = Blockly.Python.statementToCode(block, 'ifstate');
        // TODO: Assemble Python into code variable.
        var code = 'elif ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['internal'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('choose');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['andor'] = Python['internal'];
    Python['not'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'not ' + value_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['operators3'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('operators');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['mbint'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'int(' + value_bool + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['ticks'] = function (block) {
        var code = 'utime.ticks_us()';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['break'] = function (block) {
        var code = 'break\n ';
        return code;
    };
    Python['textinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['stringinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = '"' + text_text + '"';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['sliderinline'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['varinlines'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('var'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'value', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
    Python['boolstatus'] = function (block) {
        var dropdown_bool = block.getFieldValue('bool');
        var code = dropdown_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_get'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_var;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_set'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_var + ' = ' + value_name + '\n';
        return code;
    };
}
exports.default = define;

},{}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['buttonispressed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('button_')
                .appendField(new Blockly.FieldDropdown([['a', 'a'], ['b', 'b']]), 'NAME')
                .appendField('.is_pressed()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#167EE5", "#167EE5", "#3775b3");
            this.setTooltip('Button Is Pressed');
            this.setHelpUrl('');
        },
    };
    Blocks['buttonwaspressed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('button_')
                .appendField(new Blockly.FieldDropdown([['a', 'a'], ['b', 'b']]), 'NAME')
                .appendField('.was_pressed()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#167EE5", "#167EE5", "#3775b3");
            this.setTooltip('Button Was Pressed');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['buttonispressed'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'button_' + dropdown_name + '.is_pressed()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['buttonwaspressed'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'button_' + dropdown_name + '.was_pressed()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['compasscalibrate'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('compass.calibrate()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#A016E5', '#A016E5', '#732c91');
            this.setTooltip('Calibrate the compass module');
            this.setHelpUrl('');
        },
    };
    Blocks['compasscalibrated'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('compass.is_calibrated()');
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour('#A016E5', '#A016E5', '#732c91');
            this.setTooltip('Is the compass calibrated?');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['compasscalibrate'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'compass.calibrate()\n';
        return code;
    };
    Python['compasscalibrated'] = function (block) {
        var code = 'compass.is_calibrated()';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['scrollnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.scroll("');
            this.appendValueInput("displaytext")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Scroll a Message');
            this.setHelpUrl('');
        },
    };
    //deprecated
    Blocks['scroll'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.scroll("')
                .appendField(new Blockly.FieldTextInput('Hello World'), 'message')
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Scroll a Message');
            this.setHelpUrl('');
        },
    };
    Blocks['scrollvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.scroll(')
                .appendField(new Blockly.FieldTextInput(''), 'message')
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Scroll a variable');
            this.setHelpUrl('');
        },
    };
    Blocks['scrollvarnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.scroll(');
            this.appendValueInput("displaytextvar")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Scroll a variable');
            this.setHelpUrl('');
        },
    };
    Blocks['imagenew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.show(');
            this.appendValueInput("imagevar")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Show an image');
            this.setHelpUrl('');
        },
    };
    Blocks['image'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.show(')
                .appendField(new Blockly.FieldTextInput(''), 'image')
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Display an image');
            this.setHelpUrl('');
        },
    };
    //deprecated
    Blocks['getpixel'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.get_pixel(')
                .appendField(new Blockly.FieldTextInput(''), 'xy')
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Gets a pixel value');
            this.setHelpUrl('');
        },
    };
    Blocks['getpixelnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.get_pixel(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Gets a pixel value');
            this.setHelpUrl('');
        },
    };
    //deprecated
    Blocks['setpixel'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.set_pixel(')
                .appendField(new Blockly.FieldTextInput(''), 'setpix')
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Set a pixel');
            this.setHelpUrl('');
        },
    };
    Blocks['setpixelnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.set_pixel(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Set a pixel');
            this.setHelpUrl('');
        },
    };
    Blocks['disclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('display.clear()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip('Clear the display');
            this.setHelpUrl('');
        },
    };
    Blocks['disonoff'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("display.")
                .appendField(new Blockly.FieldDropdown([["on", "on"], ["off", "off"]]), "NAME")
                .appendField("()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip("Turn the display on/off");
            this.setHelpUrl("");
        }
    };
    Blocks['imagecreate'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("image"), "image")
                .appendField(" = (\"")
                .appendField(new Blockly.FieldNumber(0, 9), "1")
                .appendField(new Blockly.FieldNumber(0, 9), "2")
                .appendField(new Blockly.FieldNumber(0, 9), "3")
                .appendField(new Blockly.FieldNumber(0, 9), "4")
                .appendField(new Blockly.FieldNumber(0, 9), "5")
                .appendField(":\"")
                .setAlign(Blockly.ALIGN_RIGHT);
            this.appendDummyInput()
                .appendField(new Blockly.FieldNumber(0, 9), "6")
                .appendField(new Blockly.FieldNumber(0, 9), "7")
                .appendField(new Blockly.FieldNumber(0, 9), "8")
                .appendField(new Blockly.FieldNumber(0, 9), "9")
                .appendField(new Blockly.FieldNumber(0, 9), "10")
                .appendField(":\"")
                .setAlign(Blockly.ALIGN_RIGHT);
            this.appendDummyInput()
                .appendField(new Blockly.FieldNumber(0, 9), "11")
                .appendField(new Blockly.FieldNumber(0, 9), "12")
                .appendField(new Blockly.FieldNumber(0, 9), "13")
                .appendField(new Blockly.FieldNumber(0, 9), "14")
                .appendField(new Blockly.FieldNumber(0, 9), "15")
                .appendField(":\"")
                .setAlign(Blockly.ALIGN_RIGHT);
            this.appendDummyInput()
                .appendField(new Blockly.FieldNumber(0, 9), "16")
                .appendField(new Blockly.FieldNumber(0, 9), "17")
                .appendField(new Blockly.FieldNumber(0, 9), "18")
                .appendField(new Blockly.FieldNumber(0, 9), "19")
                .appendField(new Blockly.FieldNumber(0, 9), "20")
                .appendField(":\"")
                .setAlign(Blockly.ALIGN_RIGHT);
            this.appendDummyInput()
                .appendField(new Blockly.FieldNumber(0, 9), "21")
                .appendField(new Blockly.FieldNumber(0, 9), "22")
                .appendField(new Blockly.FieldNumber(0, 9), "23")
                .appendField(new Blockly.FieldNumber(0, 9), "24")
                .appendField(new Blockly.FieldNumber(0, 9), "25")
                .appendField("\")")
                .setAlign(Blockly.ALIGN_RIGHT);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setInputsInline(false);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    var image_expressions = [
        ["Image.HEART", "Image.HEART"],
        ["Image.HEART_SMALL", "Image.HEART_SMALL"],
        ["Image.HAPPY", "Image.HAPPY"],
        ["Image.SMILE", "Image.SMILE"],
        ["Image.SAD", "Image.SAD"],
        ["Image.CONFUSED", "Image.CONFUSED"],
        ["Image.ANGRY", "Image.ANGRY"],
        ["Image.ASLEEP", "Image.ASLEEP"],
        ["Image.SURPRISED", "Image.SURPRISED"],
        ["Image.SILLY", "Image.SILLY"],
        ["Image.FABULOUS", "Image.FABULOUS"],
        ["Image.MEH", "Image.MEH"]
    ];
    var image_clocks = [
        ["Image.CLOCK1", "Image.CLOCK1"],
        ["Image.CLOCK2", "Image.CLOCK2"],
        ["Image.CLOCK3", "Image.CLOCK3"],
        ["Image.CLOCK4", "Image.CLOCK4"],
        ["Image.CLOCK5", "Image.CLOCK5"],
        ["Image.CLOCK6", "Image.CLOCK6"],
        ["Image.CLOCK7", "Image.CLOCK7"],
        ["Image.CLOCK8", "Image.CLOCK8"],
        ["Image.CLOCK9", "Image.CLOCK9"],
        ["Image.CLOCK10", "Image.CLOCK10"],
        ["Image.CLOCK11", "Image.CLOCK11"],
        ["Image.CLOCK12", "Image.CLOCK12"]
    ];
    var image_shapes = [
        ["Image.TRIANGLE", "Image.TRIANGLE"],
        ["Image.TRIANGLE_LEFT", "Image.TRIANGLE_LEFT"],
        ["Image.CHESSBOARD", "Image.CHESSBOARD"],
        ["Image.DIAMOND", "Image.DIAMOND"],
        ["Image.DIAMOND_SMALL", "Image.DIAMOND_SMALL"],
        ["Image.SQUARE", "Image.SQUARE"],
        ["Image.SQUARE_SMALL", "Image.SQUARE_SMALL"],
        ["Image.PITCHFORK", "Image.PITCHFORK"],
        ["Image.MUSIC_CROTCHET", "Image.MUSIC_CROTCHET"],
        ["Image.MUSIC_QUAVER", "Image.MUSIC_QUAVER"],
        ["Image.MUSIC_QUAVERS", "Image.MUSIC_QUAVERS"],
        ["Image.PITCHFORK", "Image.PITCHFORK"],
        ["Image.XMAS", "Image.XMAS"],
        ["Image.PACMAN", "Image.PACMAN"],
        ["Image.TARGET", "Image.TARGET"],
        ["Image.TSHIRT", "Image.TSHIRT"],
        ["Image.ROLLERSKATE", "Image.ROLLERSKATE"],
        ["Image.HOUSE", "Image.HOUSE"],
        ["Image.SWORD", "Image.SWORD"],
        ["Image.UMBRELLA", "Image.UMBRELLA"]
    ];
    var image_animals = [
        ["Image.RABBIT", "Image.RABBIT"],
        ["Image.COW", "Image.COW"],
        ["Image.DUCK", "Image.DUCK"],
        ["Image.TORTOISE", "Image.TORTOISE"],
        ["Image.BUTTERFLY", "Image.BUTTERFLY"],
        ["Image.STICKFIGURE", "Image.STICKFIGURE"],
        ["Image.GHOST", "Image.GHOST"],
        ["Image.GIRAFFE", "Image.GIRAFFE"],
        ["Image.SKULL", "Image.SKULL"],
        ["Image.SNAKE", "Image.SNAKE"]
    ];
    Blocks['expressions'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(image_expressions), "image");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setInputsInline(true);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip("Choose an expression");
            this.setHelpUrl("");
        }
    };
    Blocks['clocks'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(image_clocks), "image");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setInputsInline(true);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip("Choose a clock face");
            this.setHelpUrl("");
        }
    };
    Blocks['shapes'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(image_shapes), "image");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setInputsInline(true);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip("Choose a shape");
            this.setHelpUrl("");
        }
    };
    Blocks['animals'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(image_animals), "image");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setInputsInline(true);
            this.setColour("#C3E516", "#C3E516", "#a4b835");
            this.setTooltip("Choose an animal");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['scrollnew'] = function (block) {
        var text_message = Blockly.Python.valueToCode(block, 'displaytext', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var code = 'display.scroll("' + text_message + '") \n';
        return code;
    };
    //deprecated
    Python['scroll'] = function (block) {
        var text_message = Blockly.Python.valueToCode(block, 'displaytext', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var code = 'display.scroll("' + text_message + '") \n';
        return code;
    };
    Python['scrollvar'] = function (block) {
        var text_message = block.getFieldValue('message');
        var code = 'display.scroll(' + text_message + ') \n';
        return code;
    };
    Python['scrollvarnew'] = function (block) {
        var text_message = Blockly.Python.valueToCode(block, 'displaytextvar', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'display.scroll(' + text_message + ') \n';
        return code;
    };
    Python['image'] = function (block) {
        var text_image = block.getFieldValue('image');
        var code = 'display.show(' + text_image + ') \n';
        return code;
    };
    Python['imagenew'] = function (block) {
        var text_message = Blockly.Python.valueToCode(block, 'imagevar', Blockly.Python.ORDER_ATOMIC)
            || 'Image.HAPPY';
        var code = 'display.show(' + text_message + ') \n';
        return code;
    };
    Python['getpixel'] = function (block) {
        var text_xy = block.getFieldValue('xy');
        var code = 'display.get_pixel(' + text_xy + ') \n';
        return code;
    };
    Python['getpixelnew'] = function (block) {
        var text_xy = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'display.get_pixel(' + text_xy + ') \n';
        return code;
    };
    Python['setpixel'] = function (block) {
        var text_setpix = block.getFieldValue('setpix');
        var code = 'display.set_pixel(' + text_setpix + ') \n';
        return code;
    };
    Python['setpixelnew'] = function (block) {
        var text_setpix = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '0, 0, 5';
        var code = 'display.set_pixel(' + text_setpix + ') \n';
        return code;
    };
    Python['disclear'] = function (block) {
        var code = 'display.clear() \n';
        return code;
    };
    Python['disonoff'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'display.' + dropdown_name + '()\n';
        return code;
    };
    Python['imagecreate'] = function (block) {
        var text_image = Blockly.Python.variableDB_.getName(block.getFieldValue('image'), Blockly.Variables.NAME_TYPE);
        var number_1 = block.getFieldValue('1');
        var number_2 = block.getFieldValue('2');
        var number_3 = block.getFieldValue('3');
        var number_4 = block.getFieldValue('4');
        var number_5 = block.getFieldValue('5');
        var number_6 = block.getFieldValue('6');
        var number_7 = block.getFieldValue('7');
        var number_8 = block.getFieldValue('8');
        var number_9 = block.getFieldValue('9');
        var number_10 = block.getFieldValue('10');
        var number_11 = block.getFieldValue('11');
        var number_12 = block.getFieldValue('12');
        var number_13 = block.getFieldValue('13');
        var number_14 = block.getFieldValue('14');
        var number_15 = block.getFieldValue('15');
        var number_16 = block.getFieldValue('16');
        var number_17 = block.getFieldValue('17');
        var number_18 = block.getFieldValue('18');
        var number_19 = block.getFieldValue('19');
        var number_20 = block.getFieldValue('20');
        var number_16 = block.getFieldValue('16');
        var number_17 = block.getFieldValue('17');
        var number_18 = block.getFieldValue('18');
        var number_19 = block.getFieldValue('19');
        var number_20 = block.getFieldValue('20');
        var number_21 = block.getFieldValue('21');
        var number_22 = block.getFieldValue('22');
        var number_23 = block.getFieldValue('23');
        var number_24 = block.getFieldValue('24');
        var number_25 = block.getFieldValue('25');
        var code = text_image + ' = Image("' + number_1 + number_2 + number_3 + number_4 + number_5 + ':' + number_6 + number_7 + number_8 + number_9 + number_10 + ':' + number_11 + number_12 + number_13 + number_14 + number_15 + ':' + number_16 + number_17 + number_18 + number_19 + number_20 + ':' + number_21 + number_22 + number_23 + number_24 + number_25 + '")\n';
        return code;
    };
    Python['expressions'] = function (block) {
        var dropdown_expressions = block.getFieldValue('image');
        var code = dropdown_expressions;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['clocks'] = Python['expressions'];
    Python['shapes'] = Python['expressions'];
    Python['animals'] = Python['expressions'];
}
exports.default = define;

},{}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_gigglebot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from gigglebot import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Imports gigglebot library.");
            this.setHelpUrl("");
        }
    };
    Blocks['gigglebot_init'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("init()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Initializes the leds.");
            this.setHelpUrl("");
        }
    };
    Blocks['drive'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("drive (")
                .appendField(new Blockly.FieldDropdown([["FORWARD", "FORWARD"], ["BACKWARD", "BACKWARD"]]), "dir")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("The robot will drive until otherwise interrupted.");
            this.setHelpUrl("");
        }
    };
    Blocks['drive_x_milliseconds'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("drive (")
                .appendField(new Blockly.FieldDropdown([["FORWARD", "FORWARD"], ["BACKWARD", "BACKWARD"]]), "dir")
                .appendField(", milliseconds=");
            this.appendValueInput("milliseconds")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Setting the delay to -1 means the robot will drive until otherwise interrupted.");
            this.setHelpUrl("");
        }
    };
    Blocks['turn'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("turn (")
                .appendField(new Blockly.FieldDropdown([["LEFT", "LEFT"], ["RIGHT", "RIGHT"]]), "dir")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("The robot will turn until otherwise interrupted.");
            this.setHelpUrl("");
        }
    };
    Blocks['turn_x_milliseconds'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("turn (")
                .appendField(new Blockly.FieldDropdown([["LEFT", "LEFT"], ["RIGHT", "RIGHT"]]), "dir")
                .appendField(", milliseconds=");
            this.appendValueInput("milliseconds")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Setting the delay to -1 means the robot will turn until otherwise interrupted.");
            this.setHelpUrl("");
        }
    };
    Blocks['stop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("stop()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Stops the GiggleBot");
            this.setHelpUrl("");
        }
    };
    Blocks['set_speed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("set_speed( power_left=");
            this.appendValueInput("power_left")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", power_right=");
            this.appendValueInput("power_right")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Adjusts the speed of each motor");
            this.setHelpUrl("");
        }
    };
    Blocks['set_servo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("set_servo(")
                .appendField(new Blockly.FieldDropdown([["LEFT", "LEFT"], ["RIGHT", "RIGHT"], ["BOTH", "BOTH"]]), "which")
                .appendField(", degrees=");
            this.appendValueInput("degrees")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Controls one or both of the servos");
            this.setHelpUrl("");
        }
    };
    Blocks['servo_off'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("servo_off(")
                .appendField(new Blockly.FieldDropdown([["LEFT", "LEFT"], ["RIGHT", "RIGHT"], ["BOTH", "BOTH"]]), "which")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Removes power from one or both servos ");
            this.setHelpUrl("");
        }
    };
    Blocks['set_smile'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("set_smile( R=");
            this.appendValueInput("R")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", G=");
            this.appendValueInput("G")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", B=");
            this.appendValueInput("B")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Sets colour for the smile");
            this.setHelpUrl("");
        }
    };
    Blocks['set_eyes'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("set_eyes(")
                .appendField(new Blockly.FieldDropdown([["LEFT", "LEFT"], ["RIGHT", "RIGHT"], ["BOTH", "BOTH"]]), "which")
                .appendField(", R=");
            this.appendValueInput("R")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", G=");
            this.appendValueInput("G")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", B=");
            this.appendValueInput("B")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Sets colour for each eye");
            this.setHelpUrl("");
        }
    };
    Blocks['read_sensor'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("read_sensor(")
                .appendField(new Blockly.FieldDropdown([["GET_LINE_SENSORS", "GET_LINE_SENSORS"], ["GET_LIGHT_SENSORS", "GET_LIGHT_SENSORS"]]), "sensor")
                .appendField(new Blockly.FieldDropdown([["LEFT", "LEFT"], ["RIGHT", "RIGHT"], ["BOTH", "BOTH"]]), "which")
                .appendField(")");
            this.setOutput(true, "Number");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Get a reading from line sensors or light sensors ");
            this.setHelpUrl("");
        }
    };
    Blocks['volt'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("volt()");
            this.setOutput(true, "Number");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#46BFB1", "#46BFB1", "#528f87");
            this.setTooltip("Gets a level reading from the batteries");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_gigglebot'] = function (block) {
        var code = 'from gigglebot import *\n';
        return code;
    };
    Python['gigglebot_init'] = function (block) {
        var code = 'init()\n';
        return code;
    };
    Python['drive'] = function (block) {
        var dropdown_dir = block.getFieldValue('dir');
        var code = 'drive(' + dropdown_dir + ')\n';
        return code;
    };
    Python['drive_x_milliseconds'] = function (block) {
        var dropdown_dir = block.getFieldValue('dir');
        var value_milliseconds = Blockly.Python.valueToCode(block, 'milliseconds', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'drive(' + dropdown_dir + ', milliseconds=' + value_milliseconds + ')\n';
        return code;
    };
    Python['turn'] = function (block) {
        var dropdown_dir = block.getFieldValue('dir');
        var code = 'turn(' + dropdown_dir + ')\n';
        return code;
    };
    Python['turn_x_milliseconds'] = function (block) {
        var dropdown_dir = block.getFieldValue('dir');
        var number_milliseconds = Blockly.Python.valueToCode(block, 'milliseconds', Blockly.Python.ORDER_ATOMIC);
        var code = 'turn(' + dropdown_dir + ', milliseconds=' + number_milliseconds + ')\n';
        return code;
    };
    Python['stop'] = function (block) {
        var code = 'stop()\n';
        return code;
    };
    Python['set_speed'] = function (block) {
        var number_left = Blockly.Python.valueToCode(block, 'power_left', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var number_rigth = Blockly.Python.valueToCode(block, 'power_right', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'set_speed(' + number_left + ', ' + number_rigth + ')\n';
        return code;
    };
    Python['set_servo'] = function (block) {
        var dropdown_which = block.getFieldValue('which');
        var number_degrees = Blockly.Python.valueToCode(block, 'degrees', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'set_servo(' + dropdown_which + ', degrees=' + number_degrees + ')\n';
        return code;
    };
    Python['servo_off'] = function (block) {
        var dropdown_which = block.getFieldValue('which');
        var code = 'servo_off(' + dropdown_which + ')\n';
        return code;
    };
    Python['set_smile'] = function (block) {
        var number_R = Blockly.Python.valueToCode(block, 'R', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var number_G = Blockly.Python.valueToCode(block, 'G', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var number_B = Blockly.Python.valueToCode(block, 'B', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'set_smile(R=' + number_R + ', G=' + number_G + ', B=' + number_B + ')\n';
        return code;
    };
    Python['set_eyes'] = function (block) {
        var dropdown_which = block.getFieldValue('which');
        var number_R = Blockly.Python.valueToCode(block, 'R', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var number_G = Blockly.Python.valueToCode(block, 'G', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var number_B = Blockly.Python.valueToCode(block, 'B', Blockly.Python.ORDER_ATOMIC)
            || '0';
        var code = 'set_eyes(' + dropdown_which + ', R=' + number_R + ', G=' + number_G + ', B=' + number_B + ')\n';
        return code;
    };
    Python['read_sensor'] = function (block) {
        var dropdown_sensor = block.getFieldValue('sensor');
        var dropdown_which = block.getFieldValue('which');
        var code = 'read_sensor(' + dropdown_sensor + ', ' + dropdown_which + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['volt'] = function (block) {
        var code = 'volt()';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['musicimport'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import music');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip('Import Music');
            this.setHelpUrl('');
        },
    };
    var musiclist = [
        ['music.DADADADUM', 'music.DADADADUM'],
        ['music.ENTERTAINER', 'music.ENTERTAINER'],
        ['music.PRELUDE', 'music.PRELUDE'],
        ['music.ODE', 'music.ODE'],
        ['music.NYAN', 'music.NYAN'],
        ['music.RINGTONE', 'music.RINGTONE'],
        ['music.FUNK', 'music.FUNK'],
        ['music.BLUES', 'music.BLUES'],
        ['music.BIRTHDAY', 'music.BIRTHDAY'],
        ['music.WEDDING', 'music.WEDDING'],
        ['music.FUNERAL', 'music.FUNERAL'],
        ['music.PUNCHLINE', 'music.PUNCHLINE'],
        ['music.PYTHON', 'music.PYTHON'],
        ['music.BADDY', 'music.BADDY'],
        ['music.CHASE', 'music.CHASE'],
        ['music.BA_DING', 'music.BA_DING'],
        ['music.WAWAWAWAA', 'music.WAWAWAWAA'],
        ['music.JUMP_UP', 'music.JUMP_UP'],
        ['music.JUMP_DOWN', 'music.JUMP_DOWN'],
        ['music.POWER_UP', 'music.POWER_UP'],
        ['music.POWER_DOWN', 'music.POWER_DOWN']
    ];
    Blocks['songs'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(musiclist), "songs");
            this.setOutput(true, "String");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setInputsInline(true);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip("Choose a song");
            this.setHelpUrl("");
        }
    };
    Blocks['musicplay'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('music.play(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip('Play Music');
            this.setHelpUrl('');
        },
    };
    Blocks['musicpitch'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('music.pitch(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip('Change music pitch');
            this.setHelpUrl('');
        },
    };
    Blocks['musicreset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("music.reset()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip("Reset Music");
            this.setHelpUrl("");
        }
    };
    Blocks['musicstop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("music.stop()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip("Stop Music");
            this.setHelpUrl("");
        }
    };
    Blocks['musictempo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('music.set_tempo(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip('Change music tempo');
            this.setHelpUrl('');
        },
    };
    Blocks['musicgettempo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('music.get_tempo()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E5BC16", "#E5BC16", "#a1882d");
            this.setTooltip('Get tempo');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['musicplay'] = function (block) {
        var text_musicplay = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        var code = 'music.play(' + text_musicplay + ') \n';
        return code;
    };
    Python['songs'] = function (block) {
        var dropdown_songs = block.getFieldValue('songs');
        var code = dropdown_songs;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['musicimport'] = function (block) {
        var code = 'import music\n';
        return code;
    };
    Python['musicpitch'] = function (block) {
        var text_musicpitch = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        var code = 'music.pitch(' + text_musicpitch + ') \n';
        return code;
    };
    Python['musicreset'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'music.reset()\n';
        return code;
    };
    Python['musicstop'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'music.stop()\n';
        return code;
    };
    Python['musictempo'] = function (block) {
        var text_musictempo = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || '';
        var code = 'music.set_tempo(' + text_musictempo + ') \n';
        return code;
    };
    Python['musicgettempo'] = function (block) {
        var code = 'music.get_tempo()';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['setneonew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(" = neopixel.NeoPixel(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Configure Neopixels");
            this.setHelpUrl("");
        }
    };
    Blocks['neovarnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField("[");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("] = (");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Set Neopixel Colour");
            this.setHelpUrl("");
        }
    };
    Blocks['setneo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(" = neopixel.NeoPixel(")
                .appendField(new Blockly.FieldTextInput(""), "inputneo")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Configure Neopixels");
            this.setHelpUrl("");
        }
    };
    Blocks['neovar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField("[")
                .appendField(new Blockly.FieldTextInput(""), "neonum")
                .appendField("] = (")
                .appendField(new Blockly.FieldTextInput(""), "colour")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Set Neopixel Colour");
            this.setHelpUrl("");
        }
    };
    Blocks['importneo'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("import neopixel");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Import Neopixel Library");
            this.setHelpUrl("");
        }
    };
    Blocks['neoshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(".show()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Show the set neopixel config");
            this.setHelpUrl("");
        }
    };
    Blocks['neoclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("np"), "NAME")
                .appendField(".clear()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E", "#16E57E", "#33a86b");
            this.setTooltip("Clear the set neopixel config");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['setneonew'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_inputneo = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var code = variable_name + ' = neopixel.NeoPixel(' + text_inputneo + ')\n';
        return code;
    };
    Python['setneo'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_inputneo = block.getFieldValue('inputneo');
        var code = variable_name + ' = neopixel.NeoPixel(' + text_inputneo + ')\n';
        return code;
    };
    Python['importneo'] = function (block) {
        var code = 'import neopixel\n';
        return code;
    };
    Python['neovar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_neonum = block.getFieldValue('neonum');
        var text_colour = block.getFieldValue('colour');
        // TODO: Assemble Python into code variable.
        var code = variable_name + '[' + text_neonum + '] = (' + text_colour + ')\n';
        return code;
    };
    Python['neovarnew'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        var text_neonum = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var text_colour = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = variable_name + '[' + text_neonum + '] = (' + text_colour + ')\n';
        return code;
    };
    Python['neoshow'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.show()\n';
        return code;
    };
    Python['neoclear'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('NAME'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.clear()\n';
        return code;
    };
}
exports.default = define;

},{}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['pintouchednew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".is_touched()");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("If this pin is touched");
            this.setHelpUrl("");
        }
    };
    Blocks['analogreadnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".read_analog()");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Read Analog");
            this.setHelpUrl("");
        }
    };
    Blocks['digitalreadnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".read_digital()");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Read Digital");
            this.setHelpUrl("");
        }
    };
    Blocks['writeanalognew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".write_analog(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Write Analog");
            this.setHelpUrl("");
        }
    };
    Blocks['writedigitalnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".write_digital(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Write Digital");
            this.setHelpUrl("");
        }
    };
    Blocks['pin_pull'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(".set_pull(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Set Pin Pull Value");
            this.setHelpUrl("");
        }
    };
    Blocks['pintouched'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin")
                .appendField(new Blockly.FieldTextInput("0"), "pinno")
                .appendField(".is_touched()");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("If this pin is touched");
            this.setHelpUrl("");
        }
    };
    Blocks['analogread'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin")
                .appendField(new Blockly.FieldTextInput("0"), "pinno")
                .appendField(".read_analog()");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Read Analog");
            this.setHelpUrl("");
        }
    };
    Blocks['digitalread'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin")
                .appendField(new Blockly.FieldTextInput("0"), "pinno")
                .appendField(".read_digital()");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Read Digital");
            this.setHelpUrl("");
        }
    };
    Blocks['writeanalog'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin")
                .appendField(new Blockly.FieldTextInput("0"), "pinno")
                .appendField(".write_analog(")
                .appendField(new Blockly.FieldTextInput(""), "analog")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Write Analog");
            this.setHelpUrl("");
        }
    };
    Blocks['writedigital'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("pin")
                .appendField(new Blockly.FieldTextInput("0"), "pinno")
                .appendField(".write_digital(")
                .appendField(new Blockly.FieldTextInput(""), "digital")
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616", "#E51616", "#a82f2f");
            this.setTooltip("Write Digital");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['pintouchednew'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.is_touched()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['analogreadnew'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.read_analog()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['digitalreadnew'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.read_digital()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['writeanalognew'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var text_analog = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.write_analog(' + text_analog + ')\n';
        return code;
    };
    Python['writedigitalnew'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var text_digital = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.write_digital(' + text_digital + ')\n';
        return code;
    };
    Python['pin_pull'] = function (block) {
        var text_pinno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var text_digital = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.set_pull(' + text_digital + ')\n';
        return code;
    };
    Python['pintouched'] = function (block) {
        var text_pinno = block.getFieldValue('pinno');
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.is_touched()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['analogread'] = function (block) {
        var text_pinno = block.getFieldValue('pinno');
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.read_analog()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['digitalread'] = function (block) {
        var text_pinno = block.getFieldValue('pinno');
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.read_digital()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['writeanalog'] = function (block) {
        var text_pinno = block.getFieldValue('pinno');
        var text_analog = block.getFieldValue('analog');
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.write_analog(' + text_analog + ')\n';
        return code;
    };
    Python['writedigital'] = function (block) {
        var text_pinno = block.getFieldValue('pinno');
        var text_digital = block.getFieldValue('digital');
        // TODO: Assemble Python into code variable.
        var code = 'pin' + text_pinno + '.write_digital(' + text_digital + ')\n';
        return code;
    };
}
exports.default = define;

},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['radiosend'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('radio.send(')
                .appendField(new Blockly.FieldTextInput('"hello"'), 'send')
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Send a radio command');
            this.setHelpUrl('');
        },
    };
    Blocks['radiosendnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('radio.send(');
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Send a radio command');
            this.setHelpUrl('');
        },
    };
    Blocks['radioconf'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('radio.config(')
                .appendField(new Blockly.FieldTextInput(''), 'conf')
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Configure Radio');
            this.setHelpUrl('');
        },
    };
    Blocks['radioconfnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('radio.config(');
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Configure Radio');
            this.setHelpUrl('');
        },
    };
    Blocks['imradio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import radio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Import Radio');
            this.setHelpUrl('');
        },
    };
    Blocks['radioon'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('radio.on()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Turn Radio On');
            this.setHelpUrl('');
        },
    };
    Blocks['ifradio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if ')
                .appendField(new Blockly.FieldVariable('incoming'), 'incoming')
                .appendField(' == ')
                .appendField(new Blockly.FieldTextInput(''), 'sentitem')
                .appendField(':');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Check if there is an incoming radio command.');
            this.setHelpUrl('');
        },
    };
    Blocks['incoming'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('incoming'), 'incoming')
                .appendField(' = radio.receive()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#7EE516', '#7EE516', '#72ad33');
            this.setTooltip('Initialize receiver');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['radiosend'] = function (block) {
        var text_send = block.getFieldValue('send');
        var code = 'radio.send(' + text_send + ') \n';
        return code;
    };
    Python['radiosendnew'] = function (block) {
        var text_send = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var code = 'radio.send(' + text_send + ') \n';
        return code;
    };
    Python['radioconf'] = function (block) {
        var text_conf = block.getFieldValue('conf');
        var code = 'radio.config(' + text_conf + ') \n';
        return code;
    };
    Python['radioconfnew'] = function (block) {
        var text_conf = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        var code = 'radio.config(' + text_conf + ') \n';
        return code;
    };
    Python['imradio'] = function (block) {
        var code = 'import radio \n';
        return code;
    };
    Python['radioon'] = function (block) {
        var code = 'radio.on()\n';
        return code;
    };
    Python['ifradio'] = function (block) {
        var variable_incoming = Blockly.Python.variableDB_.getName(block.getFieldValue('incoming'), Blockly.Variables.NAME_TYPE);
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        var text_sentitem = block.getFieldValue('sentitem');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // TODO: Assemble Python into code variable.
        return 'if ' + variable_incoming + ' == ' + text_sentitem + ':\n' + branch;
    };
    Python['incoming'] = function (block) {
        var variable_incoming = Blockly.Python.variableDB_.getName(block.getFieldValue('incoming'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_incoming + ' = radio.receive()\n';
        return code;
    };
}
exports.default = define;

},{}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['scrollbit_import'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from scrollbit import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Imports the scroll:bit library');
            this.setHelpUrl('https://github.com/pimoroni/micropython-scrollbit');
        },
    };
    Blocks['scrollbit_scroll'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("scroll(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip("Scroll text on scroll:bit");
            this.setHelpUrl("https://github.com/pimoroni/micropython-scrollbit");
        }
    };
    Blocks['scrollbit_write'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("write(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip("Write text on scroll:bit");
            this.setHelpUrl("https://github.com/pimoroni/micropython-scrollbit");
        }
    };
    Blocks['scrollbit_draw'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("draw_icon(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip("Draw an Icon");
            this.setHelpUrl("https://github.com/pimoroni/micropython-scrollbit");
        }
    };
    Blocks['scrollbit_pixel'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("set_pixel(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", ");
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip("Set a pixel");
            this.setHelpUrl("https://github.com/pimoroni/micropython-scrollbit");
        }
    };
    Blocks['scrollbit_show'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("show()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip("Show text on scroll:bit");
            this.setHelpUrl("https://github.com/pimoroni/micropython-scrollbit");
        }
    };
    Blocks['scrollbit_clear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("clear()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip("Clear text on scroll:bit");
            this.setHelpUrl("https://github.com/pimoroni/micropython-scrollbit");
        }
    };
}
exports.default = define;

},{}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['scrollbit_import'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from scrollbit import *\n';
        return code;
    };
    Python['scrollbit_scroll'] = function (block) {
        var text_input = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'scroll(' + text_input + ')\n';
        return code;
    };
    Python['scrollbit_write'] = function (block) {
        var text_input = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'write(' + text_input + ')\n';
        return code;
    };
    Python['scrollbit_draw'] = function (block) {
        var text_col = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_row = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_icon = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'draw_icon(' + text_col + ', ' + text_row + ', ' + text_icon + ')\n';
        return code;
    };
    Python['scrollbit_pixel'] = function (block) {
        var text_col = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_row = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_bright = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'set_pixel(' + text_col + ', ' + text_row + ', ' + text_bright + ')\n';
        return code;
    };
    Python['scrollbit_show'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'show()\n';
        return code;
    };
    Python['scrollbit_clear'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'clear()\n';
        return code;
    };
}
exports.default = define;

},{}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['imspeech'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import speech');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Imports the speech library');
            this.setHelpUrl('');
        },
    };
    Blocks['speechsay'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('speech.say("')
                .appendField(new Blockly.FieldTextInput(''), 'words')
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Say something');
            this.setHelpUrl('');
        },
    };
    Blocks['speechsaynew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('speech.say("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Say something');
            this.setHelpUrl('');
        },
    };
    Blocks['speechpro'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('speech.pronounce("')
                .appendField(new Blockly.FieldTextInput(''), 'pro')
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Pronounce something');
            this.setHelpUrl('');
        },
    };
    Blocks['speechpronew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('speech.pronounce("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Pronounce something');
            this.setHelpUrl('');
        },
    };
    Blocks['speechsing'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('speech.sing("')
                .appendField(new Blockly.FieldTextInput(''), 'sing')
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Sing something');
            this.setHelpUrl('');
        },
    };
    Blocks['speechsingnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('speech.sing(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E5E5", "#16E5E5", "#33a8a6");
            this.setTooltip('Sing something');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['imspeech'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import speech\n';
        return code;
    };
    Python['speechsay'] = function (block) {
        var text_words = block.getFieldValue('words');
        // TODO: Assemble Python into code variable.
        var code = 'speech.say("' + text_words + '")\n';
        return code;
    };
    Python['speechsaynew'] = function (block) {
        var text_words = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'speech.say("' + text_words + '")\n';
        return code;
    };
    Python['speechpro'] = function (block) {
        var text_pro = block.getFieldValue('pro');
        // TODO: Assemble Python into code variable.
        var code = 'speech.pronounce("' + text_pro + '")\n';
        return code;
    };
    Python['speechpronew'] = function (block) {
        var text_pro = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'speech.pronounce("' + text_pro + '")\n';
        return code;
    };
    Python['speechsing'] = function (block) {
        var text_sing = block.getFieldValue('sing');
        // TODO: Assemble Python into code variable.
        var code = 'speech.sing("' + text_sing + '")\n';
        return code;
    };
    Python['speechsing'] = function (block) {
        var text_sing = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'True';
        // TODO: Assemble Python into code variable.
        var code = 'speech.sing("' + text_sing + '")\n';
        return code;
    };
}
exports.default = define;

},{}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['variables_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("var"), "VAR");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#0000CD");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['variables_set'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable(""), "VAR")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("varset")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0000CD");
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['variables_get'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_var;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_set'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
}
exports.default = define;

},{}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var maincolour = "#ff0066";
    var bordercolour = "#b3235a";
    var inputcolour = "#ff0066";
    Blocks['import_time'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import time');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the time library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_signal'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from signal import pause');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the signal library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['pause_s'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pause()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Pause');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['random'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import random');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the random library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['while_true'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while True:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Forever loop.');
            this.setHelpUrl('https://t.co/PCZC5EFe4D');
        },
    };
    Blocks['pass'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pass');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Pass to the next command');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['if'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('If Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['class'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('class');
            this.appendValueInput("class")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Class Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['varprint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print(');
            this.appendValueInput('var')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Use this to print a variable, a number, or even a string if you put in the quotes yourself.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['ifcroc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField(new Blockly.FieldDropdown([['>', '>'], ['<', '<']]), 'crocsigns')
                .appendField(new Blockly.FieldTextInput('that'), 'that')
                .appendField(':');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('If statement with greater and less than');
            this.setHelpUrl('');
        },
    };
    Blocks['varminus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('-=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Variable with - and =');
            this.setHelpUrl('');
        },
    };
    Blocks['for'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('letter')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in range(');
            this.appendValueInput('no')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('Create a for loop');
        },
    };
    Blocks['advancedforloops'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('x')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in');
            this.appendValueInput('y')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(":");
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['ifequals'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField('==')
                .appendField(new Blockly.FieldTextInput('that'), 'that');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['importinputs'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import inputs');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['return2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('return');
            this.appendValueInput('return')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setInputsInline(true);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['elif'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Elif Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['else'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('else:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Else statement');
            this.setHelpUrl('');
        },
    };
    Blocks['df'] = {
        init: function () {
            this.appendValueInput("def")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput("params")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('call a define function');
            this.setHelpUrl('');
        },
    };
    Blocks['whileout'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while');
            this.appendValueInput("cond")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_math'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import math');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the math library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_audio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import audio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Imports the audio library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['sleep'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sleep(');
            this.appendValueInput("sleep");
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Sleep');
            this.setHelpUrl('');
        },
    };
    Blocks['sleepnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("time.sleep(");
            this.appendValueInput("sleep")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Wait (in milliseconds)");
            this.setHelpUrl("");
        }
    };
    //deprecated
    Blocks['print'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput('print')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Use this to print to the output box.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['printnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Use this to print a string to the output box.');
            this.setHelpUrl('');
        },
    };
    Blocks['equalsblock'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['equalsblocknew'] = {
        init: function () {
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("text2")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Assign, increment or decrement a variable");
            this.setHelpUrl("");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setOutput(true, "Boolean");
        }
    };
    Blocks['define'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('def ');
            this.appendValueInput('1')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput('2')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['greater'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while')
                .appendField(new Blockly.FieldTextInput(''), '1')
                .appendField('>')
                .appendField(new Blockly.FieldTextInput(''), 'v')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['ifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if');
            this.appendValueInput("iftext")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('If block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['typeanything'] = {
        init: function () {
            this.appendValueInput("stuff")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("# your own code");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("Type any python code into this block");
            this.setHelpUrl("");
        }
    };
    Blocks['elifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif');
            this.appendValueInput('iftext')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('ElIf block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['buttonapressed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('button_')
                .appendField(new Blockly.FieldDropdown([['a', 'a'], ['b', 'b']]), 'NAME')
                .appendField('.is_pressed()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('Button A Pressed');
            this.setHelpUrl('');
        },
    };
    Blocks['internal'] = {
        init: function () {
            // should you translate to other languages
            // var rtlOperators = [
            //     // ['=', 'EQ'],
            //     // ['\u2260', 'NEQ'],
            //     ['\u200F<\u200F', 'LT'],
            //     ['\u200F\u2264\u200F', 'LTE'],
            //     ['\u200F>\u200F', 'GT'],
            //     ['\u200F\u2265\u200F', 'GTE']
            //   ];
            var ltrOperators = [
                ['==', '=='],
                ['!=', '!='],
                ['<', '<'],
                ['<=', '<='],
                ['>', '>'],
                ['>=', '>=']
            ];
            var OPERATORS = ltrOperators;
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(OPERATORS), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['textinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", bordercolour);
            this.setTooltip("Text input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['stringinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldString(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", bordercolour);
            this.setTooltip("String input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("0", "0", "1", "1", "1", "Value"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", bordercolour);
            this.setTooltip("Slider input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['varinlines'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("variable"), "var")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("value")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
    Blocks['boolstatus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([
                ["True", "True"],
                ["False", "False"]
            ]), "bool");
            this.setOutput(true, "Boolean");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['andor'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["and", "and"], ["or", "or"]]), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['not'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('not');
            this.appendValueInput("bool")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('negates a Boolean value');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['break'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('break');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip('breaks out of a loop');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['variables_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("var"), "VAR");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#ff0066", "#ff0066", "#b3235a");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['variables_set'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable(""), "VAR")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("varset")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(maincolour, inputcolour, bordercolour);
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_time'] = function (block) {
        var code = 'import time\n';
        return code;
    };
    Python['import_signal'] = function (block) {
        var code = 'from signal import pause\n';
        return code;
    };
    Python['pause_s'] = function (block) {
        var code = 'pause()\n';
        return code;
    };
    Python['random'] = function (block) {
        var code = 'import random\n';
        return code;
    };
    Python['while_true'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'while True:\n' + branch;
    };
    Python['pass'] = function (block) {
        var code = 'pass \n';
        return code;
    };
    Python['if'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'if ' + text_const + ':\n' + branch;
    };
    Python['class'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'class', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'class ' + text_const + ':\n' + branch;
    };
    Python['varprint'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'var', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print(' + text_const + ')\n';
        return code;
    };
    Python['ifcroc'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var dropdown_crocsigns = block.getFieldValue('crocsigns');
        var text_that = block.getFieldValue('that');
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' ' + dropdown_crocsigns + ' ' + text_that + ':\n' + branch;
        return code;
    };
    Python['varminus'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_2 = block.getFieldValue('2');
        // TODO: Assemble Python into code variable.
        var code = text_1 + ' -= ' + text_2 + '\n';
        return code;
    };
    Python['for'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_letter = Blockly.Python.valueToCode(block, 'letter', Blockly.Python.ORDER_ATOMIC);
        var text_no = Blockly.Python.valueToCode(block, 'no', Blockly.Python.ORDER_ATOMIC);
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_letter + ' in range(' + text_no + '):\n' + branch;
        return code;
    };
    Python['advancedforloops'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_x = Blockly.Python.valueToCode(block, 'x', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'y', Blockly.Python.ORDER_ATOMIC);
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_x + ' in ' + text_y + ':\n' + branch;
        return code;
    };
    Python['ifequals'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var text_that = block.getFieldValue('that');
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' == ' + text_that + ':\n' + branch;
        return code;
    };
    Python['importinputs'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import inputs\n';
        return code;
    };
    Python['return2'] = function (block) {
        var text_return = Blockly.Python.valueToCode(block, 'return', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'return ' + text_return + '\n';
        return code;
    };
    Python['elif'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'elif ' + text_const + ':\n' + branch;
    };
    Python['else'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'else:\n' + branch;
    };
    Python['df'] = function (block) {
        var text_def = Blockly.Python.valueToCode(block, 'def', Blockly.Python.ORDER_ATOMIC);
        var text_params = Blockly.Python.valueToCode(block, 'params', Blockly.Python.ORDER_ATOMIC);
        var code = text_def + '(' + text_params + ')\n';
        return code;
    };
    Python['whileout'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, 'cond', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var code = 'while ' + text_1 + ':\n' + branch;
        return code;
    };
    Python['time'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import time\n';
        return code;
    };
    Python['import_math'] = function (block) {
        var code = 'import math\n';
        return code;
    };
    Python['import_audio'] = function (block) {
        var code = 'import audio\n';
        return code;
    };
    Python['sleep'] = function (block) {
        var text_sleeptime = block.getFieldValue('sleep');
        var code = 'sleep(' + text_sleeptime + ')\n';
        return code;
    };
    Python['print'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'print', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['sleepnew'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'sleep', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'time.sleep(' + value_name + ')\n';
        return code;
    };
    Python['printnew'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'Hello World';
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['equalsblocknew'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_text1 + ' = ' + value_text2 + '\n';
        return code;
    };
    Python['define'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, '1', Blockly.Python.ORDER_ATOMIC);
        var text_2 = Blockly.Python.valueToCode(block, '2', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // const statements_name = Blockly.Python.statementToCode(block, 'NAME');
        // TODO: Assemble Python into code variable.
        var code = 'def ' + text_1 + '(' + text_2 + '):\n' + branch;
        return code;
    };
    Python['greater'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_v = block.getFieldValue('v');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // TODO: Assemble Python into code variable.
        var code = 'while ' + text_1 + ' > ' + text_v + ':\n' + branch;
        return code;
    };
    Python['buttonapressed'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'button_' + dropdown_name + '.is_pressed()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['ifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        var code = 'if ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['typeanything'] = function (block) {
        var text_stuff = Blockly.Python.valueToCode(block, 'stuff', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = text_stuff + '# your own code\n';
        return code;
    };
    Python['elifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        // const statements_ifstate = Blockly.Python.statementToCode(block, 'ifstate');
        // TODO: Assemble Python into code variable.
        var code = 'elif ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['internal'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('choose');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['andor'] = Python['internal'];
    Python['not'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'not ' + value_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['break'] = function (block) {
        var code = 'break\n ';
        return code;
    };
    Python['textinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['stringinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = '"' + text_text + '"';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['sliderinline'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['varinlines'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('var'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'value', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
    Python['boolstatus'] = function (block) {
        var dropdown_bool = block.getFieldValue('bool');
        var code = dropdown_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_get'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_var;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_set'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_var + ' = ' + value_name + '\n';
        return code;
    };
}
exports.default = define;

},{}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['importmb'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("import microbit");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C227E2");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['displayscrolltext'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("microbit.display.scroll(\"");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("\")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C227E2");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['displayscrollvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("microbit.display.scroll(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C227E2");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['microsleep'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("microbit.sleep(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C227E2");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['displayshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("microbit.display.show(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C227E2");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['displayclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("microbit.display.clear()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C227E2");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['importmb'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import microbit\n';
        return code;
    };
    Python['displayscrolltext'] = function (block) {
        var text_message = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'microbit.display.scroll("' + text_message + '")\n';
        return code;
    };
    Python['displayscrollvar'] = function (block) {
        var text_varmess = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'microbit.display.scroll(' + text_varmess + ')\n';
        return code;
    };
    Python['microsleep'] = function (block) {
        var text_time = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'microbit.sleep(' + text_time + ')\n';
        return code;
    };
    Python['displayshow'] = function (block) {
        var text_show = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'microbit.display.show(' + text_show + ')\n';
        return code;
    };
    Python['displayclear'] = function (block) {
        // var text_show = block.getFieldValue('show');
        // TODO: Assemble Python into code variable.
        var code = 'microbit.display.clear()\n';
        return code;
    };
}
exports.default = define;

},{}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['importgpiozero'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from gpiozero import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E4E436");
            this.setTooltip('Import the gpiozero library');
            this.setHelpUrl('http://gpiozero.readthedocs.io');
        },
    };
    Blocks['importtime'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from datetime import time');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E4E436");
            this.setTooltip('Import the datetime library');
            this.setHelpUrl('http://gpiozero.readthedocs.io');
        },
    };
    Blocks['buttonset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('button'), 'button')
                .appendField(' = Button(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a button');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#button');
        },
    };
    Blocks['lineset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("sensor"), "sensor")
                .appendField(" = LineSensor(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip("Setup a line sensor");
            this.setHelpUrl("https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000");
        }
    };
    Blocks['motionset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('pir'), 'pir')
                .appendField(' = MotionSensor(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a MotionSensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#motion-sensor-d-sun-pir');
        },
    };
    Blocks['lightset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('ldr'), 'ldr')
                .appendField(' = LightSensor(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a Light Sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#light-sensor-ldr');
        },
    };
    Blocks['distanceset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('distance'), 'distance')
                .appendField(' = DistanceSensor(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a Distance Sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#distance-sensor-hc-sr04');
        },
    };
    Blocks['ledset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('led'), 'led')
                .appendField(' = LED(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#led');
        },
    };
    Blocks['pledset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('pwm'), 'pwm')
                .appendField(' = PWMLED(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an PWMLED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#pwmled');
        },
    };
    Blocks['rgbledset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('rgb'), 'rgb')
                .appendField(' = RGBLED(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an RGB LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#rgbled');
        },
    };
    Blocks['buzzerset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('buzzer'), 'buzzer')
                .appendField(' = Buzzer(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an Buzzer');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#buzzer');
        },
    };
    Blocks['motorset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('motor'), 'motor')
                .appendField(' = Motor(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for a Motor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#motor');
        },
    };
    Blocks['servoset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('servo'), 'servo')
                .appendField(' = Servo(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for a Servo');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#servo');
        },
    };
    Blocks['angset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('angular'), 'angular')
                .appendField(' = AngularServo(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an Angular Servo');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#angularservo');
        },
    };
    Blocks['ledbset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('leds'), 'leds')
                .appendField(' = LEDBoard(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an LED Board');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#ledboard');
        },
    };
    Blocks['graphset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('graph'), 'leds')
                .appendField(' = LEDBarGraph(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an LED Bar Graph');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#ledbargraph');
        },
    };
    Blocks['buttonbset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('buttonb'), 'buttonb')
                .appendField(' = ButtonBoard(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for a Button Board');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#buttonboard');
        },
    };
    Blocks['buttonaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('button'), 'button')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['wait_for_press', 'wait_for_press'], ['wait_for_release', 'wait_for_release']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a button');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#button');
        },
    };
    Blocks['lineaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('sensor'), 'sensor')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['wait_for_line', 'wait_for_line'], ['wait_for_no_line', 'wait_for_no_line']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a Line Sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000');
        },
    };
    Blocks['motionaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('pir'), 'pir')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['wait_for_motion', 'wait_for_motion'], ['wait_for_no_motion', 'wait_for_no_motion']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a motion sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000');
        },
    };
    Blocks['lightaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('ldr'), 'ldr')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['wait_for_dark', 'wait_for_dark'], ['wait_for_light', 'wait_for_light']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a light sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#light-sensor-ldr');
        },
    };
    Blocks['distanceaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('distance'), 'distance')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['wait_for_in_range', 'wait_for_in_range'], ['wait_for_out_of_range', 'wait_for_out_of_range']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set a variable for a distance sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#light-sensor-ldr');
        },
    };
    Blocks['ledaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('led'), 'led')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['blink', 'blink'], ['toggle', 'toggle']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#led');
        },
    };
    Blocks['pledaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('pwm'), 'pwm')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['blink', 'blink'], ['toggle', 'toggle'], ['pulse', 'pulse']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an PWM LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#pwmled');
        },
    };
    Blocks['rgbledaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('rgb'), 'rgb')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['blink', 'blink'], ['toggle', 'toggle'], ['pulse', 'pulse'], ['color', 'color']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an RGB LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#rgbled');
        },
    };
    Blocks['buzzeraction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('buzzer'), 'buzzer')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['beep', 'beep'], ['toggle', 'toggle']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for a Buzzer');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#buzzer');
        },
    };
    Blocks['motoraction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('motor'), 'motor')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['forward', 'forward'], ['backward', 'backward'], ['stop', 'stop']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for a Motor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#motor');
        },
    };
    Blocks['servoaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('servo'), 'servo')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['detach', 'detach'], ['max', 'max'], ['mid', 'mid'], ['min', 'min'], ['angle', 'angle']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for a Servo');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#servo');
        },
    };
    Blocks['angaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('angular'), 'angular')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['detach', 'detach'], ['max', 'max'], ['mid', 'mid'], ['min', 'min'], ['angle', 'angle']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set a variable for an Angular Servo');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#angularservo');
        },
    };
    Blocks['ledbaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('leds'), 'leds')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['blink', 'blink'], ['close', 'close'], ['on', 'off'], ['pulse', 'pulse'], ['toggle', 'toggle']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an LED Board');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#ledboard');
        },
    };
    Blocks['graphaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('graph'), 'graph')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['toggle', 'toggle']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an LED Bar Graph');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#ledbargraph');
        },
    };
    Blocks['buttonbaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('buttonb'), 'buttonb')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['wait_for_active', 'wait_for_active'], ['wait_for_inactive', 'wait_for_inactive'], ['wait_for_press', 'wait_for_press'], ['wait_for_release', 'wait_for_release']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for a Button Baord');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#buttonboard');
        },
    };
    Blocks['buttonvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('button'), 'button')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set an action variable for a button');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#button');
        },
    };
    Blocks['linevar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('sensor'), 'sensor')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set an action variable for a Sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000');
        },
    };
    Blocks['motionvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('pir'), 'pir')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set an action variable for a motion sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000');
        },
    };
    Blocks['lightvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('ldr'), 'ldr')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set an action variable for a light sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000');
        },
    };
    Blocks['distancevar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('distance'), 'disance')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16AEE5");
            this.setTooltip('Set an action variable for a Distance sensor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_input.html#line-sensor-trct5000');
        },
    };
    Blocks['ledvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('led'), 'led')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for an LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#led');
        },
    };
    Blocks['pledvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('pwm'), 'pwm')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for an PWMLED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#pwmled');
        },
    };
    Blocks['rgbledvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('rgb'), 'rgb')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for an RGB LED');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#rgbled');
        },
    };
    Blocks['buzzervar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('buzzer'), 'buzzer')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for an Buzzer');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#buzzer');
        },
    };
    Blocks['motorvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('motor'), 'motor')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for a Motor');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#motor');
        },
    };
    Blocks['servovar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('servo'), 'servo')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for a Servo');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#servo');
        },
    };
    Blocks['angvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('angular'), 'angular')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E51616");
            this.setTooltip('Set an action variable for an Angular Servo');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_output.html#angularservo');
        },
    };
    Blocks['ledbvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('leds'), 'leds')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set an action variable for an LED Board');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#ledboard');
        },
    };
    Blocks['graphvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('graph'), 'graph')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set an action variable for an LED Bar Graph');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#ledbargraph');
        },
    };
    Blocks['buttonbvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('buttonb'), 'buttonb')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set an action variable for a Button Board');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#buttonboard');
        },
    };
    Blocks['trafficset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('traffic'), 'traffic')
                .appendField(' = TrafficLights(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for a Traffic Light');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#trafficlights');
        },
    };
    Blocks['trafficaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("traffic"), "traffic")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["red", "red"], ["amber", "amber"], ["green", "green"]]), "colour")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["on", "on"], ["off", "off"], ["blink", "blink"], ["pulse", "pulse"], ["toggle", "toggle"]]), "action")
                .appendField("()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip("Setup a Traffic Light");
            this.setHelpUrl("https://gpiozero.readthedocs.io/en/stable/api_boards.html#trafficlights");
        }
    };
    Blocks['trafficvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('traffic'), 'traffic')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput();
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set an action variable for a Traffic Light');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#trafficlights');
        },
    };
    Blocks['pingset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('server'), 'server')
                .appendField(' = PingServer(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E");
            this.setTooltip('Set a variable for a Ping Server');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_other.html#pingserver');
        },
    };
    Blocks['energenieset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('lamp'), 'lamp')
                .appendField(' = Energenie(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an Energenie');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#energenie');
        },
    };
    Blocks['energenieaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('lamp'), 'lamp')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an Energenie');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#energenie');
        },
    };
    Blocks['energenievar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('lamp'), 'lamp')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set an action variable for an Energenie');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#energenie');
        },
    };
    Blocks['camjamset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('camjam'), 'camjam')
                .appendField(' = CamJamKitRobot()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for a CamJam Kit 3');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#camjam-3-kit-robot');
        },
    };
    Blocks['camjamaction'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('camjam'), 'camjam')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['forward', 'forward'], ['backward', 'backward'], ['left', 'left'], ['right', 'right'], ['reverse', 'reverse'], ['stop', 'stop']]), 'action')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set a variable for an CamJam Kit 3');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#camjam-3-kit-robot');
        },
    };
    Blocks['camjamvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable('camjam'), 'camjam')
                .appendField('.');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(' = ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E5B116");
            this.setTooltip('Set an action variable for a CamJam Kit 3');
            this.setHelpUrl('https://gpiozero.readthedocs.io/en/stable/api_boards.html#camjam-3-kit-robot');
        },
    };
    Blocks['timeset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("morning"), "morning")
                .appendField(" = TimeOfDay(time(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("), time(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("))");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E");
            this.setTooltip("Setup Time Of Day");
            this.setHelpUrl("https://gpiozero.readthedocs.io/en/stable/api_other.html#timeofday");
        }
    };
    Blocks['cpuset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("cpu"), "cpu")
                .appendField(" = CPUTemperature(min_temp(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("), max_temp(");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("))");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E");
            this.setTooltip("Setup CPU Temp");
            this.setHelpUrl("https://gpiozero.readthedocs.io/en/stable/api_other.html#cputemperature");
        }
    };
    Blocks['adc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("var"), "var")
                .appendField(" = ")
                .appendField(new Blockly.FieldDropdown([["MCP3001", "MCP3001"], ["MCP3002", "MCP3002"], ["MCP3004", "MCP3004"], ["MCP3008", "MCP3008"], ["MCP3201", "MCP3201"], ["MCP3202", "MCP3202"], ["MCP3204", "MCP3204"], ["MCP3208", "MCP3208"], ["MCP3302", "MCP3302"], ["MCP3302", "MCP3302"], ["MCP3304", "MCP3304"]]), "NAME")
                .appendField("(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#16E57E");
            this.setTooltip("Setup Analog to Digital Converters");
            this.setHelpUrl("https://gpiozero.readthedocs.io/en/stable/api_spi.html#analog-to-digital-converters-adc");
        }
    };
}
exports.default = define;

},{}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['importgpiozero'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from gpiozero import *\n';
        return code;
    };
    Python['importtime'] = function (block) {
        // TODO: Assemble Python into code variable. 
        var code = 'from datetime import time\n';
        return code;
    };
    Python['buttonset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('button'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = Button(' + text_pin + ')\n';
        return code;
    };
    Python['lineset'] = function (block) {
        var variable_sensor = Blockly.Python.variableDB_.getName(block.getFieldValue('sensor'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_sensor + ' = LineSensor(' + text_pin + ')\n';
        return code;
    };
    Python['motionset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('motion'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = MotionSensor(' + text_pin + ')\n';
        return code;
    };
    Python['lightset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('ldr'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = LightSensor(' + text_pin + ')\n';
        return code;
    };
    Python['distanceset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('distance'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = DistanceSensor(' + text_pin + ')\n';
        return code;
    };
    Python['ledset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = LED(' + text_pin + ')\n';
        return code;
    };
    Python['pledset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('pwm'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = PWMLED(' + text_pin + ')\n';
        return code;
    };
    Python['rgbledset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('rgb'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = RGBLED(' + text_pin + ')\n';
        return code;
    };
    Python['buzzerset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('buzzer'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = Buzzer(' + text_pin + ')\n';
        return code;
    };
    Python['motorset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('motor'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = Motor(' + text_pin + ')\n';
        return code;
    };
    Python['servoset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('servo'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = Servo(' + text_pin + ')\n';
        return code;
    };
    Python['angset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('angular'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = AngularServo(' + text_pin + ')\n';
        return code;
    };
    Python['ledbset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('leds'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = LEDBoard(' + text_pin + ')\n';
        return code;
    };
    Python['graphset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('graph'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = LEDBarGraph(' + text_pin + ')\n';
        return code;
    };
    Python['buttonbset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('buttonb'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = ButtonBoard(' + text_pin + ')\n';
        return code;
    };
    Python['buttonaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('button'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['lineaction'] = function (block) {
        var variable_sensor = Blockly.Python.variableDB_.getName(block.getFieldValue('sensor'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_sense = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_sensor + '.' + dropdown_action + '(' + text_sense + ')\n';
        return code;
    };
    Python['motionaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('motion'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['lightaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('ldr'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['distanceaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('distance'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['ledaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['pledaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('pwm'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['rgbledaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('rgb'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['buzzeraction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('buzzer'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['motoraction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('motor'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['servoaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('servo'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['angaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('angular'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['ledbaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('leds'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['graphaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('graph'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['buttonbaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('buttonb'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['buttonvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('button'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['motionvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('motion'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['lineaction'] = function (block) {
        var variable_sensor = Blockly.Python.variableDB_.getName(block.getFieldValue('sensor'), Blockly.Variables.NAME_TYPE);
        var text_first = block.getFieldValue('first');
        var text_second = block.getFieldValue('second');
        // TODO: Assemble Python into code variable.
        var code = variable_sensor + '.' + text_first + ' = ' + text_second + '\n';
        return code;
    };
    Python['lightvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('ldr'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['distancevar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('distance'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['ledvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('led'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['pledvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('pwm'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['rgbledvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('rgb'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['buzzervar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('buzzer'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['motorvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('motor'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['servovar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('servo'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['angvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('angular'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['ledbvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('leds'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['graphvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('graph'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['buttonbvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('buttonb'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['trafficset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('traffic'), Blockly.Variables.NAME_TYPE);
        var text_pin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = TrafficLights(' + text_pin + ')\n';
        return code;
    };
    Python['trafficaction'] = function (block) {
        var variable_traffic = Blockly.Python.variableDB_.getName(block.getFieldValue('traffic'), Blockly.Variables.NAME_TYPE);
        var dropdown_colour = block.getFieldValue('colour');
        var dropdown_action = block.getFieldValue('action');
        // TODO: Assemble Python into code variable.
        var code = variable_traffic + '.' + dropdown_colour + '.' + dropdown_action + '()\n';
        return code;
    };
    Python['trafficvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('traffic'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['pingset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('server'), Blockly.Variables.NAME_TYPE);
        var text_num = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = PingServer(' + text_num + ')\n';
        return code;
    };
    Python['cpuset'] = function (block) {
        var variable_cpu = Blockly.Python.variableDB_.getName(block.getFieldValue('cpu'), Blockly.Variables.NAME_TYPE);
        var text_num = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_num2 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_cpu + ' = CPUTemprature(min_temp(' + text_num + '), max_temp(' + text_num2 + '))...\n';
        return code;
    };
    Python['adc'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('var'), Blockly.Variables.NAME_TYPE);
        var dropdown_name = block.getFieldValue('NAME');
        var text_channel = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_var + ' = ' + dropdown_name + '(' + text_channel + ')\n';
        return code;
    };
    Python['energenieset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('lamp'), Blockly.Variables.NAME_TYPE);
        var text_num = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = Energenie(' + text_num + ')\n';
        return code;
    };
    Python['energenieaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('lamp'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['energenievar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('lamp'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['camjamset'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('camjam'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = CamJamKitRobot()\n';
        return code;
    };
    Python['camjamaction'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('camjam'), Blockly.Variables.NAME_TYPE);
        var dropdown_action = block.getFieldValue('action');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + dropdown_action + '(' + text_bracket + ')\n';
        return code;
    };
    Python['camjamvar'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('camjam'), Blockly.Variables.NAME_TYPE);
        var text_action = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_act = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.' + text_action + ' = ' + text_act + '\n';
        return code;
    };
    Python['timeset'] = function (block) {
        var variable_morning = Blockly.Python.variableDB_.getName(block.getFieldValue('morning'), Blockly.Variables.NAME_TYPE);
        var text_num = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_num2 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_morning + ' = TimeOfDay(Time(' + text_num + '), Time(' + text_num2 + '))\n';
        return code;
    };
}
exports.default = define;

},{}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['mcimport'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from mcpi.minecraft import Minecraft');
            this.setPreviousStatement(true, null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7D21E1");
            this.setTooltip('Use this to import minecraft.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mccreate'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc = Minecraft.create()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7D21E1");
            this.setTooltip('Use this to connect to minecraft. ALWAYS REQUIRED.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_block'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from mcpi import block');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7D21E1");
            this.setTooltip('Imports the mcpi block library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mcpost'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.postToChat(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to send a message to the Minecraft chat.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mcpos'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('playerPos = mc.player.getPos()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this set a variable of the players position.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['setpos'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.player.setPos(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Set players position');
            this.setHelpUrl('');
        },
    };
    Blocks['campos'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.camera.setPos(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to set the cameras position');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['getblock'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('blockType = mc.getBlock(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to get a block type.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['cameraset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.camera.set')
                .appendField(new Blockly.FieldDropdown([['Fixed', 'Fixed'], ['Normal', 'Normal']]), 'drop')
                .appendField('()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Set camera mode.');
            this.setHelpUrl('');
        },
    };
    Blocks['setblock'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('blockType = mc.setBlock(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to set a block type.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mcvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('x, y, z = mc.player.getPos()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this set a variable of the players position.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mctext'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('blockType = mc.setBlock(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to set a block type with text');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mcblocks'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.setBlocks(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text4")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text5")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text6")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text7")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text8")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to set numerous blocks');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['build'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('buildPumpkin(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['printwall'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('PrintWall(PixelArt(');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '11')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '12')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '13')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '14')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '15')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '16')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '17')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '18')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '21')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '22')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '23')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '24')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '25')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '26')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '27')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '28')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '31')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '32')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '33')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '34')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '35')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '36')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '37')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '38')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '41')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '42')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '43')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '44')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '45')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '46')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '47')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '48')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '51')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '52')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '53')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '54')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '55')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '56')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '57')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '58')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '61')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '62')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '63')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '64')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '65')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '66')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '67')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '68')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '71')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '72')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '73')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '74')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '75')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '76')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '77')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '78')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField(new Blockly.FieldTextInput(''), '81')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '82')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '83')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '84')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '85')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '86')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '87')
                .appendField(', ')
                .appendField(new Blockly.FieldTextInput(''), '88')
                .appendField(', ');
            this.appendDummyInput()
                .setAlign(Blockly.ALIGN_RIGHT)
                .appendField('))');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setInputsInline(false);
            this.setColour("#19E32E");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['mctext2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.setBlock(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to set a block type with text');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mctext5'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.setBlock(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text4")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Use this to set a block type with text');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mcblocks8'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('mc.setBlocks(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text4")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text5")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text6")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text7")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['return'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('return math.sqrt((xd*xd) + (yd*yd) + (zd*zd))');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Imports the edupy library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['getdist'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('distance_to_player(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(', ');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['mcpiblockas'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import mcpi.block as block');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7D21E1");
            this.setTooltip('Imports the Minecraft Block Library');
            this.setHelpUrl('');
        },
    };
    Blocks['defcall'] = {
        init: function () {
            this.appendDummyInput();
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#19E32E");
            this.setTooltip('Call a function');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['mcimport'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from mcpi.minecraft import Minecraft \n';
        return code;
    };
    Python['mccreate'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'mc = Minecraft.create() \n';
        return code;
    };
    Python['import_block'] = function (block) {
        var code = 'from mcpi import block\n';
        return code;
    };
    Python['mcpost'] = function (block) {
        var text_chat = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.postToChat(' + text_chat + ')\n';
        return code;
    };
    Python['mcpos'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'playerPos = mc.player.getPos() \n';
        return code;
    };
    Python['setpos'] = function (block) {
        var text_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.player.setPos(' + text_x + ', ' + text_y + ', ' + text_z + ')\n\n';
        return code;
    };
    Python['campos'] = function (block) {
        var number_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var number_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var number_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.camera.setPos(' + number_x + ', ' + number_y + ', ' + number_z + ')\n';
        return code;
    };
    Python['getblock'] = function (block) {
        var number_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var number_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var number_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'blockType = mc.getBlock(' + number_x + ', ' + number_y + ', ' + number_z + ')\n';
        return code;
    };
    Python['cameraset'] = function (block) {
        var dropdown_drop = block.getFieldValue('drop');
        // TODO: Assemble Python into code variable.
        var code = 'mc.camera.set' + dropdown_drop + '()\n';
        return code;
    };
    Python['setblock'] = function (block) {
        var number_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var number_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var number_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var number_id = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'blockType = mc.setBlock(' + number_x + ', ' + number_y + ', ' + number_z + ', ' + number_id + ')\n';
        return code;
    };
    Python['mcvar'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'x, y, z = mc.player.getPos() \n';
        return code;
    };
    Python['mctext'] = function (block) {
        var text_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var number_id = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'blockType = mc.setBlock(' + text_x + ', ' + text_y + ', ' + text_z + ', ' + number_id + ')\n';
        return code;
    };
    Python['mcblocks'] = function (block) {
        var text_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_q = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        var text_w = Blockly.Python.valueToCode(block, 'text4', Blockly.Python.ORDER_ATOMIC);
        var text_e = Blockly.Python.valueToCode(block, 'text5', Blockly.Python.ORDER_ATOMIC);
        var text_r = Blockly.Python.valueToCode(block, 'text6', Blockly.Python.ORDER_ATOMIC);
        var text_t = Blockly.Python.valueToCode(block, 'text7', Blockly.Python.ORDER_ATOMIC);
        var text_u = Blockly.Python.valueToCode(block, 'text8', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.setBlocks(' + text_x + ', ' + text_y + ', ' + text_z + ', ' + text_q + ', ' + text_w + ', ' + text_e + ', ' + text_r + ', ' + text_t + ', ' + text_u + ')\n';
        return code;
    };
    Python['build'] = function (block) {
        var number_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var number_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var number_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'buildPumpkin(' + number_x + ', ' + number_y + ', ' + number_z + ')\n';
        return code;
    };
    Python['printwall'] = function (block) {
        var text_11 = block.getFieldValue('11');
        var text_12 = block.getFieldValue('12');
        var text_13 = block.getFieldValue('13');
        var text_14 = block.getFieldValue('14');
        var text_15 = block.getFieldValue('15');
        var text_16 = block.getFieldValue('16');
        var text_17 = block.getFieldValue('17');
        var text_18 = block.getFieldValue('18');
        var text_21 = block.getFieldValue('21');
        var text_22 = block.getFieldValue('22');
        var text_23 = block.getFieldValue('23');
        var text_24 = block.getFieldValue('24');
        var text_25 = block.getFieldValue('25');
        var text_26 = block.getFieldValue('26');
        var text_27 = block.getFieldValue('27');
        var text_28 = block.getFieldValue('28');
        var text_31 = block.getFieldValue('31');
        var text_32 = block.getFieldValue('32');
        var text_33 = block.getFieldValue('33');
        var text_34 = block.getFieldValue('34');
        var text_35 = block.getFieldValue('35');
        var text_36 = block.getFieldValue('36');
        var text_37 = block.getFieldValue('37');
        var text_38 = block.getFieldValue('38');
        var text_41 = block.getFieldValue('41');
        var text_42 = block.getFieldValue('42');
        var text_43 = block.getFieldValue('43');
        var text_44 = block.getFieldValue('44');
        var text_45 = block.getFieldValue('45');
        var text_46 = block.getFieldValue('46');
        var text_47 = block.getFieldValue('47');
        var text_48 = block.getFieldValue('48');
        var text_51 = block.getFieldValue('51');
        var text_52 = block.getFieldValue('52');
        var text_53 = block.getFieldValue('53');
        var text_54 = block.getFieldValue('54');
        var text_55 = block.getFieldValue('55');
        var text_56 = block.getFieldValue('56');
        var text_57 = block.getFieldValue('57');
        var text_58 = block.getFieldValue('58');
        var text_61 = block.getFieldValue('61');
        var text_62 = block.getFieldValue('62');
        var text_63 = block.getFieldValue('63');
        var text_64 = block.getFieldValue('64');
        var text_65 = block.getFieldValue('65');
        var text_66 = block.getFieldValue('66');
        var text_67 = block.getFieldValue('67');
        var text_68 = block.getFieldValue('68');
        var text_71 = block.getFieldValue('71');
        var text_72 = block.getFieldValue('72');
        var text_73 = block.getFieldValue('73');
        var text_74 = block.getFieldValue('74');
        var text_75 = block.getFieldValue('75');
        var text_76 = block.getFieldValue('76');
        var text_77 = block.getFieldValue('77');
        var text_78 = block.getFieldValue('78');
        var text_81 = block.getFieldValue('81');
        var text_82 = block.getFieldValue('82');
        var text_83 = block.getFieldValue('83');
        var text_84 = block.getFieldValue('84');
        var text_85 = block.getFieldValue('85');
        var text_86 = block.getFieldValue('86');
        var text_87 = block.getFieldValue('87');
        var text_88 = block.getFieldValue('88');
        // TODO: Assemble Python into code variable.
        var start = 'PrintWall(PixelArt(\n';
        var line1 = ' ' + text_11 + ', ' + text_12 + ', ' + text_13 + ', ' + text_14 + ', ' + text_15 + ', ' + text_16 + ', ' + text_17 + ', ' + text_18 + ', \n';
        var line2 = ' ' + text_21 + ', ' + text_22 + ', ' + text_23 + ', ' + text_24 + ', ' + text_25 + ', ' + text_26 + ', ' + text_27 + ', ' + text_28 + ', \n';
        var line3 = ' ' + text_31 + ', ' + text_32 + ', ' + text_33 + ', ' + text_34 + ', ' + text_35 + ', ' + text_36 + ', ' + text_37 + ', ' + text_38 + ', \n';
        var line4 = ' ' + text_41 + ', ' + text_42 + ', ' + text_43 + ', ' + text_44 + ', ' + text_45 + ', ' + text_46 + ', ' + text_47 + ', ' + text_48 + ', \n';
        var line5 = ' ' + text_51 + ', ' + text_52 + ', ' + text_53 + ', ' + text_54 + ', ' + text_55 + ', ' + text_56 + ', ' + text_57 + ', ' + text_58 + ', \n';
        var line6 = ' ' + text_61 + ', ' + text_62 + ', ' + text_63 + ', ' + text_64 + ', ' + text_65 + ', ' + text_66 + ', ' + text_67 + ', ' + text_68 + ', \n';
        var line7 = ' ' + text_71 + ', ' + text_72 + ', ' + text_73 + ', ' + text_74 + ', ' + text_75 + ', ' + text_76 + ', ' + text_77 + ', ' + text_78 + ', \n';
        var line8 = ' ' + text_81 + ', ' + text_82 + ', ' + text_83 + ', ' + text_84 + ', ' + text_85 + ', ' + text_86 + ', ' + text_87 + ', ' + text_88 + ', \n';
        var end = '))\n';
        var code = start + line1 + line2 + line3 + line4 + line5 + line6 + line7 + line8 + end + '\n';
        return code;
    };
    Python['mctext2'] = function (block) {
        var text_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_i = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.setBlock(' + text_x + ', ' + text_y + ', ' + text_z + ', ' + text_i + ')\n';
        return code;
    };
    Python['mctext5'] = function (block) {
        var text_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_p = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        var text_i = Blockly.Python.valueToCode(block, 'text4', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.setBlock(' + text_x + ', ' + text_y + ', ' + text_z + ', ' + text_p + ', ' + text_i + ')\n';
        return code;
    };
    Python['mcblocks8'] = function (block) {
        var text_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_q = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        var text_w = Blockly.Python.valueToCode(block, 'text4', Blockly.Python.ORDER_ATOMIC);
        var text_e = Blockly.Python.valueToCode(block, 'text5', Blockly.Python.ORDER_ATOMIC);
        var text_r = Blockly.Python.valueToCode(block, 'text6', Blockly.Python.ORDER_ATOMIC);
        var text_t = Blockly.Python.valueToCode(block, 'text7', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'mc.setBlocks(' + text_x + ', ' + text_y + ', ' + text_z + ', ' + text_q + ', ' + text_w + ', ' + text_e + ', ' + text_r + ', ' + text_t + ')\n';
        return code;
    };
    Python['return'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'return math.sqrt((xd*xd) + (yd*yd) + (zd*zd))\n';
        return code;
    };
    Python['getdist'] = function (block) {
        var number_x = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var number_y = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var number_z = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'distance_to_player(' + number_x + ', ' + number_y + ', ' + number_z + ')\n';
        return code;
    };
    Python['mcpiblockas'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import mcpi.block as block\n';
        return code;
    };
    Python['defcall'] = function (block) {
        var text_fname = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_extra = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = text_fname + '(' + text_extra + ')\n';
        return code;
    };
}
exports.default = define;

},{}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_picamera'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from picamera import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("Import PiCamera and Color library");
            this.setHelpUrl("");
        }
    };
    Blocks['create_camera'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera = PiCamera()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("Create a camera Object named camera.");
            this.setHelpUrl("");
        }
    };
    Blocks['setrotation'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.rotation = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput();
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("Set camera rotate. you can rotate the image by 0,90,180,or 270 degrees");
            this.setHelpUrl("");
        }
    };
    Blocks['start_preview'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.start_preview(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("Now start open camera for preview the image and set alpha value,range 0~255");
            this.setHelpUrl("");
        }
    };
    Blocks['stop_preview'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.stop_preview()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("close camera for preview the image.");
            this.setHelpUrl("");
        }
    };
    Blocks['capture_savepath'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.capture(‘");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("’)");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("capture a image and save to the path you want.");
            this.setHelpUrl("");
        }
    };
    Blocks['capture_savepathmore'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.capture(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("loop to capture a image and save to the path you want.");
            this.setHelpUrl("");
        }
    };
    Blocks['start_recording'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.start_recording(‘");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("’)");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("Now start recording video and save to the path you want.");
            this.setHelpUrl("");
        }
    };
    Blocks['wait_recording'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.wait_recording( ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("wait recording video that it will pause for the number of seconds specified");
            this.setHelpUrl("");
        }
    };
    Blocks['stop_recording'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.stop_recording()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("stop recording video.");
            this.setHelpUrl("");
        }
    };
    Blocks['set_resolution'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.resolution = ( ");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("，");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("set to the rasolution of your monitor,\n but the maximum resolution is 2592 x 1944 for still photos \n and 1920 x 1080 for video recording");
            this.setHelpUrl("");
        }
    };
    Blocks['set_framerate'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.framerate = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("set the frame rate to 15 to enable this maximum resolution");
            this.setHelpUrl("");
        }
    };
    Blocks['set_textsize'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.annotate_text_size = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("set the annotation text size.Valid sizes are 6 to 160. The default is 32.");
            this.setHelpUrl("");
        }
    };
    Blocks['show_text'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.annotate_text =");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("add text to your image.");
            this.setHelpUrl("");
        }
    };
    Blocks['set_brightness'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.brightness = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("the brightness setting, which can be set from 0 to 10. The default is 50.");
            this.setHelpUrl("");
        }
    };
    Blocks['set_contrast'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.contrast = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("the contrast setting, which can be set from 0 to 10.");
            this.setHelpUrl("");
        }
    };
    Blocks['image_effect'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.image_effect = ")
                .appendField(new Blockly.FieldDropdown([["none", "'none'"], ["negative", "'negative'"], ["solarize", "'solarize'"], ["sketch", "'sketch'"], ["denoise", "'denoise'"], ["emboss", "'emboss'"], ["olipaint", "'olipaint'"], ["hatch", "'hatch'"], ["gpen", "'gpen'"], ["pastel", "'pastel'"], ["watercolor", "'watercolor'"], ["film", "'film'"], ["blur", "'blur'"], ["saturation", "'saturation'"], ["colorswap", "'colorswap'"], ["washedout", "'washedout'"], ["posterise", "'posterise'"], ["colorpoint", "'colorpoint'"], ["colorbalance", "'colorbalance'"], ["cartoon", "'cartoon'"], ["deinterlace1", "'deinterlace1'"], ["deinterlace2", "'deinterlace2'"]]), "OP");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['awb_mode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.awb_mode = ")
                .appendField(new Blockly.FieldDropdown([["auto", "'auto'"], ["off", "'off'"], ["sunlight", "'sunlight'"], ["cloudy", "'cloudy'"], ["shade", "'shade'"], ["tungsten", "'tungsten'"], ["fluorescent", "'fluorescent'"], ["incandescent", "'incandescent'"], ["flash", "'flash'"], ["horizon", "'horizon'"]]), "OP");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['exposure_mode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("camera.exposure_mode = ")
                .appendField(new Blockly.FieldDropdown([["auto", "'auto'"], ["off", "'off'"], ["night", "'night'"], ["nightpreview", "'nightpreview'"], ["backlight", "'backlight'"], ["spotlight", "'spotlight'"], ["sports", "'sports'"], ["snow", "'snow'"], ["beach", "'beach'"], ["verylong", "'verylong'"], ["fixedfps", "'fixedfps'"], ["antishake", "'antishake'"], ["fireworks", "'fireworks'"]]), "OP");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#1B173C");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_picamera'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from picamera import *\n';
        return code;
    };
    Python['create_camera'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'camera = PiCamera()\n';
        return code;
    };
    Python['setrotation'] = function (block) {
        var text_rot = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.rotation = ' + text_rot + '\n';
        return code;
    };
    Python['start_preview'] = function (block) {
        var text_alpha = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.start_preview(' + text_alpha + ')\n';
        return code;
    };
    Python['stop_preview'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'camera.stop_preview()\n';
        return code;
    };
    Python['capture_savepath'] = function (block) {
        var text_path = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.capture(\'' + text_path + '\')\n';
        return code;
    };
    Python['capture_savepathmore'] = function (block) {
        var text_path = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.capture(' + text_path + ')\n';
        return code;
    };
    Python['start_recording'] = function (block) {
        var text_path = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.start_recording(\'' + text_path + '\')\n';
        return code;
    };
    Python['wait_recording'] = function (block) {
        var text_time = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.wait_recording(' + text_time + ')\n';
        return code;
    };
    Python['stop_recording'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'camera.stop_recording()\n';
        return code;
    };
    Python['set_resolution'] = function (block) {
        var text_width = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_high = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.resolution = (' + text_width + ',' + text_high + ')\n';
        return code;
    };
    Python['set_framerate'] = function (block) {
        var text_frame = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.framerate = ' + text_frame + '\n';
        return code;
    };
    Python['set_textsize'] = function (block) {
        var text_size = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.annotate_text_size = ' + text_size + '\n';
        return code;
    };
    Python['show_text'] = function (block) {
        var text_str = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.annotate_text =' + text_str + '\n';
        return code;
    };
    Python['set_brightness'] = function (block) {
        var text_bright = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.brightness = ' + text_bright + '\n';
        return code;
    };
    Python['set_contrast'] = function (block) {
        var text_cont = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'camera.contrast = ' + text_cont + '\n';
        return code;
    };
    Python['image_effect'] = function (block) {
        var dropdown_op = block.getFieldValue('OP');
        // TODO: Assemble Python into code variable.
        var code = 'camera.image_effect =' + dropdown_op + '\n';
        return code;
    };
    Python['awb_mode'] = function (block) {
        var dropdown_op = block.getFieldValue('OP');
        // TODO: Assemble Python into code variable.
        var code = 'camera.awb_mode =' + dropdown_op + '\n';
        return code;
    };
    Python['exposure_mode'] = function (block) {
        var dropdown_op = block.getFieldValue('OP');
        // TODO: Assemble Python into code variable.
        var code = 'camera.exposure_mode =' + dropdown_op + '\n';
        return code;
    };
}
exports.default = define;

},{}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['ehimport'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import explorerhat');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Import the Explorer Hat library');
            this.setHelpUrl('');
        },
    };
    Blocks['ehtouch'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('explorerhat.touch.')
                .appendField(new Blockly.FieldDropdown([['one', 'one'], ['two', 'two'], ['three', 'three'], ['four', 'four'], ['five', 'five'], ['six', 'six'], ['seven', 'seven'], ['eight', 'eight']]), 'padnumber')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['is_pressed', 'is_pressed'], ['is_held', 'is_held'], ['pressed', 'pressed'], ['held', 'held'], ['released', 'released']]), 'event')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Control the eight cap touch buttons on Explorer Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['ehinput'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('explorerhat.input.')
                .appendField(new Blockly.FieldDropdown([['one', 'one'], ['two', 'two'], ['three', 'three'], ['four', 'four']]), 'inputnumber')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['read', 'read'], ['has_changed', 'has_changed'], ['on_changed', 'on_changed'], ['on_low', 'on_low'], ['on_high', 'on_high'], ['clear_events', 'clear_events']]), 'inputevent')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Control the 4 inputs on Explorer Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['ehoutput'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('explorerhat.output.')
                .appendField(new Blockly.FieldDropdown([['one', 'one'], ['two', 'two'], ['three', 'three'], ['four', 'four']]), 'outputnumber')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['toggle', 'toggle'], ['write', 'write'], ['blink', 'blink'], ['pulse', 'pulse'], ['fade', 'fade'], ['stop', 'stop']]), 'outputevent')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Contol the 4 outputs on Explorer Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['ehlights'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('explorerhat.light.')
                .appendField(new Blockly.FieldDropdown([['yellow', 'yellow'], ['blue', 'blue'], ['red', 'red'], ['green', 'green']]), 'lightnumber')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['on', 'on'], ['off', 'off'], ['toggle', 'toggle'], ['write', 'write'], ['blink', 'blink'], ['pulse', 'pulse'], ['fade', 'fade'], ['stop', 'stop']]), 'lightevent')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Control the 4 lights on Explorer Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['ehanalog'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('explorerhat.analog.')
                .appendField(new Blockly.FieldDropdown([['one', 'one'], ['two', 'two'], ['three', 'three'], ['four', 'four']]), 'analognumber')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['read', 'read'], ['changed', 'changed']]), 'analogevent')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Control the 4 Analog Inputs on Explorer Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['ehmotor'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('explorerhat.motor.')
                .appendField(new Blockly.FieldDropdown([['one', 'one'], ['two', 'two']]), 'motornumber')
                .appendField('.')
                .appendField(new Blockly.FieldDropdown([['forwards', 'forwards'], ['backwards', 'backwards'], ['invert', 'invert'], ['speed', 'speed'], ['stop', 'stop']]), 'motorevent')
                .appendField('(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setTooltip('Control the 2 motor outputs on Explorer Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktimport'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from blinkt import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Import the Blinkt! library.');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktsetpixel'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('set_pixel(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Set a pixel on the Blinkt!');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('show()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Update the Blinkt! to show your code');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktsetbrightness'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('set_brightness(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Set the brightness of your Blinkt!');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktsetall'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('set_all(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Set all the pixels on your Blinkt!');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktsetallbright'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('set_all(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text2")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(',');
            this.appendValueInput("text3")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Set all the pixels on your Blinkt! with brightness control');
            this.setHelpUrl('');
        },
    };
    Blocks['blinktclear'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('clear()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(90);
            this.setTooltip('Clear all pixels on your Blinkt!');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['ehimport'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import explorerhat\n';
        return code;
    };
    Python['ehtouch'] = function (block) {
        var dropdown_padnumber = block.getFieldValue('padnumber');
        var dropdown_event = block.getFieldValue('event');
        var text_bracket = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'explorerhat.touch.' + dropdown_padnumber + '.' + dropdown_event + '(' + text_bracket + ')\n';
        return code;
    };
    Python['ehinput'] = function (block) {
        var dropdown_inputnumber = block.getFieldValue('inputnumber');
        var dropdown_inputevent = block.getFieldValue('inputevent');
        var text_bracketin = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'explorerhat.input.' + dropdown_inputnumber + '.' + dropdown_inputevent + '(' + text_bracketin + ')\n';
        return code;
    };
    Python['ehoutput'] = function (block) {
        var dropdown_outputnumber = block.getFieldValue('outputnumber');
        var dropdown_outputevent = block.getFieldValue('outputevent');
        var text_bracketout = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'explorerhat.output.' + dropdown_outputnumber + '.' + dropdown_outputevent + '(' + text_bracketout + ')\n';
        return code;
    };
    Python['ehlights'] = function (block) {
        var dropdown_lightnumber = block.getFieldValue('lightnumber');
        var dropdown_lightevent = block.getFieldValue('lightevent');
        var text_bracketlight = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'explorerhat.light.' + dropdown_lightnumber + '.' + dropdown_lightevent + '(' + text_bracketlight + ')\n';
        return code;
    };
    Python['ehanalog'] = function (block) {
        var dropdown_analognumber = block.getFieldValue('analognumber');
        var dropdown_analogevent = block.getFieldValue('analogevent');
        var text_bracketanalog = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'explorerhat.analog.' + dropdown_analognumber + '.' + dropdown_analogevent + '(' + text_bracketanalog + ')\n';
        return code;
    };
    Python['ehmotor'] = function (block) {
        var dropdown_motornumber = block.getFieldValue('motornumber');
        var dropdown_motorevent = block.getFieldValue('motorevent');
        var text_bracketmotor = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'explorerhat.motor.' + dropdown_motornumber + '.' + dropdown_motorevent + '(' + text_bracketmotor + ')\n';
        return code;
    };
    Python['blinktimport'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from blinkt import *\n';
        return code;
    };
    Python['blinktsetpixel'] = function (block) {
        var text_pixelno = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_r = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_g = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_b = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'set_pixel(' + text_pixelno + ', ' + text_r + ', ' + text_g + ', ' + text_b + ')\n';
        return code;
    };
    Python['blinktshow'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'show()\n';
        return code;
    };
    Python['blinktsetbrightness'] = function (block) {
        var text_number = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'set_brightness(' + text_number + ')\n';
        return code;
    };
    Python['blinktsetall'] = function (block) {
        var text_r = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_g = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var text_b = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'set_all(' + text_r + ', ' + text_g + ', ' + text_b + ')\n';
        return code;
    };
    Python['blinktsetallbright'] = function (block) {
        // let text_pixelno = block.getFieldValue('pixelno');
        var text_r = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var text_g = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        ;
        var text_b = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        var text_bright = Blockly.Python.valueToCode(block, 'text3', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'set_all(' + text_r + ', ' + text_g + ', ' + text_b + ',' + text_bright + ')\n';
        return code;
    };
    Python['blinktclear'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'clear()\n';
        return code;
    };
}
exports.default = define;

},{}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_requests'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import requests');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip('Imports the requests library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_json'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import json');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip('Imports the JSON library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['requests_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(" = requests.get(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_post'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(" = requests.post(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_put'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(" = requests.put(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_delete'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(" = requests.delete(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_head'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(" = requests.head(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_options'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(" = requests.options(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_url'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["url", "url"], ["text", "text"], ["encoding", "encoding"], ["content", "content"], ["json", "json"], ["raw", "raw"], ["status_code", "status_code"], ["headers", "headers"], ["history", "history"]]), "NAME");
            this.setOutput(true, null);
            this.setColour("#C2E434");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_cookies'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(".cookies[");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("]");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_rjar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("jar"), "jar")
                .appendField(" = requests.cookies.RequestsCookieJar()");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_jset'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("jar"), "jar")
                .appendField(".set(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_hget'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(".headers.get(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['requests_raise'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("r"), "r")
                .appendField(".raise_for_status()");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#C2E434");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_requests'] = function (block) {
        var code = 'import requests \n';
        return code;
    };
    Python['import_json'] = function (block) {
        var code = 'import json \n';
        return code;
    };
    Python['requests_get'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + ' = requests.get(' + value_text + ')\n';
        return code;
    };
    Python['requests_post'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + ' = requests.post(' + value_text + ')\n';
        return code;
    };
    Python['requests_put'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + ' = requests.put(' + value_text + ')\n';
        return code;
    };
    Python['requests_delete'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + ' = requests.delete(' + value_text + ')\n';
        return code;
    };
    Python['requests_head'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + ' = requests.head(' + value_text + ')\n';
        return code;
    };
    Python['requests_options'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + ' = requests.options(' + value_text + ')\n';
        return code;
    };
    Python['requests_url'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = variable_r + '.' + dropdown_name;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['requests_cookies'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + '.cookies[' + value_text + ']\n';
        return code;
    };
    Python['requests_rjar'] = function (block) {
        var variable_jar = Blockly.Python.variableDB_.getName(block.getFieldValue('jar'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_jar + ' = requests.cookies.RequestsCookieJar()\n';
        return code;
    };
    Python['requests_jset'] = function (block) {
        var variable_jar = Blockly.Python.variableDB_.getName(block.getFieldValue('jar'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_jar + '.set(' + value_name + ')\n';
        return code;
    };
    Python['requests_hget'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_r + '.headers.get(' + value_name + ')\n';
        return code;
    };
    Python['requests_raise'] = function (block) {
        var variable_r = Blockly.Python.variableDB_.getName(block.getFieldValue('r'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_r + '.raise_for_status()\n';
        return code;
    };
}
exports.default = define;

},{}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['senseshow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense.show_message("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('")');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('Shows a message on the Sense Hat');
            this.setHelpUrl('');
        },
    };
    Blocks['senseshowvar'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense.show_message(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('Show a variable on the display');
            this.setHelpUrl('');
        },
    };
    Blocks['senseinit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense = SenseHat()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('Detects the sense hat');
            this.setHelpUrl('');
        },
    };
    Blocks['senseimport'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from sense_hat import SenseHat');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('Imports the Sense Hat library');
            this.setHelpUrl('');
        },
    };
    Blocks['senseimportemu'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from sense_emu import SenseHat');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('Imports the Sense Hat Emulator library');
            this.setHelpUrl('');
        },
    };
    Blocks['senserotation'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense.set_rotation(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['senseflip'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense.flip_h(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['senseflipv'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense.flip_v(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['sensesetpix'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sense.set_pixels(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#E55F2B");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['senseinit'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'sense = SenseHat()\n';
        return code;
    };
    Python['senseshow'] = function (block) {
        var text_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'sense.show_message("' + text_text + '")\n';
        return code;
    };
    Python['senseshowvar'] = function (block) {
        var text_varname = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'sense.show_message(' + text_varname + ')\n\n';
        return code;
    };
    Python['senseimport'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from sense_hat import SenseHat\n';
        return code;
    };
    Python['senseimportemu'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from sense_emu import SenseHat\n';
        return code;
    };
}
exports.default = define;

},{}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_sonic'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from psonic import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(180);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['sampleson'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sample(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(180);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['synth'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('use_synth(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(180);
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['play'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('play(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(180);
            this.setTooltip('Play a single note');
            this.setHelpUrl('');
        },
    };
    Blocks['sleep1'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sleep(');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(180);
            this.setTooltip('Play a single note');
            this.setHelpUrl('');
        },
    };
    Blocks['liveloop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('live_loop_')
                .appendField(new Blockly.FieldDropdown([['1', '1'], ['2', '2'], ['3', '3'], ['4', '4']]), 'num');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(180);
            this.setTooltip('Create a live loop with Sonic Pi');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_sonic'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from psonic import *\n';
        return code;
    };
    Python['sampleson'] = function (block) {
        var text_name = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'sample(' + text_name + ')\n';
        return code;
    };
    Python['synth'] = function (block) {
        var text_name = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'use_synth(' + text_name + ')\n';
        return code;
    };
    Python['play'] = function (block) {
        var text_value = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'play(' + text_value + ')\n';
        return code;
    };
    Python['sleep1'] = function (block) {
        var text_value = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'sleep(' + text_value + ')\n';
        return code;
    };
    Python['liveloop'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) ||
            Blockly.Python.PASS;
        var dropdown_num = block.getFieldValue('num');
        // TODO: Assemble Python into code variable.
        var code = '\ndef live_loop_' + dropdown_num + '():\n' + branch;
        code = code + '\nlive_thread_' + dropdown_num + '.start()\n';
        return code;
    };
}
exports.default = define;

},{}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_turtle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from turtle import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Import Turtle library");
            this.setHelpUrl("");
        }
    };
    Blocks['turtle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(" = Turtle()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Initialize the turtle");
            this.setHelpUrl("");
        }
    };
    Blocks['screeninit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("screen"), "wn")
                .appendField(" = Screen()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Initialize the Turtle screen");
            this.setHelpUrl("");
        }
    };
    Blocks['background'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("screen"), "wn")
                .appendField(".bgcolour(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Change the background");
            this.setHelpUrl("");
        }
    };
    Blocks['directions'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["forward", "forward"], ["left", "left"], ["right", "right"], ["backward", "backward"]]), "options")
                .appendField("(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Make the turtle move");
            this.setHelpUrl("");
        }
    };
    Blocks['penud'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".pen")
                .appendField(new Blockly.FieldDropdown([["up", "up"], ["down", "down"]]), "options")
                .appendField("()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Pen up and down");
            this.setHelpUrl("");
        }
    };
    Blocks['pen'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".pen()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Initialize the pen");
            this.setHelpUrl("");
        }
    };
    Blocks['colourpen'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".pencolor(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Change the colour");
            this.setHelpUrl("");
        }
    };
    Blocks['colour'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".color(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Change the colour");
            this.setHelpUrl("");
        }
    };
    Blocks['colourmode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("screen"), "wn")
                .appendField(".colormode(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Change the colourmode");
            this.setHelpUrl("");
        }
    };
    Blocks['penwidth'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".width(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Change the width");
            this.setHelpUrl("");
        }
    };
    Blocks['circle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".circle(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("Draw a circle");
            this.setHelpUrl("");
        }
    };
    Blocks['goto'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".goto(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#7289DA");
            this.setTooltip("go to x&y");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_turtle'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from turtle import *\n';
        return code;
    };
    Python['turtle'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + ' = Turtle()\n';
        return code;
    };
    Python['screeninit'] = function (block) {
        var variable_wn = Blockly.Python.variableDB_.getName(block.getFieldValue('wn'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_wn + ' = Screen()\n';
        return code;
    };
    Python['background'] = function (block) {
        var variable_wn = Blockly.Python.variableDB_.getName(block.getFieldValue('wn'), Blockly.Variables.NAME_TYPE);
        var text_color = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_wn + '.bgcolor(' + text_color + ')\n';
        return code;
    };
    Python['directions'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var dropdown_options = block.getFieldValue('options');
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.' + dropdown_options + '(' + text_dist + ')\n';
        return code;
    };
    Python['penud'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var dropdown_options = block.getFieldValue('options');
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.pen' + dropdown_options + '()\n';
        return code;
    };
    Python['pen'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.Pen()\n';
        return code;
    };
    Python['colourpen'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.pencolor(' + text_dist + ')\n';
        return code;
    };
    Python['colour'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.color(' + text_dist + ')\n';
        return code;
    };
    Python['colourmode'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('wn'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.colormode(' + text_dist + ')\n';
        return code;
    };
    Python['penwidth'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.width(' + text_dist + ')\n';
        return code;
    };
    Python['circle'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.circle(' + text_dist + ')\n';
        return code;
    };
    Python['goto'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.goto(' + text_dist + ')\n';
        return code;
    };
}
exports.default = define;

},{}],79:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"dup":57}],80:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"dup":58}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['webdefine'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('def ');
            this.appendValueInput('1')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput('2')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#CDDA36");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['inline_def'] = {
        init: function () {
            this.appendValueInput("def")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("(");
            this.appendValueInput("input")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setOutput(true, null);
            this.setColour("#CDDA36");
            this.setTooltip("");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setHelpUrl("");
        }
    };
    Blocks['self'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('self.')
                .appendField(new Blockly.FieldVariable(""), "VAR")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("varset")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#CDDA36");
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
    Blocks['webreturn2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('return');
            this.appendValueInput('return')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setInputsInline(true);
            this.setColour("#CDDA36");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['webclass'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('class');
            this.appendValueInput("class")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#CDDA36");
            this.setTooltip('Class Statement.');
            this.setHelpUrl('');
        },
    };
}
exports.default = define;

},{}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['webdefine'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, '1', Blockly.Python.ORDER_ATOMIC);
        var text_2 = Blockly.Python.valueToCode(block, '2', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // const statements_name = Blockly.Python.statementToCode(block, 'NAME');
        // TODO: Assemble Python into code variable.
        var code = 'def ' + text_1 + '(' + text_2 + '):\n' + branch;
        return code;
    };
    Python['inline_def'] = function (block) {
        var value_def = Blockly.Python.valueToCode(block, 'def', Blockly.Python.ORDER_ATOMIC);
        var value_input = Blockly.Python.valueToCode(block, 'input', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_def + '(' + value_input + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['webreturn2'] = function (block) {
        var text_return = Blockly.Python.valueToCode(block, 'return', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'return ' + text_return + '\n';
        return code;
    };
    Python['self'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'self.' + variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
    Python['webclass'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'class', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'class ' + text_const + ':\n' + branch;
    };
}
exports.default = define;

},{}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var graphcol = "#008FD1";
    Blocks['chart_type'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("name"), "name")
                .appendField(" = pygal.")
                .appendField(new Blockly.FieldDropdown([["Line", "Line"], ["StackedLine", "StackedLine"], ["Bar", "Bar"], ["StackedBar", "StackedBar"], ["HorizontalBar", "HorizontalBar"], ["StackedHorizontalBar", "StackedHorizontalBar"], ["XY", "XY"], ["Pie", "Pie"], ["Radar", "Radar"]]), "chartTypes")
                .appendField("(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(graphcol);
            this.setTooltip("Specify which type of chart you want to use");
            this.setHelpUrl("");
        }
    };
    Blocks['chart_title'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("name"), "name")
                .appendField(".title = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(graphcol);
            this.setTooltip("Add a title to the chart");
            this.setHelpUrl("");
        }
    };
    Blocks['chart_add'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("name"), "name")
                .appendField(".add(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(", [");
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("])");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(graphcol);
            this.setTooltip("Add values to your chart");
            this.setHelpUrl("");
        }
    };
    Blocks['chart_xlabels'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("name"), "name")
                .appendField(".x_labels = ");
            this.appendValueInput("text")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(graphcol);
            this.setTooltip("Create labels for the X axis");
            this.setHelpUrl("");
        }
    };
    Blocks['chart_render'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("name"), "name")
                .appendField(".render()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(graphcol);
            this.setTooltip("Render your chart");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['chart_type'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('name'), Blockly.Variables.NAME_TYPE);
        var dropdown_charttypes = block.getFieldValue('chartTypes');
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' = pygal.' + dropdown_charttypes + '(' + value_text + ')\n';
        return code;
    };
    Python['chart_title'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('name'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.title = ' + value_text + '\n';
        return code;
    };
    Python['chart_add'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('name'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.add(' + value_text + ', [' + value_text1 + '])\n';
        return code;
    };
    Python['chart_xlabels'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('name'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.x_labels = ' + value_name + '\n';
        return code;
    };
    Python['chart_render'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('name'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_name + '.render()\n';
        return code;
    };
}
exports.default = define;

},{}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_time'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import time');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the time library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_pygal'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import pygal');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the pygal library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_processing'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from processing import *');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the pygal library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_signal'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('from signal import pause');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the signal library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['pause_s'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pause()');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Pause');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['random'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import random');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the random library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['while_true'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while True:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Forever loop.');
            this.setHelpUrl('https://t.co/PCZC5EFe4D');
        },
    };
    Blocks['pass'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pass');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Pass to the next command');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['if'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('If Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['class'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('class');
            this.appendValueInput("class")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Class Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['varprint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print(');
            this.appendValueInput('var')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Use this to print a variable, a number, or even a string if you put in the quotes yourself.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['ifcroc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField(new Blockly.FieldDropdown([['>', '>'], ['<', '<']]), 'crocsigns')
                .appendField(new Blockly.FieldTextInput('that'), 'that')
                .appendField(':');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('If statement with greater and less than');
            this.setHelpUrl('');
        },
    };
    Blocks['varminus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('-=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Variable with - and =');
            this.setHelpUrl('');
        },
    };
    Blocks['for'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('letter')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in range(');
            this.appendValueInput('no')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('Create a for loop');
        },
    };
    Blocks['advancedforloops'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('x')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in');
            this.appendValueInput('y')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(":");
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['ifequals'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if')
                .appendField(new Blockly.FieldTextInput('this'), 'this')
                .appendField('==')
                .appendField(new Blockly.FieldTextInput('that'), 'that');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['importinputs'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import inputs');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['return2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('return');
            this.appendValueInput('return')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setInputsInline(true);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    //   deprecated
    Blocks['elif'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif')
                .appendField(new Blockly.FieldTextInput('0'), 'var')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Elif Statement.');
            this.setHelpUrl('');
        },
    };
    Blocks['else'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('else:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Else statement');
            this.setHelpUrl('');
        },
    };
    Blocks['df'] = {
        init: function () {
            this.appendValueInput("def")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput("params")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('call a define function');
            this.setHelpUrl('');
        },
    };
    Blocks['whileout'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while');
            this.appendValueInput("cond")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_math'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import math');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the math library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['import_audio'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('import audio');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Imports the audio library.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['sleep'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('sleep(');
            this.appendValueInput("sleep");
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Sleep');
            this.setHelpUrl('');
        },
    };
    Blocks['sleepnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("time.sleep(");
            this.appendValueInput("sleep")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip("Wait (in milliseconds)");
            this.setHelpUrl("");
        }
    };
    //deprecated
    Blocks['print'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput('print')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Use this to print to the output box.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['printnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('Use this to print a string to the output box.');
            this.setHelpUrl('');
        },
    };
    Blocks['equalsblock'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput('0'), '1')
                .appendField('=')
                .appendField(new Blockly.FieldTextInput('0'), '2');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['equalsblocknew'] = {
        init: function () {
            this.appendValueInput("text1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("text2")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip("Assign, increment or decrement a variable");
            this.setHelpUrl("");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setOutput(true, "Boolean");
        }
    };
    Blocks['define'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('def ');
            this.appendValueInput('1')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput('2')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    //   deprecated
    Blocks['greater'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while')
                .appendField(new Blockly.FieldTextInput(''), '1')
                .appendField('>')
                .appendField(new Blockly.FieldTextInput(''), 'v')
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['ifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if');
            this.appendValueInput("iftext")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('If block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['typeanything'] = {
        init: function () {
            this.appendValueInput("stuff")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("# your own code");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip("Type any python code into this block");
            this.setHelpUrl("");
        }
    };
    Blocks['elifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif');
            this.appendValueInput('iftext')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('ElIf block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['buttonapressed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('button_')
                .appendField(new Blockly.FieldDropdown([['a', 'a'], ['b', 'b']]), 'NAME')
                .appendField('.is_pressed()');
            this.setInputsInline(false);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FF0066");
            this.setTooltip('Button A Pressed');
            this.setHelpUrl('');
        },
    };
    Blocks['internal'] = {
        init: function () {
            // should you translate to other languages
            // var rtlOperators = [
            //     // ['=', 'EQ'],
            //     // ['\u2260', 'NEQ'],
            //     ['\u200F<\u200F', 'LT'],
            //     ['\u200F\u2264\u200F', 'LTE'],
            //     ['\u200F>\u200F', 'GT'],
            //     ['\u200F\u2265\u200F', 'GTE']
            //   ];
            var ltrOperators = [
                ['==', '=='],
                ['!=', '!='],
                ['<', '<'],
                ['<=', '<='],
                ['>', '>'],
                ['>=', '>=']
            ];
            var OPERATORS = ltrOperators;
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(OPERATORS), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FF0066");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['textinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("Text input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['stringinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldString(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("String input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['sliderinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldSlider("0", "0", "1", "1", "1", "Value"), 'slider');
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setTooltip("Slider input for inline input");
            this.setHelpUrl("");
        }
    };
    Blocks['varinlines'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("variable"), "var")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("value")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
    Blocks['boolstatus'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([
                ["True", "True"],
                ["False", "False"]
            ]), "bool");
            this.setOutput(true, "Boolean");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FF0066");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['andor'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["and", "and"], ["or", "or"]]), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FF0066");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['not'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('not');
            this.appendValueInput("bool")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#FF0066");
            this.setTooltip('negates a Boolean value');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['break'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('break');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#FF0066");
            this.setTooltip('breaks out of a loop');
            this.setHelpUrl('http://www.example.com/');
        },
    };
}
exports.default = define;

},{}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_time'] = function (block) {
        var code = 'import time\n';
        return code;
    };
    Python['import_signal'] = function (block) {
        var code = 'from signal import pause\n';
        return code;
    };
    Python['import_pygal'] = function (block) {
        var code = 'import pygal\n';
        return code;
    };
    Python['import_processing'] = function (block) {
        var code = 'from processing import *\n';
        return code;
    };
    Python['pause_s'] = function (block) {
        var code = 'pause()\n';
        return code;
    };
    Python['random'] = function (block) {
        var code = 'import random\n';
        return code;
    };
    Python['while_true'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'while True:\n' + branch;
    };
    Python['pass'] = function (block) {
        var code = 'pass \n';
        return code;
    };
    Python['if'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'if ' + text_const + ':\n' + branch;
    };
    Python['class'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'class', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'class ' + text_const + ':\n' + branch;
    };
    Python['varprint'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'var', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print(' + text_const + ')\n';
        return code;
    };
    Python['ifcroc'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var dropdown_crocsigns = block.getFieldValue('crocsigns');
        var text_that = block.getFieldValue('that');
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' ' + dropdown_crocsigns + ' ' + text_that + ':\n' + branch;
        return code;
    };
    Python['varminus'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_2 = block.getFieldValue('2');
        // TODO: Assemble Python into code variable.
        var code = text_1 + ' -= ' + text_2 + '\n';
        return code;
    };
    Python['for'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_letter = Blockly.Python.valueToCode(block, 'letter', Blockly.Python.ORDER_ATOMIC);
        var text_no = Blockly.Python.valueToCode(block, 'no', Blockly.Python.ORDER_ATOMIC);
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_letter + ' in range(' + text_no + '):\n' + branch;
        return code;
    };
    Python['advancedforloops'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_x = Blockly.Python.valueToCode(block, 'x', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'y', Blockly.Python.ORDER_ATOMIC);
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_x + ' in ' + text_y + ':\n' + branch;
        return code;
    };
    Python['ifequals'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_this = block.getFieldValue('this');
        var text_that = block.getFieldValue('that');
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'if ' + text_this + ' == ' + text_that + ':\n' + branch;
        return code;
    };
    Python['importinputs'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import inputs\n';
        return code;
    };
    Python['return2'] = function (block) {
        var text_return = Blockly.Python.valueToCode(block, 'return', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'return ' + text_return + '\n';
        return code;
    };
    Python['elif'] = function (block) {
        var text_const = block.getFieldValue('var');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'elif ' + text_const + ':\n' + branch;
    };
    Python['else'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'else:\n' + branch;
    };
    Python['df'] = function (block) {
        var text_def = Blockly.Python.valueToCode(block, 'def', Blockly.Python.ORDER_ATOMIC);
        var text_params = Blockly.Python.valueToCode(block, 'params', Blockly.Python.ORDER_ATOMIC);
        var code = text_def + '(' + text_params + ')\n';
        return code;
    };
    Python['whileout'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, 'cond', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var code = 'while ' + text_1 + ':\n' + branch;
        return code;
    };
    Python['time'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'import time\n';
        return code;
    };
    Python['import_math'] = function (block) {
        var code = 'import math\n';
        return code;
    };
    Python['import_audio'] = function (block) {
        var code = 'import audio\n';
        return code;
    };
    Python['sleep'] = function (block) {
        var text_sleeptime = block.getFieldValue('sleep');
        var code = 'sleep(' + text_sleeptime + ')\n';
        return code;
    };
    Python['print'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'print', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['sleepnew'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'sleep', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'time.sleep(' + value_name + ')\n';
        return code;
    };
    Python['printnew'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC)
            || 'Hello World';
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['equalsblocknew'] = function (block) {
        var value_text1 = Blockly.Python.valueToCode(block, 'text1', Blockly.Python.ORDER_ATOMIC);
        var value_text2 = Blockly.Python.valueToCode(block, 'text2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_text1 + ' = ' + value_text2 + '\n';
        return code;
    };
    Python['define'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, '1', Blockly.Python.ORDER_ATOMIC);
        var text_2 = Blockly.Python.valueToCode(block, '2', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // const statements_name = Blockly.Python.statementToCode(block, 'NAME');
        // TODO: Assemble Python into code variable.
        var code = 'def ' + text_1 + '(' + text_2 + '):\n' + branch;
        return code;
    };
    Python['greater'] = function (block) {
        var text_1 = block.getFieldValue('1');
        var text_v = block.getFieldValue('v');
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        // TODO: Assemble Python into code variable.
        var code = 'while ' + text_1 + ' > ' + text_v + ':\n' + branch;
        return code;
    };
    Python['buttonapressed'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        // TODO: Assemble Python into code variable.
        var code = 'button_' + dropdown_name + '.is_pressed()';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['ifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        var code = 'if ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['typeanything'] = function (block) {
        var text_stuff = Blockly.Python.valueToCode(block, 'stuff', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = text_stuff + '# your own code\n';
        return code;
    };
    Python['elifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        // const statements_ifstate = Blockly.Python.statementToCode(block, 'ifstate');
        // TODO: Assemble Python into code variable.
        var code = 'elif ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['internal'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('choose');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['andor'] = Python['internal'];
    Python['not'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'not ' + value_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['break'] = function (block) {
        var code = 'break\n ';
        return code;
    };
    Python['textinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['stringinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = '"' + text_text + '"';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['sliderinline'] = function (block) {
        var text_text = block.getFieldValue('slider');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['varinlines'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('var'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'value', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
    Python['boolstatus'] = function (block) {
        var dropdown_bool = block.getFieldValue('bool');
        var code = dropdown_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['create_list'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("list"), "list")
                .appendField(" = [");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("]");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#15BAD4");
            this.setTooltip("Create a list");
            this.setHelpUrl("");
        }
    };
    Blocks['calllist'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("list"), "list");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#15BAD4");
            this.setTooltip("Call a list");
            this.setHelpUrl("");
        }
    };
    Blocks['selectlist'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("list"), "list")
                .appendField("[");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("]");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#15BAD4");
            this.setTooltip("Pick from a list");
            this.setHelpUrl("");
        }
    };
    Blocks['selectlist2'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("list"), "list")
                .appendField("[");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("]");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#15BAD4");
            this.setTooltip("Pick from a list");
            this.setHelpUrl("");
        }
    };
    Blocks['optionlist'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("list"), "list")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["append", "append"], ["insert", "insert"], ["extend", "extend"], ["pop", "pop"], ["remove", "remove"]]), "options")
                .appendField("(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#15BAD4");
            this.setTooltip("Do a variety of actions with a list");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['create_list'] = function (block) {
        var variable_list = Blockly.Python.variableDB_.getName(block.getFieldValue('list'), Blockly.Variables.NAME_TYPE);
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_list + ' = [' + value_text + ']\n';
        return code;
    };
    Python['calllist'] = function (block) {
        var variable_list = Blockly.Python.variableDB_.getName(block.getFieldValue('list'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_list;
        return code;
    };
    Python['selectlist'] = function (block) {
        var variable_list = Blockly.Python.variableDB_.getName(block.getFieldValue('list'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_list + '[' + value_name + ']\n';
        return code;
    };
    Python['selectlist2'] = function (block) {
        var variable_list = Blockly.Python.variableDB_.getName(block.getFieldValue('list'), Blockly.Variables.NAME_TYPE);
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_list + '[' + value_name + ']';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['optionlist'] = function (block) {
        var variable_list = Blockly.Python.variableDB_.getName(block.getFieldValue('list'), Blockly.Variables.NAME_TYPE);
        var dropdown_options = block.getFieldValue('options');
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_list + '.' + dropdown_options + '(' + value_text + ')\n';
        return code;
    };
}
exports.default = define;

},{}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['webifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('if');
            this.appendValueInput("iftext")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#49B04D");
            this.setTooltip('If block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['webelifinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('elif');
            this.appendValueInput('iftext')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('ifstate')
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#49B04D");
            this.setTooltip('ElIf block with inline input');
            this.setHelpUrl('');
        },
    };
    Blocks['webelse'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('else:');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#49B04D");
            this.setTooltip('Else statement');
            this.setHelpUrl('');
        },
    };
    Blocks['webinternal'] = {
        init: function () {
            // should you translate to other languages
            // var rtlOperators = [
            //     // ['=', 'EQ'],
            //     // ['\u2260', 'NEQ'],
            //     ['\u200F<\u200F', 'LT'],
            //     ['\u200F\u2264\u200F', 'LTE'],
            //     ['\u200F>\u200F', 'GT'],
            //     ['\u200F\u2265\u200F', 'GTE']
            //   ];
            var ltrOperators = [
                ['==', '=='],
                ['!=', '!='],
                ['<', '<'],
                ['<=', '<='],
                ['>', '>'],
                ['>=', '>=']
            ];
            var OPERATORS = ltrOperators;
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown(OPERATORS), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#49B04D");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['webandor'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["and", "and"], ["or", "or"]]), "choose");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#49B04D");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['webnot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('not');
            this.appendValueInput("bool")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#49B04D");
            this.setTooltip('negates a Boolean value');
            this.setHelpUrl('http://www.example.com/');
        },
    };
}
exports.default = define;

},{}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['webifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        var code = 'if ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['webelifinline'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'ifstate');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var value_iftext = Blockly.Python.valueToCode(block, 'iftext', Blockly.Python.ORDER_ATOMIC);
        // const statements_ifstate = Blockly.Python.statementToCode(block, 'ifstate');
        // TODO: Assemble Python into code variable.
        var code = 'elif ' + value_iftext + ':\n' + branch;
        return code;
    };
    Python['webelse'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        return 'else:\n' + branch;
    };
    Python['webinternal'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('choose');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['webandor'] = Python['webinternal'];
    Python['webnot'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'not ' + value_bool;
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],91:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['webwhileout'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('while');
            this.appendValueInput("cond")
                .setCheck("Boolean");
            this.appendDummyInput()
                .appendField(':');
            this.appendStatementInput('DO')
                .appendField('');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#644A9E");
            this.setTooltip('');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['webfor'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('letter')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in range(');
            this.appendValueInput('no')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('):');
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#644A9E");
            this.setTooltip('');
            this.setHelpUrl('Create a for loop');
        },
    };
    Blocks['webadvancedforloops'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('for');
            this.appendValueInput('x')
                .setCheck(null);
            this.appendDummyInput()
                .appendField('in');
            this.appendValueInput('y')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(":");
            this.appendStatementInput('DO')
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#644A9E");
            this.setTooltip('');
            this.setHelpUrl('');
        },
    };
    Blocks['web_break'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("break");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#644A9E");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['loop_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("i"), "VAR");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#644A9E");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],92:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['webwhileout'] = function (block) {
        var text_1 = Blockly.Python.valueToCode(block, 'cond', Blockly.Python.ORDER_ATOMIC);
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var code = 'while ' + text_1 + ':\n' + branch;
        return code;
    };
    Python['webfor'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_letter = Blockly.Python.valueToCode(block, 'letter', Blockly.Python.ORDER_ATOMIC);
        var text_no = Blockly.Python.valueToCode(block, 'no', Blockly.Python.ORDER_ATOMIC);
        // const statements_name = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_letter + ' in range(' + text_no + '):\n' + branch;
        return code;
    };
    Python['webadvancedforloops'] = function (block) {
        var branch = Blockly.Python.statementToCode(block, 'DO');
        branch = Blockly.Python.addLoopTrap(branch, block.id) || Blockly.Python.PASS;
        var text_x = Blockly.Python.valueToCode(block, 'x', Blockly.Python.ORDER_ATOMIC);
        var text_y = Blockly.Python.valueToCode(block, 'y', Blockly.Python.ORDER_ATOMIC);
        // const statements_do = Blockly.Python.statementToCode(block, 'DO');
        // TODO: Assemble Python into code variable.
        var code = 'for ' + text_x + ' in ' + text_y + ':\n' + branch;
        return code;
    };
    Python['web_break'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'break\n';
        return code;
    };
    Python['loop_get'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_var;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],93:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var math_col = "#1B173D";
    Blocks['operators2'] = {
        init: function () {
            this.appendValueInput("first")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["+", "+"], ["-", "-"], ["/", "/"], ["%", "%"], ["*", "*"]]), "operators");
            this.appendValueInput("last")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#1B173D");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_acos'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.acos(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_acosh'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.acosh(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_asin'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.asin(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_asinh'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.asinh(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_atan'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.atan(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_atanh'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.atanh(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_ceil'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.ceil(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_cos'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.cos(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_cosh'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.cosh(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_degrees'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.degrees(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_exp'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.exp(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_fabs'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.fabs(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_factorial'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.factorial(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_floor'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.floor(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_hypot'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.hypot(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_log'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.log(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_log10'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.log10(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_pow'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.pow(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_radians'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.radians(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_sin'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.sin(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_sinh'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.sinh(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_st'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.sqrt(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_tan'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.tan(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_tanh'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.tanh(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['math_trunc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("math.trunc(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(math_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],94:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['operators2'] = function (block) {
        var value_first = Blockly.Python.valueToCode(block, 'first', Blockly.Python.ORDER_ATOMIC);
        var text_choose = block.getFieldValue('operators');
        var value_last = Blockly.Python.valueToCode(block, 'last', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_first + ' ' + text_choose + ' ' + value_last;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_acos'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.acos(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_acosh'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.acosh(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_asin'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.asin(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_asinh'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.asinh(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_atan'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.atan(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_atanh'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.atanh(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_ceil'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.ceil(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_cos'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.cos(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_cosh'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.cosh(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_degrees'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.degrees(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_radians'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.radians(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_exp'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.exp(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_fabs'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.fabs(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_factorial'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.factorial(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_floor'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.floor(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_hypot'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.hypot(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_log'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.log(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_log10'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.log10(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_pow'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.pow(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_sin'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.sin(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_sinh'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.sinh(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_st'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.sqrt(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_tan'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.tan(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_tanh'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.tanh(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['math_trunc'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'math.trunc(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],95:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var pro_col = "#c51a4a";
    Blocks['p_arc'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("arc(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_background'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("background(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_blue'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("blue(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(pro_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_red'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("red(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(pro_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_green'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("green(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(pro_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_colorMode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("colorMode(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_ellipse'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("ellipse(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_ellipseMode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("ellipseMode(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_exit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("exit()");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_fill'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("fill(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_colorMode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("colorMode(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_framerate_set'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("frameRate(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_framerate_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("frameRate");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(pro_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("get(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(pro_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_line'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("line(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_loadPixels'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("loadPixels(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_loop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("loop(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_noloop'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("noLoop(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_nofill'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("noFill(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_nosmooth'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("nosmooth(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_smooth'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("smooth(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_nostroke'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("noFill(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_point'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("point(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_quad'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("quad(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_rect'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("rect(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_rectmode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("rectmode(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_rotate'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("rotate(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_run'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("run()");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_scale'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("scale(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_set'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("set(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_size'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("size(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_stroke'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("stroke(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_nostroke'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("noStroke(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_stroke3'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("stroke")
                .appendField(new Blockly.FieldDropdown([["Cap", "Cap"], ["Join", "Join"], ["Weight", "Weight"]]), "NAME")
                .appendField("(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_text'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("text(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_translate'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("translate(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['p_triangle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("triangle(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(pro_col);
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],96:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['p_arc'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'arc(' + value_text + ')\n';
        return code;
    };
    Python['p_background'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'background(' + value_text + ')\n';
        return code;
    };
    Python['p_blue'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'blue(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['p_green'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'green(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['p_red'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'red(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['p_colorMode'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'colorMode(' + value_text + ')\n';
        return code;
    };
    Python['p_ellipse'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'ellipse(' + value_text + ')\n';
        return code;
    };
    Python['p_ellipseMode'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'ellipseMode(' + value_text + ')\n';
        return code;
    };
    Python['p_exit'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'exit()\n';
        return code;
    };
    Python['p_fill'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'fill(' + value_text + ')\n';
        return code;
    };
    Python['p_colorMode'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'colorMode(' + value_text + ')\n';
        return code;
    };
    Python['p_framerate_set'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'frameRate(' + value_text + ')\n';
        return code;
    };
    Python['p_framrate_get'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'framerate';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['p_line'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'line(' + value_text + ')\n';
        return code;
    };
    Python['p_loadPixels'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'loadPixels(' + value_text + ')\n';
        return code;
    };
    Python['p_loop'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'loop(' + value_text + ')\n';
        return code;
    };
    Python['p_noloop'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'noloop(' + value_text + ')\n';
        return code;
    };
    Python['p_nofill'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'nofill(' + value_text + ')\n';
        return code;
    };
    Python['p_nosmooth'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'nosmooth(' + value_text + ')\n';
        return code;
    };
    Python['p_smooth'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'smooth(' + value_text + ')\n';
        return code;
    };
    Python['p_point'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'point(' + value_text + ')\n';
        return code;
    };
    Python['p_quad'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'quad(' + value_text + ')\n';
        return code;
    };
    Python['p_rect'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'rect(' + value_text + ')\n';
        return code;
    };
    Python['p_rectmode'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'rectmode(' + value_text + ')\n';
        return code;
    };
    Python['p_rotate'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'rotate(' + value_text + ')\n';
        return code;
    };
    Python['p_run'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'run()\n';
        return code;
    };
    Python['p_scale'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'scale(' + value_text + ')\n';
        return code;
    };
    Python['p_set'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'set(' + value_text + ')\n';
        return code;
    };
    Python['p_size'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'size(' + value_text + ')\n';
        return code;
    };
    Python['p_stroke'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'stroke(' + value_text + ')\n';
        return code;
    };
    Python['p_nostroke'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'noStroke(' + value_text + ')\n';
        return code;
    };
    Python['p_stroke3'] = function (block) {
        var dropdown_name = block.getFieldValue('NAME');
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'stroke' + dropdown_name + '(' + value_text + ')\n';
        return code;
    };
    Python['p_text'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'text(' + value_text + ')\n';
        return code;
    };
    Python['p_translate'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'translate(' + value_text + ')\n';
        return code;
    };
    Python['p_triangle'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'triangle(' + value_text + ')\n';
        return code;
    };
}
exports.default = define;

},{}],97:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    var rand_col = "#8BC248";
    Blocks['random_choice'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.choice(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Choose a random element from a non-empty sequence.");
            this.setHelpUrl("");
        }
    };
    Blocks['random_randint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.randint(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Return random integer in range [a, b], including both end points.");
            this.setHelpUrl("");
        }
    };
    Blocks['random_uniform'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.uniform(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Return random decimal in range [a, b], including both end points.");
            this.setHelpUrl("");
        }
    };
    Blocks['random_random'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.random(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("random() -> x in the interval [0, 1).");
            this.setHelpUrl("");
        }
    };
    Blocks['random_randrange'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.randrange(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Choose a random item from range(start, stop[, step]).");
            this.setHelpUrl("");
        }
    };
    Blocks['random_seed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.seed(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Initialize internal state from hashable object.");
            this.setHelpUrl("");
        }
    };
    Blocks['random_shuffle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("random.shuffle(");
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour(rand_col);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Shuffle list");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],98:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['random_choice'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.choice(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['random_randint'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.randint(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['random_uniform'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.uniform(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['random_random'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.random(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['random_randrange'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.randrange(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['random_seed'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.seed(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['random_shuffle'] = function (block) {
        var value_text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'random.shuffle(' + value_text + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],99:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['websleepnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("time.sleep(");
            this.appendValueInput("sleep")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip("Wait (in milliseconds)");
            this.setHelpUrl("");
        }
    };
    Blocks['webtypeanything'] = {
        init: function () {
            this.appendValueInput("stuff")
                .setCheck(null);
            this.appendDummyInput()
                .appendField("# your own code");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip("Type any python code into this block");
            this.setHelpUrl("");
        }
    };
    Blocks['webdf'] = {
        init: function () {
            this.appendValueInput("def")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('(');
            this.appendValueInput("params")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip('call a define function');
            this.setHelpUrl('');
        },
    };
    Blocks['webpass'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('pass');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip('Pass to the next command');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['webprintnew'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print("');
            this.appendValueInput("text")
                .setCheck(null);
            this.appendDummyInput()
                .appendField('" )');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip('Use this to print a string to the output box.');
            this.setHelpUrl('');
        },
    };
    Blocks['global'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('global ');
            this.appendValueInput("text")
                .setCheck(null);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip('Make a variable global');
            this.setHelpUrl('');
        },
    };
    Blocks['webvarprint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('print(');
            this.appendValueInput('var')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(')');
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour('#F89621');
            this.setTooltip('Use this to print a variable, a number, or even a string if you put in the quotes yourself.');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['webint'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('int(');
            this.appendValueInput("bool")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour('#F89621');
            this.setTooltip('Changes to an int');
            this.setHelpUrl('http://www.example.com/');
        },
    };
    Blocks['webcomma'] = {
        init: function () {
            this.appendValueInput("in1")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(new Blockly.FieldDropdown([["+", "+"], [",", ","]]), "commadd");
            this.appendValueInput("in2")
                .setCheck(null);
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour('#F89621');
        }
    };
    Blocks['input_web'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("input(");
            this.appendValueInput("NAME")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour('#F89621');
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['webstr'] = {
        init: function () {
            this.appendDummyInput()
                .appendField('str(');
            this.appendValueInput("bool")
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour('#F89621');
            this.setTooltip('Changes to an str');
            this.setHelpUrl('http://www.example.com/');
        },
    };
}
exports.default = define;

},{}],100:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['websleepnew'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'sleep', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'time.sleep(' + value_name + ')\n';
        return code;
    };
    Python['webtypeanything'] = function (block) {
        var text_stuff = Blockly.Python.valueToCode(block, 'stuff', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = text_stuff + '# your own code\n';
        return code;
    };
    Python['webdf'] = function (block) {
        var text_def = Blockly.Python.valueToCode(block, 'def', Blockly.Python.ORDER_ATOMIC);
        var text_params = Blockly.Python.valueToCode(block, 'params', Blockly.Python.ORDER_ATOMIC);
        var code = text_def + '(' + text_params + ')\n';
        return code;
    };
    Python['webpass'] = function (block) {
        var code = 'pass \n';
        return code;
    };
    Python['webprintnew'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print("' + text_print + '")\n';
        return code;
    };
    Python['global'] = function (block) {
        var text_print = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'global ' + text_print + '\n';
        return code;
    };
    Python['webvarprint'] = function (block) {
        var text_const = Blockly.Python.valueToCode(block, 'var', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'print(' + text_const + ')\n';
        return code;
    };
    Python['webint'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'int(' + value_bool + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['webcomma'] = function (block) {
        var value_in1 = Blockly.Python.valueToCode(block, 'in1', Blockly.Python.ORDER_ATOMIC);
        var dropdown_commadd = block.getFieldValue('commadd');
        var value_in2 = Blockly.Python.valueToCode(block, 'in2', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = value_in1 + dropdown_commadd + value_in2;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['webstr'] = function (block) {
        var value_bool = Blockly.Python.valueToCode(block, 'bool', Blockly.Python.ORDER_ATOMIC);
        var code = 'str(' + value_bool + ')';
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['input_web'] = function (block) {
        var value_name = Blockly.Python.valueToCode(block, 'NAME', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = 'input(' + value_name + ')';
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],101:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['import_turtle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField("from turtle import *");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Import Turtle library");
            this.setHelpUrl("");
        }
    };
    Blocks['turtle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(" = Turtle()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Initialize the turtle");
            this.setHelpUrl("");
        }
    };
    Blocks['screeninit'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("screen"), "wn")
                .appendField(" = Screen()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Initialize the Turtle screen");
            this.setHelpUrl("");
        }
    };
    Blocks['background'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("screen"), "wn")
                .appendField(".bgcolor(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the background");
            this.setHelpUrl("");
        }
    };
    Blocks['directions'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".")
                .appendField(new Blockly.FieldDropdown([["forward", "forward"], ["left", "left"], ["right", "right"], ["backward", "backward"]]), "options")
                .appendField("(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Make the turtle move");
            this.setHelpUrl("");
        }
    };
    Blocks['penud'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".pen")
                .appendField(new Blockly.FieldDropdown([["up", "up"], ["down", "down"]]), "options")
                .appendField("()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Pen up and down");
            this.setHelpUrl("");
        }
    };
    Blocks['pen'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".pen()");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Initialize the pen");
            this.setHelpUrl("");
        }
    };
    Blocks['colourpen'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".pencolor(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the colour");
            this.setHelpUrl("");
        }
    };
    Blocks['colour'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".color(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the colour");
            this.setHelpUrl("");
        }
    };
    Blocks['colourmode'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("screen"), "wn")
                .appendField(".colormode(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the colourmode");
            this.setHelpUrl("");
        }
    };
    Blocks['penwidth'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".width(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the width");
            this.setHelpUrl("");
        }
    };
    Blocks['turtlespeed'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".speed(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the speed");
            this.setHelpUrl("");
        }
    };
    Blocks['turtleshape'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".shape(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Change the shape");
            this.setHelpUrl("");
        }
    };
    Blocks['circle'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".circle(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("Draw a circle");
            this.setHelpUrl("");
        }
    };
    Blocks['goto'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("turtle"), "turtle")
                .appendField(".goto(");
            this.appendValueInput('text')
                .setCheck(null);
            this.appendDummyInput()
                .appendField(")");
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour(240);
            this.setTooltip("go to x&y");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],102:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['import_turtle'] = function (block) {
        // TODO: Assemble Python into code variable.
        var code = 'from turtle import *\n';
        return code;
    };
    Python['turtle'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + ' = Turtle()\n';
        return code;
    };
    Python['screeninit'] = function (block) {
        var variable_wn = Blockly.Python.variableDB_.getName(block.getFieldValue('wn'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_wn + ' = Screen()\n';
        return code;
    };
    Python['background'] = function (block) {
        var variable_wn = Blockly.Python.variableDB_.getName(block.getFieldValue('wn'), Blockly.Variables.NAME_TYPE);
        var text_color = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_wn + '.bgcolor(' + text_color + ')\n';
        return code;
    };
    Python['directions'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var dropdown_options = block.getFieldValue('options');
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.' + dropdown_options + '(' + text_dist + ')\n';
        return code;
    };
    Python['penud'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var dropdown_options = block.getFieldValue('options');
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.pen' + dropdown_options + '()\n';
        return code;
    };
    Python['pen'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.Pen()\n';
        return code;
    };
    Python['colourpen'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.pencolor(' + text_dist + ')\n';
        return code;
    };
    Python['colour'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.color(' + text_dist + ')\n';
        return code;
    };
    Python['colourmode'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('wn'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.colormode(' + text_dist + ')\n';
        return code;
    };
    Python['penwidth'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.width(' + text_dist + ')\n';
        return code;
    };
    Python['turtlespeed'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.speed(' + text_dist + ')\n';
        return code;
    };
    Python['turtleshape'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.shape(' + text_dist + ')\n';
        return code;
    };
    Python['circle'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.circle(' + text_dist + ')\n';
        return code;
    };
    Python['goto'] = function (block) {
        var variable_turtle = Blockly.Python.variableDB_.getName(block.getFieldValue('turtle'), Blockly.Variables.NAME_TYPE);
        var text_dist = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_turtle + '.goto(' + text_dist + ')\n';
        return code;
    };
}
exports.default = define;

},{}],103:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Blocks) {
    Blocks['variables_get'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable("var"), "VAR");
            this.setOutput(true, null);
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setColour("#0000CD");
            this.setTooltip("");
            this.setHelpUrl("");
        }
    };
    Blocks['variables_set'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldVariable(""), "VAR")
                .appendField(new Blockly.FieldDropdown([['=', '='], ['+=', '+='], ["-=", "-="]]), 'NAME');
            this.appendValueInput("varset")
                .setCheck(null);
            this.setInputsInline(true);
            this.setPreviousStatement(true, null);
            this.setNextStatement(true, null);
            this.setColour("#0000CD");
            this.setTooltip("assign a value, increment, or decrement a variable");
            this.setHelpUrl("");
        }
    };
    Blocks['textinline'] = {
        init: function () {
            this.appendDummyInput()
                .appendField(new Blockly.FieldTextInput(""), "text");
            this.setInputsInline(true);
            this.setOutput(true, null);
            this.setColour("#FFFFFF", "#FFFFFF", "#FFFFFF");
            this.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);
            this.setTooltip("Text input for inline input");
            this.setHelpUrl("");
        }
    };
}
exports.default = define;

},{}],104:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function define(Python) {
    Python['variables_get'] = function (block) {
        var variable_var = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        // TODO: Assemble Python into code variable.
        var code = variable_var;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
    Python['variables_set'] = function (block) {
        var variable_name = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);
        var text_text = block.getFieldValue('NAME');
        var value_name = Blockly.Python.valueToCode(block, 'varset', Blockly.Python.ORDER_ATOMIC);
        // TODO: Assemble Python into code variable.
        var code = variable_name + ' ' + text_text + ' ' + value_name + '\n';
        return code;
    };
    Python['textinline'] = function (block) {
        var text_text = block.getFieldValue('text');
        // TODO: Assemble Python into code variable.
        var code = text_text;
        // TODO: Change ORDER_NONE to the correct strength.
        return [code, Blockly.Python.ORDER_ATOMIC];
    };
}
exports.default = define;

},{}],105:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fileSaver = require("file-saver");
function getIo() {
    return getWebIo();
}
exports.getIo = getIo;
function getWebIo() {
    function openFile() {
        return new Promise(function (resolve, reject) {
            var fileInput = document.createElement('input');
            fileInput.type = 'file';
            fileInput.accept = '.xml';
            fileInput.addEventListener('change', readSingleFile, false);
            fileInput.click();
            function readSingleFile(e) {
                var file = e.target.files[0];
                if (!file)
                    return;
                var reader = new FileReader();
                var newFileName = file.name.replace(".xml", "");
                document.getElementById("filename").value = newFileName;
                reader.onload = function (e) {
                    var contents = e.target.result;
                    resolve(contents);
                };
                reader.onerror = function () {
                    reject(new Error('Reader error'));
                };
                reader.readAsText(file);
            }
        });
    }
    /**
     * Save a file to the user's computer
     * @param text Data to save
     * @param ext Suggested file name extension, i.e. 'xml'
     */
    function saveFile(fileName, data, ext, type) {
        var disableAutoBOM = true;
        if (!fileName)
            return Promise.resolve(void 0);
        if (ext && fileName.slice(-4) !== "." + ext)
            fileName = fileName + "." + ext;
        var blob = new Blob([data], { type: type });
        fileSaver.saveAs(blob, fileName, disableAutoBOM);
        return Promise.resolve(void 0);
    }
    return {
        openFile: openFile,
        saveFile: saveFile,
    };
}

},{"file-saver":161}],106:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var proxy_1 = require("../proxy");
var cmsis_dap_1 = require("../proxy/cmsis-dap");
/**
 * Arm Debug Interface class
 */
var ADI = /** @class */ (function () {
    function ADI(transportOrDap, mode, clockFrequency) {
        if (mode === void 0) { mode = 0 /* DEFAULT */; }
        if (clockFrequency === void 0) { clockFrequency = cmsis_dap_1.DEFAULT_CLOCK_FREQUENCY; }
        function isTransport(test) {
            return test.open !== undefined;
        }
        this.proxy = isTransport(transportOrDap) ? new proxy_1.CmsisDAP(transportOrDap, mode, clockFrequency) : transportOrDap;
    }
    ADI.prototype.delay = function (timeout) {
        return new Promise(function (resolve, _reject) {
            setTimeout(resolve, timeout);
        });
    };
    /**
     * Continually run a function until it returns true
     * @param fn The function to run
     * @param timer The milliseconds to wait between each run
     * @param timeout Optional timeout to wait before giving up and rejecting
     * @returns Promise
     */
    ADI.prototype.waitDelay = function (fn, timer, timeout) {
        var _this = this;
        if (timer === void 0) { timer = 100; }
        if (timeout === void 0) { timeout = 0; }
        var running = true;
        var chain = function (condition) {
            if (!running)
                return Promise.resolve();
            return condition
                ? Promise.resolve()
                : _this.delay(timer)
                    .then(fn)
                    .then(chain);
        };
        return new Promise(function (resolve, reject) {
            if (timeout > 0) {
                setTimeout(function () {
                    running = false;
                    reject("Wait timed out");
                }, timeout);
            }
            return chain(false)
                .then(function () { return resolve(); });
        });
    };
    ADI.prototype.concatTypedArray = function (arrays) {
        // Only one array exists
        if (arrays.length === 1)
            return arrays[0];
        // Determine array length
        var length = 0;
        for (var _i = 0, arrays_1 = arrays; _i < arrays_1.length; _i++) {
            var array = arrays_1[_i];
            length += array.length;
        }
        // Concat the arrays
        var result = new Uint32Array(length);
        for (var i = 0, j = 0; i < arrays.length; i++) {
            result.set(arrays[i], j);
            j += arrays[i].length;
        }
        return result;
    };
    ADI.prototype.readDPCommand = function (register) {
        return [{
                mode: 2 /* READ */,
                port: 0 /* DEBUG */,
                register: register
            }];
    };
    ADI.prototype.writeDPCommand = function (register, value) {
        if (register === 8 /* SELECT */) {
            if (value === this.selectedAddress) {
                return [];
            }
            this.selectedAddress = value;
        }
        return [{
                mode: 0 /* WRITE */,
                port: 0 /* DEBUG */,
                register: register,
                value: value
            }];
    };
    ADI.prototype.readAPCommand = function (register) {
        var address = (register & 4278190080 /* APSEL */) | (register & 240 /* APBANKSEL */);
        return this.writeDPCommand(8 /* SELECT */, address).concat({
            mode: 2 /* READ */,
            port: 1 /* ACCESS */,
            register: register
        });
    };
    ADI.prototype.writeAPCommand = function (register, value) {
        if (register === 0 /* CSW */) {
            if (value === this.cswValue) {
                return [];
            }
            this.cswValue = value;
        }
        var address = (register & 4278190080 /* APSEL */) | (register & 240 /* APBANKSEL */);
        return this.writeDPCommand(8 /* SELECT */, address).concat({
            mode: 0 /* WRITE */,
            port: 1 /* ACCESS */,
            register: register,
            value: value
        });
    };
    ADI.prototype.readMem16Command = function (register) {
        return this.writeAPCommand(0 /* CSW */, 587202640 /* VALUE */ | 1 /* SIZE_16 */)
            .concat(this.writeAPCommand(4 /* TAR */, register))
            .concat(this.readAPCommand(12 /* DRW */));
    };
    ADI.prototype.writeMem16Command = function (register, value) {
        return this.writeAPCommand(0 /* CSW */, 587202640 /* VALUE */ | 1 /* SIZE_16 */)
            .concat(this.writeAPCommand(4 /* TAR */, register))
            .concat(this.writeAPCommand(12 /* DRW */, value));
    };
    ADI.prototype.readMem32Command = function (register) {
        return this.writeAPCommand(0 /* CSW */, 587202640 /* VALUE */ | 2 /* SIZE_32 */)
            .concat(this.writeAPCommand(4 /* TAR */, register))
            .concat(this.readAPCommand(12 /* DRW */));
    };
    ADI.prototype.writeMem32Command = function (register, value) {
        return this.writeAPCommand(0 /* CSW */, 587202640 /* VALUE */ | 2 /* SIZE_32 */)
            .concat(this.writeAPCommand(4 /* TAR */, register))
            .concat(this.writeAPCommand(12 /* DRW */, value));
    };
    ADI.prototype.transferSequence = function (operations) {
        var _this = this;
        // Flatten operations into single array
        var merged = [];
        merged = merged.concat.apply(merged, operations);
        var chain = Promise.resolve([]);
        var _loop_1 = function () {
            var sequence = merged.splice(0, this_1.proxy.operationCount);
            chain = chain.then(function (results) { return _this.proxy.transfer(sequence).then(function (result) { return results.concat([result]); }); });
        };
        var this_1 = this;
        // Split operations into sequences no longer than operation count
        while (merged.length) {
            _loop_1();
        }
        return chain
            .then(function (arrays) { return _this.concatTypedArray(arrays); });
    };
    /**
     * Connect to target device
     * @returns Promise
     */
    ADI.prototype.connect = function () {
        var _this = this;
        var mask = 536870912 /* CDBGPWRUPACK */ | -2147483648 /* CSYSPWRUPACK */;
        return this.proxy.connect()
            .then(function () { return _this.readDP(0 /* DPIDR */); })
            .then(function () { return _this.transferSequence([
            _this.writeDPCommand(0 /* ABORT */, 4 /* STKERRCLR */),
            _this.writeDPCommand(8 /* SELECT */, 0 /* CSW */),
            _this.writeDPCommand(4 /* CTRL_STAT */, 1073741824 /* CSYSPWRUPREQ */ | 268435456 /* CDBGPWRUPREQ */)
        ]); })
            // Wait until system and debug have powered up
            .then(function () { return _this.waitDelay(function () {
            return _this.readDP(4 /* CTRL_STAT */)
                .then(function (status) { return ((status & mask) === mask); });
        }); });
    };
    /**
     * Disconnect from target device
     * @returns Promise
     */
    ADI.prototype.disconnect = function () {
        return this.proxy.disconnect();
    };
    /**
     * Reconnect to target device
     * @returns Promise
     */
    ADI.prototype.reconnect = function () {
        var _this = this;
        return this.disconnect()
            .then(function () { return _this.delay(100); })
            .then(function () { return _this.connect(); });
    };
    /**
     * Reset target device
     * @returns Promise
     */
    ADI.prototype.reset = function () {
        return this.proxy.reset();
    };
    /**
     * Read from a debug port register
     * @param register DP register to read
     * @returns Promise of register value
     */
    ADI.prototype.readDP = function (register) {
        return this.proxy.transfer(this.readDPCommand(register))
            .then(function (result) { return result[0]; });
    };
    /**
     * Write to a debug port register
     * @param register DP register to write
     * @param value Value to write
     * @returns Promise
     */
    ADI.prototype.writeDP = function (register, value) {
        return this.proxy.transfer(this.writeDPCommand(register, value))
            .then(function () { return undefined; });
    };
    /**
     * Read from an access port register
     * @param register AP register to read
     * @returns Promise of register value
     */
    ADI.prototype.readAP = function (register) {
        return this.proxy.transfer(this.readAPCommand(register))
            .then(function (result) { return result[0]; });
    };
    /**
     * Write to an access port register
     * @param register AP register to write
     * @param value Value to write
     * @returns Promise
     */
    ADI.prototype.writeAP = function (register, value) {
        return this.proxy.transfer(this.writeAPCommand(register, value))
            .then(function () { return undefined; });
    };
    /**
     * Read a 16-bit word from a memory access port register
     * @param register ID of register to read
     * @returns Promise of register data
     */
    ADI.prototype.readMem16 = function (register) {
        return this.proxy.transfer(this.readMem16Command(register))
            .then(function (result) { return result[0]; });
    };
    /**
     * Write a 16-bit word to a memory access port register
     * @param register ID of register to write to
     * @param value The value to write
     * @returns Promise
     */
    ADI.prototype.writeMem16 = function (register, value) {
        value = value << ((register & 0x02) << 3);
        return this.proxy.transfer(this.writeMem16Command(register, value))
            .then(function () { return undefined; });
    };
    /**
     * Read a 32-bit word from a memory access port register
     * @param register ID of register to read
     * @returns Promise of register data
     */
    ADI.prototype.readMem32 = function (register) {
        return this.proxy.transfer(this.readMem32Command(register))
            .then(function (result) { return result[0]; });
    };
    /**
     * Write a 32-bit word to a memory access port register
     * @param register ID of register to write to
     * @param value The value to write
     * @returns Promise
     */
    ADI.prototype.writeMem32 = function (register, value) {
        return this.proxy.transfer(this.writeMem32Command(register, value))
            .then(function () { return undefined; });
    };
    /**
     * Read a block of 32-bit words from a memory access port register
     * @param register ID of register to read from
     * @param count The count of values to read
     * @returns Promise of register data
     */
    ADI.prototype.readBlock = function (register, count) {
        var _this = this;
        var chain = this.transferSequence([
            this.writeAPCommand(0 /* CSW */, 587202640 /* VALUE */ | 2 /* SIZE_32 */),
            this.writeAPCommand(4 /* TAR */, register),
        ])
            .then(function () { return []; });
        // Split into requests no longer than block size
        var remainder = count;
        var _loop_2 = function () {
            var chunkSize = Math.min(remainder, this_2.proxy.blockSize);
            chain = chain.then(function (results) { return _this.proxy.transferBlock(1 /* ACCESS */, 12 /* DRW */, chunkSize)
                .then(function (result) { return results.concat([result]); }); });
            remainder -= chunkSize;
        };
        var this_2 = this;
        while (remainder > 0) {
            _loop_2();
        }
        return chain
            .then(function (arrays) { return _this.concatTypedArray(arrays); });
    };
    /**
     * Write a block of 32-bit words to a memory access port register
     * @param register ID of register to write to
     * @param values The values to write
     * @returns Promise
     */
    ADI.prototype.writeBlock = function (register, values) {
        var _this = this;
        var chain = this.transferSequence([
            this.writeAPCommand(0 /* CSW */, 587202640 /* VALUE */ | 2 /* SIZE_32 */),
            this.writeAPCommand(4 /* TAR */, register),
        ])
            .then(function () { return undefined; });
        // Split values into chunks no longer than block size
        var index = 0;
        var _loop_3 = function () {
            var chunk = values.slice(index, index + this_3.proxy.blockSize);
            chain = chain.then(function () { return _this.proxy.transferBlock(1 /* ACCESS */, 12 /* DRW */, chunk); });
            index += this_3.proxy.blockSize;
        };
        var this_3 = this;
        while (index < values.length) {
            _loop_3();
        }
        return chain;
    };
    return ADI;
}());
exports.ADI = ADI;

},{"../proxy":113,"../proxy/cmsis-dap":112}],107:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var adi_1 = require("./adi");
exports.ADI = adi_1.ADI;

},{"./adi":106}],108:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var proxy_1 = require("../proxy");
/**
 * @hidden
 */
var DEFAULT_BAUDRATE = 9600;
/**
 * @hidden
 */
var DEFAULT_SERIAL_DELAY = 200;
/**
 * @hidden
 */
var DEFAULT_PAGE_SIZE = 62;
/**
 * DAPLink Class
 */
var DAPLink = /** @class */ (function (_super) {
    __extends(DAPLink, _super);
    function DAPLink() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Detect if buffer contains text or binary data
     */
    DAPLink.prototype.isBufferBinary = function (buffer) {
        var numberArray = Array.prototype.slice.call(new Uint16Array(buffer, 0, 50));
        var bufferString = String.fromCharCode.apply(null, numberArray);
        for (var i = 0; i < bufferString.length; i++) {
            var charCode = bufferString.charCodeAt(i);
            // 65533 is a code for unknown character
            // 0-8 are codes for control characters
            if (charCode === 65533 || charCode <= 8) {
                return true;
            }
        }
        return false;
    };
    DAPLink.prototype.writeBuffer = function (buffer, pageSize, offset) {
        var _this = this;
        if (offset === void 0) { offset = 0; }
        var end = Math.min(buffer.byteLength, offset + pageSize);
        var page = buffer.slice(offset, end);
        var data = new Uint8Array(page.byteLength + 1);
        data.set([page.byteLength]);
        data.set(new Uint8Array(page), 1);
        return this.send(140 /* WRITE */, data)
            .then(function () {
            _this.emit(DAPLink.EVENT_PROGRESS, offset / buffer.byteLength);
            if (end < buffer.byteLength) {
                return _this.writeBuffer(buffer, pageSize, end);
            }
            return Promise.resolve();
        });
    };
    /**
     * Flash the target
     * @param buffer The image to flash
     * @param pageSize The page size to use (defaults to 62)
     * @returns Promise
     */
    DAPLink.prototype.flash = function (buffer, pageSize) {
        var _this = this;
        if (pageSize === void 0) { pageSize = DEFAULT_PAGE_SIZE; }
        function isView(source) {
            return source.buffer !== undefined;
        }
        var arrayBuffer = isView(buffer) ? buffer.buffer : buffer;
        var streamType = this.isBufferBinary(arrayBuffer) ? 0 : 1;
        return this.send(138 /* OPEN */, new Uint32Array([streamType]))
            .then(function (result) {
            // An error occurred
            if (result.getUint8(1) !== 0)
                return Promise.reject("Flash error");
            return _this.writeBuffer(arrayBuffer, pageSize);
        })
            .then(function () {
            _this.emit(DAPLink.EVENT_PROGRESS, 1.0);
            return _this.send(139 /* CLOSE */);
        })
            .then(function (result) {
            // An error occurred
            if (result.getUint8(1) !== 0)
                return Promise.reject("Flash error");
            return _this.send(137 /* RESET */);
        })
            .then(function () { return undefined; });
    };
    /**
     * Get the serial baud rate setting
     * @returns Promise of baud rate
     */
    DAPLink.prototype.getSerialBaudrate = function () {
        return this.send(129 /* READ_SETTINGS */)
            .then(function (result) {
            return result.getUint32(1, true);
        });
    };
    /**
     * Set the serial baud rate setting
     * @param baudrate The baudrate to use (defaults to 9600)
     * @returns Promise
     */
    DAPLink.prototype.setSerialBaudrate = function (baudrate) {
        if (baudrate === void 0) { baudrate = DEFAULT_BAUDRATE; }
        return this.send(130 /* WRITE_SETTINGS */, new Uint32Array([baudrate]))
            .then(function () { return undefined; });
    };
    /**
     * Start listening for serial data
     * @param serialDelay The serial delay to use (defaults to 200)
     */
    DAPLink.prototype.startSerialRead = function (serialDelay) {
        var _this = this;
        if (serialDelay === void 0) { serialDelay = DEFAULT_SERIAL_DELAY; }
        this.stopSerialRead();
        this.timer = setInterval(function () {
            return _this.send(131 /* READ */)
                .then(function (serialData) {
                if (serialData.byteLength > 0) {
                    // check if there is any data returned from the device
                    // first byte contains the vendor code
                    // second byte contains the actual length of data read from the device
                    var dataLength = serialData.getUint8(1);
                    if (dataLength !== 0) {
                        var offset = 2;
                        var dataArray = serialData.buffer.slice(offset, offset + dataLength);
                        var numberArray = Array.prototype.slice.call(new Uint8Array(dataArray));
                        var data = String.fromCharCode.apply(null, numberArray);
                        _this.emit(DAPLink.EVENT_SERIAL_DATA, data);
                    }
                }
            });
        }, serialDelay);
    };
    /**
     * Stop listening for serial data
     */
    DAPLink.prototype.stopSerialRead = function () {
        if (this.timer) {
            clearInterval(this.timer);
            this.timer = undefined;
        }
    };
    /**
     * Write serial data
     * @param data The data to write
     * @returns Promise
     */
    DAPLink.prototype.serialWrite = function (data) {
        var arrayData = data.split("").map(function (e) { return e.charCodeAt(0); });
        arrayData.unshift(arrayData.length);
        return this.send(132 /* WRITE */, new Uint8Array(arrayData).buffer)
            .then(function () { return undefined; });
    };
    /**
     * Progress event
     * @event
     */
    DAPLink.EVENT_PROGRESS = "progress";
    /**
     * Serial read event
     * @event
     */
    DAPLink.EVENT_SERIAL_DATA = "serial";
    return DAPLink;
}(proxy_1.CmsisDAP));
exports.DAPLink = DAPLink;

},{"../proxy":113}],109:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var proxy_1 = require("./proxy");
exports.CmsisDAP = proxy_1.CmsisDAP;
var daplink_1 = require("./daplink");
exports.DAPLink = daplink_1.DAPLink;
var dap_1 = require("./dap");
exports.ADI = dap_1.ADI;
var processor_1 = require("./processor");
exports.CortexM = processor_1.CortexM;
var webusb_1 = require("./transport/webusb");
exports.WebUSB = webusb_1.WebUSB;

},{"./dap":107,"./daplink":108,"./processor":111,"./proxy":113,"./transport/webusb":114}],110:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var dap_1 = require("../dap");
/**
 * @hidden
 */
var EXECUTE_TIMEOUT = 10000;
/**
 * @hidden
 */
var BKPT_INSTRUCTION = 0xBE2A;
/**
 * @hidden
 */
var GENERAL_REGISTER_COUNT = 12;
/**
 * Cortex M class
 */
var CortexM = /** @class */ (function (_super) {
    __extends(CortexM, _super);
    function CortexM() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CortexM.prototype.enableDebug = function () {
        return this.writeMem32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ | 1 /* C_DEBUGEN */);
    };
    CortexM.prototype.readCoreRegisterCommand = function (register) {
        return this.writeMem32Command(3758157300 /* DCRSR */, register)
            .concat(this.readMem32Command(3758157296 /* DHCSR */))
            .concat(this.readMem32Command(3758157304 /* DCRDR */));
    };
    CortexM.prototype.writeCoreRegisterCommand = function (register, value) {
        return this.writeMem32Command(3758157304 /* DCRDR */, value)
            .concat(this.writeMem32Command(3758157300 /* DCRSR */, register | 65536 /* REGWnR */));
    };
    /**
     * Get the state of the processor core
     * @returns Promise of CoreState
     */
    CortexM.prototype.getState = function () {
        var _this = this;
        return this.readMem32(3758157296 /* DHCSR */)
            .then(function (dhcsr) {
            var state;
            if (dhcsr & 524288 /* S_LOCKUP */)
                state = 1 /* LOCKUP */;
            else if (dhcsr & 262144 /* S_SLEEP */)
                state = 2 /* SLEEPING */;
            else if (dhcsr & 131072 /* S_HALT */)
                state = 3 /* DEBUG */;
            else
                state = 4 /* RUNNING */;
            if (dhcsr & 33554432 /* S_RESET_ST */) {
                // The core has been reset, check if an instruction has run
                return _this.readMem32(3758157296 /* DHCSR */)
                    .then(function (newDhcsr) {
                    if (newDhcsr & 33554432 /* S_RESET_ST */ && !(newDhcsr & 16777216 /* S_RETIRE_ST */)) {
                        return 0 /* RESET */;
                    }
                    else {
                        return state;
                    }
                });
            }
            else {
                return state;
            }
        });
    };
    /**
     * Whether the target is halted
     * @returns Promise of halted state
     */
    CortexM.prototype.isHalted = function () {
        return this.readMem32(3758157296 /* DHCSR */)
            .then(function (dhcsr) {
            return !!(dhcsr & 131072 /* S_HALT */);
        });
    };
    /**
     * Halt the target
     * @param wait Wait until halted before returning
     * @param timeout Milliseconds to wait before aborting wait
     * @returns Promise
     */
    CortexM.prototype.halt = function (wait, timeout) {
        var _this = this;
        if (wait === void 0) { wait = true; }
        if (timeout === void 0) { timeout = 0; }
        return this.isHalted()
            .then(function (halted) {
            if (halted)
                return Promise.resolve();
            return _this.writeMem32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ | 1 /* C_DEBUGEN */ | 2 /* C_HALT */)
                .then(function () {
                if (!wait)
                    return Promise.resolve();
                return _this.waitDelay(function () { return _this.isHalted(); }, 100, timeout);
            });
        });
    };
    /**
     * Resume a target
     * @param wait Wait until resumed before returning
     * @param timeout Milliseconds to wait before aborting wait
     * @returns Promise
     */
    CortexM.prototype.resume = function (wait, timeout) {
        var _this = this;
        if (wait === void 0) { wait = true; }
        if (timeout === void 0) { timeout = 0; }
        return this.isHalted()
            .then(function (halted) {
            if (!halted)
                return Promise.resolve();
            return _this.writeMem32(3758157104 /* DFSR */, 4 /* DWTTRAP */ | 2 /* BKPT */ | 1 /* HALTED */)
                .then(function () { return _this.enableDebug(); })
                .then(function () {
                if (!wait)
                    return Promise.resolve();
                return _this.waitDelay(function () { return _this.isHalted().then(function (result) { return !result; }); }, 100, timeout);
            });
        });
    };
    /**
     * Read from a core register
     * @param register The register to read
     * @returns Promise of value
     */
    CortexM.prototype.readCoreRegister = function (register) {
        var _this = this;
        return this.transferSequence([
            this.writeMem32Command(3758157300 /* DCRSR */, register),
            this.readMem32Command(3758157296 /* DHCSR */),
        ])
            .then(function (results) {
            var dhcsr = results[0];
            if (!(dhcsr & 65536 /* S_REGRDY */)) {
                throw new Error('Register not ready');
            }
            return _this.readMem32(3758157304 /* DCRDR */);
        });
    };
    /**
     * Read an array of core registers
     * @param registers The registers to read
     * @returns Promise of register values in an array
     */
    CortexM.prototype.readCoreRegisters = function (registers) {
        var _this = this;
        var chain = Promise.resolve([]);
        registers.forEach(function (register) {
            chain = chain.then(function (results) { return _this.readCoreRegister(register).then(function (result) { return results.concat([result]); }); });
        });
        return chain;
    };
    /**
     * Write to a core register
     * @param register The register to write to
     * @param value The value to write
     * @returns Promise
     */
    CortexM.prototype.writeCoreRegister = function (register, value) {
        return this.transferSequence([
            this.writeMem32Command(3758157304 /* DCRDR */, value),
            this.writeMem32Command(3758157300 /* DCRSR */, register | 65536 /* REGWnR */),
            this.readMem32Command(3758157296 /* DHCSR */),
        ])
            .then(function (results) {
            var dhcsr = results[0];
            if (!(dhcsr & 65536 /* S_REGRDY */)) {
                throw new Error('Register not ready');
            }
        });
    };
    /**
     * Exucute code at a specified memory address
     * @param address The address to put the code
     * @param code The code to use
     * @param stackPointer The stack pointer to use
     * @param programCounter The program counter to use
     * @param linkRegister The link register to use (defaults to address + 1)
     * @param registers Values to add to the general purpose registers, R0, R1, R2, etc.
     */
    CortexM.prototype.execute = function (address, code, stackPointer, programCounter, linkRegister) {
        var _this = this;
        if (linkRegister === void 0) { linkRegister = address + 1; }
        var registers = [];
        for (var _i = 5; _i < arguments.length; _i++) {
            registers[_i - 5] = arguments[_i];
        }
        // Ensure a breakpoint exists at the end of the code
        if (code[code.length - 1] !== BKPT_INSTRUCTION) {
            var newCode = new Uint32Array(code.length + 1);
            newCode.set(code);
            newCode.set([BKPT_INSTRUCTION], code.length - 1);
            code = newCode;
        }
        // Create sequence of core register writes
        var sequence = [
            this.writeCoreRegisterCommand(13 /* SP */, stackPointer),
            this.writeCoreRegisterCommand(15 /* PC */, programCounter),
            this.writeCoreRegisterCommand(14 /* LR */, linkRegister),
        ];
        // Add in register values R0, R1, R2, etc.
        for (var i = 0; i < Math.min(registers.length, GENERAL_REGISTER_COUNT); i++) {
            sequence.push(this.writeCoreRegisterCommand(i, registers[i]));
        }
        return this.halt() // Halt the target
            .then(function () { return _this.transferSequence(sequence); }) // Write the registers
            .then(function () { return _this.writeBlock(address, code); }) // Write the code to the address
            .then(function () { return _this.resume(false); }) // Resume the target, without waiting
            .then(function () { return _this.waitDelay(function () { return _this.isHalted(); }, 100, EXECUTE_TIMEOUT); }); // Wait for the target to halt on the breakpoint
    };
    return CortexM;
}(dap_1.ADI));
exports.CortexM = CortexM;

},{"../dap":107}],111:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var cortex_m_1 = require("./cortex-m");
exports.CortexM = cortex_m_1.CortexM;

},{"./cortex-m":110}],112:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = require("events");
/**
 * @hidden
 */
exports.DEFAULT_CLOCK_FREQUENCY = 10000000;
/**
 * @hidden
 */
var SWD_SEQUENCE = 0xE79E;
/**
 * @hidden
 */
var JTAG_SEQUENCE = 0xE73C;
/**
 * @hidden
 */
var BLOCK_HEADER_SIZE = 4;
/**
 * @hidden
 */
var TRANSFER_HEADER_SIZE = 2;
/**
 * @hidden
 */
var TRANSFER_OPERATION_SIZE = 5;
/**
 * CMSIS-DAP class
 * https://www.keil.com/pack/doc/CMSIS/DAP/html/group__DAP__Commands__gr.html
 */
var CmsisDAP = /** @class */ (function (_super) {
    __extends(CmsisDAP, _super);
    /**
     * CMSIS-DAP constructor
     * @param transport Debug transport to use
     * @param mode Debug mode to use
     * @param clockFrequency Communication clock frequency to use (default 10000000)
     */
    function CmsisDAP(transport, mode, clockFrequency) {
        if (mode === void 0) { mode = 0 /* DEFAULT */; }
        if (clockFrequency === void 0) { clockFrequency = exports.DEFAULT_CLOCK_FREQUENCY; }
        var _this = _super.call(this) || this;
        _this.transport = transport;
        _this.mode = mode;
        _this.clockFrequency = clockFrequency;
        // Determine the block size
        _this.blockSize = _this.transport.packetSize - BLOCK_HEADER_SIZE - 1; // -1 for the DAP_TRANSFER_BLOCK command
        // Determine the operation count possible
        var operationSpace = _this.transport.packetSize - TRANSFER_HEADER_SIZE - 1; // -1 for the DAP_TRANSFER command
        _this.operationCount = Math.floor(operationSpace / TRANSFER_OPERATION_SIZE);
        return _this;
    }
    CmsisDAP.prototype.delay = function (timeout) {
        return new Promise(function (resolve, _reject) {
            setTimeout(resolve, timeout);
        });
    };
    CmsisDAP.prototype.bufferSourceToUint8Array = function (prefix, data) {
        if (!data) {
            return new Uint8Array([prefix]);
        }
        function isView(source) {
            return source.buffer !== undefined;
        }
        var arrayBuffer = isView(data) ? data.buffer : data;
        var result = new Uint8Array(arrayBuffer.byteLength + 1);
        result.set([prefix]);
        result.set(new Uint8Array(arrayBuffer), 1);
        return result;
    };
    /**
     * Switches the CMSIS-DAP unit to use SWD
     * http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0316d/Chdhfbhc.html
     */
    CmsisDAP.prototype.selectProtocol = function (protocol) {
        var _this = this;
        var sequence = protocol === 2 /* JTAG */ ? JTAG_SEQUENCE : SWD_SEQUENCE;
        return this.swjSequence(new Uint8Array([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF])) // Sequence of 1's
            .then(function () { return _this.swjSequence(new Uint16Array([sequence])); }) // Send protocol sequence
            .then(function () { return _this.swjSequence(new Uint8Array([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF])); }) // Sequence of 1's
            .then(function () { return _this.swjSequence(new Uint8Array([0x00])); });
    };
    /**
     * Send a command
     * @param command Command to send
     * @param data Data to use
     * @returns Promise of DataView
     */
    CmsisDAP.prototype.send = function (command, data) {
        var _this = this;
        var array = this.bufferSourceToUint8Array(command, data);
        return this.transport.write(array)
            .then(function () { return _this.transport.read(); })
            .then(function (response) {
            if (response.getUint8(0) !== command) {
                throw new Error("Bad response for " + command + " -> " + response.getUint8(0));
            }
            switch (command) {
                case 3 /* DAP_DISCONNECT */:
                case 8 /* DAP_WRITE_ABORT */:
                case 9 /* DAP_DELAY */:
                case 10 /* DAP_RESET_TARGET */:
                case 17 /* DAP_SWJ_CLOCK */:
                case 18 /* DAP_SWJ_SEQUENCE */:
                case 19 /* DAP_SWD_CONFIGURE */:
                case 29 /* DAP_SWD_SEQUENCE */:
                case 23 /* DAP_SWO_TRANSPORT */:
                case 24 /* DAP_SWO_MODE */:
                case 26 /* DAP_SWO_CONTROL */:
                case 21 /* DAP_JTAG_CONFIGURE */:
                case 22 /* DAP_JTAG_ID_CODE */:
                case 4 /* DAP_TRANSFER_CONFIGURE */:
                    if (response.getUint8(1) !== 0 /* DAP_OK */) {
                        throw new Error("Bad status for " + command + " -> " + response.getUint8(1));
                    }
            }
            return response;
        });
    };
    /**
     * Get DAP information
     * @param request Type of information to get
     * @returns Promise of number or string
     */
    CmsisDAP.prototype.dapInfo = function (request) {
        return this.send(0 /* DAP_INFO */, new Uint8Array([request]))
            .then(function (result) {
            var length = result.getUint8(1);
            if (length === 0) {
                throw new Error("DAP Info Failure");
            }
            switch (request) {
                case 240 /* CAPABILITIES */:
                case 254 /* PACKET_COUNT */:
                case 255 /* PACKET_SIZE */:
                case 253 /* SWO_TRACE_BUFFER_SIZE */:
                    // Byte
                    if (length === 1)
                        return result.getUint8(2);
                    // Short
                    if (length === 2)
                        return result.getUint16(2);
                    // Word
                    if (length === 4)
                        return result.getUint32(2);
            }
            var ascii = Array.prototype.slice.call(new Uint8Array(result.buffer, 2, length));
            return String.fromCharCode.apply(null, ascii);
        });
    };
    /**
     * Send an SWJ Sequence
     * https://www.keil.com/pack/doc/CMSIS/DAP/html/group__DAP__SWJ__Sequence.html
     * @param sequence The sequence to send
     * @returns Promise
     */
    CmsisDAP.prototype.swjSequence = function (sequence) {
        var bitLength = sequence.byteLength * 8;
        var data = this.bufferSourceToUint8Array(bitLength, sequence);
        return this.send(18 /* DAP_SWJ_SEQUENCE */, data)
            .then(function () { return undefined; });
    };
    /**
     * Configure Transfer
     * https://www.keil.com/pack/doc/CMSIS/DAP/html/group__DAP__TransferConfigure.html
     * @param idleCycles Number of extra idle cycles after each transfer
     * @param waitRetry Number of transfer retries after WAIT response
     * @param matchRetry Number of retries on reads with Value Match in DAP_Transfer
     * @returns Promise
     */
    CmsisDAP.prototype.configureTransfer = function (idleCycles, waitRetry, matchRetry) {
        var data = new Uint8Array(5);
        var view = new DataView(data.buffer);
        view.setUint8(0, idleCycles);
        view.setUint16(1, waitRetry, true);
        view.setUint16(3, matchRetry, true);
        return this.send(4 /* DAP_TRANSFER_CONFIGURE */, data)
            .then(function () { return undefined; });
    };
    /**
     * Connect to target device
     * @returns Promise
     */
    CmsisDAP.prototype.connect = function () {
        var _this = this;
        return this.transport.open()
            .then(function () { return _this.send(17 /* DAP_SWJ_CLOCK */, new Uint32Array([_this.clockFrequency])); })
            .then(function () { return _this.send(2 /* DAP_CONNECT */, new Uint8Array([_this.mode])); })
            .then(function (result) {
            if (result.getUint8(1) === 0 /* FAILED */ || _this.mode !== 0 /* DEFAULT */ && result.getUint8(1) !== _this.mode) {
                throw new Error("Mode not enabled.");
            }
        })
            .then(function () { return _this.configureTransfer(0, 100, 0); })
            .then(function () { return _this.selectProtocol(1 /* SWD */); });
    };
    /**
     * Disconnect from target device
     * @returns Promise
     */
    CmsisDAP.prototype.disconnect = function () {
        var _this = this;
        return this.send(3 /* DAP_DISCONNECT */)
            .then(function () {
            return _this.transport.close();
        });
    };
    /**
     * Reconnect to target device
     * @returns Promise
     */
    CmsisDAP.prototype.reconnect = function () {
        var _this = this;
        return this.disconnect()
            .then(function () { return _this.delay(100); })
            .then(function () { return _this.connect(); });
    };
    /**
     * Reset target device
     * @returns Promise of whether a device specific reset sequence is implemented
     */
    CmsisDAP.prototype.reset = function () {
        return this.send(10 /* DAP_RESET_TARGET */)
            .then(function (response) { return response.getUint8(2) === 1 /* RESET_SEQUENCE */; });
    };
    CmsisDAP.prototype.transfer = function (portOrOps, mode, register, value) {
        if (mode === void 0) { mode = 2 /* READ */; }
        if (register === void 0) { register = 0; }
        if (value === void 0) { value = 0; }
        var operations;
        if (typeof portOrOps === "number") {
            operations = [{
                    port: portOrOps,
                    mode: mode,
                    register: register,
                    value: value
                }];
        }
        else {
            operations = portOrOps;
        }
        var data = new Uint8Array(TRANSFER_HEADER_SIZE + (operations.length * TRANSFER_OPERATION_SIZE));
        var view = new DataView(data.buffer);
        // DAP Index, ignored for SWD
        view.setUint8(0, 0);
        // Transfer count
        view.setUint8(1, operations.length);
        operations.forEach(function (operation, index) {
            var offset = TRANSFER_HEADER_SIZE + (index * TRANSFER_OPERATION_SIZE);
            // Transfer request
            view.setUint8(offset, operation.port | operation.mode | operation.register);
            // Transfer data
            view.setUint32(offset + 1, operation.value || 0, true);
        });
        return this.send(5 /* DAP_TRANSFER */, data)
            .then(function (result) {
            // Transfer count
            if (result.getUint8(1) !== operations.length) {
                throw new Error("Transfer count mismatch");
            }
            // Transfer response
            var response = result.getUint8(2);
            if (response === 2 /* WAIT */) {
                throw new Error("Transfer response WAIT");
            }
            if (response === 4 /* FAULT */) {
                throw new Error("Transfer response FAULT");
            }
            if (response === 8 /* PROTOCOL_ERROR */) {
                throw new Error("Transfer response PROTOCOL_ERROR");
            }
            if (response === 16 /* VALUE_MISMATCH */) {
                throw new Error("Transfer response VALUE_MISMATCH");
            }
            if (response === 7 /* NO_ACK */) {
                throw new Error("Transfer response NO_ACK");
            }
            if (typeof portOrOps === "number") {
                return result.getUint32(3, true);
            }
            var length = operations.length * 4;
            return new Uint32Array(result.buffer.slice(3, 3 + length));
        });
    };
    CmsisDAP.prototype.transferBlock = function (port, register, countOrValues) {
        var operationCount;
        var mode;
        var dataSize = BLOCK_HEADER_SIZE;
        if (typeof countOrValues === "number") {
            operationCount = countOrValues;
            mode = 2 /* READ */;
        }
        else {
            operationCount = countOrValues.length;
            mode = 0 /* WRITE */;
            dataSize += countOrValues.byteLength;
        }
        var data = new Uint8Array(dataSize);
        var view = new DataView(data.buffer);
        // DAP Index, ignored for SWD
        view.setUint8(0, 0);
        // Transfer count
        view.setUint16(1, operationCount, true);
        // Transfer request
        view.setUint8(3, port | mode | register);
        if (typeof countOrValues !== "number") {
            // Transfer data
            data.set(countOrValues, BLOCK_HEADER_SIZE);
        }
        return this.send(6 /* DAP_TRANSFER_BLOCK */, view)
            .then(function (result) {
            // Transfer count
            if (result.getUint16(1, true) !== operationCount) {
                throw new Error("Transfer count mismatch");
            }
            // Transfer response
            var response = result.getUint8(3);
            if (response & 2 /* WAIT */) {
                throw new Error("Transfer response WAIT");
            }
            if (response & 4 /* FAULT */) {
                throw new Error("Transfer response FAULT");
            }
            if (response & 8 /* PROTOCOL_ERROR */) {
                throw new Error("Transfer response PROTOCOL_ERROR");
            }
            if (response & 7 /* NO_ACK */) {
                throw new Error("Transfer response NO_ACK");
            }
            if (typeof countOrValues === "number") {
                return new Uint32Array(result.buffer.slice(4));
            }
            return undefined;
        });
    };
    return CmsisDAP;
}(events_1.EventEmitter));
exports.CmsisDAP = CmsisDAP;

},{"events":160}],113:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var cmsis_dap_1 = require("./cmsis-dap");
exports.CmsisDAP = cmsis_dap_1.CmsisDAP;

},{"./cmsis-dap":112}],114:[function(require,module,exports){
"use strict";
/*
* DAPjs
* Copyright Arm Limited 2018
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @hidden
 */
var DEFAULT_CONFIGURATION = 1;
/**
 * @hidden
 */
var DEFAULT_CLASS = 0xFF;
/**
 * @hidden
 */
var GET_REPORT = 0x01;
/**
 * @hidden
 */
var SET_REPORT = 0x09;
/**
 * @hidden
 */
var OUT_REPORT = 0x200;
/**
 * @hidden
 */
var IN_REPORT = 0x100;
/**
 * WebUSB Transport class
 * https://wicg.github.io/webusb/
 */
var WebUSB = /** @class */ (function () {
    /**
     * WebUSB constructor
     * @param device WebUSB device to use
     * @param interfaceClass Optional interface class to use (default: 0xFF)
     * @param configuration Optional Configuration to use (default: 1)
     */
    function WebUSB(device, interfaceClass, configuration) {
        if (interfaceClass === void 0) { interfaceClass = DEFAULT_CLASS; }
        if (configuration === void 0) { configuration = DEFAULT_CONFIGURATION; }
        this.device = device;
        this.interfaceClass = interfaceClass;
        this.configuration = configuration;
        this.packetSize = 64;
    }
    WebUSB.prototype.extendBuffer = function (data, packetSize) {
        function isView(source) {
            return source.buffer !== undefined;
        }
        var arrayBuffer = isView(data) ? data.buffer : data;
        var length = Math.min(arrayBuffer.byteLength, packetSize);
        var result = new Uint8Array(length);
        result.set(new Uint8Array(arrayBuffer));
        return result;
    };
    /**
     * Open device
     * @returns Promise
     */
    WebUSB.prototype.open = function () {
        var _this = this;
        return this.device.open()
            .then(function () { return _this.device.selectConfiguration(_this.configuration); })
            .then(function () {
            var interfaces = _this.device.configuration.interfaces.filter(function (iface) {
                return iface.alternates[0].interfaceClass === _this.interfaceClass;
            });
            if (!interfaces.length) {
                throw new Error("No valid interfaces found.");
            }
            _this.interfaceNumber = interfaces[0].interfaceNumber;
            return _this.device.claimInterface(_this.interfaceNumber);
        });
    };
    /**
     * Close device
     * @returns Promise
     */
    WebUSB.prototype.close = function () {
        return this.device.close();
    };
    /**
     * Read from device
     * @returns Promise of DataView
     */
    WebUSB.prototype.read = function () {
        if (!this.interfaceNumber)
            return Promise.reject("No device opened");
        return this.device.controlTransferIn({
            requestType: "class",
            recipient: "interface",
            request: GET_REPORT,
            value: IN_REPORT,
            index: this.interfaceNumber
        }, this.packetSize)
            .then(function (result) { return result.data; });
    };
    /**
     * Write to device
     * @param data Data to write
     * @returns Promise
     */
    WebUSB.prototype.write = function (data) {
        if (!this.interfaceNumber)
            return Promise.reject("No device opened");
        var buffer = this.extendBuffer(data, this.packetSize);
        return this.device.controlTransferOut({
            requestType: "class",
            recipient: "interface",
            request: SET_REPORT,
            value: OUT_REPORT,
            index: this.interfaceNumber
        }, buffer)
            .then(function () { return undefined; });
    };
    return WebUSB;
}());
exports.WebUSB = WebUSB;

},{}],115:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

var path = require("path");
var firmware = ":020000040000FA\n:1000000000400020099C0100459C0100479C010024\n:1000100000000000000000000000000000000000E0\n:10002000000000000000000000000000499C0100EA\n:1000300000000000000000004B9C01004D9C0100EE\n:100040004F9C0100096D0000119101004F9C0100BF\n:100050004F9C010000000000A19701004F9C01008F\n:10006000FD020000A58E0100F19901004F9C0100E6\n:100070004F9C01004F9C01004F9C01004F9C0100D0\n:100080004F9C01004F9C01004F9C01004F9C0100C0\n:100090004F9C0100418A01000D8B010039040000D2\n:1000A000490400004F9C0100000000000000000017\n:1000B0000000000000000000000000000000000040\n:1000C00010B5064C2378002B07D1054B002B02D02E\n:1000D000044800E000BF0123237010BD2001002070\n:1000E0000000000050810300044B10B5002B03D02A\n:1000F0000349044800E000BF10BDC04600000000F6\n:100100002401002050810300164B002B00D1144B1A\n:100110009D46402292029A1A924600218B460F4633\n:100120001348144A121A28F075F90F4B002B00D00F\n:1001300098470E4B002B00D0984700200021040068\n:100140000D000D48002802D00C4800E000BF1FF051\n:1001500003FF2000290027F0FFFD1FF049FEC046E5\n:100160000000080000400020000000000000000027\n:1001700018010020E02F0020000000000000000017\n:1001800010B50C0022F03EFC631E184207D002009E\n:1001900023000349034814F0F5F803F00DF910BDEE\n:1001A0007EF50200F0DD020010B54A680249D20077\n:1001B00020F021FE10BDC046A6F5020070B50B0070\n:1001C00006001400101E0FD071681800042A0ED10A\n:1001D000FFF7D6FF7368012B03D0022B05D0006810\n:1001E00000E0007822F0D1FB70BD0088FAE7FFF74D\n:1001F000C7FF0500200007F03FFC726803000548B8\n:10020000012A03D0022A03D02B60EDE72B70EBE725\n:100210002B80E9E7388D02008022044B52001A60DF\n:100220000123034A1360034A1360704700E100E0B2\n:100230000C8C0040008000408022054B5200DA67A1\n:10024000044BFF3A5A600022034B1A607047C046C5\n:1002500004E100E0008000400C8C004070B50025F7\n:1002600001261E4B1E4C1D601E4B18601E4BE65097\n:10027000C046FFF7E1FF1D4B1D4AE660E250022237\n:100280001C4BFF20E5500433E25008339218E25033\n:10029000C12380229B001203E250053BFF3BE55047\n:1002A000C2244022144BA400195981430A438021DF\n:1002B0001A510C341A5909061202120A0A431A5129\n:1002C000C0220434195981430A431A51802212046E\n:1002D0001A60802252041A6070BDC046782E002039\n:1002E000008000404C010020FC0F00004C05000085\n:1002F000701700000405000000E100E070B51F4C1D\n:100300001F4D636C002B0AD0002363641D4B1B68D8\n:100310009847A823DB00EA5800018018E850A36C36\n:10032000002B09D00023A364164B5B689847164B3B\n:100330000001EA588018E850E36C002B0AD0002333\n:10034000E364104B9B689847A923DB00EA5800013F\n:100350008018E850236D002B0ED000230B4A236534\n:10036000AB580B495B18AB500A4A1368063313604D\n:100370008022094B12045A6070BDC046FC800040C8\n:100380000080004004000020440500004C050000EF\n:1003900070170000782E0020FCE100E0F7B5019115\n:1003A000032823D8134B8000C758C223124D9B004B\n:1003B000EF50012344192364A8230F210F4EDB00C3\n:1003C0009C46E358AE59921BD218D3170B409A188B\n:1003D00001990B4B1211C150C1239B00EF50634692\n:1003E0000020013212019619E650FEBD0120404264\n:1003F000FBE7C046548A0200008000404C05000024\n:100400000400002003280BD8074B8000C158C223EA\n:10041000064A9B00D150064B064AC2500020704746\n:1004200001204042FBE7C046548A020000800040A1\n:1004300004000020C10A020010B5024B1B68984757\n:1004400010BDC0464C01002010B50024054AA10093\n:100450008B58002B02D00020885098470134042C80\n:10046000F4D110BD3C010020074A89008B58002BB5\n:1004700006D1885080211800044A49045160704711\n:1004800001204042FBE7C0463C010020FCE100E0C7\n:1004900000B58BB013F040F8684620F014FB054B14\n:1004A000D968091A890812F0F3FF13F04DF80BB060\n:1004B00000BDC046802E0020F0B5060087B000AF1A\n:1004C0007B60F960BA600EF08DFDB06821F045F8F0\n:1004D0003861B06821F047F821F03FF80323584312\n:1004E0003B69C01883001D007B6114352C2B2CD870\n:1004F0006B460E35ED08ED005B1B9D4600236C46F8\n:100500007B61002326606360BA687B68F96820001D\n:1005100003F0C8FB154D00216B6820002361736850\n:100520006B6004F0B9FE2369061E6B6013D1A368EB\n:100530001D687B69002B04D0200020F014FF002EE2\n:1005400011D12800BD4607B0F0BD280020F0E9FE1B\n:10055000041ED6D1CCE73B6903339B00E3185D68EA\n:100560007B69002BE8D1280002F026FF802E0020B6\n:100570000122030030B5134085B004004510002B64\n:1005800014D125491D00884210D0244988420DD03D\n:10059000234B1500984209D00323034009D1214A77\n:1005A0000168914205D122F02DFA0500280005B01E\n:1005B00030BD1D4A25002240062A05D0002B08D157\n:1005C0001A4B22689A4204D101A9200009F0DAF8F6\n:1005D000EBE7200007F03CF9154B984207D1FF23C9\n:1005E000DB05E018032398431AF022FDDDE7114BE9\n:1005F000984202D0104B984206D101AA69462000C9\n:1006000007F0B0FA019DD1E7022201A9200021F0F4\n:1006100098FD0028CAD0F5E7388D020068DE020098\n:1006200070DE02005C970200070080FF9CC602009B\n:1006300054B30200D49B020088980200F7B506006C\n:100640000F0000920193041E00D044683800431E3E\n:10065000984120180430800020F056FE0C4B050015\n:1006600003600C4B5B684360009B8360019BC3602D\n:10067000002E05D03100A2000831103027F0AEFE68\n:10068000002F02D00434A40067512800FEBDC046EC\n:100690009C8A0200802E002070B5060010200D00FC\n:1006A000140020F031FE034B466085600360C46097\n:1006B00070BDC046608A0200F0B5802787B02B4D20\n:1006C00002907F422C78002C1CD063B2002B12DAEF\n:1006D0006E787C40E4B2002E14D0013CE4B2FF2CD2\n:1006E00002D101350135EDE704AB981D01210670FB\n:1006F00007F052F8F1E704ABD81D0121047007F0B0\n:100700004BF8EFE70527029821F0E7FC0124BC42F3\n:1007100027DA0025164E2200290030000DF0E8F9F6\n:100720006B4601901B79002B15D0631E1A0029001F\n:10073000300003930DF0DCF9031E0CD122002900D8\n:1007400030000DF0A1F9FF22019B29001340300079\n:10075000621E0DF099F90135052DDBD10134E4B2AB\n:10076000D5E7013F002FCED107B0F0BDB6F50200AE\n:100770001800002010B5C820FFF79EFF004810BDEC\n:10078000388D0200F0B587B0039205910D9A039958\n:100790000500521A0CA9097820200C00844339D096\n:1007A00030293BD00CA902910121802401911C40E9\n:1007B00036D0D40FA4186410171B002C37DD260088\n:1007C000019B0493B34200DD04966B68049A02997E\n:1007D00028689847049BF61A002EF1DC039B002B37\n:1007E00006D01A0005996B6828689847039BE4189F\n:1007F000002F0CDDE419019EBE4200DD3E003200F8\n:10080000029928686B689847BF1B002FF3DC200013\n:1008100007B0F0BD074902911021C6E70649FAE783\n:1008200001271F4001D11400C7E71700D6E70024B5\n:10083000D4E7C04666F6020077F60200F0B593B042\n:100840001C0018AB20CB05901B780F0016000793F7\n:10085000CB070BD48B0703D1854B0A689A4205D08E\n:10086000380007F0DDF801274000074381231D42CF\n:1008700009D1079B302B06D11A9B1B9A934200DAB1\n:100880001A9200231B93380022F05CF80AAA130086\n:10089000002806DBAB070FD52B231370123B04AAED\n:1008A0009B18E1B2EA0615D5022E0CD130221A703F\n:1008B0004A1C5A7002330DE013006A07F1D520225A\n:1008C0001A701923EBE7082E3BD130221A70AA05C3\n:1008D00034D4013300220AA81A701B1A2C20069364\n:1008E000AB06DB1718400EAB0B9310230C931B9B2E\n:1008F0000D92012B01DD40231D43402404ABDA752A\n:100900002C400390029123D03B00019200960DAA47\n:100910000CA90BA802F054FC037807002D2B00D083\n:100920008EE004AAD3750D9B1B9A013B01370D93F2\n:10093000012A00DD97E00026340035E00A000E327F\n:10094000B7E7102EC6D130221A700A001732B0E76E\n:100950000AAB019300963B000DAA0CA90BA802F06C\n:100960002FFC1B9B07002600012B1DDD0D9B1B9CF4\n:100970009C4200DA1C001A9BA3425EDD01261C1B70\n:100980002E4001D02600002401239D432F330793DE\n:10099000002C09D0103B0093002301941A00354924\n:1009A0000598FFF7EFFE04006B0621D5172104AB75\n:1009B000C9180B78002B0AD0002301220093019262\n:1009C0000598FFF7DFFE1A9B2418013B1A93069B3C\n:1009D000002B0DD0012301930023069A00930AA94E\n:1009E0000598FFF7CFFE1A9B069A24189B1A1A93B4\n:1009F0001B9B012B01DC1A9B1B931B9B0D9A0193E4\n:100A0000079B3900009305982B00FFF7BBFE2418C5\n:100A1000002E09D020230093002301961A001549C7\n:100A20000598FFF7AFFE24180B980EAB984201D043\n:100A300020F099FC200013B0F0BD00263400A3E79D\n:100A40001B9B012B00DC76E70D9B1B9C9C4200DA74\n:100A50001C00172304AA9B181B78002B00D001341C\n:100A6000069BE41887E71B9C9C42F8DA1C00F6E71B\n:100A70005C970200FC0B0300F0B506001400002791\n:100A80008DB00D002B78002B15D1A94217D30B7810\n:100A9000002B00D148E14B1C049320230025302279\n:100AA000082104200893049B1B78002B11D1069386\n:100AB000013B07935FE0252BE7D00135E2E76B1A96\n:100AC00004931A00306873689847049B2900FF1844\n:100AD000DDE72D2B05D12C3B1D43049B01330493F3\n:100AE000E1E72B2B01D1293BF6E7202B01D1054370\n:100AF000F3E7212B01D10D43EFE7302B2CD110333D\n:100B00001D430892E9E7069A4A43D318303B0693FF\n:100B1000049B01330493049B1B781A00303A092A82\n:100B2000F1D92E2B47D1049B5B782A2B18D0049B3C\n:100B30000A210133049300230793049B1B781A00B6\n:100B4000303A092A17D8079A4A43D318303B0793FB\n:100B5000049B01330493F0E700230A210693DAE7AC\n:100B6000049B02330493236804340793DB43079AFE\n:100B7000DB171A400792049B1B786C3B5A42534187\n:100B8000049AD31804931B780593002B00D1CBE073\n:100B9000642B00D1A1E022D8502B29D00ED8453BA0\n:100BA000022B00D8A9E001220499306873689847A5\n:100BB0000137099452E001235B427AE7059B622BDF\n:100BC0003CD057D8582BEED1231D0993069B019595\n:100BD0000393089B029341230093313B7BE0059BE9\n:100BE000712B53D00FD8672B00D886E0702BDAD149\n:100BF000231D0993069B01950393089B0293612390\n:100C00000093513B67E0059B752B5AD0782BEFD0B2\n:100C1000732BC8D1231D24680993002C49D0079B4E\n:100C2000013303D1200027F049FC0790069B079A67\n:100C30000193089B210000932B000BE0231D0993D7\n:100C40002368002B0ED0069B04220193089B384991\n:100C500000932B003000FFF795FD3F180499099C85\n:100C600001310EE7069B05220193089B3149009351\n:100C70002B00EFE7231D099323680BA90B70069B3C\n:100C800001220193089B00932B00E3E7231D0BA98E\n:100C90002068099321F00CFF079B0100013301D16B\n:100CA0000B9B0793069B079A0193089B00932B00CD\n:100CB000D0E7069B06220193089B1F4900932B0057\n:100CC000C8E7231D0993069B01950393089B029394\n:100CD00061230093573B00220AE0231D0993069BE2\n:100CE00001220393089B0195029361230093573BD4\n:100CF000216830001FF0CDFFAFE7072307349C4386\n:100D0000230020686168083309931BF0DDFF079B0F\n:100D1000011C0293069B059A0193089B30000093E7\n:100D20002B0020F023F898E738000DB0F0BDC04646\n:100D300054F6020059F602005FF6020010B50400F6\n:100D4000431C02D0024813F07BFB024B1C6010BD19\n:100D5000A82E00207C2E0020014B024A9A64704786\n:100D6000802E0020A82E002070B50D0006F0BCFEDD\n:100D7000041C280006F0B8FE211C19F07FFF051C9A\n:100D800020F044F8011C281C19F046FE211C19F023\n:100D9000D1FA0323020002209A43024B1043C018E9\n:100DA00070BDC0460000808010B520F02FF80323EE\n:100DB000020002209A43024B1043C01810BDC046E7\n:100DC0000000808010B5074C002802D00868A042BF\n:100DD00003D115F09DF9200010BD06F04DFE15F071\n:100DE000B7F9F8E7388D020010B5040006F08AFF65\n:100DF00006F016FE002803DC0021064824F069FCFA\n:100E000015F060F921F0C1FD04220100200006F078\n:100E10008FFF10BD6CDA0200F0B5060000248BB025\n:100E2000194B1A48E15806F041FB03AFE051043476\n:100E30001C2CF5D114230024734301930025AB002F\n:100E4000F958134822F043FF0135300021F045F9ED\n:100E5000072DF4D1013DAB000D48F95822F037FFC2\n:100E6000300021F03AF9013DF5D20134082C03D1CC\n:100E70000CF0EAFD0BB0F0BD01231C42DED101985D\n:100E800021F02BF9DAE7C046048D0200BC91020084\n:100E90001800002010B51920FFF7BEFF004810BD54\n:100EA000388D0200054B10B59A6C002A04D0002240\n:100EB000986C9A6402F080FA10BDC046802E002023\n:100EC0000F2310B51940012908D00300002909D0CB\n:100ED000022909D121F059FD030003E0044B002849\n:100EE00000D1044B180010BD21F06AFDF4E7C046A4\n:100EF00070DE020068DE0200F0B585B00C0008F07C\n:100F00000BF803AA070002A9200006F02BFE029EA0\n:100F1000039B35001035AD002800019320F0F4F953\n:100F200004002C221030002127F074FA676027009B\n:100F3000104BE6632360104B019EA3600F4B403DB6\n:100F4000E3600F4B403763610E4B7519A3610E4B85\n:100F5000E3610E4B23620E4B63620E4B6363AE4242\n:100F600002D1200005B0F0BD01CE07F0D5FF01C7CA\n:100F7000F5E7C046ACD00200990F0000F90F000061\n:100F8000554E0000ED4E0000BD0F0000ED4F00007B\n:100F9000E14D0000D49B020070B50C0005000B6809\n:100FA00005495A681FF027FF2168280040312200B8\n:100FB00003F0E8FE70BDC04657760300136870B5B5\n:100FC000002B10D10568EE6BB34200D170BD9C00C0\n:100FD0002C19246CA14201D00133F5E702339B00A8\n:100FE0001B581360F2E70249024824F072FBC04626\n:100FF00088F60200C8D80200F0B51700C26B85B0B1\n:10100000CE19050001910393964206D0330025497D\n:10101000254813F0B7F902F0CFF90021300003F0B2\n:1010200047FF0400019B05609B001A0003990830EC\n:10103000029327F0D3F90298BA0008302018002153\n:1010400027F0E8F9029A039B94466344F7191E00BF\n:10105000019BBB4202D3200005B0F0BD306807F011\n:101060005BFF00210200EB6B0293029B994204D1CB\n:101070000E490D4813F086F9CDE78B00E818006C97\n:10108000824201D00131F0E7E3189968002901D0CC\n:101090000749EEE7726808369A60019B02330193B4\n:1010A000D6E7C0469CF6020078DD0200D5F60200C5\n:1010B000F6F6020010B502491FF0DCFD10BDC04677\n:1010C00025F7020010B5034B186825F096FD21F0B6\n:1010D0005CFC10BD8829002010B5034B186825F072\n:1010E00093FD21F052FC10BD8829002010B5034B60\n:1010F000186825F090FD21F048FC10BD88290020DB\n:101100001FB50021032003F0D3FE0A4B0400196829\n:1011100001A825F065FD019821F037FCA060029838\n:1011200021F033FCE060039821F02FFC20612000C7\n:1011300004B010BD8829002010B507F0EDFE002393\n:10114000064A99008958814205D001330C2BF8D109\n:10115000034811F099FC180010BDC046088E02002B\n:101160002AF70200094A70B51378002B0DD1084DFB\n:101170002C78E4B2002C08D1013313702B70054B8E\n:10118000186803685B6898472C7070BDC62D0020F6\n:10119000C72D00208829002010B5FFF7E3FF054B7D\n:1011A000186825F059FD044B8000C3580620DB0069\n:1011B000184310BD88290020088E020010B50800D1\n:1011C000FFF7BAFF0400FFF7CDFF054B186825F0C5\n:1011D00043FD044BA04200D0034B180010BDC04695\n:1011E0008829002070DE020068DE020010B50800C9\n:1011F000FFF7A2FF0400FFF7B5FF0123A340064A53\n:10120000064811880B4200D1054811889943118086\n:101210000022044B1A7010BDBC2D002070DE0200AD\n:1012200068DE0200D02D0020F8B5FFF79BFF134CBD\n:1012300013482378002B1FD020780021C0B203F080\n:1012400037FE012600220F4F2378934212D9150052\n:101250005308FB5C3540AD002B410F252B400A4D58\n:101260009B005B5906259100DB0041182B438B60E6\n:101270000132E9E700232370F8BDC046D02D0020DD\n:10128000CC9B0200C82D0020088E020070B5438858\n:101290005A1E0A2A1FD801252A009A400F49088899\n:1012A000024392B20E480A8002780F2A13D80278BD\n:1012B0000C4CEA40A25C0678D2B20F212E420BD031\n:1012C0000A401B0113430278DBB25208A35403788F\n:1012D0000133DBB2037070BD8A43F3E7BC2D0020FD\n:1012E000D02D0020C82D0020F0B585B005001600D7\n:1012F000080003AB02AA01A924F08EFF0398364F21\n:10130000B84209D0032807D006F08AFBB060002855\n:1013100004D1324811F0B8FB0123B3600198B84200\n:1013200029D10024B368A34200DC6C1E0298B842A5\n:1013300025D1B368002B47DD2800002C2ADA641978\n:1013400001D5B368DC17002834DA401901D5012033\n:101350004042B368002B00DA0130B368002B2DDD6A\n:10136000A04200DA2000013B706058425841C0B2F0\n:10137000346005B0F0BD06F053FB0400D6E706F07C\n:101380004FFBB368002801DBDA0F8018002CD6DB96\n:10139000002B03DDAC42D6D92C00D4E7002BD2D0F1\n:1013A000A54200D86C1E002804DA4019D4D50120CB\n:1013B0004042D1E7A842D0D92800CEE7002BD2D0B6\n:1013C000A042D0DD601CCEE7002C01DA0020B6E799\n:1013D00000208342E4D1C0E7388D02003AF70200D2\n:1013E000F0B5060085B017001B2805D10A9A974270\n:1013F00009D0002005B0F0BD19281AD01C281AD039\n:101400000A9A0A9717001A000B0011000A9A019213\n:10141000BA4200D901971D000C0000230093009BE5\n:10142000019A934209D10A9BBB4220D0E1D301200B\n:10143000E0E71A26EAE71D26E8E70295039401CDC6\n:1014400002CC06F09BFA002802D0009B0133E5E7AE\n:101450001B2ECED0039B30001A68029B196811F036\n:101460001BFB044BC01A43425841C0B2C2E71A2EBC\n:10147000DDD1BEE770DE0200F0B51E0085B003903E\n:1014800018680D00170006F0E3F9736801900293E5\n:101490000024022F0ED90123B268290006F098FB20\n:1014A0000400032F06D029000123F268019806F0FA\n:1014B0008FFB0500A54202D8084811F0E5FA039A0F\n:1014C000A3000299D05806F059FA002801D101343E\n:1014D000F0E701206400204305B0F0BD54F702009E\n:1014E0000023820708D10068044A0133904203D0E8\n:1014F000034BC01A4342434118007047448F020017\n:10150000088F0200044B88600B60044B08004B609E\n:101510000023CB607047C046A8CC0200B310020085\n:1015200030B585B005000800694610F07DFE040066\n:10153000200010F0DBFE011E02D1064805B030BDD0\n:101540002B1D0022180020F0A8F80028F0D0024837\n:10155000F4E7C04670DE020068DE020070B50500E8\n:1015600010201FF0D1FE0400074B696808C020F06E\n:101570008AF8AB68E968A3606B68E0689A0026F0B7\n:101580002DFF200070BDC046448F0200F7B5040057\n:101590000D0000268B0704D10B68214E9E1B734261\n:1015A0005E41AB68002B0AD1002E03D01D492000FC\n:1015B0001FF060FB1C4920001FF05CFBF7BD002EF4\n:1015C00003D01A4920001FF055FB194920001FF0D5\n:1015D00051FB002701236A68BA4207D81549200049\n:1015E0001FF048FB002EE9D01349E4E7BA0001924E\n:1015F000EA68B9005258002A0FD0042A0DD0002BF7\n:1016000003D10E4920001FF035FBEB68B900595893\n:101610000122200006F034F900230137DBE7C04641\n:10162000088F0200A3F70200AAF70200B0F7020039\n:10163000BBF702008E6F0300EC1E0300BDF7020033\n:1016400010B5830707D1044B02689A4203D10349BE\n:10165000034824F03EF810BD088F02006BF702002B\n:10166000C8D8020070B50D000400FFF7E9FF29009B\n:10167000201D012220F011F8004870BD388D0200B5\n:1016800070B50D000400FFF7DBFF2900201D0222CA\n:1016900020F003F8004870BD388D020070B50600D8\n:1016A00008680D000124FFF7CBFFB44201D30448C2\n:1016B00070BDA300E95828681FF099FC0134F4E7D5\n:1016C000388D020070B50D000400FFF7B9FF280047\n:1016D000002110F0A9FD0500280010F007FE011EF2\n:1016E00001D1044870BD231D032218001FF0D5FF4F\n:1016F000F2E7C046388D020010B50400FFF7A0FFE6\n:10170000201D20F058F8014810BDC046388D020059\n:1017100010B501221FF09CFC004810BD388D02005E\n:1017200070B504000D00FFF78BFF201D0222290079\n:101730001FF0B3FF002804D1034824F07BFD01F023\n:101740003BFE024870BDC046A8DA0200388D020098\n:1017500010B50400FFF774FF201D20F00DF80028DD\n:1017600003D10249024823F0B4FF10BD8DF70200F7\n:10177000A8DA0200F8B50D0001280BD0002803D02C\n:1017800002280BD0002004E08B681448002B00D105\n:101790001348F8BD8B685B001843FAE70324002068\n:1017A0000C408442F5D10F4B0E6820009E42F0D1D0\n:1017B0004F68A74203D1012076003043E9E7EA6889\n:1017C000A3009958002906D0042904D0022010F063\n:1017D000C3FB401036180134EBE7C04670DE020050\n:1017E00068DE0200088F0200F8B5040010200D002A\n:1017F0001FF08AFD0600094B210008C607003000D3\n:101800001FF041FFA4002C19A54201D13800F8BDFA\n:10181000012202CD30001FF040FFF5E7448F0200A7\n:10182000F7B504000E00171E2CD0FFF709FF194D65\n:10183000B4422DD000210800FFF7D6FF002105009B\n:10184000300010F0F1FC0190019810F04FFD061EE1\n:101850000CD1002F1CD0E0681FF085FD6B68636021\n:10186000AB68A360EB680B4DE36011E0201D002224\n:1018700031001FF012FF0028E6D031002800FFF7EA\n:10188000F1FEE1E78842D5D120001FF0C3FB05003F\n:101890002800FEBD388D0200F0B589B00400039029\n:1018A000029101920027FFF71BFEB84207D13A00D0\n:1018B00003AB012122481FF021FC04000137029DE7\n:1018C00000262800FFF70CFEB04207D1320002AB21\n:1018D00001211B481FF012FC05000136019B002B63\n:1018E00005D00023AA680193A36893420DD0154B3D\n:1018F00006940493144B05930023079304A81FF048\n:10190000D8FB011E12D101230193002F02D0200029\n:10191000FFF7F2FE002E02D02800FFF7EDFE019B3C\n:101920000A48002B00D10A4809B0F0BD2B1D002247\n:1019300018001FF0B2FE0028E0D10190E5E7C04694\n:10194000448F0200A8CC0200B310020070DE020037\n:1019500068DE020073B50C001500009101920026AC\n:101960008B0704D10B68394E9E1B73425E413200D7\n:101970001F2868D818F0E2F92810176767671C67F6\n:101980006767676767212D346767673B67676767C6\n:101990006740464A5358675D290020001FF04BFB03\n:1019A0000400200076BD290020001FF09CFBF7E713\n:1019B000694602201FF078FBF2E7002E04D069464A\n:1019C0000220FFF76BFEECE7290020001FF029FB47\n:1019D000E6E729002000002EE0D0FFF773FEE0E7E5\n:1019E00029002000FFF71CFF002EDAD1D8E7694656\n:1019F00002201FF02DFBD3E7012229002000FFF772\n:101A00004BFFCDE7012221002800F8E72800FFF76F\n:101A100067FD002815D0A368AA68934211D1290058\n:101A200020001FF09CFBBBE7290020001FF08FFB6C\n:101A3000B6E7201D002229001FF02FFE044C0028CD\n:101A4000AFD1044CADE70024ABE7C046448F0200A1\n:101A500070DE020068DE0200F8B5214E3568696864\n:101A600001292DD9AA684B1ED05C0A2828D1002B49\n:101A700001DC1C0009E0581E145C0A2CF9D003009C\n:101A8000F5E7105D202802D10134A142F9D8002BDE\n:101A90000BDD601C814208D1581E002805D001389A\n:101AA000175C0A2F0CD0202FF7D05218023AE31AF5\n:101AB00014789B083A3C624254411C19002C00D116\n:101AC000F8BD084F0422390028001FF0F5FE04215C\n:101AD000380005F053FE3369013C04333361EDE710\n:101AE00050010020A51D030010B52022002102484E\n:101AF00026F090FC10BDC046E02E0020084B10B52B\n:101B0000426818600020986018750138D860080095\n:101B10005A601A61996120F0D3FAFFF79DFF10BD5A\n:101B200050010020F8B503780400002B1ED0104DA2\n:101B3000286E002804D0210026F0B6FC002815D01D\n:101B4000200026F0BBFC471C38001FF0EAFB061EF5\n:101B50000CD03A00210026F041FC2A00054B5C32F3\n:101B60001968043B99609342FAD12E66F8BDC046CD\n:101B7000802E0020F82E0020F0B5B84C020020681E\n:101B8000A568436885B00193002D00D0FDE0531E89\n:101B9000042B11D8636801998B4200D195E0012A8A\n:101BA00000D12AE1022A07D123696268934200D951\n:101BB0004FE10122524288E0032A00D185E0042A45\n:101BC00000D12FE1052A00D107E1062A0ED12369B1\n:101BD000019A9342AD416D42002DEADD2368290050\n:101BE00098682369C01805F0C9FD1FE00B2A21D1B0\n:101BF000019B2269991A1FF01FFF2368019A5B68F5\n:101C0000934204D213002269981A05F0EDFD226870\n:101C1000236951689068C91AC01805F0AFFD2368A0\n:101C200058682369C01A401B05F0CCFD23695D1973\n:101C30002561BEE70E2A13D1E368002BB9DB013B17\n:101C4000E3606268019B991A1FF0F6FEE368002BBF\n:101C500018DB1633824A9B00D318996820680FE07E\n:101C6000102A16D1E368062BA3DC5D1C7C4A1733CF\n:101C70009B00D318996800299BD06368E560436096\n:101C80001FF09FFE63682269D61A22685568ED1A14\n:101C90000AE0152A0CD12369626861689A1A1FF05C\n:101CA000D3FE236962689E1A0127002E2FDCA4E769\n:101CB0000D2A0DD16B4820F003FA20681FF066FE54\n:101CC0006368C018FFF72EFF0022100005B0F0BDBA\n:101CD00001231B2A62D0082A01D07F2A20D1216942\n:101CE0006268914200D864E700238668B618F75C02\n:101CF000202F13D101339F18B942F8D80426032BA3\n:101D000000DC033E891B32001FF09EFE01273000DD\n:101D100005F058FD23699E1B266178E00126F1E756\n:101D2000092A28D1636822698068D11AC0184E4AEE\n:101D300003AB0EF0E9FA061E00D13AE70027431C78\n:101D40000BD1A06920F0BCF963682269D11A22681E\n:101D50009068C01805F012FD4FE723692068F91854\n:101D6000039B01375A1C03921A781FF053FEBE42A0\n:101D7000F3D1350041E71300203B5E2B00D918E773\n:101D800021691FF050FE012537E7012D08D10423FA\n:101D90004F2A03D002235B2A00D00023A36008E768\n:101DA000022D20D11300303B092B03D803232275C9\n:101DB000A360FEE60023A360412A00D152E7422A35\n:101DC00000D139E7432A00D101E7442A00D1EBE6EC\n:101DD000482A12D0462A00D0EBE60027019B226950\n:101DE0003E009D1A0EE00021032D29D17E2A24D128\n:101DF000237D312B01D0372B0DD100252F002369F6\n:101E000062689E1A0023A3609E4200DD7FE7002FD8\n:101E100000D1E1E6F1E61A00FB25343A2A42DCD093\n:101E2000332B0AD12169019B994206D201221FF06E\n:101E30000BFE002501272E00E4E700252F00FAE71E\n:101E4000042D04D1462AC8D0482AD6D0A5E7A160DF\n:101E5000AFE6002501262F0059E7C04650010020BB\n:101E6000802E00207B720300348C020030B50724E2\n:101E70000278084DA24314000222224302707F22FE\n:101E8000039C41602240D400028883602A402243A0\n:101E9000028030BD07FCFFFF10B50B00072401785E\n:101EA0002340A14319437F23017004990A4C0B403E\n:101EB000D9000388426023400B430380039B0468DE\n:101EC0005905064BC90A23400B430360029B8360FC\n:101ED000059BC36010BDC04607FCFFFFFF03E0FF8A\n:101EE0000139C9B2054B401880301970044A037893\n:101EF0001370044AD25C044B1A707047D22D002034\n:101F0000D32D00207F090300D12D00200131C9B25B\n:101F1000054B401880301970044A03781370044A46\n:101F2000D25C044B1A707047D22D0020D32D0020B4\n:101F30007F090300D12D0020074B984206D9074B9B\n:101F40001818074B4118C91808787047054B18181E\n:101F50004118054BF7E7C046A4920000C0070300F4\n:101F60005B6DFFFFD4F702000083FFFF0300202218\n:101F7000F0B57F254F265F27803304001A7089B0A3\n:101F800003007F3019780A002A406F2A29D90A00F5\n:101F90003A401900013381310A709842F2D17F2210\n:101FA000BB4B1A702300643AFF331A70E43202927A\n:101FB000531CDBB204936B46B6481B7CB6490370D6\n:101FC000049BE31880331B780B705B2B0ED19B2294\n:101FD000029B0A700133DBB20370E254012009B0A6\n:101FE000F0BD5F2AD5D90A003240D2E72E2B13D19B\n:101FF0000232D2B20270A21880321278A448027063\n:10200000A648825C0120024206D1029A0B70121887\n:10201000D2B20292A354D7E102209D4A13709F4A84\n:10202000D25C104000D0A8E0002A19D19948203293\n:1020300003780A70E31880331A70029B0133DBB215\n:1020400002936B461B7A0370029B782B01D8E254F3\n:10205000BAE19B23029AA3546B461B7C0B70BDE72D\n:1020600016007F2552B2AE430E70002A03DB8C4B64\n:102070008C4A1A60B3E7413B8B4ADBB28B49D25C96\n:10208000CB5C120213430393039B002101339BB2E9\n:1020900018000393FFF750FF0306F5D50123002630\n:1020A00001277B4D2B7039000398FFF745FF7B1C00\n:1020B000DBB20193282862D1002E00D02F702D783A\n:1020C0000135EDB229000398FFF736FF6B1CDBB238\n:1020D000292857D17F26069306990398FFF72CFFEE\n:1020E000069B30400133DBB23D284DD16A466A4B36\n:1020F000127C1870674B00261A706A46644B12797E\n:102100001A70049B0593059B0199E31880331B7893\n:1021100003980793FFF710FF079B9842B4D1019BE8\n:102120000133DBB20193AB4230D1002E03D06A46BB\n:10213000584B127D1A70049D013FFFB2544B390079\n:1021400003981F70FFF7F8FE534E030600D509E110\n:10215000504B7F211870514B1B5C1A005BB28A43B5\n:102160003270002B18DA4B4B013DEDB21D70631934\n:1021700080331B789842DFD086E74D4B83E70126FA\n:10218000019F90E71D009DE70693A5E7059B0126AB\n:102190000133DBB20593B6E7307020281BD023282B\n:1021A00025D02E282CD0262832D040284ED05E288C\n:1021B00056D02B285CD03A2800D030E120262900C8\n:1021C0002000FFF78DFE344A137833401370B3D0EC\n:1021D000304B1D78F3E729002000FFF781FE002334\n:1021E000F356002B00DA4FE72A4B1D78A4E72900AD\n:1021F0002000FFF775FE402233781342F4D143E705\n:1022000029002000FFF76CFE33781B07ECD43BE776\n:1022100029002000FFF764FE10223378134033704A\n:10222000E2D11C4B1B78E1188031097831704829C4\n:1022300000D029E7013B1749DBB20B70E31880336C\n:102240001B789343432B00D01EE7CDE729002000E5\n:10225000FFF746FE0422337813403370C4D113E7EE\n:1022600029002000FFF73CFE33789B06BCD40BE727\n:10227000084B013DEDB21D70651980352B78452B5B\n:10228000B2D010229343492B00D0FDE6ACE7C04604\n:10229000D32D0020D22D0020D12D00207F09030056\n:1022A00064000020C0F70200050A0300EB090300E8\n:1022B000A59200006B1C934ADBB21370E3188033C5\n:1022C0001B7891490B70452B36D1A81CC0B223183E\n:1022D00080331B788D4E33708D4EF656002E02DB08\n:1022E000884B1D783FE010700B70522BF8D0532BA9\n:1022F000F6D0442BF4D04C2B08D10335EDB2157039\n:10230000651980352B78592BEAD0BDE6462B00D0D5\n:10231000BAE6EB1CDBB21370E31880331B780B704A\n:10232000552B00D0B0E60435EDB215706519803537\n:102330002B784C2BD4D0A7E6492B00D0A4E6AB1CBD\n:10234000DBB21370E31880331B780B704E2B00D078\n:102350009AE60335EDB21570651980352B78472B59\n:10236000BED091E6059D6A46019B03980133DBB21E\n:1023700001931279654B01991A70FFF7DDFD019BFE\n:10238000069A604F934221D100257F272E000199A4\n:102390000398FFF7D1FD03003B403D2B04D0029A88\n:1023A0000132D2B20292A354019A0132D2B2010692\n:1023B00000D4A3E0002E03D06946544A0979117075\n:1023C000514A1370059B0493049AF1E5504B7F2109\n:1023D0001B5C4D4E1A005BB28A4338703270002B82\n:1023E00008DA0135EDB2631980331B783D70834202\n:1023F000B9D049E63070202816D023281ED02E28C8\n:1024000026D026282DD0402848D05E2851D02B2811\n:1024100058D020263A2864D0252800D14AE73D4BE1\n:102420003D4A00201A60DAE529002000FFF76EFD22\n:102430000023F356002B00DB52E725E6290020009D\n:10244000FFF764FD40223378134200D048E71BE6D3\n:1024500029002000FFF75AFD33781B0700D53FE71E\n:1024600012E629002000FFF751FD102233781340B7\n:10247000337000D034E73B78E1188031097831704F\n:10248000482900D000E60133DBB23B70E31880330B\n:102490001B789343432B00D0F6E521E72900200069\n:1024A000FFF734FD042233781340337000D017E770\n:1024B000EAE529002000FFF729FD33789B0600D5C7\n:1024C0000EE7E1E50135EDB23D70651980352B78F9\n:1024D000452B00D104E710229343492B00D0D3E5CC\n:1024E000FEE629002000FFF711FD074A137833406C\n:1024F000137000D137E7034B1D78F2E701920126F4\n:1025000045E7C046D22D0020D12D0020D32D00203C\n:102510007F09030064000020CAF7020010B5040020\n:10252000002906D0044B8A6B03600968002311F070\n:1025300095FF200000F040FF00DD0200F0B5040030\n:1025400087B0039202936618002A06D0023A222A24\n:1025500003D9354810F098FA0134B44229D22078D2\n:102560000BF008FB071EF7D123782B2B1CD101346D\n:10257000311B200003AA21F09AFC23181C0000251F\n:102580000193B44217D3002F00D06D4201236D0098\n:102590001D43019B9C422FD12449039A244811F0EA\n:1025A000F1FE0299FFF7BAFF2D2BE1D1013401278B\n:1025B000DEE70027DCE723781A00303A0092092A88\n:1025C00007D9202213431A00613A192ADBD8573B56\n:1025D00000930399009B9942D5D928000BF022FB68\n:1025E000002816D1039B5D43009BED186B006B40E8\n:1025F0000FD40134C5E70134B44205D220780BF082\n:10260000B9FA0028F7D1C7E7B442C5D1280007B00E\n:10261000F0BD019B3A000593F11A05A8039B20F039\n:10262000DAF9059C0500B4E7560A0300790A0300AD\n:10263000F0DD0200F0B504008BB00893431804925B\n:102640000193019B9C4200D3F6E020780BF092FAB4\n:10265000071E38D123782B2B37D101340590019BED\n:102660009C4200D3EAE0202322781A43692A33D11E\n:102670000199A21C914200D8E6E062781A436E2AC2\n:1026800000D0E1E0A2781A43662A00D0DCE0E21D27\n:10269000E51C914214D9E2781A43692A10D12279B3\n:1026A0001A436E2A0CD162791A43692A08D1A27999\n:1026B0001A43742A04D1E2791343792B00D10535EA\n:1026C000FF26F6051BE00134BBE705902D2BCAD190\n:1026D0002C3B01340593C2E76E2A2ED10199A21C2E\n:1026E000914200D8B0E062781A43612A00D0ABE092\n:1026F000A27813436E2B00D0A6E05D4EE51C059B2F\n:10270000002B02D080231B06F618A5427BD1594925\n:102710008CE03D002B786F1C18003038092834D825\n:10272000022E15D10A23029A53431B180293019BD0\n:10273000BB42EED8002304934DE0002207920292A0\n:102740004D4A250006920022002603920993E1E7F4\n:1027500018F0D8FC051C012E0DD1069918F05CF973\n:10276000011C039817F0E6FD43490390069818F002\n:1027700053F90690DBE74149039818F04DF9291CFD\n:1027800017F0D8FD00260390D1E7002E03D12E2BA1\n:1027900003D10126CBE7022E16D0099A1A43652AE7\n:1027A00012D1019BBB4256D96B782B2B05D1AF1CA4\n:1027B000019B9F42ABD00226B9E702262D2BA8D160\n:1027C0002C3BAF190793F3E7049A002A04D0202288\n:1027D00013436A2B13D13D00079B002B02D0029BB1\n:1027E0005B420293029818F043FC011C23481AF044\n:1027F000D1FE039918F010F9049F061C7FE700230F\n:102800000493E9E70135019B9D4205D228780BF03E\n:10281000B1F90028F6D17AE7019B9D4200D076E716\n:10282000089B002B01D1002F1AD01549154823F021\n:102830000EFD1099FFF772FE00230593002303930A\n:10284000002325000493CCE7059B002B00D15EE715\n:102850002500002656E7019BBB4200D157E769E7F8\n:10286000032302209E43084B3043C0180BB0F0BD39\n:102870000000C07F3C0A0300CDCCCC3D00002041CD\n:102880001F0A0300F0DD02000000808010B50D4C2F\n:10289000206824F05CFA002807D00B4B1B78002B33\n:1028A00003D1206803685B6898470023074A1370C8\n:1028B000074A137013F0D6FA0AF038FF0EF010FA38\n:1028C00010BDC0468C290020D72D0020D62D002019\n:1028D000C62D002070B5050094B0002804D13F48F3\n:1028E0001DF0D8FB14B070BD08A800F03FFD041E19\n:1028F00019D12E68290004A8012211F01BFF230022\n:102900002200310004A80AF0CFFB04000320FEF7E8\n:1029100015FA200022F092FE01204042FEF70EFA46\n:1029200000F042FDDEE701204042FEF707FA099978\n:102930002B4804F0C9FF099804F08AFF29490400D4\n:102940000EF088FE0028CDD1274920000EF082FE2F\n:102950000028C7D1099C01AA6946200011F0B2FDE8\n:1029600002AA322104A803F027FB009B022B05D901\n:10297000019B1E495A6802A81EF03DFA200004F08F\n:1029800067FF1B4BC2689A4210D1236819495A68E5\n:1029900002A81EF030FAE368002B07D05A68002A1C\n:1029A00004D00022996802A804F06AFF0320FEF711\n:1029B000C5F904A81EF0EAFF04F02CFF04A81EF0DD\n:1029C000B9FF01204042FEF7B9F90B4B9A6C002A7F\n:1029D00000D187E700229A6484E7C046D70A030043\n:1029E000348C02003CDD0200E4DA0200040B030038\n:1029F000454201000D0B0300802E0020F8B54E4C1F\n:102A00001321200025F08EFA2000032125F0AEFBD3\n:102A10004A4C01234A4A1321200016F03BFF0122B1\n:102A20000221200016F066FF464C200013F002FD44\n:102A3000454F3860200013F00BFF444D28601020F4\n:102A400025F062FC040029680025414E3A683300F5\n:102A500014F03EFA3F4B1C603F480CF0A3FAE12013\n:102A6000C0000CF0AFFA3D493D4810F0C9FC0FF032\n:102A7000B3F904F04BFEFFF737F813F049FB3000D1\n:102A800024F0ACFD21F0AAF90DF0ECF800F04AFAC0\n:102A900002F0D4FB0EF0FCFF324C334823008833A5\n:102AA0001D60FDF7DBFBFDF7B7FB0FF003F82F4FC1\n:102AB0003B78012B0ED1002307211A002C480DF082\n:102AC000D9F9031E1DD00100F72040000DF05AFB7C\n:102AD000FFF700FF3B78002B2AD101F00BF800280C\n:102AE000F8D024481FF0ECFAFDF7A6FB08220021DD\n:102AF000214825F08FFC230098348C331D6025601D\n:102B0000AAE7F822920211784D2909D1517850296B\n:102B100006D1F72052881949400021F071FBD7E710\n:102B20000122174917200FF0E7FE22F0B1FDD1E78F\n:102B300001F030F8D3E7C0466C290020842900203A\n:102B4000F71102000C2A0020882900208C2900207F\n:102B50009429002090290020004000206C290020AA\n:102B60006C010020802E00208D280000D80000205D\n:102B7000110B0300190B0300002F002004E00300D9\n:102B8000CC9B020010B5084C084A0621200014F026\n:102B900071FA074A0749200025F0A7FB00221E21F1\n:102BA000054824F025FD10BD94290020AC920200B8\n:102BB000000000202D7001000C2A0020C37902487B\n:102BC000002B00D10148704770DE020068DE020071\n:102BD00010B50DF00BF8014810BDC046388D02004D\n:102BE00010B508680DF002F8004810BD388D0200DD\n:102BF00073B50D00022836D1012601A9686806F0D8\n:102C0000C1FD76423400019BC318834212D101A951\n:102C1000286806F0B7FD7342734162426241DBB23D\n:102C2000D2B201990DF026F9002820D1104911489F\n:102C300022F04FFD0278722A01D0772A06D1611C5A\n:102C40000ED1723A544254410130DEE7622A01D07B\n:102C5000742A05D1711C03D1743A56425641F3E7E8\n:102C600005480FF011FF012676423400CFE776BD0C\n:102C7000340B030010DC0200270B0300F7B5CC1C5B\n:102C8000A400070020000E0001921EF03DFB220070\n:102C90000500054B4760866003600C3A01990C30D3\n:102CA00025F09CFB2800FEBDE493020070B50400F3\n:102CB000080004F0B5FE0500431002D00F480FF0E5\n:102CC000E3FE0F49200008F0AFFC002807D0A02247\n:102CD00003216379D205C133FF339B00995001234F\n:102CE00062799340A022D205002D04D0A121C90011\n:102CF0000448535070BD0449FAE7C046900B0300E6\n:102D0000F8B70200388D02000C05000070B5050010\n:102D1000080004F085FE0B2303410400DB0702D406\n:102D200009480FF0B1FE2800084908F07DFCFF2299\n:102D3000A40092001440A0226B79D205C133FF3366\n:102D40009B0003489C5070BD620B0300F0B702006B\n:102D5000388D020010B50C49040008F065FCA02273\n:102D6000D205002805D004216379C133FF339B00CD\n:102D7000D150A223DB00D0586379D84001231840FA\n:102D80001FF003FE10BDC046F0B7020010B50400EE\n:102D900008F016FC0A4B984205D00A4B984202D024\n:102DA000200008F01BFCA0226379D205C133FF3359\n:102DB0009B0098580007800F1FF0E7FD10BDC0462C\n:102DC000F0B7020008B80200032370B50B400400FE\n:102DD0000800022B14D1194B0B40062B10D004F025\n:102DE00083FE19F01FFF0022154B18F0CBF919F0E4\n:102DF000A9FE144B0500984205D913480FF044FE74\n:102E000004F00EFEF5E71149200008F00DFC002843\n:102E100007D0A02203216379D205C133FF339B0081\n:102E20009950607929000EF073FE002D03D10849F6\n:102E3000200008F0F9FB074870BDC046070080FF7E\n:102E40000000E03FFF0300006F0B030038B80200F2\n:102E5000E8B70200388D020013B50A49040008F0F3\n:102E6000E3FB05216846615616F0F6FD684616F04C\n:102E700019FEA0230021044ADB00D1501FF085FD7C\n:102E800016BDC046E8B702000070004010B508004B\n:102E900004F0C6FDFA239B0058430EF015FE0028EF\n:102EA00002D002480FF0F0FD014810BD530B0300A3\n:102EB000388D020010B5080004F0B2FD0EF004FEDB\n:102EC000002802D002480FF0DFFD024810BDC046C6\n:102ED000530B0300388D020010B5040008F070FB9E\n:102EE0000C4988420DD00C4B98420AD0200008F0C3\n:102EF0009BFBA02200216379D205C133FF339B00E5\n:102F00009950200012F0F8FF044B002800D0044B29\n:102F1000180010BD20B8020008B8020070DE0200E0\n:102F200068DE0200A0230C220249DB055A5024313E\n:102F30005A5070474407000010B5040004F088FCA4\n:102F4000064B984208D0064B984205D0054B984254\n:102F500002D005480FF05CFF200010BDE096020093\n:102F600098950200D4950200430B0300F0B5486821\n:102F700087B00F0004F054FD041E02DA00200FF0A9\n:102F800083FDBB68164A01939D186B1E9D4101008D\n:102F900002A81EF0BEFC049E22000021300025F095\n:102FA00039FA3868EDB2C3070AD433002200290089\n:102FB0001FF0B8FC02A90B4805F056FF07B0F0BDA2\n:102FC00043102000042C00D904200749019F00224F\n:102FD0008F4200D0221AB21829001FF0C2F9E9E787\n:102FE0005AECFFFF9CA50200A6130000F0B50C00F0\n:102FF00087B0012203A9606804F0CCFEA3681349DE\n:10300000039A8B420DD10126049976424C1E019100\n:103010001419049900200D00002D05D11FF0D0FCDB\n:103020000DE014000126F4E7094F013DB84208D92C\n:1030300008481B18581E8341D8B21FF064FC07B023\n:10304000F0BD277800023843A419E5E7A613000075\n:10305000FFFF3F005AECFFFF70B546007508041CE7\n:10306000291C281C17F0CEFF00280BD11649281C5C\n:1030700017F052F8002808D01449154823F0E7F853\n:1030800000F09AF913480FF0FFFC002C11DA002E23\n:1030900012D0FF23DB05E3189C22D20593420BD903\n:1030A00007F02AFA211C0500043021F05BFB280000\n:1030B00070BDE30DDB05EFE7201C17F0B9FF01251C\n:1030C00040000543F3E7C046FFFF7F7FB50B0300D9\n:1030D0004CDC0200CE0B0300F0B50C00002585B0DF\n:1030E000110020001E00009502232A000EF0E0FDD2\n:1030F0000120AC422BD0844231D13068204226D10D\n:1031000003230340AB4203D11C4A016891421ED005\n:103110001B4A0240062A06D0002B0DD10268194B2B\n:1031200092699A4208D103A906F02CFB00231A00E9\n:103130000399FFF703FA0AE0032302001A40022A68\n:1031400007D1FF22D20580189843FFF785FF05B00D\n:10315000F0BD04F065FC012340001843F7E703A924\n:10316000306806F00FFB04007068039F04F058FC01\n:103170002B00020039002000DBE7C0465C9702000C\n:10318000070080FF219D0000F8B51F000B4B1500C4\n:1031900059180139097816F0E5FD00260400B742F8\n:1031A00004D00130032116F0DDFD0600281E01D0F9\n:1031B00025F084F90334A4192018F8BDA50B0300E9\n:1031C000F0B58DB00A9214AA147815AA12780600E8\n:1031D0000F000792DA0743D55D100023002D01DAB6\n:1031E0002D236D420693139A079B12992020FFF717\n:1031F000CBFF3B680590834204D21EF085F8059B07\n:1032000030603B6000213768059BFB185A1E117027\n:103210008D4241D00A3C099208920B9412992800E1\n:1032200016F026FE0B003033092901D90B9B5B18E1\n:10323000089A541E2370079B002B4AD000282ED0DA\n:10324000A7422CD2099B1B1B032B06D16B461B7F6D\n:10325000013C2370A74222D2099405000894DDE7BF\n:103260009A0712D1244A196891420ED1079A029402\n:103270000392139A39000192129A00920A9A1FF04F\n:1032800018FB040020000DB0F0BD0023326813705D\n:103290000A9A34681360F5E79C1E30232370139B51\n:1032A000002B05D0180025F009F9201A874220D3F9\n:1032B000069B002B05D0BC4203D96B461B7E013C0C\n:1032C00023703368059A9B181B1B0A9A013B1360F5\n:1032D000D8E7A742E3D20028BFD1E0E7C2540133C8\n:1032E000139AD25C002AF9D1069B0400002BE4D18A\n:1032F000E7E70023F4E7C0465C9702001300144A96\n:1033000010B50400934204D1012220000FF0C4FB49\n:1033100010BD104A934201D10322F6E70020072C8A\n:10332000F6D10D4A1A40062A0ED09A07F0D11A6833\n:103330000A4CA24208D00A4CA24205D0094CA24233\n:1033400002D0094CA242E3D10A0007201900DDE7B0\n:1033500068DE020070DE0200070080FF9CC60200EB\n:103360009CA50200D49B020088980200C4600561FD\n:10337000466187614146C1614946016251464162E9\n:10338000594681626946C1627146816000490847B9\n:10339000993300000020C046024B9A680260986092\n:1033A00000207047802E0020024B9A6812689A60B5\n:1033B0007047C046802E00200E4A9368002B01D132\n:1033C0001DF02CFF196858609160181CC4680569CD\n:1033D00046698769C1698846016A8946416A8A46A1\n:1033E000816A8B46C16A8D4681688E46012070478E\n:1033F000FEE7C046802E00200048704716FCFFFF05\n:103400000048704716FCFFFF82B007B591B20492E6\n:103410000593052909D01B2902D104A8FDF736FF21\n:10342000002003B008BC02B0184704AB5B88032B34\n:10343000F6D106A90822684624F0D0FF0349049A71\n:10344000059B086813F0A0FBEAE7C046902900201E\n:103450000022044B5A60044A08321A60034A13607F\n:103460007047C046242A002098970200A02B002015\n:10347000002803D0012807D0002004E08B6804480E\n:10348000002B00D1034870478B685B001843FAE7B4\n:1034900070DE020068DE0200044B88600B60044BA3\n:1034A00008004B600023CB607047C046A8CC0200E8\n:1034B0006F13020000238168F0B5CA0F094C52183F\n:1034C00052100E199A4201DC0748F0BDC568F11A86\n:1034D0009C0089002C196D5827682560C468013349\n:1034E0006750EFE7FFFFFF3F388D020070B583683C\n:1034F0000D00416804008B4212D3C900C0681DF062\n:1035000021FF63680A495A00A3686260D21A013336\n:1035100052189B00E0609200C018002124F07AFF4E\n:10352000A368E268591C9B00A16002489D5070BDD1\n:10353000FFFFFF3F388D0200F8B5070016004C1062\n:10354000836812D5E41810D500240D4D38002900E9\n:10355000FFF7CCFFBB68591E9B00FA68181F8C420E\n:1035600007DBA4002800A650F8BD9C42EDD91C0042\n:10357000EBE7D318083B1B68013913500300ECE755\n:10358000388D020070B50025040085601021C068E8\n:103590001DF0D8FE04232900E0606360102224F0AF\n:1035A00039FF014870BDC046388D020030B50C00AF\n:1035B00085B0104B02AD0431009301380223019510\n:1035C0000EF0A6FB23680C4C996801290FD9D86826\n:1035D0000A4B029AC91889004118A24200D1002260\n:1035E0002D79074B002D00D1064B1DF0CEFE20009B\n:1035F00005B030BDAC970200388D0200FFFFFF3FE1\n:1036000068DE020070DE020070B50C680B00A16875\n:103610000200002903D11949194822F05AF82068FC\n:10362000012A27D05A68002304F0D2FAE168A26880\n:1036300086008B19013A1D680436A260121A9200A6\n:103640008919180024F0D3FE0021A368E0689A00CD\n:103650001150616804290BD95B00994208D94908C7\n:103660008900E0681DF06EFE6368E0605B086360DF\n:10367000280070BD01225242D5E7C046E70B030087\n:103680006CDA020007B500900191022069461DF036\n:10369000E4FE694601900220FFF7B6FF00480EBD28\n:1036A000388D020070B50E000D49050000241DF094\n:1036B000E1FAB368A34204D828000A491DF0DAFAF7\n:1036C00070BD002C03D0084928001DF0D3FAF16822\n:1036D000A30001225958280004F0D2F80134E8E789\n:1036E0003B7303004D6E0300BDF7020070B5032667\n:1036F00004000D000E4029D1174B0A689A4225D1CB\n:1037000083688A6899184368994210D904318900FE\n:10371000C0681DF017FEAA68A368E0609B181A1D18\n:103720009B006260C0181022310024F073FEA36871\n:10373000E9689800E3681818AB689A0024F04EFE18\n:10374000AB68A268D318A360044870BD29002000AC\n:103750001DF08CFEF8E7C04688980200388D020004\n:103760000B4B70B5050003600C000800042900D263\n:1037700004206860AC6080001DF0C6FD6A68E860E7\n:10378000121BA40092000019002124F043FE70BD1A\n:10379000889802007FB50D00160012283ED005D88B\n:1037A000052819D007283FD0002434E00300193B36\n:1037B000042BF9D893070DD1284B12689A4209D1EE\n:1037C000B36800938A68F368C968FDF709FE244C62\n:1037D000002820D1234C1EE0032300241340A342E1\n:1037E00019D11C001D4A3368934214D18B68B2680A\n:1037F00098181DF054FE0400AB68E9689A00C06890\n:1038000024F0ECFDA868E36880001818B368F1683C\n:103810009A0024F0E3FD200004B070BD11002800E0\n:10382000FFF764FF2C00F6E703A9100004F036F957\n:103830000024A042EFD0039BA34200DA0394AB68BC\n:10384000039858431DF02BFEC36804000093AA6838\n:10385000039B0421E8681DF04AFBDCE7889802001E\n:1038600070DE020068DE0200F0B5032704008BB0B2\n:103870000E0010000F40002A33D1002F2AD1654BD3\n:103880000A689A4226D104AAA068FDF72DFD0028F7\n:1038900002D161480FF0EAFA0599049BA268E0683A\n:1038A0005D1A521A9B00890041189200C01824F03A\n:1038B0009EFDA368AA00E818E36880001818524229\n:1038C000390024F0A7FDA3685D19A560534D2800B9\n:1038D0000BB0F0BD07A9022007940896FFF794FEED\n:1038E000F4E7042A2CD1A068002F1FD1494B0A68A5\n:1038F0009A421BD107AAFDF7F7FC002806D107AAB8\n:10390000E168A0681DF006FB0500E0E7079B08984A\n:10391000C01A1DF0C4FD8368E1689A00079B05008A\n:103920009B00C918C06824F059FDD0E700230100AE\n:103930003200206804F04CF9E3688000C558C6E7FF\n:10394000364D002F60D1334B0A689A425CD103AAEE\n:1039500002A904F007F907AA3100A068FDF7C4FC2A\n:10396000002896D0079B029A08999E180191761A12\n:10397000E068002E27DDA368F1186368994206D934\n:1039800089001DF0DFFCA368E0609B196360029A68\n:10399000079BA1689B18F21A52180899E0689B00CF\n:1039A000890041189200C01824F021FD029B039960\n:1039B0009A00079B9800E368181824F018FDA36884\n:1039C0009E19A66083E79B000399C018920024F01B\n:1039D00005FD0899A268E368521A890001935918F5\n:1039E0000798029B9200C018019B8000181824F0D1\n:1039F000FEFCA368B200F018E36880005242181879\n:103A0000390024F007FDDAE70200310020001DF044\n:103A100087FD5CE7D0D70200FC0B0300388D020065\n:103A20000023F0B52F4E93B0050006A814003360B4\n:103A300001910127FFF79AFC2740031E35D1E206CA\n:103A40002DD56A68A968112020F0DAFB05002E68E0\n:103A500029000125019A03A810F06CFEA3082B4051\n:103A60000022310003A809F01FFB04000320FDF72A\n:103A700065F9200021F0E2FD01204042FDF75EF9EA\n:103A80002C00FFF791FC002F24D02900164803F0EA\n:103A900075FE3C000121144803F070FE1AE0A306F5\n:103AA000D5D5280021F0C9FBD0E701204042FDF721\n:103AB00045F9002F03D001210B4803F05FFE079862\n:103AC00003F0C6FE09490DF0C5FD041E05D034689B\n:103AD000002FDFD1200013B0F0BD0799044803F098\n:103AE000F3FEF5E72C2A0020FB0B03003CDD02006F\n:103AF000348C020010B586B0202102A880241DF06D\n:103B0000F7FE64001E481EF0DBFA00231D480393F5\n:103B10001EF0D6FA03F01AFE0128F3D002280BD1CA\n:103B200019481EF0CDFA02A81DF004FF0122002062\n:103B3000164B1A7006B010BD032802D10023039360\n:103B4000E8E7042804D0C1B202A81DF031FFE1E784\n:103B50000F481EF0B5FA039B0193002B08D10A48C9\n:103B60001EF0AEFA02A81DF0E5FE80204000E1E75D\n:103B70001122012102A8FFF753FF2042C5D0D9E747\n:103B8000BA0C0300A17403007B720300D80000206C\n:103B9000D50C030030B587B0202102A880251DF088\n:103BA000A7FE6D0037481EF08BFA37481EF088FAE2\n:103BB0000024364902A803941DF0D6FA01280AD140\n:103BC00033481EF07DFA02A81DF0B4FE2000314BF0\n:103BD0001C7007B030BD022803D12D481EF070FACA\n:103BE000E0E7032801D12A48E0E7042808D1284863\n:103BF0001EF066FA02A81DF09DFE80204000E8E756\n:103C0000052827D124481EF05BFA039403F09EFD9B\n:103C10006B46C1B2DC1D21700329E4D004290AD10E\n:103C20001B481EF04DFA0121162202A8FFF7F8FEEC\n:103C30002842BDD0CDE702A81DF0BAFE23780D2B97\n:103C400003D116481EF03CFAE0E70121200003F002\n:103C500095FDDBE7039B002BAAD002A81DF096FE82\n:103C60000CF09CFA00280BD00A2102A81DF0A0FE3F\n:103C70000B4902A81DF078FA0328B4D00428ECD12F\n:103C80000021D1E7FD0B0300530C0300790C030066\n:103C90007B720300D80000207E0C0300AE0C0300F2\n:103CA000B50C0300F0B58FB00692426809939446B4\n:103CB0000368040002939B6804300093634403602C\n:103CC0000E001DF03AFC059060681DF04CFC431C92\n:103CD00063600378A24A0193831C636043780021E8\n:103CE0000093C31C63608378B5000393031D636076\n:103CF000C3782000049323001033A360059B143085\n:103D00009A1893000793C318E360079B0C331A00BB\n:103D1000089324F07FFB099B009A5B190B93059B8A\n:103D20009B1A039A0A939D1A2F1D009ABF00E71948\n:103D30000123B24264D2019A1A4207D13300009A99\n:103D40008849894810F01EFBFFF736FB009B0335BE\n:103D50009900099BAD005918009B6519F01A01F0F4\n:103D6000A7F8009E043F68600022964200D070E0F1\n:103D7000069B002B03D1019B1B0700D4D6E0022336\n:103D80000026019A1A400992B24204D0069820F007\n:103D9000DBFA060038600027029B0B9DDB68089366\n:103DA000069B9F425ED10A9B029805339B00E11857\n:103DB0000A00049D0C30002D00D080E0049A92008F\n:103DC0008918079A2032A2188A4200D980E0143B51\n:103DD0000693009B089A9B00D3180793039B9D4270\n:103DE00000D27FE065680DA80D951DF0A6FB281890\n:103DF0000578461CFF2D00D0A7E066600FB0F0BD2F\n:103E0000019A1A4205D00335AD00584B6519043F9D\n:103E10006B60069B002BA7D1019B1B07A4D4009BC2\n:103E2000049A9A1AB24212D8009A049B991A320044\n:103E30008900009B9A4297D29300029D5818281837\n:103E4000089D0069EB1AE31818610132F1E73300AD\n:103E500076E7099908989300C958C31AE3181961BD\n:103E6000013282E7009B039800221B189C462968B8\n:103E7000944505D8099B002B1CD1CA083C490EE08B\n:103E8000089B90001858884212D1059B013B9B1A51\n:103E90009B00E3185A69002A05D0CA083549324800\n:103EA00010F070FA50E76A685A610137083577E711\n:103EB0000132DDE76A68300020F07FFAF5E7166826\n:103EC000002E02D1AE0086591660013D043272E721\n:103ED000081D0968002903D1121A92102649DEE74D\n:103EE000010071E7069AAB00D71AE7193A69002A70\n:103EF00016D1082000996E180899B6008E190799F6\n:103F0000C958019B03420DD0049B029804339B00C7\n:103F10001858043000F086FC002803D043683B6149\n:103F200001355BE732681549D208B8E7039B002BDF\n:103F300002D013480EF06CFF019B9B0700D451E7A1\n:103F4000039820F001FA38604CE7ED43059BED182B\n:103F5000AD00651968690AF06FFF6861300047E7D6\n:103F6000FDFFFF3F9CF6020078DD0200CC9B0200C3\n:103F7000D5F60200F6F60200D80C03000A0D030085\n:103F80003A0D030001220020074B08495A600860DF\n:103F9000A821DA60064AC9005A5006495A5004312D\n:103FA0005A5005495A50704700A000400CAC0040E0\n:103FB000FCFF0000440500004C050000034B0448D2\n:103FC0001B78002B00D103487047C046D52D002038\n:103FD00070DE020068DE0200F8B5A826324A334BD4\n:103FE000F600196813680420CB18C9181160304A0C\n:103FF0008C4612781B11170009112E4A2E4C2F4D9A\n:10400000002F48D0002B3ADA9051C31AA920C000E3\n:10401000135081239B00002937DA591A135151514B\n:104020000123274CD3602378002B22D03F22254840\n:10403000254B01688C331B6801310A409D5C1C4B89\n:104040001B78002B01D0803D6D001C23026062466E\n:104050006B4308339B1A154A9B1013601F231940AA\n:1040600007D11A4B1A78002A03D019481970FCF7A7\n:10407000FBF901232278042053402370F8BDA927BF\n:104080000433FF00D0519351C3E7535181239B0068\n:10409000C9181151C4E7043390515351A920812309\n:1040A000C0009B001350F3E7302A0020402A002074\n:1040B000D900002000A000404C050000440500008D\n:1040C000D42D0020342A0020802E0020DA00002089\n:1040D000CF15020030B585B001220400080001A907\n:1040E00003F058FE029A202A00D920220023019DC5\n:1040F000934204D0E85CE11808710133F8E7014805\n:1041000005B030BD388D020070B504000800150000\n:1041100003F086FC1F2802D90C480EF0B5FC002DD8\n:1041200002D10B480EF074FE2418042D04D1012096\n:1041300023795B00184370BD280003F071FCFF2851\n:1041400001D90448E9E720710348F4E7930D03001F\n:10415000A70D0300D4200300388D02000123A02204\n:10416000834010B5134CD20513510300C133124CD8\n:10417000FF339B009C50114B8900C918A223DB0020\n:10418000CA580F4C00022240CA50F8225201104077\n:10419000C022CC589202224310430322C850CC586C\n:1041A000084822432043C850C046C046C046CA50B3\n:1041B00010BDC0460C050000030300000060004075\n:1041C000FFE0ECFF031F0000A0221E21114BD200D4\n:1041D00070B59C58104D8C439C50A324E4001D5195\n:1041E0000E4C0F4D0F4E5C5104355E510E4D80004C\n:1041F0005C51A5240D4DE4001D51084C0C4D0019D7\n:104200000C4C185104341D510B4C18519858014353\n:10421000995070BD00F0014040A100400060004096\n:104220001C05000044A100402405000048A10040F6\n:104230004CA100402C0500003405000010B504001E\n:104240000A4907F0F1F90A4BA0211C6001236079AB\n:10425000084A8340C9058B500021FFF77FFF0020EB\n:10426000FFF7B2FF0022044B1A7010BD18B802000D\n:10427000382A00200C050000D900002070B50D0080\n:104280000400134E2800310007F0CEF93100200061\n:1042900007F0CAF90F4BA0221C600F4BD2051D601E\n:1042A000607901242100814026000C4BD1506979AE\n:1042B0008E400021D650FFF751FF68792100FFF7AB\n:1042C0004DFF2000FFF780FF054B1C7070BDC046FE\n:1042D00018B80200382A00203C2A00200C050000F3\n:1042E000D9000020F8B50025FFF74CFE214B28002F\n:1042F00090331D60FCF786F8A0221E201E4B1F493C\n:104300001D701F4BD2001D601E4B1F4C1D608B5833\n:104310001E4F83438B50A223DB00E2581C4E3A40D1\n:10432000E250E2581B493243E2500122E5501A4B59\n:10433000186843799A401300A022D205535007F021\n:104340005DF9164B1B78AB4213D0154B1149E2585F\n:104350001740E750E25816430122E650E550114B52\n:10436000186843799A401300A022D205535007F0F1\n:1043700045F9F8BD802E0020D52D002000F0014029\n:10438000302A0020402A002000600040FFE0ECFFBF\n:10439000001F03000C050000382A0020D90000206F\n:1043A000140500003C2A0020F0B53E4E8DB03300CD\n:1043B00090331B680500002B03D1FFF793FF0DB06E\n:1043C000F0BD002801D00FF045F86846FEF7CEFF9B\n:1043D000002822D13300903318680DF05FFF0400ED\n:1043E000FEF7E2FF002D01D00FF03EF82E4B202209\n:1043F0001D6833006D118C3301356D011B6815404C\n:104400005D19002C2DD1903621002800346024F055\n:1044100001F80122254B1A70D1E7002D01D00FF0D1\n:1044200023F8019B224918680DF014F900240500B7\n:10443000A042DBD1019F380003F00AFA1D4B9842DD\n:104440000BD12900012000F033FD2A000400F860A0\n:104450001F21194804F03EFDA060019B0024B364B5\n:10446000C4E7200003F0F4F9144B984209D033005C\n:1044700000229033124913481A6021F0E8FEB0641C\n:104480009DE763682B60A3686B60E368AB6023699A\n:10449000EB6063692B61A3696B61E369AB61236ABC\n:1044A000EB61B6E7802E0020342A0020DA000020DD\n:1044B000C4DC02005CDB0200610D03006C990200A9\n:1044C000810D030078DD020010B5FFF70BFF0148F6\n:1044D00010BDC046388D0200F0B589B00493734B0F\n:1044E00003901B780E001500002B01D0FFF7FAFE99\n:1044F0006F4C8C342368002B06D16D4A40209032DB\n:1045000013601CF001FF206080226A4BD200DA6742\n:104510000122694C694BE250FFF734FD0023684AE1\n:10452000F021A3500432A3500832A350C222090341\n:104530009200A150634F093AFF3AA3500594BE423E\n:1045400000D0A3E0B54200D09DE05F4D07AC28004D\n:1045500007F05EF8002805D001235C49280023708D\n:1045600007F062F85A4D280007F052F8002805D0ED\n:10457000012356492800637007F056F8554D28006E\n:1045800007F046F8002805D0012350492800A37001\n:1045900007F04AF8002307AA5F1C9B5C002B39D068\n:1045A0004D4ABB00043BD458A02203213D0063794F\n:1045B000D205C133FF339B00995007ABEB5C002B56\n:1045C00026D00426444BAA00D358019301226379D4\n:1045D000A0219A40A123C905DB00CA50019B0533E5\n:1045E000180002931CF0D3FF012811D16379A02198\n:1045F00098403A4BC905C85002981CF0C8FF0028E3\n:1046000006D1013E002EE1D1019949E00225D4E70F\n:10461000022DFBD10123022FBDD12B48FEF78CFCCC\n:10462000FFF70CFE002103980DF0FEFD002501248C\n:104630003F221F4B802190331860294B1D70294B5E\n:104640001C70294B1A601A4B12198C33186823F00E\n:10465000E1FE2800FFF7A8FE244B144E1C60059BCA\n:1046600050221C60224928003470FBF797FE049BFF\n:10467000AB4219D00E4B3278002A15D09A6C002A22\n:1046800012D120BFF7E71B480EF0C2FB3000FEF747\n:1046900053FC0400BD42C3D02800FEF74DFC0100CE\n:1046A0002000FFF7EBFDBDE709B0F0BDD52D0020E0\n:1046B000802E002004E100E000A00040FC0F00007C\n:1046C00004050000388D020010960200E8B70200D1\n:1046D0005896020068960200389902000C05000006\n:1046E000D42D0020DA000020342A00200CAC004039\n:1046F000D93F0000CC0D030010B5084B86B002ACCA\n:104700000093019404230DF003FB02982379E268DF\n:10471000A168FFF7E1FE024806B010BD449902000F\n:10472000388D0200014B1878C0B27047D52D00209B\n:1047300010B524201CF0E8FD0400044B202208C022\n:10474000802123F067FE200010BDC0466C99020056\n:10475000F8B5070008000D00160003F079F8304B9B\n:1047600098425BD1781F0F2858D815F0E7FA08084F\n:104770003257575757575757575757303055FFF7F6\n:10478000D7FF04230400EA5CE2540133242BFAD15E\n:10479000300003F05DF8224B98423FD10121052FF4\n:1047A00002D0122F00D002390422FF20B35CA55C96\n:1047B000803B4B435B19FF2B03D90500DB179D435F\n:1047C0002B00A3540132242AF0D12000F8BD2C0084\n:1047D000DEE7FFF7ADFF04230400EA5CE254013397\n:1047E000242BFAD1300003F07FF90F211CF0F4FEE6\n:1047F0002100FF25221D24311378803B4343DB1326\n:104800008033FF2B03D92E00DB179E433300137038\n:1048100001329142F0D1D8E72C00E3E70024D4E73D\n:104820006C990200F0B587B00092027804000F0086\n:10483000930703D5009B002B00D0F5E0D307DB0FD7\n:104840000ED07A4B3B40062B43D003233B4003D191\n:1048500077493868884203D0009B012B00D0E3E001\n:10486000019353075FD52368A568DE08F600AE19EB\n:10487000B54230D3009B012B00D0D5E02368D90886\n:104880006368994210D104316160A068C9001CF0CE\n:1048900059FD23686268DB08D21ADB00A060D200F1\n:1048A000C018002123F0B6FD07212368DD086A1C2B\n:1048B000D2000B4013432360A368ED005D195B4BEE\n:1048C0002F601F40062F21D00122237893432370AD\n:1048D0001CE00123C4E72868B8421AD1009B022BD0\n:1048E00014D129002368721BD210083B013A6F686B\n:1048F00028002360D200083123F079FD2368DD0809\n:10490000A368ED005D1900236F602B60280007B0DD\n:10491000F0BD019B002B04D1390003F02FF80028D3\n:10492000DCD10835A4E76368002B05D1009B012B7F\n:104930007AD1200000F07EF83C4B3B400593062BDB\n:1049400027D1F8081EF0A5F803906168039815F0C8\n:104950008FFA00260491049B0293029BDD00A3685A\n:104960005D19286800281BD1009B012B5CD1072111\n:104970002368DA080132D2000B4013432360002E73\n:1049800000D0350000236B60059B2F60062B9BD168\n:10499000BCE7390002200DF0DFFA43100393D4E79F\n:1049A000042803D1002E1DD12E001BE0B84211D1E6\n:1049B000009B022BAAD123680298083B2360013098\n:1049C000616815F055FAA368C900CB58002B25D1B2\n:1049D0002B609BE7019B002B04D1390002F0CEFF36\n:1049E0000028E5D102986168013015F041FA049B76\n:1049F00002918B42B1D1009B012B15D1002E0FD01B\n:104A0000236835000833236000237360059B3760FB\n:104A1000062B00D17AE72378009A57E70423D7E7DB\n:104A2000200000F007F890E700256FE7070080FFFF\n:104A30009CC60200F7B54368040001935A1C00238A\n:104A400017495800455AAA4206D90133222BF8D1FA\n:104A50005508AD18213B1D43E800A7681CF066FC13\n:104A60000723226865601340012200252360134359\n:104A70002370A060019B9D4203D138001CF073FCA1\n:104A8000F7BDEE00B959002908D0042906D001224B\n:104A90002000FFF7C7FEBE19736843600135E9E7E0\n:104AA00040F00200F8B50500002304688668144948\n:104AB000621C5800405A824206D90133222BF8D199\n:104AC0005008821801201043002328606B6080008A\n:104AD0001CF02CFC3700A400A860A419A74203D145\n:104AE00030001CF040FCF8BD3968002905D00429CD\n:104AF00003D0012228001CF0D0FD0437EEE7C046A9\n:104B000040F00200F7B545681600A8681F00019143\n:104B10001CF023FD0400A8681CF025FD1CF01DFD01\n:104B20000300032058430734001980001CF0ECFBFD\n:104B3000074B040003606B6832004360002385600C\n:104B4000C36001993B000830FFF7ACF82000FEBDC0\n:104B5000F899020070B5050088680C001CF07AF81E\n:104B600023000200024928001CF045F970BDC04630\n:104B70000E0E030010B5024821F05CFBFEF71CFC92\n:104B8000C4DC020010B5040008201CF0BDFB024B81\n:104B90004460036010BDC046349A0200F7B5C56892\n:104BA00004001E00002D02D11D602800FEBD036917\n:104BB0001830834205D1184B994203D017480EF0A4\n:104BC00027F919602000164F11007B680830019307\n:104BD00063687B6000F060FB019B05007B6001283F\n:104BE00007D002280CD00023E36023691B683360E0\n:104BF000DBE723691B683360002BD6D1E360D4E781\n:104C0000A36898681CF0A9FC002305308000E360CD\n:104C100024186368EBE7C046388D02002C0E0300B1\n:104C2000802E002013B501ABFFF7B8FF01280ED08E\n:104C3000104C02280DD0019BA34219D0002B17D095\n:104C400001AA01210C4821F0EFFAFEF7B5FB01980B\n:104C500016BD019802F0FCFD07490CF0FBFC002892\n:104C600001D10198F1E701980FF058FBA042F8D16B\n:104C70000020EDE7388D0200C4DC020010B50B0007\n:104C8000022808D14A6805491868FFF7CBFF0028B9\n:104C900003D1FFF76FFF8A68F5E710BD388D02007A\n:104CA00010B500220149FFF7BDFF10BD388D02008D\n:104CB00013B5114C01AB114A2100FFF76FFF01281A\n:104CC00003D0022805D0200016BD0D490D4820F064\n:104CD00000FD019802F0BCFD0B490CF0BBFC002864\n:104CE000F1D1019802F0B4FD08490CF0B3FC0028A2\n:104CF000E9D10198FEF760FB388D020030D8020040\n:104D0000EE0D030088DC0200B8D90200C4DC02000A\n:104D100030B58DB005006846FEF728FB011E10D1A6\n:104D20002A1D012020F099FC0122EB6804005B1091\n:104D300001335B001343EB60FEF736FB20000DB040\n:104D400030BD0198054A0368934205D0044A002407\n:104D50009342F3D0FEF730FB0024EFE7C4DC0200FF\n:104D60006CDA0200044B0B6003684B604368080078\n:104D70008B600123CB607047709A02000048704737\n:104D8000389B0200F7B50191114904001700002576\n:104D90001BF070FF7B68AB4204D80E4920001BF06B\n:104DA00069FFF7BD002D03D00B4920001BF062FF07\n:104DB000019BAE009A5909492000BE191CF01BF84E\n:104DC0000122B168200002F05BFD0135E2E7C04638\n:104DD000567A0300EC1E0300BDF70200E10E03004B\n:104DE000044B88600B60044B08004B600023CB60D1\n:104DF0007047C046A8CC02001918020070B50E001A\n:104E00001049040000251BF035FF7368AB420AD837\n:104E1000012B03D10C4920001BF02CFF0B49200073\n:104E20001BF028FF70BD002D03D0094920001BF0A6\n:104E300021FFAB00F31801229968200002F020FD49\n:104E40000135E2E7567A0300E50E0300EC1E03008D\n:104E5000BDF7020070B50D0001281ED0002803D058\n:104E6000022807D0002004E04B680E48002B00D138\n:104E70000D4870BD00260D4C6B689E4203D3012087\n:104E800064002043F5E7B300EB18996802200DF0A9\n:104E900063F8401024180136EEE74B685B001843B6\n:104EA000E7E7C04670DE020068DE0200CC9B02002D\n:104EB00070B506000D000B48002E0DD0B41CA400E8\n:104EC00020001CF021FA084B46600360002D03D03F\n:104ED0000023083CA34200D170BDE958C21891607C\n:104EE0000433F7E7CC9B0200D49B0200F0B5070027\n:104EF00085B00E0014001D2803D90025280005B038\n:104F0000F0BD01238340324D1D4044D1314A13424C\n:104F10001FD1F82292051342EFD0200002F098FC36\n:104F20002D4B426A9A4205D020002C4920F001FB0B\n:104F3000041E0CD02300310062680833009208314F\n:104F400072683800FCF74CFA254D0028D6D1254D63\n:104F5000D4E7200002F07CFC20490CF07BFB002809\n:104F6000CBD07368626829009818FFF7A1FF07008B\n:104F70003100736808379A0005000831380023F0C3\n:104F80002DFA210070686368800038189A00083193\n:104F900023F024FAB2E703A9100002F07FFD0025F8\n:104FA000A842ABD00398104D0028A7DD73680021FC\n:104FB0005843FFF77DFF05002B00300008330093B6\n:104FC0000830039B726804211BF091FF96E7C046EE\n:104FD0008000100020000400E14D0000D49B02007E\n:104FE00070DE020068DE0200CC9B020030B50400D7\n:104FF00085B0042A2DD1032540680D401FD1164BE2\n:105000000A689A421BD101AAFCF76EF9002802D166\n:1050100012480DF02BFF019B02982900C01AFFF7E0\n:1050200047FF050021006B6808319A00019B08309A\n:105030009C00091923F0D2F9280005B030BD0A0000\n:1050400000230100206802F0C3FD023080000559F2\n:10505000F2E70025F0E7C046D0D70200E70E0300D4\n:10506000F0B50C001100002285B01E000092012353\n:1050700020000CF01DFE184D002C1ED03568AB072B\n:1050800003D1164B2A689A4217D010201CF03CF925\n:105090000021040030680DF0C7F8002504260390B5\n:1050A00003980DF023F9071E0AD128002100FFF70D\n:1050B000FFFE050020001CF056F9280005B0F0BDE9\n:1050C000AE4205D8F10020001CF03CF90400760047\n:1050D000AB001F510135E3E7CC9B0200D49B0200DB\n:1050E000054B10B5186821F02EFE044B002800D1A6\n:1050F000034B180010BDC0468C29002070DE020052\n:1051000068DE020010B5034B186821F024FE024847\n:1051100010BDC0468C290020388D020010B5034B0D\n:10512000186821F086FE1DF030FC10BD8C2900208F\n:1051300010B5034B186821F083FE1DF026FC10BD4E\n:105140008C29002010B5034B186821F080FE1DF05B\n:105150001CFC10BD8C29002010B5034B186821F0F1\n:105160002BFE1DF012FC10BD8C29002030B593B031\n:10517000FBF762F8184C200022F02BFA174D286834\n:1051800011F00EFC200022F029FAFBF745F81EF082\n:1051900025FE1CF06AFB0400296803A821F0C9FD64\n:1051A0000F4B20000A93039B0B93049B0C93059BCE\n:1051B0000D93069B0E93079B0F93089B1093099BDF\n:1051C0000193119320F026FA200020220AA90CF066\n:1051D00045FD044813B030BD942900208C290020DF\n:1051E00055BA11C0388D0200F8B5114D0400286879\n:1051F00021F0A9FD002802D12000FFF7B7FF0D4BD9\n:105200001B78002B0DD10C4E3478E4B2002C08D161\n:1052100001272868377003685B689847054B34702E\n:105220001F70286811F098FC1DF0AFFBF8BDC04658\n:105230008C290020D62D0020D72D0020F0B58DB070\n:105240001CF013FB0E4B02689A4217D104694168A7\n:10525000089444698268C36809948469C0690A949F\n:1052600084466C4605910692079308A8E0C8E0C4FE\n:10527000604620600348006821F045FD0DB0F0BD98\n:1052800055BA11C08C29002010B54A6801491BF09D\n:10529000B2FD10BD57760300F0B5036899B0070062\n:1052A000986807911CF059F901220F21431E043020\n:1052B000800004933B18029304330393FB6806A811\n:1052C0001A4009180A70032293430A930CA8FEF7A8\n:1052D0004DF8031E00D041E3079A7D68BC68002AA0\n:1052E00000D19EE22A785E2A00D19AE207980793BD\n:1052F0000DF0E4FA04000AE0D64B63600434D64BA8\n:105300009A6C002A00D18BE200229C6C9A64FEF712\n:105310004BF80D9422E3D14BEFE7D14BEDE77F2122\n:105320006B785B06DB173278DB01100052B2084065\n:1053300003430136002AF6DB01225B001343DCE75E\n:1053400000237F213278DB01100052B20840C318DD\n:105350000136002AF6DBDB000622EFE703220336E4\n:10536000964308CEC9E70023C7E700237F213278A0\n:10537000DB01100052B20840C3180136002AF6DBE8\n:105380009B005B42029A9858002800D028E3B54958\n:10539000B54820F05CFFADE700237F213278DB01C8\n:1053A000100052B20840C3180136002AF6DB029AF8\n:1053B0009B005B4298581EF041FFE5E700207F22EA\n:1053C0003378C00119005BB2114008180136002B78\n:1053D000F6DB251D0CF062FD60603EE000207F22C0\n:1053E0003378C00119005BB2114008180136002B58\n:1053F000F6DB251D0CF020FDEEE700217F2233783F\n:10540000C90118005BB2104041180136002BF6DBD1\n:10541000206820F031F9206071E700217F22337885\n:10542000C90118005BB2104041180136002BF6DBB1\n:10543000220001CC0CF0ACFE61E700207F22337823\n:10544000C00119005BB2114008180136002BF6DBD1\n:1054500021000839251F0CF0EDF82C004FE7251D21\n:105460000CF034FDB8E7251F04222168286802F0FB\n:105470005FFC2860F1E700237F213278DB01100018\n:1054800052B20840C3180136002AF6DB9B005B428B\n:10549000029A21689950F8E000237F213278DB01DD\n:1054A000100052B20840C3180136002AF6DB029AF7\n:1054B0009B005B4221689858251F1EF0C1FECCE777\n:1054C00000207F223378C00119005BB21140081818\n:1054D0000136002BF6DB2168251F0CF00DFDBCE723\n:1054E00000207F223378C00119005BB211400818F8\n:1054F0000136002BF6DB2168251F0CF015FDACE70B\n:1055000000217F223378C90118005BB21040411896\n:105510000136002BF6DB231F1A6820680CF060FEB2\n:10552000083CECE62200231F083A2168126818683C\n:1055300002F0FEFB0C3CE2E600237F213278DB0127\n:10554000100052B20840C3180136002AF6DB029A56\n:105550009B00D31A1A68002A00D118E700221A60AB\n:10556000CDE600257F223378ED0119005BB21140B2\n:105570004D190136002BF6DB029BAD005D1B286840\n:105580001EF05CFE002800D101E7002128681EF013\n:1055900057FEB4E600207F223378C00119005BB2C9\n:1055A000114008180136002BF6DB0CF0B1FCA6E622\n:1055B00000207F223378C00119005BB21140081827\n:1055C0000136002BF6DB0CF0BBFC98E6236894E672\n:1055D0002368A360231F1B68636008348FE6231FC2\n:1055E000196822682160BAE7221F136821682360C6\n:1055F0002300083B18681060196080E673783278E1\n:105600001B021343ED18194BEE1878E633787678C1\n:10561000206836021E43019602F040FBEE1C251F57\n:105620002C00002800D16AE6114A019B944663448D\n:10563000F61864E633787678206836021E430196C1\n:1056400002F02CFBEE1C251F2C00002800D056E693\n:10565000EAE7C04668DE0200802E0020388D020096\n:1056600070DE0200180F030098DB02000380FFFFCA\n:105670000080FFFF33787678206836021E4301965B\n:10568000EE1C02F00BFB0028CED1043C37E6337849\n:105690007678206836021E430196EE1C02F0FEFA70\n:1056A0000028C1D0F1E7F12126682200300049002E\n:1056B0000CF06EFD2300F02108331A003000490081\n:1056C00001930CF065FD0021019A08001FF0C5FF51\n:1056D000AB786A781B0213430A9A0F210C320A92A4\n:1056E0000A9AEE1CF3181360022206ABC9180B7855\n:1056F0000A9D1A43231D13436B6000230A9A0B7003\n:105700009360A060019CFAE525002368B54A0193E7\n:10571000083D934209D16360A3602A000021032061\n:105720001FF09BFF019B2B6097E60122019B13401A\n:1057300005932AD0231F1A680592019A5210012A54\n:105740000DD1A84A0C3C1A60E260226100212200BF\n:1057500003201FF082FF059B23600323E3E72A68F1\n:10576000002106929F4A03202A601A602300103B02\n:1057700022601A0001931FF070FF019B069A0C3CF7\n:105780001A60059B23600523CDE7019B6360180029\n:1057900002F05EF8934B2060A3602A000599032075\n:1057A0001FF05BFF02F07AFA00280DD001228D4B2A\n:1057B00006A92B600A9B5B6813400E3252181370C7\n:1057C0000A9B0C3B0A9348E66368ACE7737832782F\n:1057D0001B021343844AEB189B186360EB78083470\n:1057E00023600F267F210220012506AA2368B61810\n:1057F0000B4206D1221F1668002B00D190E6183C00\n:105800007DE50A9A013B526802426FD0220008C22D\n:105810000523636014000A9B1E680A9B0C3B0A93D5\n:1058200035007D602B786E1C180010385A2800D97E\n:1058300005E314F08DFA61FD70FD72FD040374FD43\n:10584000040385FD93FD98FD9AFDB1FDC3FDD3FDD5\n:10585000E2FDF2FD02FE14FE18FE20FE31FE45FEC2\n:1058600055FE65FE77FE81FE96FEAFFEBDFE04038B\n:10587000040304030403CBFECDFE2AFFD4FED9FEAD\n:10588000E3FEEBFEFFFE1FFF2CFF040304030403F3\n:1058900038FF69FF630063008000AE00BF00DD00D9\n:1058A000DD00CBFFB300040304030403040304037B\n:1058B000040304030403E900FB0004030D011C01BD\n:1058C000040325015201370173018901380268027E\n:1058D0009602800204039E01A901B401C101CD0119\n:1058E000EA0104022102CE02ED02FE020A9A526887\n:1058F0002A4032700A9A0C3A0A9279E77378327821\n:105900001B0213430A9AEE1C0C320A920A9AF318ED\n:1059100013602B7806A9403B5A4253410F2252187C\n:1059200010785B000A99034323434B6000230A99D4\n:1059300013708B60E3E423682A4A934200D1A4E603\n:10594000DA0707D55B10DBB2043C012B00D048E737\n:105950000222CEE1FDF728FD23680D930D9B23491C\n:1059600018680BF077FE002800D1AEE27A68002AB2\n:1059700000D1AAE21378432B00D098E293785078B4\n:105980001B02D11C0343CB187B60BB68103BBB6080\n:105990009CE4002120680CF047FC3CE52500210038\n:1059A00020680C350CF040FC844200D155E5002302\n:1059B000236011E52000337876780C383602BC601D\n:1059C0001E4303680196EE1C002B02D12300083B06\n:1059D00018680CF063FC002802D1103C019B27E6FC\n:1059E00060608BE4388D02000380FFFFC4DC02009E\n:1059F00001220A9B06A95B6813400E3252181370ED\n:105A00000A9B0C3B0A937AE400207F223378C00182\n:105A100019005BB2114008180136002BF6DB81003B\n:105A2000641A04342100FFF743FAF4E400207F22D3\n:105A30003378C00119005BB2114008180136002B01\n:105A4000F6DB8100641A043421001BF04BFDE2E414\n:105A500000207F223378C00119005BB21140081882\n:105A60000136002BF6DB251D1EF06EFCB4E425008C\n:105A7000231F083D1A68216828681EF09EFCECE48C\n:105A800000207F223378C00119005BB21140081852\n:105A90000136002BF6DB8100641A04342100FBF789\n:105AA000A3FEB8E400237F213278DB01100052B25C\n:105AB0000840C3180136002AF6DB251F2868216834\n:105AC000022B03D1CC4A0EF0ADFBD2E4083C0A0015\n:105AD000010020680EF0A6FB9DE400237F213278B0\n:105AE000DB01100052B20840C3180136002AF6DB71\n:105AF0009A08920052421059032221681340251F30\n:105B0000002B02D1FDF7F2FCA7E4012B03D12A6898\n:105B10001EF053FC04E51BF0EBFA9EE400257F2108\n:105B20003378ED011A005BB20A4055190136002B9B\n:105B3000F6DB2200290020680CF06EFDAF4B5D19EA\n:105B4000AD006419FFF7DBFB00257F213378ED0101\n:105B50001A005BB20A4055190136002BF6DB220011\n:105B6000290020680CF0ACFDFF222B0A13401540E1\n:105B7000E5E70322F31C93430022186811001E1D61\n:105B8000251D1BF007FB27E40322F31C9343251F6D\n:105B90002268296818681E1D1BF0FCFA69E40322BC\n:105BA000F31C934319795E1D8A00A41A0434220061\n:105BB00018681BF00BFB2EE40322F31C93431879A7\n:105BC0008021C243490092005E1DA4180143EEE704\n:105BD00000207F213378C0011A005BB20A40101800\n:105BE0000136002BF6DBFF25FF220100C3096D0003\n:105BF00011402B405B189B00E41A000A0240231D51\n:105C000020680CF01BFAFFF706FC00217F22337896\n:105C1000C90118005BB2104041180136002BF6DBB9\n:105C2000FF22CB0952001340CAB29B189B00E41A12\n:105C3000083C220000200CF099FBFFF7ECFB00234E\n:105C40007F203278DB01110052B20140CB180136BF\n:105C5000002AF6DBFF211800FF250840DA096D0055\n:105C60002A40451C52199200A41A1B0A194022000E\n:105C70001FF0F3FCFFF7CFFB00217F223378C9012F\n:105C800018005BB2104041180136002BF6DBFF22F2\n:105C9000CB0952001340CAB29B189B00E41A0C3C7B\n:105CA00022000120C7E70F2206ABD2181378002B81\n:105CB00000D14DE601210A9B5B680B4013700A9BE3\n:105CC0000C3B0A9344E60A9B5B6813420ED0032206\n:105CD0000A9B21685B6893431C0059609A600A9B89\n:105CE00008341E680A9B0C3B0A9399E50A9B0C3BFF\n:105CF0000A930A9B03998B42E5D2FDF755FB0020DE\n:105D0000BC6019B0F0BD6B78022B03D1043C206855\n:105D1000FFF7EEFA002BFAD10A9B039A934203D2C3\n:105D200037493848FFF735FB9868002801D0FFF75E\n:105D3000DFFA0C3BF1E7231F0593079B0193231F19\n:105D40001868019B002B19D00021079B0791019334\n:105D5000019A0BAB0CF038FD0B9B012812D12E00E1\n:105D60002360FDF721FB0F2306AA9B181A780A9BD4\n:105D70007E601343BC60FB600120C2E70BAB019A5D\n:105D80002168E7E7002811D1043C002B00D11A4B11\n:105D90002360019B002B19D01B49180020F061FAE9\n:105DA000002813D0FDF700FB019BD6E5174918002A\n:105DB00020F057FA002805D00B980EF0AFFA043CFB\n:105DC0002060E6E7FDF7F0FA0B9BC6E5059CFFF7C0\n:105DD00096FA00207F223378C00119005BB211408F\n:105DE00008180136002BF6DB251F2A6821680CF005\n:105DF00083FDFFF73EFBC046388D0200FFFFFF3FEB\n:105E00005E0F030088DC0200B8D90200C4DC020087\n:105E100000217F223378C90118005BB2104041187D\n:105E20000136002BF6DB250001CD0CF077FDFFF7E6\n:105E3000D3FA2068251F1FF02BFCFFF70EFBAF2BBA\n:105E400005D80120803B5B000343FFF756FABF2BC8\n:105E500004D8B022D31A9B00FFF794FACF2B04D8B2\n:105E6000C022D31A9B00FFF713FBD62B06D8D03BDA\n:105E7000180021680CF070F8FFF7CDFAFA2B08D85B\n:105E8000251FD73B1800226829680CF005FEFFF794\n:105E9000F0FA4549454820F0DAF90400FDF784FAA4\n:105EA000049B04339B00FB185C60022029E75E2BF7\n:105EB0000BD1BC680D98231DBB600EF02FFA6060FB\n:105EC0007B6801337B60FFF701FA0D9B384A9342F0\n:105ED0002AD0384A934227D03B6898681BF043FB8E\n:105EE0001BF041FB7B68051D28005C1B1BF035FB8C\n:105EF000060028001BF037FB05001BF02EFBA41B3F\n:105F0000060028001BF02FFB05001BF026FB01906C\n:105F100028001BF028FB01220378002B09D1330055\n:105F200001990D980EF09AFA0F2306AA9B180121E9\n:105F30001DE059B2002909DB19001F255B09294022\n:105F400001308C42EBD3641AD218E5E70F21E0252B\n:105F50001940ED001B012B40457802302B43F0E740\n:105F60000A9A52680A401A700A9A0C3A0A921A78E7\n:105F7000002AF5D10A9903980D9A81420DD3012187\n:105F800019700A9B02311B687B600A9B5B688B431C\n:105F90000A9904338A601A60F9E4049B04339B0075\n:105FA000FB185A6081E7C046440F0300D4DB0200AF\n:105FB00030D8020040D8020070B5050014001BF074\n:105FC00097FC024B2560636070BDC046B9180200A3\n:105FD00010B50C007F2906D801211BF0C9FC002850\n:105FE00000D0047010BD224B994210D802211BF042\n:105FF000BFFC0028F6D04023A2095B421343037084\n:106000003F232340802464421C434470EAE7194B39\n:10601000994214D803211BF0ABFC0028E2D02023C6\n:10602000220B5B4213433F2180220370A30952429B\n:106030000B400C401343224343708270D2E704218B\n:106040001BF096FC0028CDD01023A20C5B4213431A\n:106050003F2103708023220B5B420A401A434270A7\n:10606000A2090A400C401A431C438270C470B9E76D\n:10607000FF070000FFFF000007B5034B00906846D4\n:106080000193FAF7F9FC07BDB918020005230200D5\n:1060900070B5094C094D2068434309489B189B0083\n:1060A00018582B682260C0180F2319400901286076\n:1060B00002F0E6FC70BDC046482A00204C2B0020B0\n:1060C000589D0200A839030000B5080006292ED803\n:1060D00013F034FE040A10161B2128009A18E2233C\n:1060E000DB00D218107800BDC4329200D05C80066C\n:1060F000800EF8E7C4329200D05AC004400EF2E796\n:10610000C4329200D0580003F8E7C43292009A18C3\n:1061100090780009E7E7C43292009A18D078000717\n:10612000000FE0E7C43292009A18D078F1E7024BF2\n:10613000024A00201A60D6E7640000207D0F0300A9\n:10614000A83910B504000800062949D813F0F6FD57\n:10615000040A141F2A343F00E221A218C900521871\n:10616000137010BD3F210B401800C4329200135D24\n:106170008B4303431355F4E77F21C4329200194047\n:106180001948135B890103400B431353E9E77F214F\n:10619000C432920019401059144B490303400B4379\n:1061A0001351DEE70F20C4329200A2181901937830\n:1061B00003400B439370D4E70F210B401800C43207\n:1061C0009200A218D3788B430343D370C9E70F2002\n:1061D000C4329200A218D1781B0101400B43F4E7AE\n:1061E000034B044A1A60BCE73FE0FFFFFF1FF0FFCC\n:1061F000640000209B0F0300F0B5D2B285B00E0002\n:106200000293072113000B40013BDBB2042B02D9A0\n:10621000294C2A4D25608A431F02002A24D1284B8D\n:106220003578C45C274B2409E443E4B22D1BDB1909\n:10623000EDB2039308276319039ADBB2D35C5A00CB\n:10624000D2B25BB20192002B33DA1A210320013F54\n:10625000FFB2FFF71BFF019B002FF0D10134E4B226\n:10626000002CE7D135701AE0D4431749E4B2CE5C74\n:106270000825144B1B19DB5D5A00D2B25BB20192A8\n:10628000002B0FDA05210220FFF700FF013DEDB2E0\n:10629000019B002DF0D10134E4B2002CE8D102982A\n:1062A00005B0F0BD31000120FFF7F0FE002EE9D06F\n:1062B000ECE706210420CAE764000020880F0300F1\n:1062C00019070000131503006E1B03000022F0B530\n:1062D00005000F00FF200F248BB008AB654EDA716C\n:1062E0000100C431890069188B781A09B25C234017\n:1062F00012011343CA788B7013071B0FF35CA24380\n:10630000234013431A09B25C234012011343CB709C\n:106310000138E5D2E223DB00EE5CB308F31ADBB20E\n:106320000493554B1B68002B0BD0E222C421812023\n:10633000D200890000013B00AA186918281809F04A\n:106340006BF9002448230294039301940094812262\n:106350002B1912019B181B781800059307239843EB\n:1063600020D008A92300059A07312800FFF744FF31\n:106370000230C4B2023FFFB2002F78D02B780393D3\n:10638000013EF6B2002E47D1E2222B19D2009B1813\n:106390001E78B308F31ADBB204930023029301932F\n:1063A0000093D4E7354B009A9C469A5C2300C43393\n:1063B0009B00EB18997809090A4331498A5C0199D5\n:1063C00007926246DB78525C1907090F0A432C4991\n:1063D0001B098A5C2B490692029A8A5C0699134330\n:1063E000079A8A182649C95C01238918FF2A00DC0C\n:1063F000031CC918882309061B06C918090F0020A9\n:10640000FFF744FE039B013BDBB20393002BB7D1A4\n:106410000134E4B2013FAEE7049B013BDBB20493DD\n:10642000002B02D1059B002B18D12200C432920010\n:10643000535D00999B069B0ECB18DBB20093535B18\n:106440000199DB045B0ECB18DBB201935359029A1E\n:106450001B035B0ED318DBB2029378E708A9230075\n:10646000059A07312800FFF7C7FE04008CE70BB040\n:10647000F0BDC04697100300442A0020631A0300B1\n:106480006F12030013140300064B1B5C002B05D096\n:10649000054B185C4843C011C0B27047034B185CF1\n:1064A000FBE7C046BF13030038120300F8100300D7\n:1064B000064B1B5C002B05D0054B185C4843C011F4\n:1064C000C0B27047034B185CFBE7C046BF13030024\n:1064D000731B030048110300F0B5037A8DB004006C\n:1064E0007F2B00D158E10300070000250933FF335B\n:1064F0000837099301953E787F2E00D087E000236E\n:106500000693019306998B00E31803931A7A481CAB\n:106510001B7BC0B206907F2B00D11CE19F49CE5C53\n:106520008D5C9F49AE4200D0F2E08D5CCB5C049361\n:10653000039B597A019B5918CBB20193049BEB182A\n:10654000DBB20793023B1B06DCD4A827019B5D1B33\n:10655000EBB20593A82F00D0E2E0039B039A5B7A8D\n:10656000527B5B08520899180291019901988A1888\n:10657000E221C31AD2B2DBB2C900A218E318521842\n:106580005B18157818782D1AEDB27F222B006DB2AA\n:1065900093430893EB17E8185840029913F052FD03\n:1065A0002800CBB20299099313F066FC059A0025E6\n:1065B0001600C3B20A93029B9B18DBB20B93320006\n:1065C00039002000FFF77EFD0A9B01360B9AC018A8\n:1065D000F6B2C3B2964200D1B7E0099AAD18029A5A\n:1065E000EDB2AA420DD8AD1A20216A46521812788F\n:1065F000EDB252B2002A00DAA5E0002B01D001333F\n:10660000DBB2320039002000FFF79AFDD7E7012EF8\n:1066100078D12B003100019A20001BF02CFABA78B7\n:10662000604BA1789B185B7830000193FB7808934E\n:10663000FFF72AFF3F23E178034030000293FFF782\n:1066400037FF7F22584B9B5D1A40584B03929A5D4F\n:106650000F231A400492564A925D1A400592554AF9\n:10666000925D1A4006923F22534B9B5D07937B78C5\n:10667000EB18DBB20A93029B134002937F2318406E\n:1066800083019C462A003F21C4329200135D0F26ED\n:106690008B4302990B431355135B48490B406146EA\n:1066A0000B431353039B10595903454B03400B43B2\n:1066B0000498190C3140000113510843A21890703E\n:1066C0001B0E0598B3430699034309011E400E4370\n:1066D000D670694681226319097F12019A181170D8\n:1066E000E222D2009B180899019A013552181A70BB\n:1066F0000A9BEDB29D42C5D1099B0437BB4200D035\n:10670000F9E6FCE6022E8AD12B00019AFF2183E7ED\n:106710002C48AE4201D9C55C08E78D5C835C06E776\n:10672000049B019A39009A18D2B22000FFF7CAFCE4\n:10673000059A050039002000FFF7C4FC079B2D1ABD\n:10674000EDB2029321E7013B5AE70137FFB2AF2FC9\n:1067500000D0FFE6D6E6023189006118019B497836\n:1067600059186368C9B2002B13D1E223812216485D\n:10677000DB001201E318A518001B1A18C43292009E\n:10678000125D1E789206D20EB21A1A7001339D4223\n:10679000F3D12000FFF79AFD0DB0F0BDA810030063\n:1067A0006F130300631B030098110300A70F03007E\n:1067B000F70F030047100300131A03003FE0FFFF29\n:1067C000FF1FF0FFE8110300F0F8FFFF00487047DB\n:1067D0000148E80110B501F023F980F31088014861\n:1067E00010BDC046388D0200044B054A05481A60AA\n:1067F000054A5A6000221A817047C046502A00207C\n:1068000020030700388D020074696275F7B5160021\n:10681000314A0B0088321768002F02D12F480CF044\n:1068200033F902212E4C2F4DE167A324E4002C59AB\n:106830002D4AE4B206343C192C4F3D68A54204D1E0\n:106840002B4B116001930198FEBD2578002832D1B1\n:10685000601C002B04D1290002F054FB01900BE0D6\n:106860005A68AA4200D92A000100186821F0BFFD29\n:1068700001226B001A430192002E0ED06219537848\n:106880005B423360D37811791B0209040B43917882\n:1068900052790B431206134373603E68A91D6118B9\n:1068A000721A200021F0A3FD0223751B0E4A063D3B\n:1068B0003D601360C7E7022D04D8002303600E3348\n:1068C0000193D9E72100042221F088FDE91E201D53\n:1068D000002202F0FFFAC1E7802E00202C1C0300EA\n:1068E00004E100E00010004000E100E05C2A00202C\n:1068F000388D02007FB5002101AA0800FFF786FF4E\n:106900000A4B98420FD00121019B03905A00029B31\n:106910000A438B400492064A032013400B4303A909\n:106920000593FEF7C5FA07B000BDC046388D0200DA\n:10693000FEFFFF7F002213B501AC11002000FFF71E\n:1069400065FF094B98420ED02378022B08D9637853\n:10695000012B05D1A378002B02D1E378012B02D0C3\n:1069600002480CF091F816BD388D02000C1C030093\n:1069700002220B4B10B5DA6700220121094B5A6144\n:10698000094A11615A69002AFCD0084C88342068F1\n:10699000002803D01AF0E7FC0023236010BDC04696\n:1069A00004E100E0FC10004000100040802E0020B8\n:1069B00010B5FFF7DDFF014810BDC046388D02005D\n:1069C000F8B5FFF7D5FF364C2678657806360135E1\n:1069D000754328001AF098FC324A86191660002286\n:1069E000314B451988331860304B01211D60304B05\n:1069F0005A608022D20511605A68002AFCD0032117\n:106A00002C4B61562C4A00259950A178043A995094\n:106A1000617A083299506168284A08269950217A8B\n:106A2000274A284F99500121274A9D5004329950F6\n:106A3000264A9E508122247892042243A324E40013\n:106A40001A510224224A9C50224A9F50224F043A53\n:106A50009F501827214A9F50214AC0279850C12291\n:106A600092009E501F4ABF00D0591F4E0640C020C2\n:106A700000023043D051C020400014501460102256\n:106A800080301C5822431A50184A5560596051688A\n:106A90000029FCD00021116101229A60F8BDC04696\n:106AA000502A00205C2A0020802E00204C2A002042\n:106AB000FC000040001000400C0500001C05000018\n:106AC00024050000FFFF00002C0500001405000055\n:106AD000340500003C0500002110010054050000B1\n:106AE0000405000000E100E0FF00FFFFFC10004093\n:106AF00010B5FFF765FF014810BDC046388D020094\n:106B0000F0B505008DB01600002802D06F480CF0DB\n:106B10007FF96F4B09AA190091C991C21A781F7A9F\n:106B200006925A7805929A78039203229A56049212\n:106B30005A685B7A019202937368AB424CD9EB00BE\n:106B40000793B368EA009B181A68002A1BD0042A2E\n:106B500019D0586800F090FFB368EA000400985814\n:106B600002F0DAF90200B338FF3806282ED813F005\n:106B7000E5F8040C131920262800631EFA2B00D90F\n:106B8000A2E0E3B206930135D6E7631EFD2B00D9E0\n:106B90009AE0E3B20593F6E7532C00D994E0E3B210\n:106BA0000393F0E7072C00D98EE04A4B1B57049360\n:106BB000E9E7022C00D987E0E3B20293E3E701940E\n:106BC000E1E7FF2C00D97FE0E7B2DCE74249434828\n:106BD0000DF0D8FBFCF7F0FB414B09AC88331B6888\n:106BE000002B17D16B461B7E277223706B461B7DD3\n:106BF00063706B461B7BA3706B461B7CE370019B31\n:106C00000A936B461B7A6372314B07CC07C3354836\n:106C10000DB0F0BD6B461B7E2D4D23706B461B7D6A\n:106C2000637022882B889A4212D0FFF7A1FE6B4630\n:106C30001B7B2772A3706B461B7CE370019B0A933E\n:106C40006B461B7A63720ECC0EC5FFF7B9FEDEE70A\n:106C50000222254B2549DA670022254B4A61013281\n:106C60001A614A69002AFCD06846007B09AA907024\n:106C70006846007C1772D07001980A906846007AC6\n:106C80005072134870CA70C01A4A049898500398FA\n:106C9000043A98500298083298500198164A985031\n:106CA000164A9F5000224A6001325A604A68002A00\n:106CB000FCD000220A61C02101329A60104B0132DF\n:106CC00049005A501A60A2E70E4980E7B61B03003C\n:106CD000502A0020AE1B0300D11B0300F0DD020090\n:106CE000802E0020388D020004E100E0FC100040FE\n:106CF000001000400C0500001C05000024050000E9\n:106D000000E100E0E71B0300214BF7B55A68214D75\n:106D1000002A03D000225A600132AA601A69002AB0\n:106D200034D000221A61A323DB00E8581A4BC2B208\n:106D3000883319680C78A24201D2140008708023AD\n:106D4000DB00EB58012B1FD1144E154A3768A31DE9\n:106D500012680193FB189A4216D3621C380021F086\n:106D60003DFBA923DB00EB58621CBB5412F008F971\n:106D70003368020A1C19E270020C2271019AA07099\n:106D80009B18000E607133600123AB60F7BDC046F5\n:106D9000FC10004000100040802E00205C2A0020E3\n:106DA0004C2A0020F7B5314F00933B008833019205\n:106DB0001A680E00002A02D12D480BF065FE022150\n:106DC0002C4B2D4CD96700232C4D636101332B6173\n:106DD0006369002BFCD0A323DB00EB580099DBB2E6\n:106DE0007118994203D9B3423DD39B1B0093009B7A\n:106DF0008837F31813703B68010001331800320024\n:106E000021F0ECFA009B002B06D03868013680197F\n:106E10001A00019921F0E2FA0023636001332B602C\n:106E20006368002BFCD00123AB600023236123693E\n:106E3000002BFCD00023636101332B616369002BBD\n:106E4000FCD00023636001336B606368002BFCD0CF\n:106E50000023C021022223610133AB60084B4900AB\n:106E60005A501A60F7BD1E000023BFE7802E002095\n:106E70002C1C030004E100E0FC1000400010004066\n:106E800000E100E007B501A902F07CFC019B0200D3\n:106E900003210248FFF786FF01480EBDAA1B03002D\n:106EA000388D02001FB5012201A900F073FF0023F5\n:106EB00001981A000299FFF775FF014805B000BD5F\n:106EC000388D02000300203B5E2B00D93F200523B4\n:106ED00020384343014A1068C018704768000020FA\n:106EE000044B0B6043684B6083680800CB60002351\n:106EF0008B607047889F020070B5050008006843EA\n:106F00000130401008300C001AF0FEF90122044B49\n:106F100085710360037944719343037170BDC0466A\n:106F200094A2020010B50379DB0702D501480BF0EB\n:106F30006FFF10BD411C030070B5050020201AF042\n:106F4000E3F905210B4B040003600800FFF7D4FFB1\n:106F50006B68EA68A060236162602A7C2000A276E8\n:106F6000AA689B1863616B7CE3761AF0F9FD200038\n:106F700070BDC046D8A2020070B50D000400FFF736\n:106F8000D1FF280000F04CFD0100092802D9044877\n:106F90000BF07AFD20001AF045FE024870BDC04695\n:106FA000DE1C0300388D0200F7B5C3684269040097\n:106FB00093420BD1037E052B08D1C37E181E43D00C\n:106FC00020001AF0CDFDA0681AF03AFE0125002637\n:106FD0006B1E0193A7683200290038001AF0EEFDFD\n:106FE000320003000199380001361AF0F4FD052E35\n:106FF000F0D10135052DEAD100252A000023042116\n:10700000A06801351AF0E7FD052DF6D1227E637EDA\n:107010009A421AD2207FFFF755FF00250700042669\n:10702000227E7B5DB21A1341012213400832534382\n:1070300004212A00A06801351AF0CDFD052DEFD1FD\n:10704000237EA06801332376FEBD9A42F8D1E3681F\n:1070500061695A1CE2608A4205D120232377A0236C\n:10706000DB002383ECE758782077FFF72BFFA17E26\n:107070000500002901D0064BF3E71AF048FD404215\n:10708000207628001AF05BFD01306076D8E7C04614\n:10709000FF050000F0B50C000B6889B00700180070\n:1070A0000493FFF73FFF6568280000F0D1FB1E4BFB\n:1070B000984202D01D480BF0ABFE072F01D11C48AF\n:1070C000F9E7A06800F0ACFC0690E06800F0A8FCCE\n:1070D0000790206900F0A4FC0590606900F0A0FC16\n:1070E000059B0600002B01DB002802DA11480BF09B\n:1070F000CBFC062F14D0A06900F092FC0700E069D9\n:1071000000F08EFC059B03900093280002970196E7\n:10711000079B069A04991AF0C1FD074809B0F0BD13\n:1071200000200700EEE7C04694A202006E1C030098\n:10713000811C03009B1C0300388D020070B5040005\n:107140000800160000F06CFC0500300000F068FC40\n:107150000600002D01DB002802DA0C480BF094FC3D\n:1071600020001AF086FDA84204DD20001AF08FFDF1\n:10717000B04201DC0648F1E73200290020001AF095\n:107180006AFD43000120184370BDC046F71C030090\n:10719000101D0300F8B50D000C682000FFF7C2FEBB\n:1071A000686800F03DFC0600A86800F039FC0700A4\n:1071B000002E01DB002802DA0F480BF065FCE868BE\n:1071C00000F02EFC0500092801D90C48F5E7200045\n:1071D0001AF04FFDB04204DD20001AF058FDB8420D\n:1071E00001DC0748E9E72B003A00310020001AF0E3\n:1071F000F2FC0448F8BDC046F71C0300DE1C030087\n:10720000101D0300388D0200F7B50E00254904005B\n:10721000019219F0F0FD019B002B03D122492000BF\n:1072200019F0E9FD2149200019F0E5FD00253000A5\n:107230001AF02DFDA84225DD002730001AF019FDB7\n:10724000B8420CDD39002A0030001AF004FD184B5A\n:1072500018491A5C200019F0CEFD0137EDE71649F8\n:10726000200019F0C8FD019B002B09D130001AF055\n:107270000EFD0138A84203DD1049200019F0BBFDC6\n:107280000135D4E70949200019F0B5FD019B002B19\n:1072900003D10B49200019F0AEFD0A49200019F076\n:1072A000AAFDF7BD9D1D0300A41D0300B01D030032\n:1072B000B21D0300AC24030087770300AA1D03005E\n:1072C000CA250300EC1E0300F0B50E0011000022D9\n:1072D0008BB01C000092032330000AF0E9FC032E5F\n:1072E00000D9D5E0300012F029FD020B9191052163\n:1072F0000800FFF701FE070038001AF0A1FC18E0B3\n:107300002068644B0340062B07D0830700D07AE047\n:10731000614B02689A4200D075E007A902F032FA88\n:10732000079B03900593012B06D100781AF0B2FE5B\n:10733000070038000BB0F0BD00231E00039A029333\n:1073400003990598511A884215DD11780A2901D050\n:107350003A2908D19E4200DA1E00029B01330293B3\n:1073600000230132ECE701332029FAD03929F8D97A\n:107370004A480BF089FB002B05D0029A0132029299\n:107380009E4200DA1E0002993000FFF7B5FD00258D\n:1073900007002C00039B0493039A049B9B1A059AF5\n:1073A0009A4223DD049B1B780A2B01D03A2B0FD184\n:1073B000A64207DD210000232A0038001AF00BFC4A\n:1073C0000134F5E700240135049B01330493E3E71E\n:1073D000202B07D1002321002A0038001AF0FBFBE4\n:1073E0000134F1E7392BEFD8303BF4E7029BAB4295\n:1073F0009FDDA6429DDD210000232A0038001AF0FF\n:10740000EAFB0134F5E726480BF002FD206800F0A6\n:1074100007FB0500606800F003FB029001002800F4\n:10742000FFF76AFD0700022E00D165E7012207A9D8\n:10743000A06800F0AFFC002D0BDB029B002B08DBEB\n:107440000024089B03940493029B049A6B43934289\n:1074500005D014488DE7039B01345B190393029B0D\n:107460009C4200D165E70026AE42F4D0039A079B08\n:107470009446049363449A5D131C092A00D9092396\n:107480003100DBB2220038001AF0A5FB0136EBE731\n:107490000548B9E7070080FF9CC60200201D0300D5\n:1074A000491D0300611D03007E1D0300F0B585B07A\n:1074B000019105000021019812F01AFE041E02D06D\n:1074C00021480BF0E1FA28001AF0D3FB060028004F\n:1074D0001AF0DDFB01003000FFF70EFD0700280069\n:1074E0001AF0C7FBA0422CDD002628001AF0C1FBD1\n:1074F000B04224DD3200210028001AF0ACFB13F06A\n:10750000B7FD019913F088FA15F08CFB00220F4BA0\n:1075100013F038FE0E4B00220290039112F0AEFDE4\n:107520000923002804D00298039915F00BFB0300EF\n:107530003200210038001AF04EFB0136D5E7013445\n:10754000CDE7380005B0F0BDB31C03000000E03FFC\n:1075500000002240F0B587B00491059207001AF0B0\n:1075600096FB040038001AF084FB029004981AF08D\n:107570008EFB0190A04202D019480BF085FA0199C8\n:107580000298FFF7B9FC00250390029B9D4223DA85\n:107590000026019BB3421DDD3200290038001AF09D\n:1075A0005AFB32000400290004981AF054FB059B92\n:1075B000002B0AD02318092B00DD092332002900F3\n:1075C00003981AF008FB0136E3E7231ADA43D217CF\n:1075D0001340F3E70135D8E7039807B0F0BDC04684\n:1075E000BD1D0300F8B5040008000D00160000F0F2\n:1075F0002FF9164FB84201D000200FE0053C042CB3\n:10760000FAD8200012F090FB141403F80B0030009D\n:1076100000F06AFA011C2800FFF748FFF8BD3000AF\n:1076200000F062FA011CFE20800513F01DF8F1E75E\n:10763000300000F00DF9B842DED162426241310003\n:10764000D2B22800FFF786FFE8E7C04694A2020006\n:10765000F7B507000193142008AB0E0015001C7845\n:1076600019F052FE044B476003606B461B7986603D\n:10767000C56003744474FEBD14A3020070B5050018\n:107680000C2019F041FE0521044B04004560036005\n:107690000800FFF731FCA060200070BD3C9F020095\n:1076A00010B50400034B036040301FF040F9200088\n:1076B00010BDC04658A3020010B50F4C200020F0AA\n:1076C000BBFB002808D0200020F05CFB0B4B1B68A4\n:1076D000984202D1F9F740FB10BD3F21084A1388B8\n:1076E00001330B40074909888B42F5D01188064CBD\n:1076F00013806054F0E7C046602A00207C2E0020F2\n:10770000BE2D0020C02D0020D82D0020002210B555\n:10771000044B05491A80054B05481A8020F091FB5F\n:1077200010BDC046BE2D0020B9760000C02D00203F\n:10773000602A0020034B1888034B1B88C01A431E85\n:1077400098417047C02D0020BE2D0020084A094BEB\n:1077500010881988884201D130BFF9E7138806499B\n:10776000C85C3F21138801330B4013807047C0462B\n:10777000C02D0020BE2D0020D82D002070B50400A3\n:107780004518AC4205D02178024820F0FFFA0134B8\n:10779000F7E770BD602A002070B504004518AC42C0\n:1077A0000DD02378064E0A2B03D10D21300020F096\n:1077B000EDFA2178300020F0E9FA0134EFE770BDEE\n:1077C000602A002070B504000825002C08D0210094\n:1077D000082C00D929000348641AFFF7CFFFF4E70B\n:1077E00070BDC046E31D030070B505000400082607\n:1077F000002C08D02100082C00D931000448641A5C\n:10780000FFF7BCFFF4E72800FFF7DCFF70BDC046C0\n:10781000DA1D030010B5010001481CF0B5FA10BDD7\n:1078200018000020142313B5064C009319221821C8\n:1078300020000FF06DFF044A0449200020F055FDA0\n:1078400013BDC046602A002000000020A176000081\n:10785000074BC2070AD4074A074B0240062A05D045\n:107860000322064B0240022A00D00368180070472A\n:107870005C970200070080FF9CC6020054B3020020\n:1078800070B50D000400160007F0ACFB2800FFF7F0\n:10789000DFFF8368002B04D03200290020009847C6\n:1078A00070BD42680249200019F0A5FAF8E7C04609\n:1078B000301F030010B50A0001000248FFF7E0FF87\n:1078C00010BDC046348C0200F7B5050008000E005C\n:1078D0001EF0C1FC002810D001AA694630000CF04F\n:1078E000F1FD009B002B08D01749280019F0C2F9C0\n:1078F000009CE71EA400002F09DA310028000222B4\n:10790000FFF7BEFF2800114919F0B4F9F7BD019B3C\n:1079100028001A1911000C3A08390B6812680C4932\n:1079200019F069FA019B1B19043B1A68002A06D159\n:107930000649280019F09EF9033F0C3CDBE7054996\n:10794000280019F058FAF7E7EE1E0300CA250300D5\n:10795000121F0300271F030010B50400FFF778FF74\n:10796000054B0069984203D0431E9841C0B210BD38\n:1079700020001DF0BCFDFAE77114010070B5050090\n:107980000C0001208D4203D0214B9D4201D10020EB\n:1079900070BD9942FBD001231D4204D01942F6D19B\n:1079A0002B000D001C002A001A4B1A40062A05D095\n:1079B000AA0711D1184A296891420DD12340062BFC\n:1079C00005D0A307E3D1144B22689A42DFD12100EE\n:1079D000280001F087FEDBE72340062BD7D0A30762\n:1079E00003D10D4B22689A42D1D02800FFF730FF17\n:1079F0008369002BCBD0220029001B209847002848\n:107A0000C5D0064BC01A43425841C0B2C0E7C04679\n:107A1000388D0200070080FF9CC6020070DE020065\n:107A2000104B10B5984219D00F4A0123904217D03D\n:107A3000184201D0184110BD830706D10B4B0268D4\n:107A40009A4202D102F0BCFDF5E71AF063FB084947\n:107A5000020008480CF096FCFBF7AEFC0020EAE7B9\n:107A60001800E8E768DE020070DE02005C970200A2\n:107A7000B51E030078DD020010B5C30705D48307E7\n:107A800006D1054B02689A4202D11AF0BBFF10BD25\n:107A9000FFF7C6FFFBE7C0465C9702000F4B70B5CF\n:107AA0000D000124984204D100230B60230018002C\n:107AB00070BD0B4B984201D10C60F7E703002340E7\n:107AC00002D040102860F1E78207F0D1054A016832\n:107AD0009142ECD102F074FDF4E7C04668DE02008A\n:107AE00070DE02005C970200184B10B5984228D057\n:107AF000174B984227D0C30703D5401013F0B8FAAC\n:107B000010BD0323184206D1124A0168914202D1E6\n:107B10001AF081FFF4E702001A40022A08D10E4A47\n:107B20000240062A04D0FF22D20580189843E7E7D6\n:107B30001AF0F0FA0949020009480CF023FCFBF79F\n:107B40003BFC0020DCE7FE208005D9E768DE020070\n:107B500070DE02005C970200070080FF9B1E03009E\n:107B600078DD020010B583070CD103680A4CA342EC\n:107B700002D119F071FE10BD084CA34202D119F0D8\n:107B8000C8FCF8E71AF0C6FA0549020005480CF0EF\n:107B9000F9FBFBF711FCC046D49B02008898020059\n:107BA0004B1E030078DD020013B50C0001A9FFF79E\n:107BB000D9FF019BA34206D02200034903480CF0E1\n:107BC000E1FBFBF7F9FB13BD6E1E0300F0DD0200C5\n:107BD000F7B505000C0017001E00D3070ED557108F\n:107BE0000197019B002B1FDA1B190193002E1DD05A\n:107BF000002B15DA002301930198FEBD01A91000A6\n:107C0000FFF74CFF0028ECD138006C681AF082FABC\n:107C1000220003000B490C480CF0B4FBFBF7CCFB33\n:107C2000A342E9D90194E7E7002EF9D1019B002B8B\n:107C300001DBA342E0D36A68044905480CF0A2FBCB\n:107C4000ECE7C046111E030078DD0200351E03007C\n:107C50006CDA020010B50400830710D10D4B0268E6\n:107C60009A420CD10C4B0340062B06D1C0081AF0E7\n:107C700015FF43000120184310BD8068F9E720007C\n:107C8000FFF7E6FD4369181EF6D021000120984752\n:107C9000F2E7C0469CA50200070080FF164B70B5B6\n:107CA000040000209C4203D0144DAC4201D10120BD\n:107CB00070BD134B00209C42FAD00126264086421C\n:107CC00003D06010431E98410DE02000FFF7C0FD77\n:107CD0004369002B09D0210030009847002804D0C8\n:107CE000401B43425841C0B2E2E72000FFF7B2FF19\n:107CF0000028DCD00138E5E768DE020070DE020013\n:107D0000388D020010B50400FFF7A4FF002809D148\n:107D100020001AF0FFF90449020004480CF032FB7D\n:107D2000FBF74AFB10BDC046CD1E030078DD020004\n:107D300070B504000D001600FFF78AFD036A002BE2\n:107D400005D03200290020009847002818D10D4D99\n:107D50002000002E08D11AF0DDF902000A4928009F\n:107D60000CF010FBFBF728FB042E04D11AF0D2F91B\n:107D700006490200F3E71AF0CDF905490200EEE7E3\n:107D800070BDC04678DD0200351F0300601F030090\n:107D9000811F030010B51AF0D4F9002802D102485F\n:107DA0000BF036F810BDC046EC1D0300F7B505001A\n:107DB0002C200E001700019319F0B8FA040005708A\n:107DC00086608781072D01D0012D10D1337872781C\n:107DD0000A3B1B021343E3816B461B79202063752A\n:107DE0000423638419F090FAA0622000FEBD014BC9\n:107DF0005B5DF0E7AE1F030010B5040019F0C6FD8F\n:107E000019F0FFF901280BD00649200019F0D9FD1F\n:107E1000200019F0BBFD19F0F4F9022800D0002071\n:107E200010BDC046F11F0300F0B59DB000AF0C6857\n:107E3000032835D9CB68FB60042835D00D690020B4\n:107E40006D102BD41C232000F91801F09BFC7861E5\n:107E5000002D5AD0954C9649606807F00DFB06003E\n:107E60006068002293490430FCF7DCFC1823FA1800\n:107E7000D1180400300001F085FC3B6B013D01008E\n:107E8000C318002C05D1994203D2013B1A782E2A3F\n:107E9000F9D1013D0ED299420FD187480AF0F4FD85\n:107EA000864B0025FB60CDE70025CBE7013B1A7828\n:107EB0002E2AEED09942F9D3EBE7FE695C1A250031\n:107EC000002E01D0751C2D192B006A460E33DB08DD\n:107ED000DB00D31A9D46220018003B6120F07EFA99\n:107EE000002E08D02E233A69601C135510187969AA\n:107EF000320020F073FA2900386902F05DFD062493\n:107F00003B69C0000443FD617B61200001F004F87F\n:107F10000BF018FF061E15D02E21786920F0B6FA56\n:107F200000280BD0654BFA689A4207D17B69C11AC9\n:107F3000180002F041FD0BF005FF06003000BD46C1\n:107F40001DB0F0BD182318000125FA18D2183818F2\n:107F5000103B4021C01819F0E4FCBE603E61FB6993\n:107F6000AB4205D2554BFA689A42E7D0BE68E5E7C6\n:107F7000AB4204D07B695B5D2E2B00D094E02900DE\n:107F8000786902F019FD7B6A3860002B17D12A004E\n:107F9000082479691833F818001919F08DFC182392\n:107FA000FB181819FFF728FF78607B68002B14D1A5\n:107FB0003A68434943480CF0E5F9FBF7FDF918230B\n:107FC0000824FA182F211019FEF702F83B693969C5\n:107FD000EA1A7B6959181823DDE738680BF0B2FEFE\n:107FE000041E4BD138680BF07BFEFB690400AB42EA\n:107FF00013D1354BFA689A420FD17B68012B0FD011\n:10800000324A2B4940681CF0D8F918220823BA18C4\n:10801000D11820001AF01EF930E07B68012BF4D152\n:108020000022796AB86A00F055FFF4210200FF319E\n:1080300020000AF0D5F87B6A18227B600823B81864\n:10804000C0182F21FDF7C4FF18220823B818C01844\n:108050001F4919F0B6FC18220823BA18D01819F0D5\n:1080600095FC19F0CEF8022806D118220823BA1878\n:10807000D11820001AF0EEF87B687B62BB68002BF9\n:108080000CD07A693B699446E91A6344180002F0FF\n:1080900093FC22000100B8680AF0A2F8002E00D17B\n:1080A00026006B1C3B61BC60013558E7802E002028\n:1080B000860F00009E0F0000B51F0300388D0200E0\n:1080C000D41F0300F4D9020068DE0200760F00001E\n:1080D000E91F0300A3230021024A5B000248D1529A\n:1080E0007047C046802E0020388D0200A323012156\n:1080F000024A5B000248D1527047C046802E0020E1\n:10810000388D0200A323044A5B00D35A0348002B96\n:1081100000D103487047C046802E002070DE020068\n:1081200068DE020010B5F8F7B3F9014810BDC0468B\n:10813000388D020010B50C4C002808D1FC34236D9A\n:1081400018005A1C02D018011AF01FFC10BD086854\n:10815000FFF766FCFC34031E044803DA01235B428C\n:108160002365F3E71B09FBE7802E0020388D020012\n:1081700010B53E2803D040282ED03C2813D15329D7\n:1081800024D013D84C2921D007D8482950D04929C8\n:108190001CD0422907D1012348E04F2903D350299D\n:1081A00014D9512947D025480AF06EFC68293FD0E0\n:1081B00006D864293FD0662908D06229F3D1EAE7BE\n:1081C0006C2903D0712936D06929ECD10123042010\n:1081D000002A00D0136010BD512926D010D849299B\n:1081E0000CD006D84229D6D0482918D00129DAD196\n:1081F000D1E74C2902D0D6D34F29D4D30423E6E7C4\n:108200006629FBD006D86229C5D064290DD0532930\n:10821000F4D0C8E76929F1D003D86829C3D1022373\n:1082200004E06C29EAD07129BDD108231800CFE7FA\n:1082300001230220CCE701230820C9E7F51F030032\n:1082400010B551283DD011D849282ED007D8422842\n:1082500003D0482826D0012806D18B5C10E04F2897\n:108260004BD017D84C2820D0002309E0682816D01E\n:108270000AD8642836D066282AD06228F4D18B56D2\n:1082800001205B00184314E06C2803D0712811D042\n:108290006928E9D1920050581AF077FB09E05200A2\n:1082A000535EEDE75200535AEAE7920050581AF035\n:1082B00087FB10BDD2008A18106851681AF056FB6F\n:1082C000F7E7D2008A18106851681AF06AFBF0E7E5\n:1082D0000323920050589843030002201843084B90\n:1082E000C018E6E7D2008A181068516814F0ECFC58\n:1082F000032302009A431300EFE792005058D8E797\n:1083000000008080F7B51700156801AA04000E0070\n:10831000FFF72EFF402C05D1019B043C5A1EAA18E2\n:108320005D4215405A213E3C62426241B142894160\n:108330002B183B60D2B22B00494219F0E9FF040030\n:108340000D004F2E08D0532E07D120F0B7F8002291\n:108350000100200000F0BEFDFEBD662E06D1032305\n:1083600002249843154B2043C018F5E7642E06D12C\n:1083700014F0AAFC0323040002209C43F2E75A2EC7\n:108380000FD980220023D20512196B41002B04D192\n:10839000002A02DB1AF0F9FADEE729001AF0E6FA01\n:1083A000DAE7002905D1064B984202D81AF008FBFB\n:1083B000D2E729001AF0F5FACEE7C0460000808027\n:1083C000FFFFFF3FF0B589B0160005AA02931C68B5\n:1083D00001900F00FFF7CCFE019B0500402B06D15A\n:1083E000059B5A1EA2185C423C2314400193029A3A\n:1083F00063191360019B3E3B03935A425341DBB226\n:108400000293642F12D0662F0BD04F2F2AD1280051\n:10841000042D00D9042033002200029919F0A1FF95\n:108420002CE03000FFF760FB0600F0E73000FFF7BC\n:108430005BFB14F0F7FB029B0690079108AA9B00D8\n:10844000D318083B22001B680299042019F089FF09\n:10845000039B04345A1E934108AA9B00D318083B7F\n:108460001E68D4E7B3070BD1104B32689A4207D18C\n:1084700023002A00029930001AF054FA09B0F0BD26\n:108480003000FFF7CDFA0600042DC0D900215A2F85\n:1084900002D9884200DAFF312A0020001FF0BAFF1B\n:1084A000019B3E2BB3D12B1FE418B0E75C97020071\n:1084B000F7B506000F0014001D0064280DD06628D3\n:1084C00004D04F2813D19400E35105E09400180024\n:1084D0000F19FFF709FB3860F7BD1800FFF704FB21\n:1084E00014F0A0FBE4003F1938607960F4E703233F\n:1084F0002B40019311D10E4B2A689A420DD1019A5B\n:1085000001004020FFF734FE230043430200FB1824\n:10851000019928001AF006FADEE72800FFF780FA32\n:10852000220003003900300019F02EFFD4E7C046C6\n:108530005C97020010B50C00FFF78AF9006B002869\n:108540000ED0E30702D50368002B09D0A30702D59C\n:108550004368002B04D0630706D58368002B03D142\n:10856000024903481DF0B5F810BDC04602200300C3\n:1085700010DC0200F0B50F008BB004000121386858\n:108580000392FFF7D7FF0600012C22D13B6801219F\n:1085900018000393FFF7CEFF80210700490006A8CB\n:1085A00019F0A6F980240023089E6400029305AB0D\n:1085B0002200310003983D68A847431C28D1059844\n:1085C0000B2800D0ACE0029B002B34D159480BB0F3\n:1085D000F0BD7868FFF724FA030002900133D5D08C\n:1085E0000125337B029C2B4200D181E00026210033\n:1085F00006A819F07DF90395002C6ED0210006A87D\n:1086000019F0B6F9011E1ED14B494C481DF061F816\n:10861000002810D0029B1B180293844202D9241A0E\n:108620003618C4E7802106A8490019F08EF9802485\n:1086300006006400BBE7029B414807933B7BDB07D6\n:1086400075D5404873E000230093220005AB3868DD\n:1086500019F0D9FE059B0500002B0ED006A82100BD\n:1086600019F0EAF905980B285AD1079B0293002BC1\n:1086700033D106A819F05EF9A8E7844227D8089BF1\n:1086800030009C46079C63469B5D039A59B20029C3\n:1086900012DA19001F250222A943C0290CD01900A3\n:1086A000103D0132A943E02906D004329343F03B48\n:1086B0001A00511E8A4104329619A64212D8029B12\n:1086C0003000013B0293A642DDD31C0094E7211A3F\n:1086D00006A819F0B1F9002DD1D11A4806A900F069\n:1086E000C3FB74E7E443029BA419E418060083E784\n:1086F000029906A819F00DF9039B029A00930899B4\n:1087000005AB386819F07FFE059B002B0AD006A840\n:1087100019F010F9059B07480B2B00D157E71800FB\n:108720000AF098FB337B079005482B4289D106A9B4\n:10873000D5E7C046388D0200212003005CDB020033\n:108740009CA502009CC6020030B50C0087B0012138\n:1087500005002068FFF7EEFE022203A96068FFF71C\n:1087600019FB049A022D06D9A068FFF759F9049A5B\n:10877000824200D90200002303990093206802ABD3\n:1087800019F041FE029B002B05D005480B2B05D0AC\n:1087900018000AF05FFB43000120184307B030BD0A\n:1087A000388D0200F0B589B00191019B04000121D0\n:1087B0001868FFF7BFFE0700012C18D9019B5B6802\n:1087C0005C10631C13D0210004A819F091F8631CFD\n:1087D00003D0631E002C2FD01C00012104A819F027\n:1087E000C7F8061E0AD11B491B481CF072FF012462\n:1087F000102104A819F07CF86442E8E70100019810\n:1088000003AB012200683D68A847431C0ED10398C2\n:108810000B2809D1059B0193012B09D104A819F05C\n:1088200089F80E4809B0F0BD0AF014FB00280CD1FD\n:10883000012104A819F000F93B7B0948DB0700D4AB\n:10884000084804A900F010FBECE733780A2BBED1EE\n:10885000F2E7C046212003005CDB0200388D0200F5\n:108860009CC602009CA50200F0B51F0004000D008C\n:10887000160085B00221FFF75DFE03AB00973200C2\n:108880002900200019F0BFFD039B002B05D00548EF\n:108890000B2B05D018000AF0DDFA43000120184325\n:1088A00005B0F0BD388D0200F0B58BB006000800B1\n:1088B00011001A0010AB1F78314B05AD01950093E4\n:1088C000052309F025FA9120000118F01DFD2D4B1C\n:1088D00004A91860059B476043706B682A4F0370BA\n:1088E000AB6804008370EB68C3702B7C30003B6086\n:1088F00000F048FF0025254B03900C201D6018F068\n:1089000003FD234B06000360FBF712FFB060FBF78B\n:108910000FFF204B204A1860204B11001D70204B88\n:1089200070601D701F4B30001D602B00FBF7D4FDE5\n:108930002000049A03991DF05DFF20000DF0EEF871\n:108940000400A84207D1FBF7CDFC0E4B1C60164B70\n:1089500018680AF099F80122144B1A70FBF7E2FE2E\n:108960000028FBD1124B943318603B68002B04D0D5\n:108970000C4B1048196817F013FB07480BB0F0BDFB\n:10898000ACA40200142F0020442A0020C42A002096\n:10899000F8A40200C02A0020388D02001A2E002000\n:1089A000182E0020C82A002064000020192E002064\n:1089B000802E00202F20030000220D4910B50B78D7\n:1089C000DBB2934210D10B4A1478002C02D0012460\n:1089D0000C701370084B1B78002B07D0074A1368E4\n:1089E00020331360064B1A68100010BD8268FBE745\n:1089F000182E0020192E00201A2E0020C42A002034\n:108A0000C02A002073B501A900F0BCFE019B06003E\n:108A10001748502B17D88020400018F075FC154CD3\n:108A200005002300943318600023019A9A420CD168\n:108A30005B232800AB54F9F799FA2B00002808D1E2\n:108A4000943420600C480AF01FF8F15CE9540133BB\n:108A5000ECE75A1B0133591E09789B29F9D12900EB\n:108A6000064819F0AEFD00239434236076BDC0465D\n:108A70003E200300802E00204C2003009CC60200F4\n:108A8000D2235B005843134AF0B51368000C8342AD\n:108A900006D9114C2368013323601368203B13600F\n:108AA0001F23050001270D4E9D431468A5420BD8D6\n:108AB00003401A1D202A00D92022094C2468934221\n:108AC00004D3084B1860F0BD3770EEE7E518297144\n:108AD0000133F4E7C42A0020C82A00201A2E0020FF\n:108AE000C02A0020CC2A0020F0B589B0002807D188\n:108AF000664B6748196818F0BDF8664809B0F0BDC4\n:108B00000D68654B9D425BD10021080018F0EAFC1E\n:108B1000002405000590614B5A680192944217D3D6\n:108B200000255F4A05A90120FAF740FD07AA06A91A\n:108B3000059818F0EEFC069B03339B0801939B00FD\n:108B40000393019B524EAB4210D156493000D2E7FD\n:108B50009B680193019AE3009958002904D00429E5\n:108B600002D02800FAF7C2FC0134D4E72F00AB0092\n:108B70000293079B029A985800F0EEFD0100300026\n:108B800018F078F8019BFF18069B9F4212D212231F\n:108B90001C1A002C07DD013C07D2039A029B944665\n:108BA00063440293E5E71234F3E73F49300018F0DD\n:108BB00061F8F0E73D49300018F05CF80135C0E796\n:108BC0002800FEF745FE3A4B42689A4200D16D6894\n:108BD000280002F04BFD061E00D08EE72C4C3549D4\n:108BE000200018F047F831002800FEF763FE280047\n:108BF00019F090FA30490200200018F0FCF8AB0799\n:108C000032D12B682D4A93422BD128001DF018FA3F\n:108C10001BF0E8FB00250600A84200D16DE7736851\n:108C20009D4200D369E7B268EB00D3181F68002F9C\n:108C300015D05B6822492000019318F01BF8002131\n:108C40003800FEF737FE1F49200018F013F8002106\n:108C50000198FEF72FFE1549200018F00BF801359A\n:108C6000DDE7194A934203D02800FEF7F1FD050025\n:108C7000A86B002800D140E7830700D03DE7134BE5\n:108C800002689A4200D038E7C2E7C04610000020D0\n:108C9000348C0200388D020046140000C0D402005B\n:108CA000A899020062200300A81D0300CA25030042\n:108CB0000D020000862003008E20030094D50200E0\n:108CC000A71D03009E200300ACD00200D8CB0200F9\n:108CD00010B504000C2018F017FB034B4460036030\n:108CE00001235B42836010BD50A50200032230B512\n:108CF00002400121002A04D1084C05680B00A5425E\n:108D000009D00B00034006D1002A04D103680448AF\n:108D10001B1A58424341180030BDC04678DE02009D\n:108D20005C97020010B50400FFF7E0FF0122002865\n:108D30000AD1032302002340022B05D1034804403B\n:108D4000063C2200541EA241100010BD070080FF07\n:108D5000044B88600B60044B08004B600023CB6021\n:108D60007047C046A8CC02001328020010B5FEF7D9\n:108D70006FFD084B42680848D31859424B41AC215B\n:108D80005B428B43B02189005B1804490BF0FAFA6F\n:108D9000FAF712FB40FDFFFF78DD0200A32003007D\n:108DA000F7B504000E00019301208B180A00002182\n:108DB0000093009B934212D82725002900D0053D3F\n:108DC000224F2A003900200018F015F8009B9E421F\n:108DD00014D32A003900200018F00DF8F7BD1378DD\n:108DE000272B08D0223B5D426B41DBB20132002BC6\n:108DF000DFD02725E4E700230100F7E73278AA4215\n:108E000005D12A001249200017F0F5FF1AE0114998\n:108E10005C2A14D01F2A09D97F2A15D0019B002B68\n:108E200002D053B2002B07DB3900ECE70A490A2ACB\n:108E300005D00A490D2A02D0092A05D10849200087\n:108E400017F018FF0136C1E70649DCE7AC24030040\n:108E5000AB240300AF240300B2240300B5240300B5\n:108E6000B8240300BB240300194B70B506000C00A6\n:108E700098420FD14968A06801F06CFD051E09D029\n:108E8000200018F057FD0023ED00236006331D433A\n:108E9000280070BD102018F037FA61680500816065\n:108EA0000660A06801F038FD63686860591C23689B\n:108EB000994208D1A368EB600023EA68A96853547B\n:108EC000A3602360E4E7A06818F03CFAE860F3E7E9\n:108ED0009CC6020070B504000D00002A05D001F008\n:108EE0006BFDC3000620184370BD01F033FD002860\n:108EF000F7D12A002100024819F063FBF4E7C046CD\n:108F00009CC6020010B50A000100024819F059FB86\n:108F100010BDC0469CA50200094B10B50340062BAE\n:108F200001D1C00810BD830708D1064B02689A42E0\n:108F300004D18168C06801F03FFDF3E7FFF716FF39\n:108F4000070080FF9CC60200064B10B50340062BAD\n:108F500003D1C00819F0ACFD10BD8368C0680B6078\n:108F6000FAE7C046070080FFF0B50F00002589B082\n:108F7000110006001C003800009503232A0008F0A9\n:108F800097FE0E20AF420FD0012F0FD102AA102161\n:108F900004A8FDF711F8216802A82A00FEF770FC6A\n:108FA00004A93000FFF760FF09B0F0BD2068830717\n:108FB00022D1164B02689A421ED104A9FFF7C4FFC2\n:108FC000134B050020680340062B13D1C00819F08D\n:108FD00060FD0400002C04D10499280001F09CFCE1\n:108FE00004001020049F18F08FF906608760C560A8\n:108FF0004460D9E74468EDE704A90122FEF7CAFE00\n:10900000002205990498FFF765FFCDE79CA50200B3\n:10901000070080FFF0B58DB004000391FEF718FC47\n:1090200004A906002000FFF78FFF039B01902F4843\n:109030009A0705D11B6883420AD02D4A934207D074\n:10904000C36800220293012103AB029CA047039056\n:10905000002406AA05A90398FEF784FD2500059BB8\n:10906000A3420ED82900002508A818F052FC0A9C3B\n:10907000059BAB4221D808A93000FFF7F5FE0DB0E3\n:10908000F0BD069BA700D859FEF7E2FBB04202D024\n:10909000184809F0BDFE002C01D0049BED18069B7A\n:1090A000D859154B0340062B05D1C00819F0F6FC22\n:1090B0002D180134D3E78068FAE7002D06D0200090\n:1090C000049A01991FF08AF9049BE418069AAB00F0\n:1090D000985807A9FFF738FF079A010020001FF0F2\n:1090E0007DF9079B0135E418C2E7C0468898020065\n:1090F000D49B0200E8240300070080FFF0B58BB08A\n:10910000049008680D0006920793FEF7A1FB040087\n:109110006868FEF79DFB0600A04202D06868FFF772\n:1091200025FE08A92868FFF70FFF040009A9686851\n:10913000FFF70AFF089A0590A3180393049B2700E2\n:10914000022B19D9AB681D498B4206D00121300092\n:109150000091210004F046FE0700049B032B0BD076\n:10916000EB68164A934207D001222100009230009A\n:10917000089A04F037FE0390039B059AD91B069BBF\n:1091800038000093099B19F0FDF9002806D1079BD0\n:109190000138002B0CD00A4809F076FC094B9E429E\n:1091A00008D1010020001AF04AFE440001202043AB\n:1091B0000BB0F0BD041B6400F8E7C046388D020018\n:1091C000D42403009CC60200F0B5070087B00868ED\n:1091D0000D00FEF73DFB04A906002868FFF7B4FE6A\n:1091E00005A904006868FFF7AFFE03902000022F76\n:1091F00007D901230093AB68049A2100300004F0E2\n:10920000F1FD059A041B049BA418064D9C4205D849\n:1092100003991FF0D4F8002800D1034D280007B0AF\n:10922000F0BDC04668DE020070DE020073B50D00BE\n:10923000060069462868FFF787FE01A904006868F0\n:10924000FFF782FE0100022E02D9084809F00EFE47\n:10925000019A0098064D824206D8801A20181FF005\n:10926000AEF8002800D1034D280076BDC2240300CB\n:1092700068DE020070DE0200F0B58FB00790106863\n:109280000C001600FEF7E4FA0690012C31D070684D\n:10929000FEF7DEFA069B984202D07068FFF766FD83\n:1092A0000DA97068FFF750FE0D9B089009930DA95A\n:1092B0003068FFF749FE0D9B0B900493079B012B31\n:1092C0001CD1049B5D1E01235B420A9300242700EE\n:1092D000049B03940593059B002B13D1039B002B48\n:1092E00023D1214B069A0E209A4200D01F480FB07E\n:1092F000F0BD072309931E4B0893D8E701230025EF\n:109300000A93E3E70B9B09995A19012308980093E4\n:1093100019F038F9002816D1039B002B19D1079BAF\n:10932000002B09D12F00049B5C1E049B0134E21B1F\n:10933000934212D13068DAE7079B2C00012B0AD048\n:1093400001232F0003930A9BED18059B013B059316\n:10935000C1E72C00F7E7039FE7E70B9B0698D919B5\n:1093600019F02FF9C3E7C0469CC602008CA5020085\n:1093700041250300F0B589B0049008680D00FEF7A0\n:1093800067FA04006868FEF763FA0700A04202D09B\n:109390006868FFF7EBFC06A92868FFF7D5FD060013\n:1093A00007A96868FFF7D0FD069A0590B3180393E4\n:1093B000049B3400022B19D9AB681E498B4206D09E\n:1093C000012138000091310004F00CFD0400049BE1\n:1093D000032B0BD0EB68174A934207D001223100D0\n:1093E00000923800069A04F0FDFC03900025079BCC\n:1093F000AB4212D1039B2000191B1AF02FFD013044\n:1094000045000120284309B0F0BD059920001EF059\n:10941000D6FF002808D101353400079A039BA6180F\n:109420009E42F2D96D00ECE720001AF0FFFC060026\n:10943000F2E7C046388D020010B50100014819F06E\n:10944000B2F910BD7D3E020010B50100014819F0CF\n:10945000AAF910BD8F3E0200F7B50600080001A969\n:10946000FFF772FD019B0500002B01D11348FEBDE3\n:10947000134B04009E4207D10027019A631B9A42B6\n:1094800011D8002F07D1F1E70E4B9E42F4D0019A7C\n:10949000631B9A4201D80C48E9E72078B0470134B1\n:1094A0000028F4D1E2E7207804F070FB002803D014\n:1094B0002078B047071ED9D00134DEE768DE02000D\n:1094C000F5DB00000DDC000070DE020010B50100CD\n:1094D0000148FFF7C1FF10BD75DB000010B50100AA\n:1094E0000148FFF7B9FF10BD8DDB000010B501008A\n:1094F0000148FFF7B1FF10BDA5DB000010B501006A\n:109500000148FFF7A9FF10BDF5DB000010B5010011\n:109510000148FFF7A1FF10BD0DDC0000F0B585B0DC\n:1095200006000C001700FEF793F9694605003000AD\n:10953000FFF70AFD0600042F23D10098A30715D1D9\n:10954000114B22689A4211D101AA2100F7F7CCFEF3\n:10955000002802D10D4809F089FC0199029A2800DF\n:10956000521A711819F02DF805B0F0BD0023010052\n:1095700022002800FEF72CFB335C01205B0018431F\n:10958000F2E70020F0E7C046D0D70200E70E030064\n:1095900070B51D008EB0002900D174E018683B4CF6\n:1095A00003002340062B05D0830726D1384B0268E1\n:1095B0009A4222D10239012962D80AA9FFF7C4FCD4\n:1095C000060028680440062C15D1C00819F061FA7D\n:1095D0000400002C04D10A99300001F09DF9040028\n:1095E00010200A9D17F090FE2A4B85600360C6602C\n:1095F00044600EB070BD4468EBE7012940D80122F9\n:10960000104210D0441021000AA818F082F90C9BD7\n:1096100000212200180001931EF0FCFE0AA91D483B\n:10962000FFF722FCE5E703A918F08BFD002805D021\n:10963000049A0399174818F0C4FFDAE72868FEF780\n:1096400009FB1021002800D0411006A818F050F99D\n:109650000AA9286808F0E8FD0400200008F046FE8A\n:10966000002801D106A9DAE7FEF7DAF9FF2802D9C6\n:10967000094809F009FAC1B206A818F099F9ECE70F\n:10968000064809F0C5FB0648B3E7C046070080FF5F\n:109690009CC602009CA50200CE200300E720030028\n:1096A0008CA5020073B50400080001A91600FFF79D\n:1096B0004BFC0500042E06D10300019A0749200047\n:1096C00017F099FB73BD0649200017F0D3FA012368\n:1096D000019A29002000FFF763FBF3E72D25030023\n:1096E000343003000A001B4B73B51A4005000C0010\n:1096F0000340062B0CD1062A04D1441A6042604173\n:10970000C0B212E0C00819F0C4F90600606805E0B4\n:109710004668062AFAD1C80819F0BBF9002E05D010\n:10972000002803D0B04201D0002076BD6946280051\n:10973000FFF70AFC01A905002000FFF705FC009ACD\n:10974000019B01009A42EFD128001EF038FE4442EE\n:109750006041D5E7070080FF084B07B50340062BA3\n:1097600008D0830704D10268054B92699A4201D060\n:10977000FFF7FCFA01A9FFF7E7FB0EBD070080FF2A\n:10978000219D00000A4B13B503400C00062B08D0A6\n:10979000830704D10268074B92699A4201D0FFF710\n:1097A000E5FA01A9FFF7D0FB019B236016BDC04677\n:1097B000070080FF219D0000F0B59BB00B90059144\n:1097C000089210210EAA12A80993FCF7F5FB059B3D\n:1097D000089A934208D30B9A12AB13CB13C21B689F\n:1097E00013600B981BB0F0BD059B19785D1C7D299B\n:1097F0000ED1089BAB4208D9059B59787D2904D12D\n:1098000012A818F0D5F8059507E0BC4809F03CF916\n:109810007B2906D012A818F0CBF8059B01330593DD\n:10982000D5E7089BAB4216D9059B59787B29E7D031\n:109830002B007D2903D0212901D03A290DD1002503\n:109840002E001A78212A11D0002206921AE0089AD6\n:1098500001339A4201D1AA48D8E71A787D2A03D069\n:10986000212A01D03A2AF2D11E00EAE708995A1CAF\n:1098700091421CD95A780692723A012A17D80233BB\n:109880009942E8D900211A7805913A2A1FD15A1C29\n:109890005B7805927D2B1DD1089B059A9342DAD9FE\n:1098A0000027059B1B787D2B17D09648AEE796487E\n:1098B000ACE719787B2905D10132013308998B4235\n:1098C000F7D3C8E77D29F8D1013A002AF5D1059FE1\n:1098D0000593E6E7059B0122F0E7002D48D0002321\n:1098E0002878169304F05EF900283DD0099B1B6888\n:1098F0000793002B01DD854888E716AA3100280070\n:1099000018F028FE209A169B013A04009A4203D8C8\n:109910007F4980481BF0DDFE219A01339B009D5852\n:109920000122099B52421A60B44231D27A4809F0AE\n:109930009DFA0134B44204D223782E2B01D05B2B44\n:10994000F7D1611B01222800FFF7C4FA00220500AD\n:1099500001002298FAF766FF002807D129006F4816\n:109960001CF06EFCF9F728FD2C00E3E74568DBE707\n:10997000099B1B68002B01DA694847E7209A013AE6\n:109980009342C5D2013321999A005558099A136020\n:10999000002F00D0A6E1069B3C00002B04D0069CC3\n:1099A000733C631E9C41E4B210AA102116A8FCF778\n:1099B00003FB2900220010A8FDF762FF16A95948F1\n:1099C000FFF752FA01235B4205000D931093002F1D\n:1099D00000D18FE005F006FB229B059A0293219BA4\n:1099E00039000193209B16A80093099BFFF7E4FE22\n:1099F00016A817F0CBFF0026179B0400C3180A9384\n:109A000003780693B34208D0474F190038001EF080\n:109A10003DFDB04200D16EE1013423782B2B4ED0B6\n:109A200000272D2B02D0202B01D1043701342378BD\n:109A3000232B02D1133B1F4301342378302B07D152\n:109A4000069B002B01D13D330693002E00D130360A\n:109A50000DAA0A99200018F07DFD037807902C2BA1\n:109A600004D10C3B1F43030001330793079B1B7872\n:109A70002E2B06D1079810AA01300A9918F06AFD1A\n:109A80000790079B1C78002C1BD0210027481EF054\n:109A9000FDFC002803D0079B5B78002B11D02448E5\n:109AA000B4E6310038001EF0F1FC002804D0330089\n:109AB0000234069E0693B0E706900600ADE7022743\n:109AC000B4E716A817F036FF069B002B08D1280034\n:109AD000FFF728F93C230693002801D002330693B0\n:109AE000002E00D1203606231F4229D0732C23D10B\n:109AF00010488BE63C003E00E9E7C046FB2103002E\n:109B00003C22030054220300232203007822030096\n:109B1000C22203006CDA0200DB220300A8DA020092\n:109B2000F82203009CC602004223030047230300DF\n:109B30005723030070230300632C01D1714865E6AD\n:109B4000069B3D2B1FD05E2B1FD03C2B01D13B3BF6\n:109B50001F432800FFF7CAF800282DD0632C50D0EF\n:109B600026D8472C13D8452C26D2002C40D0252CA3\n:109B700022D0280018F0CEFA220003006249634880\n:109B80000AF000FCEEE64023E2E78023E0E7582CF1\n:109B900053D0622CEDD1002303930D9B022202933C\n:109BA00061230196009729000EA8F6F747FE34E6D8\n:109BB000672C17D8652C1BD32800FFF7B3F80028B3\n:109BC0006CD0002C56D06E2C54D0472C3FD8452C4E\n:109BD00041D2252C50D0280018F09CFA2200030016\n:109BE0004B49CCE76F2C1AD0782C26D06E2CC0D1E4\n:109BF000002303930D9B01960293009761230A2291\n:109C0000D1E72800FDF70CFF0D9B16A90870012273\n:109C100001933B0000960EA8F6F7B4FDFDE5FB06A8\n:109C200002D580239B001F43002303930D9B0196C5\n:109C30000293009761230822B5E7002223000392D4\n:109C40000D9A173B0292019600971022ABE7230072\n:109C5000653B022BBFD82800FDF746FF109B220072\n:109C600002930D9B011C01933B0000960EA817F078\n:109C70007DF8D2E56724EEE728008024FDF734FF65\n:109C8000244910F0C9FE109B640002930D9B3C43D5\n:109C90000193011C009623006622E7E7069B3D2BFB\n:109CA00001D11D48B2E5002C01D0732C13D116A9A7\n:109CB0002800FFF767FD109B0100169A002B00DAC1\n:109CC0001092109B9A4200D916930D9B0096019317\n:109CD000169A3B009FE7280018F01CFA22000300A8\n:109CE0000E494CE7069B002B00D058E601235B424F\n:109CF0000D9310936EE66678002E00D0D1E606969E\n:109D00008BE6C0469C230300CF230300F0DD020056\n:109D1000002403000000C842342403006924030027\n:109D2000F0B5A1B005000C000D920A2800D0E4E1C6\n:109D30000DAB0F930123073D1093059215403CD1C5\n:109D40001368BF4A934206D10FAA10A9059817F0CD\n:109D500083FD059502E0BB4A9342FAD1109B11A9FD\n:109D600007930F9B20000893FFF7EEF8002309905C\n:109D70000A93A30705D1B44A23689B1A5A425A4151\n:109D80000A9214AA102118A8FCF716F9119A0027B4\n:109D90009446099B099C63440493049BA3420FD8F7\n:109DA000079BAA48BB4229D10A9BA948002B00D097\n:109DB000A54818A9FFF758F8BAE100230593CDE7A5\n:109DC0002178252904D018A817F0F2FD0134E4E722\n:109DD000049B661CB34202D89E4808F055FE617889\n:109DE000252904D118A817F0E3FD3400EEE700257B\n:109DF000282915D1059BAB4202D1974809F008F8F4\n:109E0000A01C06003378292B23D1311A0122FFF739\n:109E100061F80100059805F02FFB012705000136C8\n:109E20000023340040220026302104200B932033ED\n:109E30000693049BA34213D800231293049BA342CE\n:109E400031D923782A2B70D1079BBB4221D8834874\n:109E5000D4E7049BB34201D88148BEE70136D1E77D\n:109E600023782D2B03D12C3B1E430134E1E72B2B10\n:109E700001D1293BF8E7202B01D10643F5E7232B3D\n:109E800004D0302BD8D116430691EEE710230B9364\n:109E9000EBE77B1C0C93089BBF00F858FDF7C0FD57\n:109EA0000C9F1290013401235B421393049BA34245\n:109EB00092D923782E2B17D1049B601C83428BD917\n:109EC00063782A2B38D1079BBB42C0D97B1C0C93EB\n:109ED000089BBF00F858FDF7A3FD0C9F13900234B8\n:109EE000049BA34200D877E7002D06D1079BBB4215\n:109EF000ADD9089ABB009D5801372278672A45D80A\n:109F0000652A00D3B8E0582A5DD01DD81300453B20\n:109F1000022B00D8B0E0099B5249E41A00941300C8\n:109F200051480AF02FFAF9F747FA200012AA0499CB\n:109F300018F010FB0400B6E7002313AA049913934A\n:109F400018F008FB0400CBE7632A49D0642AE2D169\n:109F500003222B001340022B0AD1444B2B40062B2B\n:109F600006D0FF23DB05E8189043F9F775F80500E4\n:109F7000139B0A220393129B00960293069B019364\n:109F80006123290014A8F6F759FC1FE7732A16D895\n:109F9000722A00D380E0692ADAD06F2ABBD10B9BEA\n:109FA000002B02D084239B001E43139B0096039337\n:109FB000129B08220293069B01936123E1E7752A15\n:109FC000C6D0782AA7D11300139A173B0392129A8E\n:109FD0000292069A01920B9A164300961022D0E73D\n:109FE000224B2B40062B05D0AB0716D1184B2A6805\n:109FF0009A4212D11CA92800FFF7C4FB1C9A010049\n:10A00000012A01D01A48F9E6129B019320230093FC\n:10A01000330014A8F6F7B6FBD8E62800FEF766FE74\n:10A0200000280BD02800FDF7FBFC129B1CA9087030\n:10A0300001932023012200933300EAE70D48DDE677\n:10A04000D49B0200D8CB02009CA50200C6210300CD\n:10A050009CC60200012103001321030040210300DC\n:10A060002A21030091210300F0DD0200070080FF98\n:10A0700067210300802103002800FDF735FD139BB5\n:10A0800022780293129B011C0193069B14A8009353\n:10A09000330016F06BFE99E616AA10211CA8FBF7F8\n:10A0A0008BFF23781A00723A51424A41D2B2722B86\n:10A0B00009D00A9B002B06D0AB0704D1594B296865\n:10A0C000994200D10422290016A8FDF7D9FB139A62\n:10A0D0001D9B002A00DA1393139A9A4200D91A00A2\n:10A0E000129B1E990193202314A800933300F6F7C6\n:10A0F00049FB1CA817F01EFC68E60800FDF7A8FB4A\n:10A1000016A907002000FEF71FFF0590072D22D19A\n:10A1100018A90D98FDF7C2FC03000020834207D068\n:10A120001899814206DC404B40489F4200D10E20E6\n:10A1300021B0F0BD169B1CA8594317F0EAFB1E9BEB\n:10A140000121049300930598189B169A16F0CFFEF0\n:10A150001CA938002EE60D98FDF77AFBB8420FD106\n:10A160001CA90D98FEF7F0FE1C9E04901D2D17D81B\n:10A17000192D4ED2052D21D0122D1FD00020D7E74A\n:10A18000284B0D989F4209D101221CA917F0D9FF35\n:10A190000028CDD01C9B1D9E0493E7E7FEF7E6FD4B\n:10A1A0001F2DEBD10123049A0093169933000598D3\n:10A1B00018F0E8F900282AD01D48B9E7169B002BB3\n:10A1C00007D10D98FDF744FBB84202D10D9C200049\n:10A1D000AEE7002EFBD0169B1CA8F11817F099FBD8\n:10A1E0001E9B169A0599180006931EF0F7F8169A0A\n:10A1F0001E9B9446059363441800320004991EF098\n:10A20000EDF81CA93800FEF72FFE0400DFE709482F\n:10A210008EE70096049B169A0599280016F09DFE7D\n:10A22000C8E7C0469CA502009CC602008CA502009F\n:10A2300070DE020068DE0200F0B5050087B0086835\n:10A240000C00FDF705FB0090012D28D96668022D52\n:10A2500026D0A068FDF7E4FB05000021080017F0F8\n:10A2600041F904A901902068FEF76EFE049B0400EA\n:10A27000C7183E4B9E4241D1BC422AD2207803F0FF\n:10A2800079FC00280FD1002D0FD121003A1B009836\n:10A2900018F097F901000198F9F728F919E0334E01\n:10A2A00001256D42D9E70134E6E72600307803F056\n:10A2B00061FC002802D10136B742F7D82100321BD9\n:10A2C000009818F07EF901000198F9F70FF9B742EC\n:10A2D00009D8019807B0F0BD0136B74203D1002D6F\n:10A2E000F7DD013D06E0307803F044FC0028F3D1AF\n:10A2F000002DF6DCBE42ECD23400C4E73000FDF79E\n:10A30000A7FA009B984202D03000FEF72FFD05A966\n:10A310003000FFF737FA059B0390002B13D1144848\n:10A3200008F0B2FB3E002100321B009818F049F9FA\n:10A3300001000198F9F7DAF8BE42CAD2059BF41879\n:10A34000002D00DD013D2600059B0293002DE9D084\n:10A35000029BF3189F42E5D3029A039930001EF046\n:10A360002EF80028DFD00136F0E7C046388D020015\n:10A370009B240300F0B507008BB00D00022807D81E\n:10A3800029003800FFF758FF050028000BB0F0BD8A\n:10A390000868FDF75DFA08A9049028686E68FEF762\n:10A3A000D3FD0190A868FDF73BFB041EE8DB431CCE\n:10A3B00018000021059317F095F82F4B05009E42D9\n:10A3C00002D12E4808F052FD09A93000FFF7DAF952\n:10A3D000099B0690002B02D1294808F055FB089AEA\n:10A3E000019B944663440293A3000393099F029B3D\n:10A3F000DE1B002C0BD0019BB34208D83A00069913\n:10A4000030001DF0DCFF002821D0013EF1E7EB68B1\n:10A41000A6009F19019A029B01999A1A049818F0B4\n:10A42000D0F83860002CB0D0059B1C1BEB68A7004F\n:10A4300099193A0018001DF0DAFF6B6800211A1B09\n:10A44000EB689200D8191DF0E5FFAC609DE7039A18\n:10A45000EB68944663440793029BF1199A1BD21B45\n:10A46000049818F0AEF8079B013C1860039B029615\n:10A47000043B0393BAE7C046388D0200322503003F\n:10A480009B24030070B50C008AB0050004A9206865\n:10A490001600FEF759FD00230593049B0100C21826\n:10A4A000029605AB06A801940095FFF785F906A969\n:10A4B0000248FEF7D9FC0AB070BDC0469CC6020037\n:10A4C000F8B5070008680C0016F0FBFE0500606890\n:10A4D000FDF7E4FB0600022F0AD9A068FDF7A0FAF9\n:10A4E00002003100280018F0B2F918F04EFAF8BD59\n:10A4F000004AF6E740420F0010B5102016F004FFA6\n:10A500000400034B08C01AF0B4F8200010BDC04688\n:10A510005C97020070B50C00052804D80FF00EFC03\n:10A5200006030C04131C0024200070BD8B680E4C25\n:10A53000002BF9D10D4CF7E7081D1AF001FD01249D\n:10A5400040000443F0E7FFF7D7FF211D050004306A\n:10A550001AF01CFA2C00E7E7FFF7CEFF211D0500DB\n:10A5600004301AF023FAF5E770DE020068DE02001C\n:10A5700070B5050083070CD1104B02689A4208D1D0\n:10A58000FFF7BAFF291D040004301AF0F4F9200087\n:10A5900070BD2800FDF744FAC0231B06984206D17F\n:10A5A00080200021C00518F0E1F90400EFE7012444\n:10A5B000C317C018584040000443E8E75C97020006\n:10A5C00007B5C30701D540100EBD043001A905F041\n:10A5D000ABFA002801D00198F6E7024902481BF0C7\n:10A5E00078F8C0466E2503004CDC0200F0B58BB055\n:10A5F000019001200D00170008402BD04B100222C3\n:10A6000003A904A81AF06DF804AEFB072BD57B1044\n:10A61000022203A904A81AF064F804AD019B092BD7\n:10A6200001D0162B3FD16B68002B68D030001AF098\n:10A63000E2FC041C28001AF0DEFC011C201C10F0B7\n:10A6400013F8032302249843704B0443E4182000BA\n:10A650000BB0F0BD03240C4023D16D4B0A689A4225\n:10A66000F5D10E1DD1E703231F4205D1684A396891\n:10A67000914201D13D1DD1E73B40022B0CD1654BEE\n:10A680003B40062B08D030001AF0B5FC3A00011C04\n:10A69000019800F0FDFA04E03A0029000198F8F76B\n:10A6A0002DFE0400D3E7019B182B00D98AE0FFF7A9\n:10A6B00023FF040001980FF041FB444A3E50500D27\n:10A6C00013191F72336572444A3E50500D13191FFF\n:10A6D00072336500201D2A0031001AF0FFF9B6E739\n:10A6E000201D2A0031001AF033FAB0E7201D2A009D\n:10A6F00031001AF060FBAAE76B68002B03D14649D2\n:10A7000046481AF0E6FF07A819F0B3FF2B00320005\n:10A71000201D07A905F0A2F807A819F0AFFF96E7DA\n:10A720006B68002BEBD007A819F0A3FF211D2B00AD\n:10A73000320007A8EEE7201D2A0031001AF049FA7E\n:10A7400085E7201D2A0031001AF0BFFA7FE7201D9F\n:10A750002A00310005F00CF879E73800FFF730FFE8\n:10A76000021E02DA2E4808F08FF9019B201D3100ED\n:10A77000032B01D0102B02D104F092FF67E71AF0EF\n:10A780004CF964E76B68002B03D02B78DB0700D50E\n:10A7900079E7201D2A0031001AF090FB57E76B681B\n:10A7A000002BACD0FFF7A8FE0700211D04302B00C2\n:10A7B000320005F053F807A9022007970894FAF72A\n:10A7C00077FB6EE7290030001AF0B2F80300019819\n:10A7D00000241938042800D939E7124C0FF0AEFADA\n:10A7E0000308120B0F00002B00DB30E70E4C2EE7A6\n:10A7F000002BFBDC2BE7002B00DD28E7F6E7002B26\n:10A80000F4DA24E7002B00D021E7EFE70000808096\n:10A810005C970200070080FF482503002CDE020041\n:10A820005925030068DE020070DE0200184BF7B500\n:10A8300030CB0F00160001281AD94B68154A9342F5\n:10A8400007D0990711D114491C688C420DD11C0006\n:10A850001D0002280CD0BB68934209D09A0704D18E\n:10A860000D4A19681C00914202D0002008F0D0FA6D\n:10A8700001A93868FEF786FF019A01000023102025\n:10A8800019F0BEFC2A003100230008F0B5F8FEBD27\n:10A89000802E0020388D0200D8CB0200074B5B6968\n:10A8A000002B01D1180006E05A68824204D8801AB1\n:10A8B00004308000C05870471B68F1E7802E0020EC\n:10A8C00070B5144D04006B699868DB68834215D33A\n:10A8D0000230C00016F025FD6B69002803D198688E\n:10A8E000400008F0BBF85A68D96803609B685218AA\n:10A8F0005B00836000234260C36068616A69D3685B\n:10A900005068591C04339B000138D16040189C509A\n:10A9100070BDC046802E0020074B4118884204D3EA\n:10A92000D8B2002800D1013070475A01D3180278FC\n:10A9300001305340F2E7C04605150000034B044ABE\n:10A940005A6100229C331A607047C046802E002056\n:10A95000A4A70200F0B585B001900E00FFF7DCFF60\n:10A96000144B02905C69002C01D120001EE02700EE\n:10A9700010373D00E3689B00FB180393039B9D4247\n:10A9800001D32468EFE72868029A037893420FD135\n:10A990004378B3420CD10230320001991DF00FFD13\n:10A9A000002805D1ED1B6068AD10281805B0F0BD7A\n:10A9B0000435E3E7802E0020F0B585B003900191C7\n:10A9C000FFF7C8FF002862D1324D019B2F009C3752\n:10A9D000DC1C3B68002B18D02E002F4AA0361268D2\n:10A9E00031680292A2188A420FD902006118180039\n:10A9F00016F0B5FC0290002822D1274B02001968FE\n:10AA0000386816F0ACFC029B3B602B009C331B6843\n:10AA1000002B20D12600802C00D2802630002F0071\n:10AA200016F07FFC9C37386000280DD1200016F00E\n:10AA300078FC26003860002806D1200008F00EF8C7\n:10AA400033681B193360E0E72B00A0331E602B0036\n:10AA50000022A4331A602B00A4331A689C352D6899\n:10AA6000A41801990398AD181C60FFF755FF6B46B9\n:10AA70001B7928706B70019AA81C03991DF0AEFC1D\n:10AA80000022019B2800EB189A70FFF719FF05B010\n:10AA9000F0BDC046802E0020242F0020F7B51D00F9\n:10AAA00016000023070003600B6033602B60174B18\n:10AAB00000915C69002C02D0154B9C4204D1336894\n:10AAC0002A68D3182B60F7BD3B6801333B60E2680E\n:10AAD000009B94461B68009A019363441360220014\n:10AAE000E36810329B00D3189A4207D3200008F085\n:10AAF000C5FE2B68246818182860DBE702CA306896\n:10AB00004978033009183160EEE7C046802E0020F6\n:10AB1000A4A702000C4B70B55C69002C02D00B4B53\n:10AB20009C4200D170BD2600E36810369D00751967\n:10AB3000AE4201D32468F0E704CE0549023205484D\n:10AB400016F059F9F4E7C046802E0020A4A70200B1\n:10AB5000A1250300348C0200FF230322DB05CB1860\n:10AB600010B59343042804D80FF0E8F806030F0447\n:10AB700016000021080010BD0021181C0FF0B2FAC9\n:10AB80000A490028F6D00A49F4E7181C10F050FAD8\n:10AB9000012140000143EDE7802109065B180221F5\n:10ABA00093431943034BC918E4E7C04670DE020023\n:10ABB00068DE020000008080FF23DB0510B5040082\n:10ABC000C81803239843002386B0019306330093EB\n:10ABD0001022613302A90AF033F802A9200016F00E\n:10ABE00049F82E2102A81DF051FC00280FD1652143\n:10ABF00002A81DF04BFC002809D16E2102A81DF00F\n:10AC000045FC002803D10349200016F033F806B0B4\n:10AC100010BDC046567B030030B50C001100002269\n:10AC200085B01D0000920123200007F041F8002CA0\n:10AC300023D02868124B0340062B06D00324204261\n:10AC40000ED1104B02689A420AD103A9FEF79AFD71\n:10AC50000022039900921300F7F7ECFC05B030BD19\n:10AC600003002340022BF9D0FCF73EFF0300022033\n:10AC7000A3431843044BC018F0E70448EEE7C0466E\n:10AC8000070080FF9CC602000000808002008080D8\n:10AC9000F0B5050087B010000191FCF725FF041CFA\n:10ACA0000390681F182800D9BDE00FF047F80D1277\n:10ACB0001F24333E6F81BCBCBCBCBC0D121F2433AF\n:10ACC0003E6F9FA8ADB2B7000198211C0FF032FB78\n:10ACD00003E0211C01980FF0D1FF0190032301989C\n:10ACE000524A9843013B03439B187CE0211C019886\n:10ACF0000FF092FEF1E70021201C0FF0F3F900287D\n:10AD000003D04B494B481AF0E4FC03A901A817F003\n:10AD1000D7FEE3E70021201C0FF0E4F90028F0D172\n:10AD2000211C01980FF0A0FCD7E70021201C0FF098\n:10AD3000D9F90028E5D1211C019813F03FF8002132\n:10AD4000041C01900FF0CEF9002807D0039A0023CD\n:10AD5000002A01DA80231B060193BFE70021201C93\n:10AD6000039E01270FF0C4F9002800D1071C002121\n:10AD7000301C01250FF0BCF9002800D1051CFFB2E2\n:10AD8000EDB2AF42AAD0311C201C9FE7019D0021EB\n:10AD9000281C0FF0A7F9002805D00021201C0FF077\n:10ADA000A7F90028ADD1211C281C12F0F3FB94E771\n:10ADB0000021201C0FF096F90028A2D103A901A8B8\n:10ADC00017F07EFE03220220019B184993430343A0\n:10ADD0005B180493039B934303435B1804A90593F7\n:10ADE000FAF766F80300180007B0F0BD0199201CBF\n:10ADF0000FF092F9104B0028F5D1104BF3E70199B1\n:10AE0000201C0FF075F9F5E70199201C0FF06AF985\n:10AE1000F0E70199201C0FF089F9EBE70199201C5C\n:10AE20000FF070F9E6E70023DDE7C0460000808000\n:10AE3000482503002CDE020070DE020068DE0200FE\n:10AE4000014B58687047C046802E0020014B18689F\n:10AE50007047C046802E0020F0B5194E87B0336889\n:10AE6000050000200C00019319F06EFA306000908C\n:10AE700020681AF0E3FB019B07003360114E022D9E\n:10AE800003D0A068FCF7E4FC0600210063680831E9\n:10AE9000A81E0393FAF70CF8009B04900593002278\n:10AEA00003AB0321300007F0C9F8074B04009F42B1\n:10AEB00003D00100380019F0C3F9200007B0F0BD3D\n:10AEC000802E0020ACD00200388D02001FB56946EC\n:10AED00007F0AAF90400200007F008FA002802D1C0\n:10AEE000044804B010BDFCF7D9FE0028F3D1024895\n:10AEF000F7E7C04670DE020068DE02001FB5694653\n:10AF000007F092F90400200007F0F0F9002802D1C0\n:10AF1000044804B010BDFCF7C1FE0028F3D002487D\n:10AF2000F7E7C04668DE020070DE020010B5FCF7ED\n:10AF300013FD034B002800D1024B180010BDC04682\n:10AF400070DE020068DE020037B5FCF769FD01AB78\n:10AF50007F2806D80121187001221800FDF7BAFFDA\n:10AF60003EBD1E49820988420BD8402149420A430E\n:10AF70001A703F22024080204042104358704231F4\n:10AF8000EAE7174C010BA0420ED82024644221436B\n:10AF9000197080215F344942224020400A43014316\n:10AFA00099705A700321D7E70E4CA04212D8102492\n:10AFB000850C64422C431C703F2580242940644248\n:10AFC0002A40284021432243204359709A70D87068\n:10AFD0000421C1E7044807F057FDC046FF07000001\n:10AFE000FFFF0000FFFF100050410300F0B589B0E3\n:10AFF000019204000D0000222F4901980293F9F7F5\n:10B0000011FC0090002801D043680093012C16D059\n:10B01000A4002B19002427000193019B9D4224D0FA\n:10B02000009B2E68002B04D0310018001AF00DFB95\n:10B030000600002C37D137002C680435EDE70024DA\n:10B0400004A9286807F0F0F827000390039807F098\n:10B050004DF9051E0CD1002C07D12200174901988B\n:10B06000F9F7E0FB00281BD04468200009B0F0BDD0\n:10B07000009B2E00002B04D0290018001AF0E5FADE\n:10B080000600002C09D03A003100029807F004FDB8\n:10B090000B4B984201D025003E002C003700D5E72D\n:10B0A000084807F0F1FC3A003100029807F0F4FC80\n:10B0B000034B9842C1D1BEE7561300002E11000089\n:10B0C00070DE02007141030037B501A90500FEF7EB\n:10B0D00059FB1E4B04002B40062B05D0AB072AD191\n:10B0E0001B4B2A689A4226D10199200018F0B6FE1F\n:10B0F0000190012822D1207843B2002B04DB0120EB\n:10B1000023785B0018433EBD7F23013418403F3B4A\n:10B11000034208D13F22237819009143802905D0AA\n:10B1200017F033FCEFE798435B10F1E78001134021\n:10B1300001341843EFE7019B012BE0D0019A054948\n:10B14000054809F01FF9F8F737F9C046070080FFF6\n:10B150009CC602008A41030078DD0200F0B51400AD\n:10B1600087B002900391002223492000F9F75AFB8F\n:10B170000022050021492000F9F754FB01230400B7\n:10B18000049305931E4F002D07D068681D4B98420D\n:10B1900003D004A9FEF7F6FA07001B4E002C07D0D7\n:10B1A0006068184B984203D005A9FEF7EBFA060039\n:10B1B0000024029B154D9C420AD10023059A01935D\n:10B1C000009331002800F5F7DDFA0E4807B0F0BD16\n:10B1D000002C07D00023049A019300933900280023\n:10B1E000F5F7D0FA0399A3000022C9582800FCF70C\n:10B1F00047FB0134DDE7C0468E15000096110000C4\n:10B20000A81D0300388D0200CA250300348C0200FB\n:10B2100010B5040086B06A4602A81021FAF7CCFEE9\n:10B22000012221006846FCF72BFB02A90248FDF72A\n:10B230001BFE06B010BDC0469CC6020070B50C686F\n:10B24000E30726D4A30703D1174B22689A4220D0E4\n:10B25000012820D94868FCF7E3FB06002000FCF732\n:10B2600043FC051C30000FF003FF011C0F4812F0D7\n:10B2700091F9011C041C281C0FF0CEFB12F086F97A\n:10B28000211C0FF0F1F9032302249843084B0443D7\n:10B29000E418200070BD2000FCF726FC12F076F9BF\n:10B2A000F7F7DAFE0400F4E75C97020000002041A3\n:10B2B0000000808030B50B0085B01400012802D951\n:10B2C000094807F0A5FD09480121C2680192019DC6\n:10B2D0000022A8472200039003A90120F8F766F98D\n:10B2E000039805B030BDC046DE41030088980200D7\n:10B2F00013B504000800FDF70FFE6A4601002000A8\n:10B3000006F014FF009B0248002B00D1014816BD37\n:10B3100070DE020068DE020037B50024022800D982\n:10B320008C6848680D68FDF7F7FD0A4B0100002C9A\n:10B3300000D0094B6A4628009847009B002B07D095\n:10B3400001991C00002903D0180009F0BDFE04007B\n:10B3500020003EBD912101002D21010070B50400A7\n:10B3600008001500FDF7D8FD2A000100200006F0B6\n:10B3700037FF014870BDC046388D0200F8B503267E\n:10B38000050007003540022D16D10E4B0340062B59\n:10B3900012D0FF23DB05C418B443201C00210EF09B\n:10B3A000A7FE002806D080231B06E418B443064BF2\n:10B3B0002C43E7183800F8BD3800FFF7D9F807002C\n:10B3C000F8E7C046070080FF000080807FB50B00D3\n:10B3D000012803D100211868FCF76CFA102102A89B\n:10B3E00016F086FA0C4902A815F0BEFE032804D117\n:10B3F0000A481AF01FFFF7F7DFFF039B0193002BAA\n:10B4000003D1042801D10648F3E702A90548FDF756\n:10B410002BFD07B000BDC046FC0B0300E4DA0200C0\n:10B4200040D902009CC6020010B506F037FF002884\n:10B4300004D103481AF0FEFEF7F7BEFF10BDC04668\n:10B44000C4DC020010B5022803D0054905481AF0F3\n:10B4500040F94A680B20096807F01EFB10BDC04682\n:10B46000C4410300D4DB02007FB50D4D0400A842A7\n:10B4700013D00C4E012201003000FCF701FA0A49FA\n:10B48000300015F0F7FB04230293084B0394DB69AB\n:10B4900002AA0321064801939847280004B070BD12\n:10B4A000388D0200348C0200CA25030094D50200B6\n:10B4B000BCB40200F8B50E0000280FD10400284BE0\n:10B4C0001D680021080016F00DF800270600BD4297\n:10B4D00032D10025AC423ED13000F8BD0868830768\n:10B4E00014D103681F4A93420DD11AF0A9FD05003B\n:10B4F0003068FCF7ADF91C4BC26800249A42E0D1D9\n:10B5000034680434DDE7194A934201D0FCF7A0F90E\n:10B51000856B002DECD0164B2A689A42E8D00025A6\n:10B52000E6E7EA68FB009958002904D0042902D014\n:10B530003000F7F7DBFF0137AB68BB42F1D8C8E753\n:10B54000A268EB009958002904D0042902D03000E9\n:10B55000F7F7CCFF01356368AB42F1D8BCE7C046D2\n:10B56000802E002094D50200F90F0100ACD002001B\n:10B57000D8CB0200F0B50E001100002285B0B71C38\n:10B5800003901C0030000D4B0092BF0006F090FBB2\n:10B59000380015F0B9FE466006000500039B083F21\n:10B5A00003600836E719BC4202D1280005B0F0BD9F\n:10B5B000002101CC06F038FE01C6F4E7FFFF0000D1\n:10B5C0000379044AD35C002B00D183790248DB0065\n:10B5D000C01870471B2E0020E0B7020010B5040011\n:10B5E000FFF7EEFF227903680249034808F0CAFE1C\n:10B5F000F7F7E2FE09420300F0DD0200002803D065\n:10B6000001210379014AD1547047C0461B2E002006\n:10B6100010B5FFF7D5FF034B4068C01A431E984191\n:10B62000C0B210BDDDB5000070B506000C00FFF71C\n:10B63000C7FF0C4D2B002833984204D12A0010324A\n:10B64000002394420BD00023A04208D0436830006E\n:10B650009847641B3379044AE410D454012318003A\n:10B6600070BDC046E0B702001B2E002070B504007C\n:10B67000FCF7EEF800230C49DA0052181568A542D1\n:10B6800005D15168094815F0F5FA012070BD013364\n:10B69000612BF1D1064B9C4203D0984201D000208F\n:10B6A000F4E70449EEE7C0467CB80200348C02009F\n:10B6B000CC8E02001B42030010B5024B672217F02C\n:10B6C000ABFB10BD3737020010B5024B972217F0C5\n:10B6D000A3FB10BDFDC80000F7B50F0011001A0054\n:10B6E000C38A8579868A01930023040083714361AC\n:10B6F0000F4B17F091FBA368002B18D1E18A0029AA\n:10B7000008D0A38A002B05D1206B1AF092FB206B86\n:10B710001AF00FFAA38AE28A3900200017F02CFBF6\n:10B720006B1E9D416B469B88A571A682E382F7BD87\n:10B7300019C5000010B54379C26A012B03D110006E\n:10B7400018F052FE10BD0B00006B024918F076FE97\n:10B75000F8E7C04638D402007FB50B7804000D002E\n:10B760004E1C002B0AD0032B0BD103A928001AF082\n:10B77000E5FE03990600206B1AF072F9300004B060\n:10B7800070BD012B07D18E1C49780429F6D0006BBF\n:10B7900007F07AFDF2E7042B0BD14B788978006B28\n:10B7A000090219431AF0A4F928001AF002FF060052\n:10B7B000E4E7052B15D14379042B04D02649006B0F\n:10B7C0001AF0A2F9F0E788784B780002184303A931\n:10B7D00017F06EF90399246BFDF794FB010020002C\n:10B7E000EEE71A000A3A0F2A09D803A9280017F031\n:10B7F00097FA039906002000FFF79CFFBEE7082B8D\n:10B800000CD103A928001AF08FFE039B226A9B002B\n:10B8100006009958206B1AF077F9AFE703AB02AA3C\n:10B8200001A928001AF0F6FE05000299206B07F026\n:10B83000DFFC019B094A9B009B582900039A2000CA\n:10B840009847A368002B04D0E368002B01D1029B2A\n:10B85000E360039E92E7C046388D020084BB02007D\n:10B86000F7B506000192FFF777FF04270500019B5B\n:10B870009D4200D1F7BDA91C30006C78FFF76CFF2A\n:10B880002F3CE4B205003900082C01D8024B195DA9\n:10B89000306B1AF0ACFAEAE72268030010B543797E\n:10B8A000C26A012B03D1100018F0AFFD10BD0B00D0\n:10B8B000006B024918F0C2FDF8E7C04648D4020008\n:10B8C00010B54379C26A012B03D1100018F09DFD19\n:10B8D00010BD0B00006B024918F0B0FDF8E7C04640\n:10B8E00028D40200836870B504000D00002B09D134\n:10B8F000110005481AF0ABFCA060200029000C30B4\n:10B9000017F0ACFC70BDC04600DD020010B5024A65\n:10B91000FFF7E8FF10BDC0466A6B0300F0B591B0B9\n:10B920006B46040005920D001B7DA24A4371E16243\n:10B9300000212B780161072B3BD1059B012B06D001\n:10B940000200836B08321B680599406B9847AB680F\n:10B95000180008931AF02DFE63790890032B0FD17D\n:10B960000D9040210DA81AF03DFEA36B02009B68CC\n:10B970000D99606B9847A368E882002B00D0D4E053\n:10B9800008981AF016FE08900378002B4FD00A3B57\n:10B990000F2B47D80DA917F0C3F995220D9B9200E4\n:10B9A000934244D00AD80125483A93420DD0824AA6\n:10B9B00008992000FFF796FF11B0F0BD7F4A93422F\n:10B9C00002D07F4A0325F0E7002508981AF0F1FD20\n:10B9D0001821089008A81AF005FE089B0790069306\n:10B9E000069B079A934224D16379012B15D9A36B47\n:10B9F00029005B68606B98476379042B0DD10023A5\n:10BA0000E06A03950293C18A626B01910093936887\n:10BA10000521D2680069F6F73FFAA368002B00D031\n:10BA200083E0C9E70100674A2000FFF75BFF0225BA\n:10BA3000CBE7069B08931B78222B04D106981AF0BB\n:10BA4000B8FD0690CCE71F2B01D05F4AB0E709A9EB\n:10BA500006981AF0B8FD03780600432BF5D11AF0CA\n:10BA6000A8FD099B9842F0D109A930001AF0ABFD5E\n:10BA7000037807000A3B0F2BE7D81AF09AFD099BC1\n:10BA800006008342E1D00378472BDED11AF091FD06\n:10BA9000099B9842D9D10AA9380017F041F9300022\n:10BAA0001AF08CFD9F210B900BA81AF09BFD010052\n:10BAB0000B981AF072FD9B220A9B0600920093429B\n:10BAC0001BD1012804D10B9803780A3B0F2B01D915\n:10BAD0003E4A6DE72669731C2361059B012B21D02B\n:10BAE0000DA917F01DF9A36B0D9ADB683100606B8F\n:10BAF0009847002816D1364A5AE7364A93421AD157\n:10BB0000012803D10B980378032B01D0324A4FE769\n:10BB1000059B012B06D0666B1AF01FFD010030005B\n:10BB20001AF0E7FDA368002B88D0200008990C309C\n:10BB300017F094FB40E789229200934222D101281A\n:10BB400003D90B980378032B01D0244A30E7059BD7\n:10BB5000012BE7D00CA91AF0F1FC01270B900B98F0\n:10BB60000378032B01D01E4A22E70DA91AF0E6FC48\n:10BB700001370B900D9A0C99606B1AF0C1FDBE4213\n:10BB8000EDD1CFE7059B012BCCD0032800D95CE792\n:10BB90000B9B18000D931AF00CFD0E901AF009FD86\n:10BBA000A36B0F901F6932000DAB0A99606BB84709\n:10BBB000B8E7C0465F6A0300836A03009102000091\n:10BBC000DA020000906A0300B86A0300DB6A03002F\n:10BBD000F76A0300FF010000076B0300236B0300FB\n:10BBE000486B0300F0B587B001920A000593531E1D\n:10BBF0009A410D0006000599019804921AF0CDFCB7\n:10BC00002C1E039009D02B7800243A2B05D102007A\n:10BC10002100306B1AF07EF92C00049B019F0293E7\n:10BC2000059B9F421ED1002C3BD1039A049B944656\n:10BC300063441900306B1AF061F9002D3ED1019B6D\n:10BC40009F422CD0019B9C423BD120001AF0B6FCB5\n:10BC500000220100300000F039F801981AF0A9FC28\n:10BC60000190ECE73B783A2B0CD1002C12D1049BCD\n:10BC7000306B5A1E039B3C00D218029BD21A19004B\n:10BC80001AF048F938001AF094FC029B07000133BF\n:10BC90000293C5E70C4A39003000FFF723FE07B0D6\n:10BCA000F0BD002DCBD0AC4208D120001AF086FCAC\n:10BCB00000220100300000F009F8C0E7002229004E\n:10BCC000F8E700220199C5E795680300F0B50B7805\n:10BCD00017001A000A3A85B004000D000F2A10D888\n:10BCE00003A9280017F01CF803992000002F01D0A9\n:10BCF000022F03D1FFF7D2FD05B0F0BDFFF71AFD0B\n:10BD0000FAE76A4A192B00D8CBE01A3B2A2B00D15C\n:10BD100082E005DC062B08D0292B11D0644AC0E054\n:10BD20002B2B00D194E0972BF8D1002F00D0B7E057\n:10BD300003A928001AF047FC0200039B00219BE0A6\n:10BD400002A928001AF03FFC0600022F03D00100D0\n:10BD50002000FFF701FD30001AF02BFC02990600CD\n:10BD600016F0D3FF0028D9D13378A22B13D130009D\n:10BD700003A91AF028FC060030001AF01AFC039AF6\n:10BD80000190904207D2022F03D031002000FFF72C\n:10BD9000E3FC019EF0E73378482B21D1022F06D136\n:10BDA000206B19F051FF206B19F00DFF0EE03000F1\n:10BDB0001AF004FC01002000FFF7CEFC206B012FDD\n:10BDC000F2D119F015FF206B19F0E5FE30001AF0E2\n:10BDD000F0FB029916F099FF002800D08CE79DE750\n:10BDE000492B9BD130001AF0E9FB03A916F098FF0C\n:10BDF000012F07D1206B19F0F1FE0399206B19F088\n:10BE0000A2FEE3E7022F02D1206B19F006FF03998F\n:10BE1000206B19F0CBFED9E703A928001AF0D3FB59\n:10BE20000399060016F071FF002800D076E7002F76\n:10BE300036D1350003A928001AF0C5FB06001AF018\n:10BE4000B8FB0378A92B1BD100231A00310013E0A3\n:10BE5000002F25D103A928001AF0B5FB039905008E\n:10BE600016F053FF021E02D03B003A0066E72B7823\n:10BE7000A62BDFD0030029002000FFF7B3FE3BE72D\n:10BE8000AA2B05D103A91AF09EFB039B0200DDE754\n:10BE9000C12B00D142E71AF08CFB320003004DE7C2\n:10BEA000044A29002000FFF71DFD25E7366803003E\n:10BEB0004E68030069680300F0B5170085B0040000\n:10BEC00008000D001AF075FB3900060016F01DFF82\n:10BED000019000281FD02379002B17D0E36A1E7829\n:10BEE000002E13D1F6212000FF31FFF723FC29009B\n:10BEF0002000FFF731FC330032000121206B1AF0E3\n:10BF000047F8206B19F07EFE05B0F0BD2900200037\n:10BF1000FFF722FCF5E733786D2B1DD129000122B4\n:10BF20002000FFF7D3FE30001AF048FB4378811C55\n:10BF30004E3BDBB218260A2B01D8234AD65C2000E0\n:10BF4000FFF70AFC3100206B19F051FF0222290093\n:10BF50002000FFF7BBFED7E76E2B2ED1300003A9E0\n:10BF60001AF031FB06000700039BBB421FD1019969\n:10BF70002000FFF7F1FB206B19F030FE00222900B2\n:10BF80002000FFF7A3FE019BB342BDD030001AF0A2\n:10BF900010FB019B0500834202D0206B19F01EFEAE\n:10BFA000310000222000FFF791FE2E00EBE7380061\n:10BFB0001AF0FFFA01970700D6E731002000FFF7DB\n:10BFC000CBFB019AC3E7C0462B680300F0B50B78A2\n:10BFD0008FB00A3B0400019103920F2B00D90CE1B2\n:10BFE00008001AF0E6FA0378432B00D005E1019827\n:10BFF0001AF0DFFA0BA91AF0E6FA037842780A3B46\n:10C000001B021343A54A934200D0F6E01AF0D1FA7E\n:10C0100003780500472B00D0EFE01AF00FFB002853\n:10C0200000D0EAE028001AF0C4FA0B9B984200D036\n:10C03000E3E028001AF0C2FA9F210C900CA81AF035\n:10C04000D1FA0C9B07000293012302980D931AF07A\n:10C05000B0FA05000C90B84200D1C3E01AF0A9FA7A\n:10C060000C90B8420ED00378032B00D0C5E00DA988\n:10C070001AF064FA0D9B0C90002B00D1BDE0B84281\n:10C0800000D0BAE0029B1B784533DBB2022B00D80C\n:10C09000B3E02B784533DBB2022B00D8ADE00B9B2D\n:10C0A000180005931AF085FA039B0700984200D107\n:10C0B00000270D9B26690493238B26830693638BAD\n:10C0C0000793E38B0893731C03936B469B896383ED\n:10C0D000A38BE383331D23612B78D91E03930B00BD\n:10C0E000591E8B410993039B032B03D02900200089\n:10C0F000FFF732FB02992000FFF72EFBF11C206BAB\n:10C1000019F0B7FDB11C206B19F076FC206B19F00B\n:10C1100065FD002201992000FFF7D8FD0599200058\n:10C12000FFF71AFB711C206B19F066FC0499206B59\n:10C1300019F096FC1221206B19F059FE206BF11CAE\n:10C1400019F05AFC039B206B032B4FD019F050FDC4\n:10C15000206B19F062FD049B206B1921002B00DA83\n:10C160001A2119F044FEB21C0121206B19F08DFD3B\n:10C170006B461B8B002523836B469B8B63836B462F\n:10C180001B8CE383AF4218D0206B19F03BFD039B5F\n:10C19000032B02D0206B19F035FD39002000FFF78A\n:10C1A000DBFA2569206B6B1C2900236119F061FD06\n:10C1B0000999206B013119F065FB3100206B19F0F2\n:10C1C0001BFC206B19F01EFD039B032B02D0206B80\n:10C1D00019F018FD002F03D02900206B19F00CFC7A\n:10C1E0000FB0F0BD2E4B029D02934BE719F0F6FC09\n:10C1F00029002000FFF7B0FAADE7238B25690293F1\n:10C20000638B6E1C0493E38B66830593AB1C0693D0\n:10C21000A38B0198E383234B2B432383EB1C2361E4\n:10C220001AF0C7F901002000FFF796FA0700012174\n:10C23000206B19F07BFD3100206B19F0DDFBA91C90\n:10C24000206B19F086FD002201992000FFF73EFDCA\n:10C2500039002000FFF780FA0700206B19F00DFB72\n:10C26000002803D13100206B19F003FDA91C206BBD\n:10C2700019F0C2FB206B19F078FD6B461B892383F4\n:10C280006B461B8A63836B469B8AE383039BBB429B\n:10C29000A2D039002000FFF75FFA9DE7A20200005C\n:10C2A000ED7A03000080FFFFF0B589B0050005912D\n:10C2B000049200930191002904D09F2105A81AF04F\n:10C2C00091F9019000231E001F00059C0393029327\n:10C2D000019BA3421AD1002E0DD0029B002B00D04F\n:10C2E00079E0286B19F025FC039B002B00D077E048\n:10C2F000286B19F01EFC049B286B002B00D174E006\n:10C3000033003A00009919F04CFE0AE02378BB2B69\n:10C3100014D1BA3B1E4206D0374A21002800FFF74D\n:10C32000E1FA09B0F0BD012320001E431AF046F9DE\n:10C33000029020001AF03DF90400C9E7BC2B0BD194\n:10C34000BA3B1E4201D02D4AE7E7022320001E43DC\n:10C350001AF034F90390ECE7BD2B2AD120001AF033\n:10C360002DF904001AF025F90378C12B0BD1280010\n:10C370000622210016F0E0FD009B2000013300930F\n:10C380001AF017F9D6E723780A3B0F2B01D91C4A7C\n:10C39000C3E707A9200016F0C3FC04000799286B27\n:10C3A00019F0A6FB21002800FFF7D6F90137040099\n:10C3B0008EE7002E01D0134AAFE7002F01D0124ABA\n:10C3C000ABE721002800FFF7C7F9009B0400013309\n:10C3D00000933E007CE702992800FFF7BDF983E750\n:10C3E00003992800FFF7B8F985E733003A00009970\n:10C3F00019F0CEFD95E7C046876B03009E6B0300E6\n:10C40000B66B0300D76B0300F26B0300F0B589B085\n:10C410000400039103A83D211AF0E4F80027E36A21\n:10C4200002905E7D0398029B984215D118001AF085\n:10C43000C5F8029B03901B780100320020001D2BE1\n:10C4400059D116F024FD0500013F57D229002000E4\n:10C45000FFF724FA09B0F0BD05A91AF0B4F8682175\n:10C46000039003A81AF0BEF806A90500039816F079\n:10C4700057FC9623069AFF3301909A4213D00399F2\n:10C480002000FFF769F9013703900398A84229D1EA\n:10C490000599280016F039FC00280CD1290020004D\n:10C4A000FFF75AF907E0019B9D4207D8174A002180\n:10C4B0002000FFF717FA059B0393B3E701981AF0E2\n:10C4C00078F88542F2D107A9019816F029FC079B5C\n:10C4D0000F4A934204D00F4A9342E7D10426EAE779\n:10C4E0000126E8E707A916F01BFC07990390206BCB\n:10C4F00019F029FBC9E716F014FFA4E70023012176\n:10C500001A00206B19F044FD9EE7C0464E690300F7\n:10C510001102000006020000F7B50A780E001300B1\n:10C5200008215D3B8B43DBB20400002B02D10133B9\n:10C530008371F7BD13005E3B8B43DBB2002BF8D059\n:10C5400013000A3B0F2B2FD95C2A11D101A930000F\n:10C550001AF039F807001AF02CF8019B834205D035\n:10C560001AF027F8019B0500834208D1002506E058\n:10C5700030001AF023F807001AF01BF8050001A993\n:10C58000380016F0CDFBA379002D02D02A78002ABE\n:10C590000CD1002BCDD1E38A002BCAD0184A310030\n:10C5A0002000FFF79FF9C4E73700DFE7002B1ED01C\n:10C5B000A38A01339BB2A382012B09D1E18A206BAC\n:10C5C000002911D019F035FC0021206B19F04BFC2B\n:10C5D00029002000FFF7C0F8206B019919F088FAB4\n:10C5E000206B19F04CFCA4E719F0A3FAECE7E38AFE\n:10C5F00029000133E3822000FFF7AEF899E7C04637\n:10C600006C690300F0B504000E00056987B0029361\n:10C610006B1C0393AB1C03612900006B170019F01E\n:10C6200062FB200016F084FB31002000FFF794F835\n:10C63000206B19F0A0FB691C206B19F01AFB290074\n:10C64000206B19F0D9F9206B19F0EFFC2669731CE7\n:10C650002361029B9F4218D1A38B206B013BA383D4\n:10C6600019F059FB206B19F0E5FC0399206B19F0C8\n:10C67000C3F90C9B002B03D019002000FFF76CF8C6\n:10C680003100206B19F0B8F91BE0380019F096FF63\n:10C690000023059323690500019301332361037887\n:10C6A000002B10D119F085FF19F083FF029B9842EF\n:10C6B00024D03C4A29002000FFF714F9A38B013B4A\n:10C6C000A38307B0F0BD07008B2B07D119F076FFCD\n:10C6D000070019F06EFF05A916F022FB206B19F078\n:10C6E0007DFA39002000FFF737F82121206B19F07F\n:10C6F0007EFB019A0021206B19F0C7FA280019F07F\n:10C7000058FF05990700002948D1206B19F07AFAE3\n:10C710000025059BAB4209D02569206B6B1C23616A\n:10C72000290019F0ECFA200016F002FB3900200075\n:10C73000FFF712F8059B0700002B02D0206B19F0C1\n:10C740001AFB206B19F03CFB059B002B19D00E2126\n:10C75000206B06F099FD2900206B19F04DF90E2190\n:10C76000206B06F091FD05992000FFF797F8200057\n:10C770000599FFF7A5F8A38B206B013BA38319F064\n:10C78000CAFA3100206B19F074FA0199206B19F084\n:10C7900033F90121206B19F075F85AE72000FFF7F3\n:10C7A0007DF8B5E7146C0300F0B587B003914379C9\n:10C7B0000400012B07D1C36A0D001B78002B04D1A4\n:10C7C000194AFFF78FF807B0F0BD692103A819F0E7\n:10C7D00009FF02900398029B9842F4D005A90B2709\n:10C7E00016F09EFA059B0390019302ABFF183A00E6\n:10C7F0000199E06A15F0D7FC3B780600002B0DD0BC\n:10C80000019A0100E06A15F0F9FC3378074A002B21\n:10C81000E0D129002000FFF765F8DBE70378042B5F\n:10C82000D8D0034AF5E7C046B9690300DE690300C2\n:10C83000FC690300F0B587B0039144790500012C31\n:10C8400009D1019103A8692119F0CCFE0290039847\n:10C85000029B984201D107B0F0BD05A90B2716F045\n:10C860005FFA02AB059EFF1803903A003100E86AB8\n:10C8700015F099FC3B78002B08D10378012B05D0EB\n:10C88000074A01992800FFF72DF8E0E7047031000E\n:10C89000E86A15F0AAFC0028D9D00470D7E7C04692\n:10C8A0009A69030010B5084B428B04009A4202D1EA\n:10C8B000064AFFF717F8A28BE38B618BD21A206B25\n:10C8C00006F008FD10BDC046FFFF000036690300FA\n:10C8D00010B5084B028B04009A4202D1064AFFF7BA\n:10C8E00001F8A28BE38B218BD21A206B06F0F2FCAD\n:10C8F00010BDC046FFFF000021690300F7B50B78AB\n:10C9000004001A000A3A0E000F2A08D801A93000C4\n:10C9100016F006FA01992000FEF7D2FFF7BD432B6F\n:10C9200044D16946300019F04EFE01002000FEF7A8\n:10C9300013FF03780500A22B10D101A919F043FEC3\n:10C940000500280019F035FE019B0700834205D041\n:10C9500029002000FEF700FF3D00F2E72B78482B6E\n:10C9600016D1280019F02AFE01002000FEF7F4FE7F\n:10C970000500206B19F072F90099280016F0C5F92E\n:10C980000028CBD1214A31002000FEF7ABFFC5E7DC\n:10C99000492BF7D1280019F011FE01A916F0C0F9B2\n:10C9A00001990500206B19F042F9E5E7442BE9D124\n:10C9B000080019F043FE0028E4D1300019F0FEFD14\n:10C9C000060019F0FBFD050001002000FFF796FFAF\n:10C9D000280019F0EEFD0378A92B9FD0AA2B0ED1C9\n:10C9E00001A919F0F0FD019B0500834296D02000BB\n:10C9F0002900FFF783FF280019F0DBFDF3E7C12BC7\n:10CA0000C0D001002000FFF779FF87E7AF6803007F\n:10CA1000F7B502260D00C16A0400097D314005D03A\n:10CA2000344A29002000FEF75DFFF7BD0191297807\n:10CA300008000A380F281DD8280001A916F070F93F\n:10CA4000A279E36A002A03D01A8B01321A8302E02A\n:10CA5000DA8A0132DA82012601990029E5D06B4693\n:10CA6000DF1C3A00E06A15F09EFB3B78002B3CD1BE\n:10CA7000214AD6E71A32914204D1280019F09EFDCE\n:10CA800001A9DBE71A33994223D1A379002BC7D13F\n:10CA900001272800A77119F0D1FD03260028DBD15A\n:10CAA000280019F08BFD0278E36A0A3A0F2A09D8A8\n:10CAB00028001A7D17431F7519F080FD01A916F093\n:10CAC0002FF9C9E71A7D280017431F7519F076FD65\n:10CAD000F2E7280019F072FD01A916F021F9E36AC6\n:10CAE0001A7D16431E750526B6E7022346700370AD\n:10CAF0009BE7C046376A0300466A0300C36A70B505\n:10CB00001B7804000D00072B04D00C4A0021FEF70F\n:10CB1000E9FE70BD1100280016F0F7F8002807D0D4\n:10CB20000E21206B06F0B0FB206B19F044FAF0E701\n:10CB300029002000FEF710FEF6E7C0461D6A03003C\n:10CB4000C36A70B51B7804000D00072B06D0022BBA\n:10CB500004D0174A0021FEF7C5FE70BD1100280061\n:10CB600016F0D3F8061E07D00E21206B06F08CFBC2\n:10CB7000206B19F03BFAF0E72B78C42B12D1280078\n:10CB800019F01CFD01002000FEF7E6FD3100206BCE\n:10CB900019F0CCF8206B0E2106F076FB206B19F013\n:10CBA00034FADAE729002000FEF7D6FDE0E7C046B8\n:10CBB000336C0300F0B50D0085B0040011002800AF\n:10CBC00016F0A3F8071E05D00021206B19F04BF9D1\n:10CBD00005B0F0BD2B784E2B0BD1206B012119F045\n:10CBE00042F929002000FEF7B7FD206B19F047F944\n:10CBF000EEE7B32B61D1280019F0E0FC050019F035\n:10CC0000D8FC02900378B62B4DD103A919F0DBFCB8\n:10CC1000039B0290984203D09D2102A819F0E2FCE8\n:10CC20002B784E2B20D103990298266B19F0B5FC76\n:10CC3000411C300019F017F929002000FEF78CFD87\n:10CC4000206B19F01CF90127029E039B9E4210D114\n:10CC5000002FBDD131000298246B19F09EFC411CBD\n:10CC6000200019F017F9B3E729002000FEF774FD42\n:10CC7000EAE73378310020000193FEF76DFD019B58\n:10CC80000600002F0BD04E2B05D00F4A29002000A4\n:10CC9000FEF728FE9CE7206B19F0F1F8D5E74E2B44\n:10CCA000D3D10A4AF2E72B7804224E2B00D005227A\n:10CCB0002900200016F040F98AE729002000FEF73D\n:10CCC0004BFD0121206BCCE7C7680300EA68030035\n:10CCD000F0B504000D00002662711100C562066106\n:10CCE0002A0087B0006B06F0F1F96279012A01D1C0\n:10CCF000EE832E84AE683378542B0AD1300019F0BD\n:10CD00005DFC01002000FEF727FD206B19F053F9B0\n:10CD10002AE02B78002B08D131002000FEF71CFD03\n:10CD20000E21206B06F0B0FAEFE7072B21D130007F\n:10CD300019F03FFC63790500012B07D100230100A6\n:10CD4000A37140225F4B200016F066F8280019F00E\n:10CD500030FC19F02EFC01002000FEF7FDFC206BDA\n:10CD600018F08BFD0028DBD0206B18F059FD07B0C0\n:10CD7000F0BD022B17D1012A07D100234732A3713E\n:10CD80003100514B200016F047F8300019F011FC2B\n:10CD900001002000FEF7E0FC2B7D5B07B5D5206B82\n:10CDA00018F030FFBCE7033B032B50D8300019F0DC\n:10CDB00000FC05A919F007FC19F0FBFB677903904B\n:10CDC000012F09D10B2202ABD2183900E06A15F00D\n:10CDD000EAF902230370EF822B78032B20D1002184\n:10CDE000206B19F033F82B78062B27D1206B18F025\n:10CDF000A0FE01212000FEF79DFC206B18F099FE9B\n:10CE0000206B18F096FE0023059A009303993300D7\n:10CE1000200016F045FD2B78062B00D075E77FE744\n:10CE2000042B04D10021206B19F01DF8DBE7052B42\n:10CE3000D9D10021206B19F02DF8D4E72000012171\n:10CE4000FEF778FC0121206B18F070FFDBE7012A68\n:10CE500007D1DE2105AAFF31280015F0A4F902232D\n:10CE6000037005A9A86815F05BFFF82120004900B0\n:10CE7000FEF760FCF0212000FF31FEF70FFDE9898D\n:10CE8000206B18F035FEFA2120004900FEF706FD60\n:10CE9000A86819F08EFB19F08CFB01002000FEF74A\n:10CEA0005BFCDE212800FF3115F06DF90378022BC1\n:10CEB00000D135E7DE214288FF31206B18F0F0FC0D\n:10CEC00023E7C046C1340200B5340200F8B5164B62\n:10CED0000400A8331B681600002B24D10569012229\n:10CEE0006B1C03612B0016F061FCBE210700FF31B3\n:10CEF000206B18F002FD3100380015F006FF061E09\n:10CF000009D139002000FEF727FC3300320001214F\n:10CF1000206B19F03DF80121206B19F059F8290018\n:10CF2000206B18F069FDF8BD802E0020F0B585B0AB\n:10CF300005000E000192FEF70FFC03780400A22BFF\n:10CF400003D101A919F03FFB0400EB6A1B78072B02\n:10CF500000D070E0337872780A3B1B021343504ACA\n:10CF6000934268D12378472B65D1200019F066FBE6\n:10CF7000002860D0DE212800FF31FEF7DBFB012115\n:10CF8000EA6A936A928C002A06D1464A2100280058\n:10CF9000FEF7A8FC05B0F0BD5878084211D05968DA\n:10CFA0002800FEF7C7FB0199200019F0F6FA0228C5\n:10CFB0000ADC0023286B1A00022118F0E9FF200088\n:10CFC00036E0013A0833DEE7200019F0F2FA037880\n:10CFD000492BEED1200019F0ECFA19F0EAFA0378A7\n:10CFE000472BE6D1200019F0E4FA070019F0E1FA26\n:10CFF0000600380019F0E2FA03A915F091FE039932\n:10D000000122286B18F0ABFD300019F017FB00214E\n:10D01000884203D1300019F0D1FA01000023012227\n:10D020002800FFF741F9200019F0C3FA19F0C1FAFE\n:10D0300019F0BFFA0400019BA342ABD0200019F005\n:10D04000B8FA019B0600834224D02378492B21D1D2\n:10D050000378472B1ED1200019F0B0FA07003000EA\n:10D0600019F0ECFA0024A04203D1300019F0A6FA1E\n:10D07000040003A9380015F053FE00220399286B21\n:10D0800018F06DFD2800002301222100FFF70CF9A4\n:10D090003000CDE721002800FEF75EFBCAE7C0465E\n:10D0A000C702000009690300F0B59BB015000690A7\n:10D0B00038220F000CA800211E001BF0ABF9069BC4\n:10D0C0000BAC5B680B97236201235B421193069BB9\n:10D0D0002671186819F06DFA19F03FFA6062800045\n:10D0E00014F024F90022A06200950025069B11008F\n:10D0F0001B68200015F026FE18F07CFB2B00039027\n:10D1000020630495626A0792954202D2A268002ABF\n:10D1100041D0002B5DD10593059A079B934202D025\n:10D120000D9A002A58D00499039818F068FB00253E\n:10D13000149A0D9B0592954200D214E1002B0CD05D\n:10D14000169B0EA8996816F089F8169B0E9A049300\n:10D15000DB890B990D9807F081F9039818F057FBBC\n:10D160001898002801D016F076FF0024069819F0D0\n:10D170006FFA159B1B681D69149B159803939C42BD\n:10D1800000D21AE114F0EFF80D99002900D11CE14A\n:10D190000800F6F711F9A16AAA005658002E13D01C\n:10D1A0003269002A10D113F0E9FF737D306101224A\n:10D1B00031002000042B09D1FEF7B0FB2369049A4B\n:10D1C0009A4200D20493012301359BE7FFF780FDCB\n:10D1D000F4E700231D0095E70599159B8900CB58BE\n:10D1E000002B38D00120998C8C46197D01421CD02F\n:10D1F0006446601EC000002C17D00226996A0918E8\n:10D200004D7835422AD0002A0FD00F00508816786A\n:10D21000089050685578099011CF11C26A46128C57\n:10D220000E704A80099A4D704A600021DE2499836D\n:10D23000FF348C451ADC00218C4535DC5E68002EFD\n:10D2400009D00021B28C09920A00099881423BDB87\n:10D250000020824263D1059B01335CE7002A02D1A2\n:10D26000012D00D10A00013C0838C4E7986ACA00C1\n:10D2700082181878012804D15068A04208D10131E1\n:10D28000D7E71578012803D9002D01D101201070AE\n:10D290001078022803D0012550782842EFD0988BCF\n:10D2A000451C9D835080EAE7986ACA00821810786E\n:10D2B000032807D101245078204203D1988B508055\n:10D2C000001998830131B7E7B06ACD004019089082\n:10D2D00000780338012812D800240EE09F6AE0008D\n:10D2E00038180778042F07D1089D6F683D004768FC\n:10D2F000BD4201D1428001320134A445EEDC01314E\n:10D30000A3E79C6AC10061180C78042C03D10125A5\n:10D310004C782C4202D04C88A4184C8001308445B3\n:10D32000EFDCD98A92B25118D982998B52189A831C\n:10D3300091E7039B022221000BA81793FFF7C8FC7B\n:10D340000D9B0593002B04D1032221000BA8FFF7AE\n:10D35000BFFC0D9B0593002B2DD1042221000BA8AF\n:10D36000FFF7B6FC27E0002B00D0E9E6159B0593FC\n:10D37000059AAB009C58002C1DD0637D042BD8D19E\n:10D38000189B0593002B04D10499139816F04CFEBA\n:10D39000189000231793104B032221000BA8199318\n:10D3A000FEF7BCFA0D9B0593002B04D1042221004B\n:10D3B0000BA8FEF7B3FA0135BAE6A3001858002807\n:10D3C00001D014F0D7FE0134D6E60A00280013F08D\n:10D3D000E1FE1BB0F0BDC046D0C702000122010033\n:10D3E00003001140100000290CD10800990709D151\n:10D3F0001B68054910008B4204D00448181A4342A8\n:10D400005841C0B27047C0465C97020078DE020007\n:10D410000023FA21094A89001360094A1370094A56\n:10D420001360094A1160094A1370094A111D083234\n:10D43000D3670122CB67074B1A707047D42A0020AC\n:10D440003B2E0020D02A0020140000203C2E00207B\n:10D45000802E00203D2E002010B5084B084A197878\n:10D46000002907D1916C002902D0FFF7D1FF10BD30\n:10D4700030BFF4E700221A70F9E7C0463D2E0020C5\n:10D48000802E0020837F0248002B00D10148704786\n:10D4900070DE020068DE02000023A022E02110B549\n:10D4A00083770C4BD2050902D1500B48FEF7A6F842\n:10D4B0000A48FEF7A3F80A48FEF7A0F80948FEF765\n:10D4C0009DF80948FEF79AF80848FEF797F80848CB\n:10D4D00010BDC0460C050000709602007896020050\n:10D4E0008896020090960200A0960200189602000C\n:10D4F000388D0200F8B5164C2368002B07D1482060\n:10D500001AF002FF050013490AF018F825601248C6\n:10D51000124902680B68D21A0123312A04D96233F6\n:10D5200093429B415B420233002201260C4D2E7038\n:10D530002F78032FFCD101329342F8D10368206881\n:10D540000B601AF0AEF8430001201843F8BDC04646\n:10D55000D82A00204CC50200782E0020DC2A0020AA\n:10D560003E2E002030B50D4C87B02378012B13D10F\n:10D570000B4B02221D680621002302A819F01AFA9B\n:10D58000082204A968461AF029FF039B029A280082\n:10D5900009F050FF0223237007B030BD3E2E00205B\n:10D5A000D82A0020A02010B51049C0054B7F5A1C76\n:10D5B000002B09D14C8C0E4BA3430E4C03510E4B48\n:10D5C0004A775200D05A0FE010335B00CB185C88CA\n:10D5D000A123DB00C450092AF1D10120F2F712FF88\n:10D5E000FFF7C0FF0120404210BDC04618000020D8\n:10D5F000F01F00000C05000084F0020073B5041E4B\n:10D6000009D11A4D2B78002B2CD01949194816F046\n:10D610005EFB2C7073BD184D2B1DDE6FFAF718F9E9\n:10D62000164B2100984214D0154B2340062B05D0F1\n:10D63000A30712D1134B22689A420ED101A92000F0\n:10D64000FCF7A0F8019B012B0CD1007814F022FD0F\n:10D650000100300016F03BFBDCE70B490B4818F0EB\n:10D66000F6FDA864FFF7D4FED4E7C0463C2E0020A8\n:10D6700034A2020018000020802E002094A2020094\n:10D68000070080FF9CC60200B86C030078DD020032\n:10D69000F7B5A123A021214AC905DB00CA50012307\n:10D6A000C27F0D3293401E4A8B50C37F01920133DB\n:10D6B000DBB2032B2FD0C3770200030000212233FB\n:10D6C0003632198002339342FBD10424C17F154FB7\n:10D6D0004D000522EB5D7E195343134A7678D3182B\n:10D6E0009B190126A640B44662461B7901345B00B3\n:10D6F000C3185E8C063516435E840D2CE9D10122D9\n:10D700000D318A40A023A121DB05C9005A50828E29\n:10D7100001995A50F7BD0023CDE7C046F01F000025\n:10D720000C0500004C6C03001800002070B5394B4C\n:10D730008CB01A78022A07D1A0223749D2008A5821\n:10D74000012A07D003221A70344DAB7F002B03D17E\n:10D75000FFF708FF0CB070BD2800FFF799FF304AB3\n:10D76000304913680968063313608B4207D30024DD\n:10D770002D4B14601B78012B0FD0022B45D00023BA\n:10D780002A8C6B77FF33FF331A42E1D0E12227491D\n:10D79000D2000120F2F702FEDCE7254E331DDB6FDD\n:10D7A000002B04D033000833DB6F002B02D1FFF7CE\n:10D7B0002FFEE4E705F04EFE6846F5F7D7FD00289A\n:10D7C0000CD11C4B186804F069FD0400F5F7ECFD62\n:10D7D00005F04AFE2000FFF711FFD0E705F044FEF8\n:10D7E000019B1549186803F035FF0028F2D1019814\n:10D7F000FAF72EF8114B984203D11149114813F052\n:10D80000FAFA019B0024B364E4E70F49280016F0FC\n:10D810005EFACCE73E2E0020007000401800002089\n:10D82000D02A0020140000203B2E0020A5D50000A7\n:10D83000802E0020D42A0020C4DC02005CDB020021\n:10D84000610D0300348C020034A20200F0B5002404\n:10D8500085B0164D02930AAB1B782E1D07000835C4\n:10D860000800210001920393F467EC6704F0DCFCEC\n:10D870000F4B019A18600F4BF7671A606A460E4B00\n:10D88000127AE8671A700D4B1C7004F007FDFFF761\n:10D89000B5FE01220A4B1C600A4B1A70039BA3427F\n:10D8A00001D0FFF7D9FD05B0F0BDC046802E0020A5\n:10D8B000D42A0020140000203C2E00203D2E002001\n:10D8C000D02A00203B2E0020F0B50024384B8FB02A\n:10D8D0001D1D0833DC67374BEC6709AD80C9013883\n:10D8E00001950093052304F013FA6B68099C0493D7\n:10D8F00007942B7B2E7A05932B7C20000393FFF754\n:10D900006DFD2D4D002806D103232340022B09D1A4\n:10D910002C40062C06D007AB002201212748FBF73C\n:10D9200023FB079007980540062D05D0830730D1CB\n:10D93000224B02689A422CD108A9FBF723FF089BCF\n:10D94000002B23D0012B0DD1002E0BD1039B002BDC\n:10D9500008D1007814F09EFB07900799380016F064\n:10D96000B6F913E00798F9F789FE079009AB1B7C1D\n:10D97000002B03D00798FBF7ABF90790059B049A9F\n:10D980000093079933003800FFF760FF0C480FB091\n:10D99000F0BDF9F75DFF0B4B9842E7D1002E02D1A5\n:10D9A000039B002BD9D007A90120F7F781FADCE708\n:10D9B000802E0020F8C50200070080FF9CC60200F0\n:10D9C000388D020094A2020070B51B4B8AB005ADE1\n:10D9D00040C9013800930195052304F099F9059C8D\n:10D9E00020000494FFF7FAFC002807D1032323400A\n:10D9F000022B0AD1114B1C40062C06D004AB00228E\n:10DA000001210F48FBF7B0FA049003A90498FBF733\n:10DA1000B9FE2A7C2B7B03990092059AF9F718FE30\n:10DA20002B7A01000093300000236A68FFF70EFF95\n:10DA300004480AB070BDC04620C60200070080FF3F\n:10DA40009CC60200388D02000022074B10B51A70E8\n:10DA5000064B02321A70064B064A1B68063B1360DF\n:10DA6000FFF7FAFC10BDC0463D2E00203B2E0020E3\n:10DA700014000020D02A002010B5FFF7E5FF014870\n:10DA800010BDC046388D020010B5042901D8042A03\n:10DA900002D9094804F0F8FF092B01D90748F9E732\n:10DAA0000524614341188A18137101229A40038C9E\n:10DAB0001343038410BDC046930D0300DE1C030016\n:10DAC000F8B548680C000D68F9F7AAFF0600A068D1\n:10DAD000F9F7A6FF0700E068F9F7A2FF3A00030094\n:10DAE00031002800FFF7D0FF0048F8BD388D020054\n:10DAF00010B5042901D8042A02D9044804F0C4FF4F\n:10DB00000523594340188018007910BD930D030078\n:10DB100070B5104C050021000F48FDF785FD210070\n:10DB20000E48FDF781FD21000D48FDF77DFD210028\n:10DB30000C48FDF779FD21000B48FDF775FD21002C\n:10DB40000A48FDF771FD16F049F901230848AB7743\n:10DB500070BDC04600B802007096020078960200C0\n:10DB60008896020090960200A09602001896020085\n:10DB7000388D020000237F2803D8034B1B5C9B07D2\n:10DB8000DB0F18007047C046C56C030000237F28D8\n:10DB900003D8034B1B5C1B07DB0F18007047C04604\n:10DBA000C56C030000237F2803D8034B1B5C5B0775\n:10DBB000DB0F18007047C046C56C030000237F28A8\n:10DBC00003D8034B1B5C5B06DB0F18007047C04695\n:10DBD000C56C030000227F2808D8054B0132195C70\n:10DBE0000C23194202D15F38424242411000704773\n:10DBF000C56C030000237F2803D8034B1B5CDB06A6\n:10DC0000DB0F18007047C046C56C030000237F2857\n:10DC100003D8034B1B5C9B06DB0F18007047C04604\n:10DC2000C56C030070B506000D00002814DD002946\n:10DC300007DD15480CF020F90124B04209DB00246F\n:10DC400007E00100C02000060CF016F90124A842EC\n:10DC5000F5DDE4B2200070BD002907DDC02000061C\n:10DC60000CF00AF90124B042F3DCE8E70024A042FA\n:10DC7000F0D0010004480CF0FFF80123A84200DCBA\n:10DC8000231CDCB2E6E7C046FFFFFF3F044B886081\n:10DC90000B60044B08004B600023CB607047C0460C\n:10DCA000A8CC0200673F020013B50400080001A9D8\n:10DCB000FBF74AF9002C03D0012C07D0002004E028\n:10DCC000019B0548002B00D1044816BD019916F0B0\n:10DCD000C5F840002043F8E770DE020068DE02006D\n:10DCE000F0B585B00400080003A91500FBF72CF976\n:10DCF0000600002D07D10300039A2F49200013F0DE\n:10DD00007AF805B0F0BD039B0200C3180021012082\n:10DD10000193019B934206D82727002900D0053F95\n:10DD20003A0026491AE01378272B08D0223B5D429F\n:10DD30006B41DBB20132002BEBD02727F0E7002349\n:10DD40000100F7E7300016F056F80500300016F035\n:10DD50006DF80600AF4205D13A001949200013F0D2\n:10DD60004AF814E017495C2D0ED02B00203B5E2BA7\n:10DD700001D82A00D5E714490A2D05D013490D2DE5\n:10DD800002D0092D0CD11249200012F073FF019B23\n:10DD9000B342D7D83A000949200013F02CF8B0E775\n:10DDA000FF2D02D82A000B49D8E70B4B2A000B495C\n:10DDB0009D42D3D90A49D1E72D250300AC240300A5\n:10DDC000AB240300AF240300B2240300B5240300F6\n:10DDD000B8240300BB240300FFFF0000876D03008D\n:10DDE0008E6D0300F7B51E0008AB1D78294B0C00A3\n:10DDF0001700984206D12B0032003900F9F7E8FEEF\n:10DE00002018FEBDF30715D576100196019BE21987\n:10DE1000002B2ADA00213F260127501EA04219D2EA\n:10DE2000002900D001932000002DEAD11A491B4897\n:10DE300017F04FFC01A93000F9F730FE0028E5D1BA\n:10DE4000300014F067F916490200164806F09AFAF5\n:10DE5000F5F7B2FA0278B243802A01D039000133D3\n:10DE6000421E002BCDD01000D8E720000126002450\n:10DE70003F27904204D3002C00D001931000D3E739\n:10DE8000013BBED3340001300178B9438029F0D181\n:10DE90000130F9E79CA502006D6D03006CDA020009\n:10DEA000456D030078DD0200F0B587B004000E0078\n:10DEB0001700F9F7CDFC02A905002000FBF744F894\n:10DEC0000400042F4ED1B30734D1274B32689A4255\n:10DED00030D105AB04AA03A9300018F09DF9059BC9\n:10DEE000224FBB4204D0032B02D0214804F0BEFFD6\n:10DEF000039B2600BB4207D001222100009228008C\n:10DF0000029AFFF76FFF0600029A049BA118BB421A\n:10DF100006D00121280000912100FFF763FF0100D6\n:10DF20000E208E4204D88A1B2800310014F049FBD1\n:10DF300007B0F0BD0023029A0093210033002800AF\n:10DF4000FFF750FF0278012153B2002B06DA40237D\n:10DF5000012101E001315B081342FBD10122FAF7F4\n:10DF6000B9FFE5E70020E3E7D0D70200388D0200D3\n:10DF7000E70E030010B5F9F7B7FD04490CF04CFDAE\n:10DF80000CF0FEF814F0A9F8014810BD00007A4426\n:10DF9000388D020010B5F9F743FD002801DD14F0BB\n:10DFA0009CF8014810BDC046388D020010B5040031\n:10DFB0000800F9F735FD64102018034C400020409C\n:10DFC0000124204310BDC046FEFFFF7F10B5F9F7C6\n:10DFD00027FD002801DD14F07CF8014810BDC04683\n:10DFE000388D020010B514F090F8034B4000184033\n:10DFF0000123184310BDC046FEFFFF7F10B514F08B\n:10E0000080F8034B400018400123184310BDC04660\n:10E01000FEFFFF7F70B5137804000A3BD8B20F28CB\n:10E0200009D90A001048114906F0ACF90025636AC5\n:10E030001860280070BD002552781B021A43E36A5D\n:10E04000AB420AD1238C0025042BF2D108490648A3\n:10E0500006F098F9636A1860EBE7206BA90009588D\n:10E060009142E6D00135EBE700DD0200186F0300B6\n:10E070002D6F0300F0B5040085B00D00100003A95A\n:10E08000A26A1E0018F06FFA002809D12A000B4975\n:10E090000B4806F077F9636A1860002005B0F0BD00\n:10E0A0000398F9F7E9FC0300B343F7D003000096A7\n:10E0B0002A000449024806F065F9ECE7D46E030033\n:10E0C00000DD0200EC6E0300F7B51F0013780E00B0\n:10E0D0000A3BD9B2050021480F2904D850781B0209\n:10E0E000184314F0E0FC15240378009315231C4911\n:10E0F0001B1B0193A300CB1A190055310978009A14\n:10E1000091421FD119005631427809788A4219D1BB\n:10E11000573381781B788B4214D1002B0FD1019B90\n:10E120009A000F4BD05CB84208D93B0032000D4931\n:10E130000D4806F027F96B6A18600020FEBDC37811\n:10E14000002BECD0013C002CD0D13200074906480E\n:10E1500006F018F96B6A18602000EFE7FC0B03006B\n:10E16000906F0300446F030000DD02005D6F030049\n:10E17000F0B5137885B005000E00462B47D101A9F4\n:10E18000100018F020FA019B834240D003781A0057\n:10E190000A3A0F2A0AD802000F2331002800FFF79D\n:10E1A00093FF01248440200005B0F0BDB32B2ED195\n:10E1B00018F004FA040018F0FCF902900378B62B6A\n:10E1C00025D10127A73B220031002800FFF77CFF63\n:10E1D0003C0003A98440029818F0F5F9039B0290D3\n:10E1E0009842E0D09D2102A818F0FCF9029A039B06\n:10E1F0009A42D8D00F2331002800FFF765FF3B007B\n:10E20000834002981C4318F0D4F90290EEE73200E4\n:10E210000349044806F0B6F86B6A00241860C2E7A8\n:10E22000756F030000DD0200F0B50E0087B004003A\n:10E2300004A930001F00019214F03AFC019B050074\n:10E24000002B0FD1A4239B009E4205D1BF210902C0\n:10E25000200017F01EFF19E0BE4B9E4200D088E060\n:10E26000BD49F5E7019B012B00D09AE00A23FF335B\n:10E270009E420DD101003A682000FFF7CBFE01005D\n:10E28000200017F050FF002800D116E207B0F0BDC3\n:10E29000B24B9E4209D101003A682000FFF7BAFE56\n:10E2A0000100200017F097FFEDE7AD4B9E420AD129\n:10E2B00001000F233A682000FFF706FF8E21C000FF\n:10E2C000C9010143C4E70378622B3BD1049B032BB4\n:10E2D00007D0052B36D1C3785F2B33D103796E2B52\n:10E2E00030D101230E265B4269789E480293B30029\n:10E2F000F31AC3181A002B3212788A4209D1AA786D\n:10E3000094461A002C321278944502D12A331B7895\n:10E310000293013E002EEAD1029B013329D03A68D4\n:10E3200029002000FFF776FE049B0200052B03D195\n:10E330002E79773E73425E4133000299200017F038\n:10E340000EFFA0E7884B9E4201D1884980E7884BA9\n:10E350009E4201D187497BE7874B9E4212D129001B\n:10E360003A682000FFF704FFFF231B02B421184284\n:10E3700015D0019B2A008149814806F003F8636AA1\n:10E38000186083E77F4B9E42F3D13A682900200052\n:10E39000FFF7EEFEFF231B021842EAD1BC2109025F\n:10E3A0008FE7019B022B00D021E17B68764A1B7826\n:10E3B0000A3B0F2B48D8964212D13A6801000F232E\n:10E3C0002000FFF781FE7A68060029000F23200055\n:10E3D000FFF77AFE31000200200017F08DFE55E7AE\n:10E3E00000226A4B02929E421AD18026F6013A68B8\n:10E3F000290007232000FFF767FE7A6801902900B3\n:10E4000007232000FFF760FE019A0300310020007F\n:10E4100017F06BFE3AE7029B013302930F2BA8D053\n:10E42000029B03229E005A4B280099191AF04DF8BE\n:10E430000028F0D1EB78002BEDD1564BF65C802311\n:10E440003601DB011E43D2E796421AD1802607230C\n:10E450003A6829002000FFF737FEFF2301902900CA\n:10E460007A682000FFF706FE0100019BB6011B023F\n:10E4700031431943ECE6A026E9E7C026E7E7E026AA\n:10E48000E5E787239B009E42F5D01E3B9E42F4D0D9\n:10E49000414B9E42F3D0414B9E4251D0404B9E4255\n:10E4A00050D0404B9E424FD04F339E424ED03E4BB9\n:10E4B0009E424DD03D4B9E4200D05AE705233C4A38\n:10E4C0009B009B5A290002933A6807232000FFF71C\n:10E4D000FBFD7E6803903378452B6BD1300018F03C\n:10E4E000ADF8002866D1300018F068F80378A62B44\n:10E4F00060D105A918F067F80599060018F04DF8E5\n:10E50000022857D1300018F054F8072332000700D2\n:10E5100029002000FFF7D8FD029B0600DB0451D53F\n:10E520001F233A0029002000FFF7A4FDF100039B00\n:10E53000029E80011E433143F826F6003040C0E6BB\n:10E540000023BCE70123BAE7019BB8E70323B6E742\n:10E550000423B4E7E602000030BF00000B02000015\n:10E560000F020000956D03002202000072B6000049\n:10E570002302000062B600009F0200004F6E0300FD\n:10E5800000DD02009A020000890200000102000082\n:10E59000996E0300986E0300C50200006E02000031\n:10E5A0006F02000071020000C1020000C3020000FF\n:10E5B00096F002002A004449444805F0E3FE636AED\n:10E5C0001860D6E66B4608229B5E002B07DA3E23D6\n:10E5D0003A0029002000FFF74DFD4008A6E77C2304\n:10E5E0003A0029002000FFF745FD80089EE7019BC7\n:10E5F000032B00D0BDE69E239B009E4222D1002625\n:10E600003A68072329002000FFF75EFD7A68019031\n:10E61000072329002000FFF757FD1F230290BA6847\n:10E6200029002000FFF726FD019F029B374381014F\n:10E630003943DE0031430BE680263601E0E78026D1\n:10E640007601DDE7224B9E42F6D0224B9E42F6D069\n:10E65000093B9E422BD1C02607233A68290020009F\n:10E66000FFF732FD072301907A6829002000FFF7A9\n:10E670002BFDBA687601137802900A3B0F2B0DD858\n:10E68000072329002000FFF71FFD029BD900019BF3\n:10E69000194331430F0081013943D9E58023DB0061\n:10E6A0001E43290007232000FFF7E4FCEDE70A4B97\n:10E6B0009E4200D05DE6D026CEE708490348646A52\n:10E6C00017F0C5FD2060E1E5246E030000DD0200C7\n:10E6D0007902000007020000C5020000846E0300FA\n:10E6E000F7B50E0007001100300017F056FF0025A7\n:10E6F000040004281ED97C6A1349144817F0A7FDAA\n:10E70000206000242000FEBD73780002184314F03E\n:10E71000CAF90236019019F0D1FE022811D1019BED\n:10E720001B78722B0DD1019B5A782B0030339A4203\n:10E7300007D10135A542E5D030780A38C3B20F2B96\n:10E74000E2D97C6A0249D8E7BF6D030000DD020010\n:10E75000F26D03000021F0B5070087B0816415F069\n:10E76000DFFCFB693C6ABB637B6AFC63002B05DA58\n:10E770003A00062140321170013306E0002B07D029\n:10E780003A00052140321170013B7B6207B0F0BDB9\n:10E79000002833D0BB6A002B30D13900043340311C\n:10E7A0000B703A6BAE4B786BD3185B001B5A013C75\n:10E7B0009C42EBD017D9F96A8A4207D30831490045\n:10E7C00012F0C0FDFB6A78630833FB623B6B5A1C96\n:10E7D0003A637A6B5B009C527B6ACDE7013B3B63FB\n:10E7E0007B6A013B7B623B6B9D4A9A185200125A2E\n:10E7F0009442F3D3CAD002230B70C7E73C69631C71\n:10E8000003D1002240373A70C0E7380015F030FCE1\n:10E810000490002800D129E13B00403305930023F8\n:10E82000059A13703B69752B5AD0622B07D17B690F\n:10E83000722B5CD001240B230022019208E0722B82\n:10E8400051D17B69622B52D0049B012401930A238E\n:10E85000390040310A78002A4ED10B70002C07D0C5\n:10E86000380015F02DFC022C02D1380015F028FCE0\n:10E870003B690293222B01D027230293380015F025\n:10E880001FFC0123029A03933B6993420BD11300AF\n:10E890007A69934207D1380015F012FC380015F060\n:10E8A0000FFC0323039300263C69631C00D1CEE0D8\n:10E8B000039B012B02D10A2C00D1C8E0039B9E428E\n:10E8C0001DD338003100443013F0B6F80121380070\n:10E8D00015F026FC380015F0CBFB0028A2D155E737\n:10E8E00001240A23A8E700240A230194B0E7049B2B\n:10E8F000022401930B23ABE79A42AFD046E7029B79\n:10E90000A34209D13800190044300136F7F760FB03\n:10E91000380015F0D5FBC7E75C2C00D091E038003B\n:10E9200015F0CEFB019B3D69002B06D038005C2121\n:10E930004430F7F74DFB2C0071E0622D51D030D8F8\n:10E940004E2D77D01AD8222D29D0272D27D000265A\n:10E950000A2DDDD02C00303C0326072CE6D87B693D\n:10E96000303B072B5BD8013E002E58D0380015F005\n:10E97000A7FB3B69E400303B1C19F0E75C2D0ED08F\n:10E980000724612D21D0552DE4D13B0040331B7865\n:10E990000B2B2ED138005C214430F7F719FB2C00EB\n:10E9A00013E0742D1FD007D86E2D1ED0722D0BD002\n:10E9B000662DCFD10C2408E0762D18D0E5D30226A1\n:10E9C000782DC7D1002428E00D243B0040331B786C\n:10E9D0000A2B32D1380021004430F7F7F9FA00262B\n:10E9E00096E70824F1E70924EFE70A24EDE70B2472\n:10E9F000EBE70826752DE5D1043EE3E7380015F076\n:10EA00005FFB3D692800FFF7D9F8002800D144E1F9\n:10EA1000280015F045FA24012418013EEED2002604\n:10EA2000631C00D174E70F4B9C42CED90122059B99\n:10EA30001A70D4E70C4804F019FAFF2CF6D80B2B07\n:10EA4000F4D13800E1B2443012F0B2FFC7E7039BC3\n:10EA50009E4200D335E73B00032240331A7030E773\n:10EA6000FFFFFF7FFFFF1000257003002000FFF76E\n:10EA70008DF8041E386903D15F2801D07F2842D960\n:10EA80003D0007233C0040352B704434C1B22000C8\n:10EA900012F08EFF380015F013FB3869431C1BD1B0\n:10EAA000200012F073FF002406007E4FA300F958E7\n:10EAB000300019F0F9FC00281ED10D34E4B22C709E\n:10EAC000102C00D062E6784BA8331A680D23002A78\n:10EAD00000D102332B7059E6FFF758F8002808D10F\n:10EAE00038695F2805D07F2803D8FFF75BF8002836\n:10EAF000D6D03B69D9B2CAE7002800DA46E601342D\n:10EB0000222CD3D142E6FFF74DF800280FD03E006B\n:10EB1000396940362E2916D1092333703D0044351A\n:10EB20002800F7F755FA380015F0CAFA31E03B69CA\n:10EB30002E2B04D17869FFF735F80028E7D100259E\n:10EB40005A4C02234AE0082333703029E6D17A690F\n:10EB500018331343623B0024162BDFD8544CDC409F\n:10EB600001231C40DAE7002C17D103002022934335\n:10EB7000452B12D13C3B337065212800F7F728FA6A\n:10EB8000380015F09DFA396902220B002B3B9343A4\n:10EB9000C6D03869431CE6D1F8E5FEF7F7FF002838\n:10EBA00005D039692E290BD109233370B8E73869AC\n:10EBB000FEF7F8FF0028F4D13B692E2BF1D0E5E5F4\n:10EBC0000B00202293434A2BAAD1EDE7633E9E43DC\n:10EBD000F6B272425641A419013501342678002E4E\n:10EBE00002D03A69B242F1D1380015F069FA002E2C\n:10EBF00002D14037012206E6212E08D13B693D2B88\n:10EC0000F7D1380015F05CFA40374122FBE52E2E93\n:10EC100012D13C003B6940342E2B02D17B692E2B54\n:10EC200002D04A232370B1E5380015F049FA3800C4\n:10EC300015F046FA0C23F5E72A0001342678022164\n:10EC40003300633B8B43DBB2002B0ED16378396911\n:10EC50000135994207D1380015F032FA2A00652EA5\n:10EC600003D00234EAE7632EFBD1124B9B5C3A00DF\n:10EC700040321370190004229143422901D0442BE1\n:10EC800003D1BB6A0133BB6280E5432902D0452B27\n:10EC900000D07BE5BB6A013BF5E70122059B040040\n:10ECA0001A7092E6E4C70200802E0020E46F030091\n:10ECB00001204000AF700300F0B5124B87B003ADE8\n:10ECC00040C9013800930195032303F021F86868D7\n:10ECD0000D4F1E24B84202D012F0F3FA44B2A868D5\n:10ECE0000023B84202D012F0ECFA43B270680399E4\n:10ECF0004371047109F096FF70680AF00BFD38004B\n:10ED000007B0F0BDE0C80200388D020030B5124BEC\n:10ED10008BB003AC20C9013800930194032302F0A7\n:10ED2000F7FF616806A812F0F4FD039B089A5900EA\n:10ED3000237A00936868079B08F00EFB021E05D03B\n:10ED40000649074805F01EFBF4F736FB06A90548FF\n:10ED5000FAF78AF80BB030BDF8C80200D97003008A\n:10ED600010DC02009CA5020030B5114B89B002AC4A\n:10ED700020C9013800930194032302F0C9FF012246\n:10ED800005A96068F9F706F8029B059A5900237AED\n:10ED900000936868069B08F0EFFA021E05D005494B\n:10EDA000054805F0EFFAF4F707FB044809B030BD59\n:10EDB00010C90200EB70030010DC0200388D020065\n:10EDC0000021F8B54768080012F08CFB0825060002\n:10EDD000B1223B68D2009D50802200209200190091\n:10EDE00098500122FC319A6088605A61104A886804\n:10EDF000002803D1002A19D0013AF8E70024A242E2\n:10EE000004D00C4A9C5863425C41E4B238000AF0DA\n:10EE100081FC002C05D001216B0019433000F4F770\n:10EE200065FB0135782DD3D13000F8BD1400EDE736\n:10EE300010270000C404000010B50400082012F0E0\n:10EE400063FA024B4460036010BDC04654C902001F\n:10EE500010B5010083880120A0229840044BD20500\n:10EE6000D050CA88083117F037FD024810BDC0469F\n:10EE70000C050000388D0200EFB5070008001500F2\n:10EE8000F988020000233868F8F7A2FE03267043D1\n:10EE9000002D14D03F18042D14D101237A7A01A932\n:10EEA00052001A4301923A7A30009A401A43029271\n:10EEB000BA7A9A4013430393F5F7FAFF0500280046\n:10EEC00004B0E0BD310001AA2800F8F76DFE019BF7\n:10EED0001868F8F7A5FD019B06005868F8F7A0FD33\n:10EEE000019B05009868F8F79BFDFF2E03D8FF2DC6\n:10EEF00001D8FF2802D9044803F0C6FD3D727E7296\n:10EF0000B872024DDBE7C04617710300388D02006E\n:10EF1000F7B51C00002300930233080011001A000B\n:10EF200002F0C6FE206812F0CCF947B26068F8F72C\n:10EF300077FD041E02DC104803F0A6FD0326300016\n:10EF40006043083012F0E0F90C4BA2B20500878054\n:10EF500072430360C4800021083019F05BFA3B0063\n:10EF6000A022C133FF33D2059B009E500123BB403A\n:10EF7000034928005350FEBDFE700300E8C902009B\n:10EF80000C050000032210B50400C38800215A4379\n:10EF9000083019F03FFA2000FFF75AFF004810BD73\n:10EFA000388D0200014BD8607047C046802E00208B\n:10EFB000034B82B0D86801ABC01A02B07047C0469C\n:10EFC000802E0020014B18617047C046802E002023\n:10EFD00010B54E21024817F033F9F4F7EDF9C046A9\n:10EFE00088DC020007B5054A01ABD1681269CB1A6B\n:10EFF0009A4201D8FFF7ECFF07BDC046802E0020E3\n:10F00000F0B50D00002785B0110003901E00280008\n:10F01000104B0222009702F04BFEAB1C9B00180025\n:10F02000029312F071F90400039B013D03604560F7\n:10F030003368029D8360083D0437BD4202D1200041\n:10F0400005B0F0BD0021F05903F0EEF8E319986027\n:10F05000F2E7C046FFFF0000044B88600B60044BE2\n:10F0600008004B600023CB607047C046A8CC02006C\n:10F07000E1420200044B0B60037A0B714368080005\n:10F080008B600023CB60704754CB020010B50400A6\n:10F090000C2012F039F9034B446003600223037221\n:10F0A00010BDC04690CB020010B5043012F0D6FA65\n:10F0B000004810BD388D0200002803D0012808D078\n:10F0C000002005E007224B680448934300D1044820\n:10F0D00070474B68DB085B001843F9E770DE0200FD\n:10F0E00068DE02000B6870B506000D00181D496847\n:10F0F0001400F5F797FB002802D04368002B10D1CD\n:10F10000022E08D1094B022C06D16968084817F075\n:10F1100097F8F4F751F9AB68012C00D1436018005F\n:10F1200070BD022CFBD100224260F8E7388D02004E\n:10F13000A8DA020070B504000D000B7A164A9B0095\n:10F1400086B0995811F096FD1449200011F092FDF7\n:10F15000134B02AA02932B7A012613716B68019359\n:10F1600004930023059302A815F0C4F8051E05D1E9\n:10F170000C49200011F07EFD06B070BD002E03D1B9\n:10F180000949200011F076FD012229002000F8F73E\n:10F1900077FB0026E7E7C046CCCB02006F71030087\n:10F1A00054CB020072710300BDF70200F0B5136882\n:10F1B0001400012287B00F680D000092D9080223C5\n:10F1C000060002F075FD022E12D103236868034089\n:10F1D00018D101682A4AC968914213D12A6890421D\n:10F1E00006D0059305A9686815F065F8061E01D1DB\n:10F1F00000253EE0381D01223168F5F713FB7368E6\n:10F200004360EFE7002103F00FF80390039803F049\n:10F210006DF80028ECD0002103F006F8050003F09B\n:10F2200065F80290280003F061F80600280003F05A\n:10F230005DF8029B002B03D0002E01D0002802D0E5\n:10F24000104803F021FC381D01220299F5F7EAFA73\n:10F250004660DBE7A368EE009E193168002907D0FD\n:10F26000042905D0381D0122F5F7DCFA73684360E4\n:10F2700001356368AB42EDD8034807B0F0BDC04626\n:10F28000F9F4000049710300388D020030B5002503\n:10F2900085B001A90400019515F00DF8A84203D12D\n:10F2A00009490A4816F015FA636802A9083B636029\n:10F2B0000368029343680393042328C00220F5F7F0\n:10F2C000F7FD05B030BDC04626710300A8DA020084\n:10F2D000F7B50C0015001B280DD000231F2808D1FE\n:10F2E000081D00222900F5F79DFA2C4B002800D1BB\n:10F2F0002B4B1800FEBD03222B001340114225D1D9\n:10F30000284922688A4221D1002BF1D129689142F3\n:10F310001ED1009301936946200014F0CCFF01A98F\n:10F320000700280014F0C7FF0600002F31D0002886\n:10F33000DED031683868F8F721FB0028D8D0716832\n:10F340007868F8F71BFB0028E5D1D1E7002BCFD177\n:10F35000154B2A689A42CBD16A68636853400722EA\n:10F360009343C5D1019301A9200014F0A4FF061E08\n:10F3700001D10A4BBDE7281D00223168F5F752FA8A\n:10F380000028B5D041687068F8F7F8FA0028EAD18B\n:10F39000AEE7024B0028ABD1ABE7C04670DE0200FF\n:10F3A00068DE020014CC0200D8CB0200F7B50B686F\n:10F3B0001C4A04000D00934203D05A681A4911F008\n:10F3C0001AFD1A49200011F055FC00230127019372\n:10F3D00001A9280014F06FFF061E0CD1144920006B\n:10F3E00011F048FC2B680F4A934203D011492000CA\n:10F3F00011F040FCF7BD002F03D10F49200011F0A0\n:10F4000039FC012231682000F8F73AFA0B49200054\n:10F4100011F030FC012271682000F8F731FA002762\n:10F42000D6E7C046D8CB020045710300BBF7020007\n:10F430008E6F0300EC1E0300BDF702005A74030038\n:10F4400010B504000C2011F05FFF034B4460036013\n:10F450000023037210BDC04690CB020010B504001B\n:10F460000C2011F051FF034B446003600123037231\n:10F4700010BDC04690CB020010B5043000220C0035\n:10F48000F5F7D0F9002805D12100034816F0D8FE81\n:10F49000F3F792FF406810BDA8DA020010B5024BE6\n:10F4A00008C012F0C0F810BDD8CB0200F8B50E00AD\n:10F4B00007000021706802F0B7FE0E4C0500022F15\n:10F4C00000D9B4687068F8F7C5FB002809D114F0BA\n:10F4D0003BFF0600280002F009FF011E03D13000A7\n:10F4E000F8BD4010F3E7331D01221800F5F79AF933\n:10F4F0004460EFE7388D0200F0B5070089B00020C6\n:10F500001E000D00019214F01FFF0E4B0400076057\n:10F510009F4203D10423027913430371019B2B43C0\n:10F520000DD03368AA00B218019905A8039404937A\n:10F5300012F087F8681C05AA03A9FFF737FE200020\n:10F5400009B0F0BD14CC020010B50C00002A03D1A4\n:10F5500014F03DFF0A480EE0042A0DD104300022C9\n:10F56000F5F760F9002805D12100064816F068FE7D\n:10F57000F3F722FF406810BD14F01FFFEAE7C04612\n:10F58000388D0200A8DA0200F7B50600194D0C000C\n:10F59000280010F07FFD3100174810F001FD1748DA\n:10F5A00010F078FD164810F075FDFF239B00E6185B\n:10F5B00021787F2901D0A64206D1280010F06AFDEB\n:10F5C000104810F067FDF7BD6278A37850290CD879\n:10F5D0000D48475C0D48405C019300923B000200DF\n:10F5E0000B4810F0DDFC0434E2E70A4810F0D8FCC8\n:10F5F000F9E7C04649720300767203007E72030089\n:10F6000007720300257203008C7D03003B7D03001D\n:10F610009F720300C2720300F0B51D0087B00600A0\n:10F620001A4817000C0010F035FD2900184810F09A\n:10F63000B7FC184810F02EFD174810F02BFDAD0058\n:10F640006519AC4204D1114810F024FD07B0F0BD9B\n:10F650003878A2780490206823780003400E039045\n:10F66000E0789B060009029020883178C004400EA3\n:10F670000190E0789B0E0007000F009012090748E8\n:10F6800010F08EFC043401360137DAE749720300CA\n:10F6900096710300C3710300F57103002772030024\n:10F6A000F0B50F00496885B005001600002901D0AB\n:10F6B000002A05D13900280014F0EAFF05B0F0BD9A\n:10F6C0000F321309C918009314F053FF0F22A868D2\n:10F6D000B9687C68324000D11032009B1E19234B60\n:10F6E000F3185B00C018214B0290E3185B00CB18A5\n:10F6F000019010209C4621000023801A002921D16E\n:10F70000C3401A48029A84466400141B2380009B5D\n:10F710005B00E41A009B023463445A00200018F096\n:10F7200079FE002E04D07300023BE35A002B1BD05D\n:10F7300001216E603B78DB07DA0F2B788B43134394\n:10F740002B70BBE762461288013913431A00C2408E\n:10F750000393019B1A80019A039B023A01920222B1\n:10F7600052421B049444C9E7013EDAE7FFFFFF7FE2\n:10F77000F0B54B681500526889B006000C00934242\n:10F7800001D22C000D000121227863680A4201D1C8\n:10F790002A781140C918300014F0EBFEB3682278C3\n:10F7A0000193A36817000293636829789C46AB68AD\n:10F7B0004F400393012318001F408B430693634679\n:10F7C000904302006046591E019B04936B681B1A0C\n:10F7D00007934B1C18D163465900019B5918002F01\n:10F7E00002D001230B800231019814F045FE012163\n:10F7F000706022782B7853403278DB078A43DB0F26\n:10F800001343337009B0F0BD029B13481B881B18CB\n:10F810009B180593079B5B188B421AD8039B039A8E\n:10F820001B8802321B180392069A01399B18059A0D\n:10F830005A4092B21B0CD7190693049A059B178065\n:10F840001A0C049B3F0C02330493029B0233029375\n:10F85000BFE7014BE8E7C046FFFF0000F0B5060038\n:10F8600095B0069353680D00591C0492009314F050\n:10F8700080FE049B00215B68B0685A1C5200009314\n:10F8800018F0C8FD00237360049B28005B68591CB6\n:10F89000009314F06EFE0499280014F0F9FEAB6892\n:10F8A0006F680193069B9B680393069B5B680293BA\n:10F8B000B3680793029BBB422DD82ED3039A39001D\n:10F8C000019814F099FE002823D10123079A68605B\n:10F8D00013807360049B1A78069B1B785A4001239F\n:10F8E0001A4214D03278134333706B68002B0ED059\n:10F8F000012111A8494214F0EAFE11AA310030009A\n:10F9000015F0ECF8069A2900280015F0E7F815B074\n:10F91000F0BD002801DA0023DBE7824A029B9B1836\n:10F920005B009C460022039B634405931B88009266\n:10F930001AB2002A63DA0022019B7C001A537B1C56\n:10F94000102709936B60019BA01C00991B1808935A\n:10F95000791A019B0A9108998B4256D3059B009A0C\n:10F960001B8893400893029B012B0AD91022039B0A\n:10F9700000996344023B1B88521AD340089A1A43E9\n:10F980000892019B029A1C19099B9B1A654A736095\n:10F990009B18079A5B00D3180A93634602330E93B1\n:10F9A0006B680B930B9A029B934239D313005D4A09\n:10F9B000102194460024019A63445B00D318009AF6\n:10F9C000891A019A9A4200D89FE07368002B07D0E9\n:10F9D000544A07999A185200525A002A00D19EE0C0\n:10F9E0006B68002B00D175E74E4A01999A185200B6\n:10F9F000525A002A00D06DE7013B6B60F0E7009A95\n:10FA00005B0001329BB292B291E71988009F080017\n:10FA1000B84002431A800A9A0233D1408AB29AE768\n:10FA2000A31E20880D931B880004184308990AF030\n:10FA300099F90E9B0022E31A0C931900039B059081\n:10FA40009C4609928C4212D823889A4234D3D31A06\n:10FA50005A42190C9BB222805A1E9341CA18002A9E\n:10FA60002CD003990C9B8C4600210F0042E0099B8F\n:10FA7000009F180C63461B88BB4018436B460990D7\n:10FA80009F8C059B5F430B889F4203D2D81B0F902E\n:10FA900090420CD8D31AFF187B420B80BBB23A0CB1\n:10FAA0005F1EBB41D218022302319C44CAE70F9B60\n:10FAB0009A1A0A800022F6E79A1A22806A460A9B5E\n:10FAC000928A023B5A800A930B9B0D9C013B6B6010\n:10FAD00066E7380C09906046009F0088B840099F8F\n:10FAE000074318884118B8B241180220198084448D\n:10FAF000090C02339C42ECD823885918059B2180BD\n:10FB0000013B090C521A0593A9E71A88009F1000BF\n:10FB100038418A402043188094B2023B51E7013BB0\n:10FB2000736052E7FFFFFF7F436870B55A00002300\n:10FB300084680A4DA218944206D30278D20700D5F1\n:10FB40005B4201200B6070BD023AAB4203D81688BD\n:10FB50001B043343EFE70020F5E7C046FF7F0000BA\n:10FB6000F8B5050010200C001F00160011F0CCFBAA\n:10FB7000054B44608460A4190760C4606B60034B4C\n:10FB80002860AB60F8BDC0466151020077510200A9\n:10FB900080235B051869034B1B7843438020C00218\n:10FBA000C01A7047402E002080235B051869034B64\n:10FBB0001B7843438020C002C01A7047412E0020AA\n:10FBC00070B5084DC4012B680021181915F016FDF9\n:10FBD0002868054B00197F3000781B788342F0D2EB\n:10FBE00070BDC046E02A00203F2E002010B5C3792A\n:10FBF0000400002B08D0064A037981791068DB01E4\n:10FC0000C018013015F0FAFC0023237210BDC04665\n:10FC1000E02A002010B5124B01001A684379DB017D\n:10FC2000D31818007F300478FF2C08D10879C00160\n:10FC300012185278FF2A0FD0887990420CD08A7916\n:10FC40009B180132D2B258787E2A01D08A7110BD39\n:10FC500000234C718B71FAE701204042F7E7C04660\n:10FC6000E02A002070B5F8248025A40223786D05D1\n:10FC70004D2B4CD12B698020E41A2B69C002E41A69\n:10FC80002969001B0AF06EF82B4B2C4918702B6960\n:10FC9000E21852185D421540294B2A4A9B1A2A4AFB\n:10FCA0009B188022520511699D4234D38020C002E6\n:10FCB000401B0AF057F8254B641B1870E411244BC5\n:10FCC000E4B21C70A12001230025224A22491360BE\n:10FCD000C0004D604B68002BFCD01358DBB2A34230\n:10FCE000F7D21E4901330B7001235360FFF750FF19\n:10FCF000037805001A4CFD2B0FD180235B05186992\n:10FD0000184BC009C018C0012818206070BD80249D\n:10FD10002B69E402AFE76D18C5E7FFF745FF0378ED\n:10FD2000803DFD2B01D12560F0E7FFF73DFFFD2170\n:10FD300015F064FCF7E7C046412E0020FF87FFFF67\n:10FD400014010020000000205C810300402E0020F0\n:10FD50003F2E002000D00040FCD00040422E00206A\n:10FD6000E02A0020FFFFFF01F7B5254B254F1A7849\n:10FD7000254B14001B7839680133E001405CFF28F3\n:10FD800029D00134E4B29C4200D101249442F4D140\n:10FD9000802300265B051B69DB090193E3010093C7\n:10FDA0003B68E2019D182B7828005A425341F6180F\n:10FDB00015F03AFC002810D0002304E0DA01AA5C18\n:10FDC000002A0AD10133019A9342F7D13868009B87\n:10FDD000C01815F01FFC2000FEBD0B4B01341B7832\n:10FDE000E4B201339C4200D10124054B1B78A342AD\n:10FDF000D4D1072E02D915F0CAF9B6E7FF24EAE7F5\n:10FE0000422E0020E02A00203F2E0020F7B50700F8\n:10FE10000D0001240E4B1B7801930E4B1E68019BB5\n:10FE2000A34202D2FF242000FEBDE10171180B782D\n:10FE3000FE2B09D18B78AB4206D103312A00380062\n:10FE400018F0BDFA0028EED00134E4B2E7E7C0466E\n:10FE50003F2E0020E02A002010B5054A03791068E3\n:10FE6000DB01C018817800220330F9F733F810BDA8\n:10FE7000E02A0020F0B585B002900D001600039333\n:10FE8000782949D8FFF7C2FF0400002E3CD0FF2894\n:10FE900001D0FFF795FEFFF767FF0400FF2803D1AD\n:10FEA0001E491F4815F015FC1E4FC0013B6801900C\n:10FEB000FE21181815F0A2FB3B68019AE9B29818C8\n:10FEC000023015F09BFB3868019B2A00C0180330F4\n:10FED000029901F0C3FE0C2011F016FA039A0300F8\n:10FEE000002A17D0104A1A600E4A1C7112685C7101\n:10FEF000E4011419A278DE7102329A7101221A7299\n:10FF00006A46127B5A7202E03300FF28E3D11800E0\n:10FF100005B0F0BD054AE6E70023F8E7E372030009\n:10FF200010DC0200E02A0020E09202008C93020024\n:10FF300007B501A9F9F726FC0199FFF767FFFF282C\n:10FF400003D10449044815F0C4FBFFF739FE034808\n:10FF50000EBDC046340B030010DC0200388D0200D9\n:10FF6000F7B50192027A04000091002A02D12448D8\n:10FF700002F08AFDC579002D06D1224A1768027960\n:10FF8000D201D25D002A05D1092201251A606D42F5\n:10FF90002800FEBD61797E22C901791808007F30F2\n:10FFA000A3790078D21AFF2809D12079C001381826\n:10FFB0004078FF2819D0C01A824200D90200019867\n:10FFC000461B964200D91600002EE1D0009A01335C\n:10FFD0005019C918320018F001FAA3799B19DBB245\n:10FFE0007E2B04D0A371AD19D4E70022E7E70023EC\n:10FFF000A3716379DB01FB187F331B786371F2E730\n:020000040001F9\n:10000000F9720300E02A0020F0B585B00393037A6B\n:10001000040002910192002B02D1304802F034FD1D\n:10002000C379002B08D02E4A03791268DB019B5C50\n:10003000019A0092002B25D10923039A13600A3BF1\n:100040000193019805B0F0BD7E22A379D71A009ADA\n:10005000974200D917006079214E0133C001C018C2\n:1000600033683A001818029901F0F8FDA379DB19FA\n:10007000DBB27E2B0AD0A371029BDB190293009B9B\n:10008000DB1B0093009B002BDED1DAE70023A3717A\n:10009000FFF76AFE0500FF2809D12079FFF790FDE0\n:1000A000002323721C23039A13601D3BC8E7607969\n:1000B0003368C001181829007F3015F09FFA3368A3\n:1000C000ED015819617915F099FA62793368D20116\n:1000D0009B187F331B786371CEE7C046F97203002B\n:1000E000E02A0020002170B5080011F0FBF901247E\n:1000F00005000C4B1B78A34201D2280070BD0A4AB0\n:10010000E3011068C0180378FE2B08D18178002223\n:100110000330F8F7DFFE01002800F3F7E7F90134B8\n:10012000E4B2E6E73F2E0020E02A002073B501A9E3\n:10013000F9F728FB0199FFF769FEFF2803D10E4963\n:100140000E4815F0C6FA00257E260D4B1C68C3012B\n:10015000E31859789B780233DBB2C201A2187F32D0\n:100160001078FF2804D1C81A401912F00EFC76BD91\n:10017000F31AED180023F0E7340B030010DC020043\n:10018000E02A00201FB5034A034B13F0FCFF05B023\n:1001900000BDC04615FC0000EDFB0000F7B503787C\n:1001A0000400002B1FD0402B20D1012301930023FA\n:1001B00004221E001D00190094462278002A3ED118\n:1001C0000132002910DC002D0EDC002E0CDC033B7C\n:1001D000934209D9013C23785C2B05D00199002971\n:1001E00001D00A2B00D100221000FEBD3F4915F0BE\n:1001F00037F80028D9D13E49200015F031F8002801\n:10020000D3D13C49200015F02BF80028CDD13A4934\n:10021000200015F025F80028C7D13849200015F036\n:100220001FF80028C1D13649200015F019F8002820\n:10023000BBD13449200015F013F80190B7E7677877\n:10024000272A11D1002B4DD0032B09D1272F05D1FF\n:10025000A278272A04D10234243AD31A0134ACE715\n:10026000012BFBD80122F8E7222A11D11A0060469F\n:10027000824309D1222F05D1A278222A02D1023449\n:100280006246EAE7002B01D0022BE7D10222E4E725\n:100290005C2A0AD1272F03D0222F01D05C2F04D152\n:1002A0001A00571EBA41A418D8E7002BD6D15B2AF2\n:1002B00012D006D8282A0DD0293A57425741C91BD7\n:1002C000CCE77B2A0AD07D2A0AD05D3A57425741B3\n:1002D000ED1BC3E70131C1E70135BFE70136BDE7DB\n:1002E000013EBBE7272FBDD1B2E7C04672700300C5\n:1002F000A3700300897003009F700300D73A0300C6\n:100300004B8103007A730300F0B58BB00793431859\n:100310000390049201930093009B5C1E039BA342F5\n:1003200001D9009310E02078FDF730FC002801D0BF\n:100330000094F1E72078FDF735FC0028F8D1237808\n:100340005F2BF5D02E2BF3D07D4B1D68009C019BBD\n:100350009C4202D223782E2B21D1009BE71A019BCD\n:100360009C4241D30024260002940194AB68A3422E\n:1003700056D8019B002B00D084E0009B039A934247\n:100380002FD1704C3A002100180018F018F80028FE\n:1003900027D1079BE41907301C60C01B22E0013401\n:1003A000D5E70136AB68B3421BD9F3000293EB6883\n:1003B000F20098580028F4D00428F2D009A9F9F7DF\n:1003C000E1F9099B0100BB42EBD13A00009818F01B\n:1003D0007CF80028E5D1EB68029A9B185868002841\n:1003E00004D100200BB0F0BD0026DBE70323184248\n:1003F0000CD10368544A934205D115F021FE050043\n:10040000631C0093A2E7514A934201D0F7F720FA08\n:10041000856B002DE5D04E4B2A689A42F0D0E0E77C\n:10042000EA68E300985800281CD004281AD009A9CB\n:10043000F9F7A8F9099B06900593BB4212D3010076\n:100440003A00009818F041F800280BD1029B002BCD\n:1004500012D03B009E4202D3059A9A4204D2019BDD\n:1004600001330193013481E7029AD15C069AD25C90\n:10047000914205D10133EDE7069B059E0293EEE71D\n:100480001E00ECE7019B012B01D0BE4254D9029B18\n:10049000079ADB191360F01BA4E7029BEA68DB00F4\n:1004A000985800283AD0042838D009A9F9F76AF9F1\n:1004B000099B03900593BB4230D301003A0000989A\n:1004C00018F003F80190002828D133000F220F33D1\n:1004D000DC171440E41824112401A41B012C00DCB7\n:1004E0001034059A33199B18402B0DD9039A1949DA\n:1004F000049810F080FC099E10E01749049810F051\n:10050000B9FB019B01330193019B9C42F5DC0399EC\n:10051000049810F0AFFB099BF6183619029B0133C3\n:100520000293AB68029A9342B7D80C49049810F032\n:10053000A1FB0120404255E7002340260293F0E74B\n:10054000802E00201673030094D50200ACD0020068\n:10055000D8CB02001E730300A81D0300CA250300A8\n:10056000002803D0012807D0002004E08B6804484D\n:10057000002B00D1034870478B685B001843FAE7F3\n:1005800070DE020068DE0200034B48600B6000234F\n:1005900008008B60CB607047F4CC02007FB504008C\n:1005A0000122080001A9F7F7F5FB0022217940207C\n:1005B000F7F7DEFD01000500029809F0D3FB636840\n:1005C00006001A0A824218D2A368C1186943E0687B\n:1005D00010F0B8FE6368E060DBB22A00A0686360D8\n:1005E0006843E36872431818019917F0F7FEA3688F\n:1005F00004489E19A66004B070BD121A1202DBB244\n:100600001343EAE7388D0200F7B5FF274568040079\n:100610000191BD431DD101792A004020F7F7A8FDC3\n:10062000636806003B408027A1683F011F430831F3\n:1006300041436760E06810F085FE6368E0601A0A75\n:10064000A368013A013372435E432900801917F011\n:10065000E1FE2079019BA268E168F7F729FFA36812\n:1006600003480133A3606368013BFF3B6360FEBD49\n:10067000388D0200F8B5002207000D00010040206F\n:10068000F7F776FD0600102010F03EFE084B040040\n:10069000012F00D0074B2800277123606368A560F5\n:1006A000DBB27043636010F02FFEE0602000F8BD05\n:1006B0008CCD020050CD020070B506008AB00C004F\n:1006C000150012285CD003D8052826D0002454E059\n:1006D0001B2800D16CE01F28F8D1012207A92800AF\n:1006E00011F02FFD032300284FD01C4213D13B4BA8\n:1006F00022689A420FD1012204A9200014F0CFFDF4\n:100700000123079A00930599089B049811F03AFF7A\n:10071000334C002831D1334C2FE0012204A92000B2\n:1007200014F0BDFD2800012207A9F7F733FB069B53\n:10073000002203936B464020197BF7F719FD010057\n:100740000600089809F00EFB069BA16803936B4610\n:1007500041180500187BFFF78DFF059B04001A0068\n:100760000499C068039317F039FE2A000598E368DE\n:1007700072431818079917F031FE20000AB070BDB7\n:1007800011002000FFF70AFFF7E7EA070DD41D422A\n:1007900003D1154B2A689A4207D003232B40022B22\n:1007A000B9D1124B1D40062DB5D0114802F05EFBA9\n:1007B000012204A9200014F072FD012207A92800DB\n:1007C00011F0BFFC0028A6D0089B059A009304995D\n:1007D000079B300010F0C1FB9AE7C0468CCD0200A9\n:1007E00070DE020068DE02005C970200070080FFF6\n:1007F000FC0B0300F0B5050087B00E00012808D0FF\n:100800008B0726D10B68264A934202D0254A934291\n:100810001FD1012203A9300011F093FC002818D049\n:10082000002229004020F7F7A3FC010007000498EC\n:1008300009F098FA060001002800FFF71BFF3200BC\n:1008400004007A430399C06817F0C8FD200007B080\n:10085000F0BD3000F7F7FEF9071E00D04710390051\n:100860002800FFF707FF00210400300001F0DCFC46\n:1008700000260090009801F039FD031EE6D0002FFD\n:1008800004D119002000FFF7BFFEF3E7721C0192AC\n:10089000E16832002800F7F70BFE019EEAE7C04648\n:1008A0009CA502008CCD020070B50E7904000D00ED\n:1008B000012E0DD1194910F0DDF93300AA68E9685D\n:1008C0002000F8F76DFA1649200010F0D3F970BD3A\n:1008D0003200144910F08FFAAB68002BF3D01249A4\n:1008E000200010F0C7F90026AB68B34204D80F49C6\n:1008F000200010F0BFF9E6E7002E03D00C492000DD\n:1009000010F0B8F93200E9682879F7F799FC01226C\n:1009100001002000F6F7B4FF0136E5E7227303007B\n:10092000EC1E03002E730300397303004D6E0300A9\n:10093000BDF7020070B5050086B0161E44D0032432\n:1009400080680C402BD1214B0A689A4227D103AA18\n:10095000F0F7CAFC002802D11D4802F087FA042EE5\n:100960001AD1220029794020F7F702FC049B0600E7\n:100970000093039B28790193019A009B991AFFF732\n:1009800079FE0399049A0400521A71437243EE6887\n:10099000C068711817F022FD200006B070BD0A0073\n:1009A000002301002868F7F713F902002879042EC4\n:1009B00004D1E968F7F744FC0400EDE73300E96887\n:1009C000F7F776FD034CE7E71400E5E7D0D7020020\n:1009D000E70E0300388D020037B50C00110000222D\n:1009E0001D0000920123200001F062F9002C05D1C6\n:1009F00021000120FFF73EFE040016E02968CB0726\n:100A000005D48B0713D10C4B0A689A420FD108000A\n:100A1000F7F706F8010005000120FFF72BFE2A007A\n:100A200004000021C06817F0F5FC20003EBD012045\n:100A3000FFF7E0FEE0E7C0465C970200044B054A82\n:100A400098331B6804481A60044A9A807047C0466D\n:100A5000802E002078000400388D0200040400007D\n:100A6000084A10B5130098331B689979002908D0FB\n:100A7000916C0029F9D0002199711B69587901F016\n:100A800047F810BD802E002013B5084C9834236819\n:100A9000188811F07AFF23680090588811F075FFCC\n:100AA000694601900220F4F703FA16BD802E00205B\n:100AB00010B50D4C002803D00868F2F73DFA040089\n:100AC0000A492000FAF7B0FD6079002101F020F812\n:100AD0002000FAF793FD0022054B064898331B6867\n:100AE0001A619A7110BDC0461096020010B802003B\n:100AF000802E0020388D02001FB50C4B02AC0093F5\n:100B00000194022301F004F9029A002A03D0084B51\n:100B100098331B685A806268002A03D0044B9833CC\n:100B20001B681A80034804B010BDC04608CF0200FD\n:100B3000802E0020388D0200F0B5254B89B004AC22\n:100B400000930194042301F0E3F8224F224A3B0072\n:100B500098331B6804989A80204B0340062B06D0DC\n:100B6000830730D102681E4B92699A422BD1012330\n:100B700003940293002598373B681869FAF73EFD05\n:100B80003B6860681D61F2F7D7F916490600FAF76D\n:100B90004BFD3B68144A9D71126802999A60227B52\n:100BA0009981DA71DD81039A012900D112685A61B5\n:100BB00001221E619A71237A002B01D0FFF750FFAA\n:100BC0000A4809B0F0BD03AA02A9F6F7CBFFD1E7A6\n:100BD000C8CE0200802E002004040000070080FF21\n:100BE000219D000010B80200782E0020388D0200F0\n:100BF000F0B5274B89B004AD01950093042301F0B3\n:100C000087F86B68A868049E0393F2F795F9214F63\n:100C1000040098373B681869FAF7F0FC00223B683B\n:100C20001D491A612000FAF7FFFC607980212D7BB5\n:100C300000F06EFF002E1CD1607900F0E9FF039BED\n:100C4000002B13DB0022134B144998331B680398C5\n:100C50009A710968DA714118DA605A610232996052\n:100C60001C619A71002D01D0FFF7FAFE0C4809B003\n:100C7000F0BD31000B4809F075F800F025FF0028A1\n:100C8000DDD0607900F0C4FF074801F0FDFEC046EA\n:100C9000E8CE0200802E002010B80200782E00203E\n:100CA000388D020040420F003D73030010B518203C\n:100CB00010F02AFB064B98331860064B0360064B76\n:100CC00083800023837103614361044810BDC046E3\n:100CD000802E00207800040004040000388D0200FB\n:100CE000F0B56D4C87B0260098363368002B40D0A5\n:100CF0009A79002A3DD0694D99682A68914238D87E\n:100D00009A79022A0BD11B690021587900F000FF63\n:100D10002B6832680A3393600123937129E09A7932\n:100D2000012A26D19A89D989914204D3DD79002DEF\n:100D300019D00021D9815869012A02D0DA8992009C\n:100D40001058574A904216D11B690021587998349F\n:100D500000F0DEFE24685348218809F08DF8012355\n:100D6000A060A37105E09D711869FAF747FC33682C\n:100D70001D6107B0F0BD05A9F8F704FD983423689C\n:100D800001901B69802158790293059E00F0C0FEF6\n:100D9000019B24681F781F23218842481F4009F0C7\n:100DA0006BF8618809F068F87D1EEDB20390012EA2\n:100DB0005AD9019B5B78232B4DD0622B50D1002D4B\n:100DC0004BD0023FFDB26A1E53425A415242022E9C\n:100DD0004ED0012102230198C05C3A2803D00F278E\n:100DE000384020710133207984469E420ED9019803\n:100DF000C05C3A280AD1581C864207D9019F0233A9\n:100E0000385C0F2738409E4235D86071092D3DD897\n:100E10006346043B9A1852B26F00234B002900D15D\n:100E2000224BD85B002A2EDB104100F04DFE1A4BFE\n:100E3000039998331A68537959430B0017490A3BB1\n:100E400009680A2B00DA0A235B189360D3890133FF\n:100E5000D381022361E70022B9E72A000625B6E71D\n:100E6000002101230A00B6E7002101230A00BAE7A6\n:100E700033000121B7E70A267043019E6071F65CDA\n:100E80003E408019C1E752429040CEE7029B0021CC\n:100E9000587900F03DFECAE7802E0020782E002011\n:100EA000388D020060EA0000BCF00200AEF00200E3\n:100EB000F8B5124A0E00124B124990421AD0C4687B\n:100EC0008C4203D0012430602000F8BD406B002824\n:100ED00012D004689C42F0D1050000244768083510\n:100EE000BF00EF19BD42EFD2310001CDFFF7E0FFA7\n:100EF0002418F7E70024E7E70400E5E794D70200A9\n:100F0000D49B0200F90F0100F7B505000C00AB6897\n:100F1000002B0AD0344AE168914206D0E358002BF6\n:100F200003D00422EB681A60F7BDA06B002820D024\n:100F30006B680430D900062300221943F3F772FCD2\n:100F4000002816D0297C4268EB682868002904D064\n:100F50000100002001F090F8E6E7002807D02249C0\n:100F6000E5688D4203D021498C4200D00069210000\n:100F7000F0E72B68002B16D1646B002CD4D01C4BEF\n:100F800022681A4F9A420BD126006368194A083624\n:100F90009B189B00F3180193019B34689E4216D363\n:100FA000BC42B4D1C0E72A7C002AE5D10E4AE168F0\n:100FB0009142E1D00D4A9442DED01869EA6869682E\n:100FC00001F0B4F8EB681B68002BD5D0ACE7BC424D\n:100FD00001D10436E0E721002800FFF795FFEB6818\n:100FE0001B68002BF5D09FE7F90F010094D7020092\n:100FF000D49B0200FFFFFF3FF0B58FB00E0005A9A4\n:10100000019202930700FFF753FF041DA400200084\n:1010100010F07AF90500002180C010F004FB2200D6\n:101020002800103A1030002117F0F4F9012E05D1F4\n:10103000029B1B680393042B00D189E007AC0822B4\n:101040000021200017F0E6F9F222002309A8FF3260\n:101050004260E63AFF3A39008260C4600374099343\n:10106000FFF752FF079804282FD10598029BC46808\n:10107000019A3100A04728612800F6F7E9FBB84241\n:1010800066D1EA220023FF32390009A808930793AA\n:101090000B9309950A92FFF737FF079B002B57D058\n:1010A0000198304336D107AA010014F0D6FA0400A3\n:1010B000294B9C424CD0200011F02CF8274902000B\n:1010C000274803F05FF9F2F777F90028D4D0019AA6\n:1010D000324306D106AB0121069700F0AFFF0500B1\n:1010E000CAE7019B5D00AD190135AD00280010F085\n:1010F0000BF92A1F0390029980C017F06FF9711C39\n:10110000039B019A206800F099FF0500039810F0F6\n:101110002AF9B1E7019B5C00A4190234A400200065\n:1011200010F0F2F822000700079B02990360039376\n:10113000089B083A4360083017F050F93A000199CB\n:10114000300014F08AFA0400380010F00CF9AFE710\n:1011500028000FB0F0BDC046388D02009C7303001C\n:1011600078DD0200F0B5146889B01700002C0ED1AC\n:10117000436803AD82686960596B0392AC60EF60AD\n:101180002C74002905D111492800FFF7BDFE09B0D4\n:10119000F0BD0F4B0A689A4210D14B6808310E001F\n:1011A0000193019B9C42EED0A300F1582800FFF769\n:1011B000ABFE3B68002BEAD10134F2E72800FFF7D1\n:1011C000A3FE3B68002BE2D1DDE7C04694D70200C6\n:1011D000D49B020010B54A6801490FF00CFE10BD07\n:1011E00096740300F0B58BB005000E0014000021CA\n:1011F0000822684617F00EF90021102206A817F001\n:1012000009F9202307936B46059508932968E02385\n:10121000002C02D0042C10D1E623FF3305A806933E\n:10122000FFF772FE0221009F042F0ED12200310031\n:101230002869F6F77DFD0BB0F0BDFC2305A85B0027\n:101240000693FFF761FE0321EDE7381EF3D002ABF2\n:10125000002202950396049400F0F0FE042CEAD0DC\n:101260000048E8E7388D0200F0B5204B8BB08200D3\n:10127000D35803AF0C000822002106003800019368\n:1012800017F0C8F8019B05AD6B601423AB60002319\n:10129000280021680594EF602B74FFF735FE039852\n:1012A000042805D12169300000F056FE0BB0F0BDD6\n:1012B00000280AD0210014F0C8F9022EF6D1F6F762\n:1012C000DBFB440001202043F0E7022E01D0002088\n:1012D000ECE7E2232168FF3328006B60FFF714FE80\n:1012E0003B68002BF3D16400ECE7C046E8D0020075\n:1012F000F0B55642564103238BB00C0001900021FB\n:1013000017007642082203A81E4017F083F808232E\n:10131000079303AB0893002305ADF736FF3621682A\n:1013200028002B7405940696FFF7EEFD039B002B17\n:1013300009D1002F07D1F733FF33216828006B60F4\n:10134000AF60FFF7E1FD039804281AD12069F6F792\n:101350007FFA154BC2689A4211D1002F07D023683B\n:10136000586811F0A0FB010001980FF083FC802267\n:101370003A4321690198F6F783FA0BB0F0BD3A00C1\n:10138000F7E7002805D0210014F05FF900220100E2\n:10139000F0E7200010F0BEFE230002000349019890\n:1013A0000FF029FDE9E7C046454201004B730300F9\n:1013B00070B504000D000B490FF05CFC6968002259\n:1013C0002000F6F75DFA084920000FF053FCA968E9\n:1013D00000222000F6F754FA044920000FF04AFCDE\n:1013E00070BDC04654740300BDF70200A174030031\n:1013F00010B5C468002C06D142680449044802F0C4\n:10140000C1FFF1F7D9FFA04710BDC0465D740300CE\n:1014100078DD0200F0B5154B89B016008200D55872\n:101420000C000C2200210700684616F0F3FF182379\n:1014300003A84560836000256B462168C360039460\n:101440000574FFF761FD009B042B06D13200216972\n:10145000380001F021FB09B0F0BD181EFBD06A4630\n:1014600029000120029614F0F8F8F4E760CF02009A\n:10147000F0B51700EE228DB004000393002307A8F7\n:1014800052004260CD3A05ADFF3A0E0021688260FD\n:10149000C560037405936B600794FFF735FD0598ED\n:1014A000002809D1200010F035FE0C4902000C483C\n:1014B00002F068FFF1F780FF039B042806D13A0091\n:1014C0003100206900F0BAFD0DB0F0BD009332008C\n:1014D0003B00696815F023F9F6E7C0468073030006\n:1014E00078DD0200F0B50D0085B001A907001600F7\n:1014F000280002AA10F0B0F900230199029899423D\n:101500002CD13C200FF012FF2A4B019A03602A4B8A\n:1015100004008360294B4760C360294B0361294B5A\n:101520004361294B8361294BC361294B0362294BDA\n:101530004362294BC362002A06D0029B1968096BDB\n:101540000163012A18D94563A66303A92000FFF7A8\n:10155000AFFC012813D9214801F05AFC9A008258A7\n:10156000D468002C06D152681D491E4802F00AFFBB\n:10157000F1F722FF0133C2E71B684363E4E7A36B83\n:101580000022181D1849F3F74DF9051E0ED003224D\n:1015900043681A400AD11968144B4968994205D129\n:1015A000031D0121124813F0FCFE6860200005B005\n:1015B000F0BDC046ACD00200F1120100F90F0100ED\n:1015C0007114010069120100151401001553020085\n:1015D000E5110100955402004B54020026740300EB\n:1015E000FD73030078DD02008E0F0000450200004D\n:1015F00034D0020037B50D001C0000231100009309\n:1016000001220333280000F053FB012D04D0032DE9\n:1016100006D0074801F0FCFB2068F6F719F93EBD3B\n:101620002068F7F779FCA2686168FFF75BFFF6E7CF\n:101630007A7403001FB5064B0A0001934B680293AE\n:101640008B68010001A8039300F0A2FD05B000BD66\n:1016500070D00200F8B50E0003271349134AB042B8\n:101660001CD003003B401BD104688C421AD1406B54\n:10167000002814D003689342F1D1050044680C4B54\n:101680000835E418A4002C192868A542E5D23100D9\n:10169000FFF7E0FF002802D10435F5E70120F8BD8F\n:1016A0000020FCE71800FAE7ACD00200D49B02004F\n:1016B000FFFFFF3FF0B585B00500019108008B07E3\n:1016C00017D10B68134A93420BD10123029301AB4C\n:1016D00003930024029E039FA6420DD10E4805B03D\n:1016E000F0BD0E4A934204D103AA02A910F0B4F847\n:1016F000EFE70B4801F08CFBA300F958094B994226\n:1017000006D02800FFF7A6FF002801D10134E3E747\n:101710000548E4E7ACD0020068DE0200D49B02007A\n:10172000C473030094D7020070DE020010B5830773\n:1017300003D1054B02689A4202D0044801F068FBCD\n:10174000FFF7B8FF10BDC046ACD002005D730300C8\n:10175000F0B505008BB008680C00F7F7FDFF0490AA\n:1017600004A813F0F3FE00260127049B03900693C0\n:10177000069B197800291AD13000F3F799FB012252\n:10178000070007A96068F6F705FB079B089A059311\n:101790009B180193022D1FD9A068F6F741F9002884\n:1017A00017DA089BC01814D5284801F06DF9080015\n:1017B000FCF7F8F9002806D006A813F0D9FE069B1E\n:1017C0001B78732B00D13800069B36180133069323\n:1017D000CEE7059B181805900025B54202D33800C6\n:1017E0000BB0F0BD049B01241878FCF7DBF900284E\n:1017F00003D004A813F0BCFE04000598019A031955\n:101800009A42D1D3049B1B78732B10D02D19AB00B7\n:101810000293049B013C14D3197805AA0398F6F7A8\n:1018200071FD029AA300D31AFB185860F1E721005A\n:10183000F7F768FB059B1C19AB1C9B000594013551\n:10184000D851049B01330493C7E7C046A374030037\n:10185000F0B589B0039101921E00F7F77DFF049067\n:1018600004A813F073FE00250290B54201D309B01D\n:10187000F0BD049B18780028F9D0FCF793F90124F7\n:10188000002803D004A813F073FE0400039B019A00\n:101890001B199A4202D21B4801F0F6F8049B1B78F0\n:1018A000732B10D02D190E9BAF00DF19049B002C59\n:1018B00024D0A20052421978BA5803AB0298F6F726\n:1018C00081FD013CF2E70E9B6F1CAD00E858012240\n:1018D00005A9F6F75FFA069DA54200D925002A0062\n:1018E0000599039816F07AFD039B621B58193D0079\n:1018F000002116F08FFD039B1C190394049B0133F8\n:101900000493B2E7A3740300F0B50E0089B003900E\n:1019100001CE0F0013F042FE4410210004A80FF086\n:10192000F8FF069D22000021280016F073FD039B9E\n:101930000096013B2A1929003868FFF789FF04A99E\n:101940000248F7F791FA09B0F0BDC0469CA5020025\n:1019500030B50C0089B005000222606805A9F6F7D1\n:1019600019FAA068F6F75CF8002806DA069B0393DC\n:10197000C01802D5084801F087F80599069AEB1EB1\n:101980008A18091820000C3000902068FFF760FFCB\n:10199000024809B030BDC046A3740300388D020070\n:1019A000F7B50020214A224E12783368111D4900F4\n:1019B000CC5A5F1859880190A020C0058446640560\n:1019C000640D4C431B49A412096878780727050069\n:1019D000BD43F82D1DD00125C00885402800A12554\n:1019E0006746ED0001327851D2B2101D4000C55A51\n:1019F0001F186D0558886D0D68438012001BE4D0D8\n:101A00000A4C2270019A002A02D00A4A33601160FF\n:101A1000FEBD6046084A5C688450002903D001225C\n:101A20000B00002101920A000C00DEE7432E00208B\n:101A3000E42A0020E82A00200C05000010B572B648\n:101A400000220F4B18681A6062B6904210D10D4BFD\n:101A50000D4A1B680D48934200D010001A7802709E\n:101A60005A8842805A684260002219788A4200D31C\n:101A700010BD510044185918098901322181F4E739\n:101A8000E82A0020E42A0020EC2A00201C2B002059\n:101A9000044B054A1A600023044A1360044A137079\n:101AA0007047C046E42A002078D10200E82A0020CE\n:101AB000432E002010B5782202490220EEF76EFC7A\n:101AC00010BDC046A1190100421E084BFF3A10B5D7\n:101AD00004009A4207D8FFF7B1FF054B2411448058\n:101AE0001860002010BD01204042FBE740410F007C\n:101AF000E82A0020044B1B68002B01D1034B1B6814\n:101B0000588800017047C046E82A0020E42A0020D7\n:101B1000F7B53D4A04000D000B00914200D91300B7\n:101B20008022D200D31A0193FFF788FF0122A2403E\n:101B300046680092164207D12300A0210327C13333\n:101B4000FF339B00C9055F50002703789F4206DBE7\n:101B5000002D01D0132B0BD92C4B1860F7BD391D6C\n:101B6000490042185278D208A24243D00137EDE72B\n:101B7000009A191D32434260019A490055050A5ADC\n:101B80006D0DD20AD2022A430A525205E400520FC6\n:101B90004118144301334C700370851C012225E069\n:101BA000009A013BDBB2964303704660BB42F4DD12\n:101BB00004335B001B5A0B52EFE72F00131D5B0031\n:101BC000195A2E894905490D531E1C1D6400245ABB\n:101BD0006405640D8C4204D9FC88023F7C81013B82\n:101BE000F3D205335B001E520132023503789A426C\n:101BF000E3DBB1E7002DD3D0019B5A050B5A520D00\n:101C0000DB0ADB021343D6E7FF030000E82A0020CB\n:101C100070B500210400FFF77BFF00210D4B186811\n:101C20000578A94200DB70BD0B1D5B00C3185A7814\n:101C3000161CD208944201D00131F2E70822524228\n:101C400032435A700123A021A340034AC9058B5097\n:101C5000E9E7C046E42A00200C050000F8B50E00B4\n:101C600005001400EEF7E8FA330003272B433B424C\n:101C70000BD1BC4209D9A2083100280006F098FF18\n:101C80002300BB43ED18F6183C40002C04D0220082\n:101C90003100280015F0CCFF80220449D2008B5877\n:101CA000002BFCD0EEF7B8FAF8BDC04600E00140CA\n:101CB00010B51C0002AB1B78002904D0002B02D108\n:101CC0000E4801F0A5F8A24207D1824214D00300C9\n:101CD0000B490C4802F056FB06E0824206D9121A64\n:101CE0000949084802F04EFBF1F766FB844203D233\n:101CF000030022000549ECE710BDC046B4740300A0\n:101D00009CF6020078DD0200DD7403000F7503000D\n:101D1000F0B50024170087B00C9D03900491059343\n:101D200002940194059B9C4206D1019B039A934225\n:101D300040D2254801F06CF8039B9C4213D26B887B\n:101D40009B05F6D4019B049A01330193A300D0585C\n:101D5000FF226B88A6001340012B24D1F5F79EFFCC\n:101D60000D9B985517E0062329880022C9001943C6\n:101D70003800F2F757FD002810D16B88DB0506D537\n:101D80002A881249124802F0FDFAF1F715FB0D9A64\n:101D90006968A300D15001340835C3E7029B40684D\n:101DA00001330293D4E7022B01D1F5F739FE0D9BE5\n:101DB0009851F0E73B68029ADB08934201D9054845\n:101DC000B8E707B0F0BDC046557503003E75030087\n:101DD00078DD02007675030070B5F8F7AFFD0F4CA3\n:101DE0000F4B0025A3620F4BE5626363230025635D\n:101DF000A83303210C481D60A564FDF74FFB0B4E73\n:101E000001213000FDF74AFB3000094A094912F070\n:101E1000D4FA26606660E56570BDC046802E00205D\n:101E2000E4DA0200CC9B0200B82E0020CC2E002069\n:101E3000760F0000860F000070B50624134EC30015\n:101E40001C437368002205002100181DF2F7EAFC0C\n:101E5000021E18D1F06D002807D004302100F2F7DF\n:101E6000E1FC002801D0406870BD00222100084834\n:101E7000F2F7D8FC021E06D12A000649064802F0F5\n:101E800081FAF1F799FA5068EEE7C046802E0020FB\n:101E9000C8B402007976030098DB02000A4B10B543\n:101EA000040018685B6898420AD00621E3001943D1\n:101EB00004300022F2F7B6FC002801D0406810BDC3\n:101EC0002000FFF7B9FFFAE7802E0020074B10B57E\n:101ED000D86D002801D1064810BD04300022054904\n:101EE000F2F7A0FC0028F6D04068F5E7802E00202D\n:101EF00090B30200DE0E00000A00C100062010B5FB\n:101F0000024B0143186812F058FA10BD802E0020D1\n:101F1000062110B5034BC0000143186812F057FAB0\n:101F200010BDC046802E00200A00C100062010B55A\n:101F3000024B0143586812F040FA10BD802E002079\n:101F4000062110B5034BC0000143586812F03FFA58\n:101F500010BDC046802E002037B505000C000628B5\n:101F600006D10800F5F79AFE00280DD02C483EBD9A\n:101F7000CB071BD54B10042816D807F0DFFE03153E\n:101F80004E4E0700002BF1D02648F0E7C022120683\n:101F9000934204D18020C00510F0F7FCE7E75B42D4\n:101FA0005B0001201843E2E7DB43F9E702281AD17E\n:101FB0001D4B0B40062B08D08B0714D10A681B4B16\n:101FC00092699A420FD1486802E0C80810F061FD9A\n:101FD000002806D101A92000F6F7B6FF0199F8F70D\n:101FE0009BFC4300DDE72000F5F732FC4369002B42\n:101FF0000DD10F4BAD002000ED5810F08BF82A00EA\n:1020000003000C490C4802F0BDF9F1F7D5F92100A5\n:10201000280098470028AAD1EBE70800A7E7C046A8\n:1020200068DE020070DE0200070080FF219D0000D4\n:10203000E8D002000577030078DD0200F7B5040060\n:10204000019116001F00F5F703FC0569002D09D169\n:10205000200010F05FF806490200064802F092F9ED\n:10206000F1F7AAF93B00320001992000A847FEBD14\n:102070008073030078DD0200F8B50E0015001C0027\n:10208000930714D113681E4A934202D16B682360F0\n:10209000F8BD1C4A934207D1002802D0F5F7D8FBBF\n:1020A00006006B6848C4F3E7174A934201D12560E4\n:1020B000EEE75A68022117008F4314498F4202D07D\n:1020C00013498A42F3D1002817D1124A93420BD008\n:1020D000114A934208D0114A934205D0104A9342C4\n:1020E00002D0104A934208D10C200FF00DF90E4B8C\n:1020F0004660036085602060CAE725606060C7E7CE\n:1021000034D00200F8CF0200ACD00200450200003B\n:102110001A020000D88A0200148B0200508B0200C1\n:102120008C8B0200C88B0200B0D10200F8B50023EE\n:102130001360536006000D001400F5F789FBF923C6\n:1021400007005B009D4205D1836A002B02D00F4B34\n:1021500048C4F8BDFB69002B04D0220029003000E0\n:102160009847F6E7B86B0028F3D00621ED00294325\n:1021700004301A00F2F756FB0028EAD04268230028\n:1021800039003000FFF778FFE3E7C04658B402009B\n:1021900070B5160004000D00FFF7C8FF3368002B70\n:1021A00015D10B4EA3070BD10A4B22689A4207D1D7\n:1021B0002B0062680849300002F0E4F8F1F7FCF8FF\n:1021C00020000FF0A7FF2B0002000449F3E770BDC9\n:1021D000C8D80200ACD0020092760300B9760300A2\n:1021E00073B504000D001600F5F732FBC369002B30\n:1021F00009D004220196009229006A4620009847DF\n:10220000009B002B0AD020000FF084FF2B0002005F\n:102210000349044802F0B6F8F1F7CEF873BDC046A2\n:10222000B9760300C8D8020073B504000D00F5F7B5\n:102230000FFB174B426A06009A4226D0002D03D1AD\n:1022400010200FF061F80500736A002B12D1E6210F\n:102250006A46FF312000FFF769FF009B002B0FD17A\n:1022600020000FF057FF0B4902000B4802F08AF8DC\n:10227000F1F7A2F82900200098470028E7D076BDA2\n:1022800029006846F2F76EFDF9E72000F7E7C0463F\n:10229000412102002876030078DD020037B50400F2\n:1022A000F5F7D6FA856A002D02D02000A8473EBD7A\n:1022B000F9216A4649002000FFF738FF009B002BF8\n:1022C00005D06A462900280013F0C7F9EFE720007F\n:1022D0000FF020FF03490200034802F053F8F1F722\n:1022E0006BF8C0465A76030078DD020030B5050071\n:1022F0008FB0FCF777FE2800F5F7AAFA846A002C65\n:1023000005D02800A047040020000FB030BDF921FF\n:102310006A4649002800FFF709FF009B002B16D0F2\n:1023200002A8F1F723F8002807D16A46010013F04C\n:1023300094F90400F1F738F8E6E7039B08491868B8\n:10234000FFF788F90028DFD10398F1F735F8280066\n:102350000FF0E0FE03490200034802F013F8F4E72F\n:10236000C4DC02005A76030078DD0200F0B5136881\n:102370008FB00793002800D073E00400131D03936F\n:10238000FF220B00090A1340114001934B000693F2\n:10239000069A019B05919B18039A9B00D2580492C0\n:1023A000039AD3185F68381E09D00020BB0706D1F6\n:1023B000944B3A689A4202D1380011F0FBFF059B1A\n:1023C0001818049B4600002B50D1019B581C831900\n:1023D000980000930EF098FF26000500002C01D015\n:1023E00001260460019BB0009A002818039915F09B\n:1023F000F5FF019B9B190293029B9800059B2818EF\n:10240000DA00019B9900039B591815F0E7FF029A27\n:10241000069B944663440193002F12D003243C4052\n:1024200000D0A9E0774B3A689A4200D0A4E0380087\n:1024300011F0D8FF03230600009373689C4200D27A\n:102440007DE0019B029A02999A1A52082B00079884\n:10245000FFF7F4FD040028000EF085FF20000FB008\n:10246000F0BD130008330393546889E7049B9B076E\n:102470002FD1049B644A1B68934202D0634A934263\n:1024800027D10AAA09A90498F5F76CFB099B581CE7\n:10249000019BC0188319980000930EF035FF2600A9\n:1024A0000500002C01D001260460019BB0009A00B9\n:1024B0000399281815F092FF019B0A999819099B16\n:1024C00080009A00281815F089FF019B099A9B1833\n:1024D00090E7019B181D8319980000930EF014FFDC\n:1024E00026000500002C01D001260460019BB000ED\n:1024F0009A000399281815F071FF019B0AA99B19EE\n:1025000004980293FFF790FE029B04909C000498AD\n:10251000FFF7ECFE061E00D16EE7009B029A934285\n:1025200007D8D90028000EF00DFF0500009B5B00C6\n:102530000093029B2E51013302930434E7E7B36802\n:10254000E700D859002815D0042813D0009B184262\n:1025500005D12F4B02689A4201D110F06DF9019B11\n:10256000019A9B00E85002320192B268EB18D71929\n:102570007A685A60013460E70AAA26493800FFF7F2\n:1025800007FE00210AAA080013F067F80021FFF7F0\n:102590004BFE019B03909E000398FFF7A7FE041ECD\n:1025A00000D14EE7019B009A01339A420BD85300A9\n:1025B0000093042B01D204230093009B2800990070\n:1025C0000EF0C0FE050003231C4207D1104B226809\n:1025D0009A4203D1200010F02FF90400E6210AAA44\n:1025E000FF313800FFF7D4FD0AAA002101200C9426\n:1025F00013F033F8019BAC5102330193AB195860CF\n:102600000836C9E7D8CB0200D49B020088980200A4\n:102610009CC602006B02000070B50C0086B016006C\n:1026200083071CD10368204A934202D01F4A934279\n:1026300015D102AA01A9F5F795FA019BA3422CD363\n:102640001BD80023029DA000A34201D106B070BD9B\n:102650009900421A043AAA5801337250F4E702A9C9\n:10266000FFF7E2FD002305000193019B2800A34230\n:1026700006D3FFF73BFE0028E8D022000C490EE00D\n:10268000FFF734FE002808D0019A0A49A31A5B1804\n:102690009B00013298510192E7E7019A06490748E9\n:1026A00001F070FEF0F788FED49B020088980200CB\n:1026B00046770300FFFFFF3F23770300F0DD0200B2\n:1026C000F7B5FF240E00090A264015000C408307C9\n:1026D00031D10368384A934202D0384A93422AD112\n:1026E00001AA6946F5F73EFA0098331983425BD890\n:1026F00083009C46002301999A00A3420FD1B400A5\n:10270000801B0919C01AAD180EF0ECFE019B286061\n:102710001C190023013601339E4207D1F7BD6746DD\n:10272000BF1A043FCF590133AF50E5E79A00514239\n:102730006158A950EFE70021FFF776FD002307005D\n:102740000093009BB34218D3002108000EF0CAFE8C\n:1027500006003800FFF7CAFD011E1BD1B168A14277\n:1027600022D3A3008A00EB181E60AA18091B9D4201\n:1027700014D130000EF0D2FED0E73800FFF7B6FDDE\n:10278000002811D0009AB31A1B199B00013258512E\n:102790000092D6E73000F0F7A9FEDAE7F468D01A25\n:1027A0002058043B1860E2E7009A0549054801F00B\n:1027B000E9FDF0F701FEC046D49B020088980200B4\n:1027C00023770300F0DD0200F0B591B01D00060094\n:1027D0000C001700F5F73CF8334B984207D12B005B\n:1027E0003A0021003000F2F7D9F911B0F0BD826A49\n:1027F0002E4B002A08D09C4230D1300090472860F0\n:102800000028F2D00120F0E79C4227D1F92101AA4B\n:1028100049003000FFF78AFC019B002B0DD1D72126\n:1028200001AA49003000FFF7B3FC039401AA00217C\n:10283000012012F012FF2860E4E704A8F0F796FDEB\n:10284000002807D101AA010012F007FF2860F0F765\n:10285000ABFDD7E7059B2B600220C6E7002CDED13D\n:102860003800F4F7F5FF1249FEF7F4FE01AA00283C\n:102870000ED010493000FFF759FC019B002B10D0FF\n:1028800001AA2100200012F0E8FE28602000ACE739\n:1028900009493000FFF74AFC019B002B01D0039748\n:1028A000C4E72F60D8E7C046F8990200388D0200CF\n:1028B000B8D9020019020000CD02000010B50400D2\n:1028C00001F0A6FD002808D0002320001A001900FE\n:1028D000FFF7B4FB0400200010BD200013F0BBFC88\n:1028E0000028F8D10249034813F0B1FCF2E7C046D2\n:1028F000DB76030078DD02007FB5C30006201843B5\n:10290000054B01900491052001A9029303930592C0\n:10291000F5F78AFA07B000BD388D02001423F0B530\n:102920008DB000AFFA1805000C00FFF7FFFBBB6984\n:10293000002B06D022002C492C4801F023FDF0F793\n:102940003BFD786900284CD128000FF095FC002849\n:10295000F0D01423F821FA1828004900FFF7E6FB0D\n:1029600010227869B918F6F70DFFB860200010F052\n:1029700095F86A463E69B968731C7B60C318FB60B2\n:102980000E33DB08DB00D31A9D466D46320028006B\n:1029900015F024FD2E23AB557B682000EB18BB609F\n:1029A00010F081F80600200010F078F831000200E5\n:1029B000B86815F013FDF9682800F7F7FDFFC300AC\n:1029C000062018430A4B10223B627B62094BBA185F\n:1029D000BB620123FB620B33F861D1180520F5F7C8\n:1029E00023FABD460DB0F0BD44760300F4D90200D1\n:1029F000388D020070DE0200F0B5174C0F006168E0\n:102A000095B003912168060008A8049162602360D4\n:102A1000F0F7ACFC051E06D0039B09986360049B8D\n:102A20002360F0F7C9FC33683A00310005A8019330\n:102A300001F080FE2B002A00019905A8FAF734FB6B\n:102A400012F0FCFD0500F0F7AFFC2800039B63606B\n:102A5000049B236015B0F0BD802E002010B504004B\n:102A600000F00CFD031E054802D0054912F031FEAE\n:102A70002200044901F086FCF0F79EFC5CDB0200BA\n:102A8000AC750300D5750300010010B5014812F0C4\n:102A900020FEC046F0DD0200F0B58BB004900F00C0\n:102AA0000392202803D191420FD0AF4EBFE0049B88\n:102AB0001B2B01D01E2B0DD103993800F4F75EFFBC\n:102AC000049B002803D01B2BEFD1A84EAFE01B2B9B\n:102AD000FBD1EAE7049B212B3FD1039801F098FC3E\n:102AE000002806D00399380013F0BBFB0028ECD176\n:102AF000DBE70324039B1C4005D1039A9C4B12681F\n:102B000005929A4223D0049B9A4A9B0038009C5815\n:102B10000FF000FB050003980FF0FCFA2B0000906B\n:102B200022009549954801F02DFC47E1039AA30046\n:102B3000D3189D68280001F06BFC002800D158E1F3\n:102B40002900380013F08DFB0028BED10134039B0F\n:102B50005B680593A342E9D8A7E70126314200D17B\n:102B600016E1039B4D101E4000D1E7E05C10049B72\n:102B70001D2BC8D8180007F0EBF81E0028002A000B\n:102B80002D0045004C004E0050005D0066007B00AB\n:102B90008300B4001E0028002A002D0045004C00D0\n:102BA0004E0050005D0066007B008300CC00D0002A\n:102BB000C6FFD400D80025432E00700003007340E8\n:102BC00000D5B6E00126064331E06540F4E72C402D\n:102BD0002600F2E7002C02DA6948FFF755FF1F2CA8\n:102BE00008DC684B2341AB4204DBC0231B062341B6\n:102BF000AB4205DDE91728000FF0B8FE07004BE0F7\n:102C0000A540D9E7002CE7DB1F2C00DD1F24254160\n:102C1000D2E72E19D1E72E1BCFE721002800FBF7C2\n:102C200001F80028E6D1012665436D002E433000EF\n:102C30000BB0F0BD002C00D1DDE02100280011F028\n:102C400083F90600B9E7002C00D1D4E0280008F091\n:102C50000FFA051C200008F00BFA011C281C07F0D5\n:102C600003FD032302269843474B0643F618DEE78D\n:102C7000002C00D1BFE02100280011F055F9E0E759\n:102C80002F00002C2ADA280008F0F2F9032302278B\n:102C900098433D4B0743FF183800F4F7D9FD83698B\n:102CA000002B00D12FE7039A39000498984756E08B\n:102CB00001231C4206D039003000FAF7B3FF002888\n:102CC00098D17E43012C00D177E739003800641099\n:102CD000FAF7A8FF002800D08CE77F43002CE7D14B\n:102CE0006BE7002C00D186E000210220F2F7E0F82B\n:102CF00021000600280011F027F901274000384381\n:102D0000B0602100280011F00FF9B8400743F760C8\n:102D10008DE7A54200DAD8E6C7E6A54200DDD4E695\n:102D2000C3E6A54200DCD0E6BFE6A54200DBCCE668\n:102D3000BBE630000FF029FE060078E70323039A74\n:102D40001340022B24D1114B1340062B20D0280016\n:102D500008F08EF9039A011C0498F7F799FF061EF4\n:102D600000D064E7CFE6C04668DE020070DE0200F5\n:102D7000D49B020060CF02000376030078DD0200DE\n:102D800059250300FFFFFF3F00008080070080FF00\n:102D9000049B1F2B00D07FE70398F4F759FD83694C\n:102DA0000400002B0CD1636A002B11D103980FF0A3\n:102DB000B1F913490200134801F0E4FAF0F7FCFA04\n:102DC0003A00039904989847061E00D02FE7EAE7D7\n:102DD00006A90398FFF728FA04002000FFF786FAF7\n:102DE000002800D161E63900F4F7C8FD0028F4D0CE\n:102DF0006BE6039587E60449044812F06AFCC04676\n:102E00002876030078DD0200482503002CDE02004E\n:102E1000010010B5014812F05CFCC04678DD0200EC\n:102E2000F8B504000D0017001E00002908D018682E\n:102E3000F4F70EFD6368834202D00548FFF7E8FF10\n:102E400033003A002900A068FFF7F8F8F8BDC04643\n:102E50009475030001214000014310B5024813F0AE\n:102E6000EFF9F0F7A9FAC04610DC0200010010B536\n:102E7000014812F02EFCC046D4DB020010B513F05E\n:102E800053FD014810BDC046388D020010B5C30780\n:102E900008D483070ED10368094A934202D0094A35\n:102EA000934207D1F4F7BCFD002801DD0FF015F9BE\n:102EB000054810BDF4F718FE08F0BAF8F4E7C0466C\n:102EC0005C97020078DE0200388D020001220B4B75\n:102ED00010B51A600A4A51680029FCD000215160DF\n:102EE000A1220131D2009A5859600323D01718400B\n:102EF000801880100FF049FD10BDC04600C0004092\n:102F0000FCC0004010B5002804D1044803F022F8AA\n:102F1000034810BD0868F4F783FDF7E7E7030000F6\n:102F2000388D0200F0B5304B8FB007AE01380093FA\n:102F3000043107230196FEF7EBFE0023B0682B4F08\n:102F40000393B84203D0F4F76BFDC3B203937069E7\n:102F50001825B84202D00EF0B4F945B2B069192470\n:102F6000B84202D00EF0ADF944B23069B8420DD08B\n:102F700005AA0221F4F718FE059B18680EF0A1F9C6\n:102F8000059B45B258680EF09CF944B201210E0031\n:102F9000A022AE40A140164BD205D75815483E435B\n:102FA0000590D650D6588E43D650134A03218550EB\n:102FB000C450280015F07DF92000032115F079F99F\n:102FC000079905A806F08AF80A9B039A089905A8AC\n:102FD00006F094F80799094806F04EFF084B0130B7\n:102FE000188002480FB0F0BDDCD30200388D02001B\n:102FF00014050000002000400C050000C83200004D\n:10300000C22D002010B5F4F795FB034B002800D12A\n:10301000024B180010BDC04670DE020068DE0200E0\n:10302000F7B50D0014001E00002A07D0F4F782FB4C\n:10303000002805D10B230124336064422000FEBD2B\n:103040002E002F19F4F782FB741C3070BC4213D091\n:103050000A4B1B8800930FF058F80190F4F76AFBB5\n:1030600026000028EED10FF050F8019BC01A009BFB\n:103070008342F3D8641BE1E73C00FBE7C22D00204C\n:1030800070B51500040012F07FFB2A0002492000F1\n:1030900012F038FB70BDC0466B57020070B5437923\n:1030A0000D000024032B06D9836A074C9200E41A12\n:1030B000C369D358E418032112F057FB447024125B\n:1030C0000570847070BDC046FD7F0000F7B5002319\n:1030D0000400617183608371E260036101330F005A\n:1030E00015004361032906D80121836949429A00EA\n:1030F000C06915F08FF90023A3622362AA8BEB8BC2\n:10310000D218002A00D10132384E2000310012F0CE\n:10311000F9FA2A8C3100200012F0F4FAE36820005A\n:10312000197D12F01BFBE3682000997D12F016FB5D\n:10313000E3682000197E12F011FBE3682000997EFD\n:1031400012F00CFB042F27D1636A226A31009A1A0D\n:10315000200012F0D7FA3100EA89200012F0D2FAEA\n:103160003100AA89200012F0CDFA0026AB8CB342C0\n:1031700017DCFF21200012F007FB042F35D1EA8A6B\n:103180002B8B0237D31801930023019A9A422CD03B\n:10319000AA8C0021009223E00221200012F0D1FA33\n:1031A000D9E7AA6AF300D3181A78032A03D19978C9\n:1031B000200012F0E9FA0136D8E70126A86ACA0011\n:1031C0008218507830420AD05088984207D152680D\n:1031D000D200606B99003A430A500133D5E70131C0\n:1031E000009A8A42E9DC0222F2E7F7BD4357020067\n:1031F000F7B5234B0500A8331B680191022B0DD8AE\n:1032000047698F420AD2836A0269CF1B9C1A3B002E\n:10321000234304D1AB6A2B61019B6B61F7BD062F81\n:1032200001D90F2C18D900941F2C01D91F2300930A\n:10323000009B00269C4203D83E00032F00D90326A2\n:103240000121280012F07DFA009A730113430370E4\n:10325000009BBF1BE41ADAE70A4B3E009F4200D9ED\n:103260001E000221280012F06CFA7022330913406C\n:10327000F03A22431343037046700094E8E7C046D7\n:10328000802E0020FF07000070B50D000121040012\n:1032900012F0F8FA0E2D14D00F2D17D010210D2D8D\n:1032A00010D01721200012F06FFA0322A36A042124\n:1032B00003339343A362200012F057FA044B0360D8\n:1032C00003E01121200012F05FFA70BD1221F9E72E\n:1032D000149D0200F8B5174F05000C0016000F40B2\n:1032E000002A1AD1110012F0CDFA23040FD5322191\n:1032F000280012F049FA3221280012F045FA322152\n:10330000280012F041FA3221280012F03DFA3A006A\n:1033100035212800FFF7C2FEF8BD3A004621FFF72D\n:10332000BDFE7F23210A99433143C9B2280012F020\n:103330002BFAF1E7FF7FFFFFF7B52D4FB437019769\n:103340002B4A2C49FC32536C8B4200D8F7BD032525\n:10335000043B53641A68264B501CAC331E680400AF\n:103360008108715C2C4064002141831A294001309E\n:103370000229F4D003260199120109681B018A1859\n:103380001B499B08002BDBD00F201468044229D175\n:1033900019480068A04225D80D00B8352D68A5420F\n:1033A00020D9241A200900900800AC300068A40934\n:1033B000009D0419207835406D0084462841304036\n:1033C00001280FD13700AF403D0067463D432570CF\n:1033D0000D00FC356C6C094FBC4206D2201D6864A0\n:1033E00000982060013B0432CCE70C00BC34F8E7C5\n:1033F000802E0020402F0020342F0020C02F0020DE\n:103400000F23994370B506000D00081A412106F0FC\n:10341000A9FC0F4C02002300B033186023002100E8\n:10342000AC331E608301EB1AB4310B602300300013\n:10343000B83300211D6014F0EDFF8023FC345B02E3\n:103440000122A36400235242E3642265636570BDD8\n:10345000802E0020A222034952008B5A01338B5246\n:103460007047C046802E0020A222034952008B5A8A\n:10347000013B8B527047C046802E0020A223034A96\n:103480005B00D05A431E9841C0B27047802E002086\n:10349000F7B504000325890043180193019B9C4262\n:1034A00000D1F7BD0F232168194229D1184B1A000A\n:1034B000B43212688A4223D81800B83000688842B3\n:1034C0001ED9891A1A000F093800AC32126889090E\n:1034D00051180A7828404000944602412A40012AA7\n:1034E0000ED12E008640300066463043087018002A\n:1034F000FC30416C074EB14206D20B1D43640F6095\n:10350000FFF71AFF0434C9E7BC331A60F8E7C04676\n:10351000802E0020C02F0020A22210B508485200A3\n:10352000835A01000133835203000022FC33BC3173\n:103530000A60DA64034A27215A64FFF7A9FF10BD25\n:10354000802E0020402F0020F8B503262E4C0025A9\n:103550002200BC321368AB4213D1022219000327A8\n:1035600094462200B0321268920091422AD323007E\n:103570000022FC335A654532FF32A35A013BA35265\n:10358000F8BD23001560214AFC335A642300B03390\n:103590001B689B009D42D9D22200AC321268AB0856\n:1035A000D35C2A003240520013413340032B07D131\n:1035B0002200FC32536C191D51641D60FFF7BCFEE4\n:1035C0000135E3E72000AC3000688A0880180278F3\n:1035D0000D0016003D406D002E413E40022E09D0E8\n:1035E000032E0BD0012E07D13B00AB409A43027053\n:1035F000012301E0002BF7D10131B2E76346AB4074\n:103600009A4302700023F7E7802E0020402F00200D\n:10361000334BF0B51A001900B832B431096812689A\n:10362000521A1900B0331E68026003230022AC3125\n:103630000F68140011009C4642608260C260026103\n:1036400042618261B60065468B08FB5C0D406D00EF\n:103650002B4165462B404568012B33D0002B2BD0E6\n:10366000022B32D001318E420AD065468B08FB5CBA\n:103670000D406D002B4165462B4001D0012BE2D15E\n:10368000012C26D10569013505618569A54200D265\n:1036900084618E4201D0012BD5D1C368934200D200\n:1036A000C2608E4206D143681B01436083681B01E0\n:1036B0008360F0BD0022C6E7846801320134846073\n:1036C0001C00CFE701354560FAE70135456001345C\n:1036D000C8E7022CD9D1456901354561D5E7C04617\n:1036E000802E0020F7B50F300309019302D100248A\n:1036F0002000FEBDA223474A5B00D35A002BF6D11F\n:103700004733FF33D35A5E425E41002B07D0414B13\n:10371000FC33DA6C1B6D9A4201D3ECF7B9FE00243E\n:1037200030213F273B4A3B4BB0321268FC33944672\n:10373000384A5B6DAC3210689C4505D8002ED6D156\n:10374000ECF7A6FE0136EBE70325C25C2A4231D135\n:10375000019D0134A5422ED89B00191B4E1C5A1CFA\n:10376000012C03D12B4C9708FC346765B408001971\n:103770000324270037407F00A446023CBC40077862\n:1037800002313C43234F0470AC378B4234D2214981\n:10379000204DB431FC350C68E96C33018C46E418DB\n:1037A000019B921B6344120100212000EB6414F082\n:1037B00031FE9DE700240C252A4206D1019D0134EB\n:1037C000A54203D89B000133C7E700240A4206D173\n:1037D000019D0134A54203D89B000233BDE70024BC\n:1037E000BA4306D1019A0134A24203D89B000333A5\n:1037F000B3E7002401339FE73C688808201864463B\n:1038000002250C406400A5402C00057801312C43B2\n:103810000470BAE7802E0020A22230B5164B520069\n:103820009A5A002A26D1002824D01A00B4321268ED\n:10383000801A1A00FC32546D01098009A04200D29E\n:103840005065AC331800032204688B08E3180C00A1\n:10385000150014406400A5401C780131AC431C7075\n:1038600004688B08E35C0C0014406400234113409F\n:10387000022BE9D030BDC046802E00200F2203006D\n:103880000240002070B5824228D1154C1000210062\n:10389000B4310968994221D82000B8300568100079\n:1038A0009D421BD9AC345B1A246819099B09E55C5D\n:1038B0000800032318404000054110001D40012D61\n:1038C0000CD14D1C2E00AA08A25C1E40760032418D\n:1038D000681A1A400135022AF4D0000170BDC046B2\n:1038E000802E0020F0B585B007000D000292002860\n:1038F00007D101002800FFF7F5FE0600300005B0F3\n:10390000F0BD002903D1FFF787FF2E00F6E70F2156\n:1039100000260140B142F1D153480E000300B433F8\n:103920001B68BB42EAD80200B8321268BA42E5D935\n:10393000FB1A1A0900920200AC3212689B0901922C\n:10394000D25C0323009C23405B001A4103231A40EE\n:10395000012AD3D14233FF33C35A002BCED12900E1\n:103960000F310909B0308C460168032689000391A4\n:10397000210014000131039A914212D201988A0861\n:10398000825C08003040400002413240022A02D1ED\n:1039900001340131EFE7002A03D10133E218624517\n:1039A000F7D3644501D13E00A8E7644521D9009BC7\n:1039B000032663441900009B0800E218AC239C46D0\n:1039C000294B9C44634605001B6884081C1933007E\n:1039D00035406D00AB40257801309D432570904205\n:1039E000F0D1214B8908FC335A6D9142DBD25965E5\n:1039F000D9E71B19634523D3032502261A49009BE7\n:103A0000AC31E3180191009A62449A4209D86346A6\n:103A1000191B090120010A003818002114F0FAFCD2\n:103A2000C1E70199180009689A088A1831002840EE\n:103A30004000814008001178013308431070E2E72C\n:103A4000029E002E00D159E700212800FFF74AFE10\n:103A5000061E00D152E72201390014F0BFFC3800E5\n:103A6000FFF7DAFE4AE7C046802E002010B58CB082\n:103A700005A8FFF7CDFD079B0A4C03930093059A19\n:103A8000069B094920000DF0B6F9089B099A01939D\n:103A90000B9B06490393009320000A9B0DF0ABF9A2\n:103AA0000CB010BD348C0200AD770300D07703005A\n:103AB000F8B5434E434F3300B4331A6842493800D7\n:103AC0000DF099F900243300B0331B689B00A3422A\n:103AD00023D93F2214422CD132002500AC32106889\n:103AE0000321AA08825C294049000A4103210A42B5\n:103AF00002D10135AB42F3D12A1B7F2A12D9920998\n:103B0000324938000DF077F92C003F239C433300F5\n:103B1000B0331B689B00A34204D838002C490DF039\n:103B2000A9F8F8BD2B4B22011A402B4938000DF0A3\n:103B300062F93200AC321268A308D35C032222403F\n:103B400052001341032213403A32022B31D030325B\n:103B5000032B2ED03F3A012B2BD13300B4331B68FB\n:103B60002201D3581D4954228B4222D01C49083AC5\n:103B70008B421ED01B49083A8B421AD01A490F3289\n:103B80008B4216D019498B4213D01949123A8B42F5\n:103B90000FD018498B420CD0174905328B4208D000\n:103BA0001649043A8B4204D0154926328B4200D183\n:103BB0001B3A144938000DF01EF9013483E7C04662\n:103BC000802E0020348C02006E770300897703007A\n:103BD000CA250300F0FF0F00A5770300D49B020065\n:103BE00088980200D8CB02009CC602009CA5020067\n:103BF0008CCD020050CD020054B302009C8A02001A\n:103C000094D50200AC24030010B5034A03490448CC\n:103C10000DF0F1F8034810BDED7803001F730300A9\n:103C2000348C0200388D020010B5034A0349044861\n:103C30000DF0E1F8034810BD157803001F73030071\n:103C4000348C0200388D020010B504004868002250\n:103C500004300749F0F7E6FD064A002803D0406823\n:103C6000F5F77AFD0200044920000DF0C4F810BDFC\n:103C7000860F0000FC0B0300317A030070B51500BD\n:103C800012680C004068002A0AD1CC0006210430DA\n:103C90002143F0F7C7FD002801D043682B6070BDB9\n:103CA00003799B070BD50C4B9842F8D10B4EF36D63\n:103CB000002B03D1012010F047FBF065F06D0621C9\n:103CC0006A68E4002143002A03D110F080FB00233E\n:103CD000E4E710F072FBFAE7C4B40200802E002083\n:103CE00070B50625C0000543012229000B48F0F7F6\n:103CF00099FD44680600002C0ED108200DF004FB4D\n:103D0000074B04000360012010F01EFB2A006060D6\n:103D1000044910F052FB7460200070BDBC2E0020DE\n:103D200094D50200860F000010B50C000621C000DB\n:103D3000014301220248F0F775FD446010BDC04602\n:103D4000BC2E002073B50625C3001D4306000022CB\n:103D500029001048F0F766FD041E18D10200290062\n:103D60000D48F0F75FFD041E12D0EA216A46FF31CC\n:103D70004068FEF7DBF9009B002B08D000216A4663\n:103D8000080011F06AFC61683000FFF7CDFF606841\n:103D900076BDC046BC2E0020C0D4020010B5F3F79B\n:103DA000A3FE054906F038FE0323020002209A43D1\n:103DB000024B1043C01810BDE02E65420000808009\n:103DC00010B5F3F791FE054906F026FE0323020025\n:103DD00002209A43024B1043C01810BD35FA8E3CA6\n:103DE0000000808010B5F3F77FFE011C07F00AF990\n:103DF000024B002800D1024B180010BD70DE0200FB\n:103E000068DE020010B5F3F76FFE4400640808494D\n:103E1000201C07F0F7F8002805D10549201C06F002\n:103E20007BF9002801D0034810BD0348FCE7C046D9\n:103E3000FFFF7F7F68DE020070DE020010B5F3F73F\n:103E400053FE034B034002201843024BC01810BD21\n:103E5000FCFFFF7F0000808010B5F3F745FE4400B3\n:103E600064080849201C07F0CDF8002807D105494F\n:103E7000201C06F047F9002801D1034810BD034873\n:103E8000FCE7C046FFFF7F7F70DE020068DE0200B5\n:103E90001FB500230193F3F727FE01A909F058FB92\n:103EA0000322030002209343064903435B18029355\n:103EB000019B934303435B1802A90393F0F7F8FFB8\n:103EC00005B000BD0000808070B50D00F3F70CFE5A\n:103ED000041C2800F3F708FE07F0AAF80100201CD4\n:103EE00009F070FA0323020002209A43014B1043A9\n:103EF000C01870BD000080801FB500230193F3F748\n:103F0000F3FD01A909F034FA032302249843074B77\n:103F10002043C018029001980EF037FD02A90390CB\n:103F20002000F0F7C5FF04B010BDC046000080803F\n:103F300070B50D00F3F7D8FD041C2800F3F7D4FD8D\n:103F4000011C201C09F03AFF0323020002209A43BF\n:103F5000014B1043C01870BD0000808070B50D008B\n:103F6000F3F7C2FD041C2800F3F7BEFDC00FC30722\n:103F7000600040081843032302249843014B204368\n:103F8000C01870BD0000808070B50D00F3F7ACFD67\n:103F9000041C2800F3F7A8FD011C201C09F00AFFEF\n:103FA0000323020002209A43014B1043C01870BD46\n:103FB0000000808010B5F3F797FD08F033FF03236E\n:103FC000020002209A43024B1043C01810BDC046A5\n:103FD0000000808010B5F3F787FD09F099FE0323F8\n:103FE000020002209A43024B1043C01810BDC04685\n:103FF0000000808010B5F3F777FD09F037FE03234A\n:10400000020002209A43024B1043C01810BDC04664\n:104010000000808010B5F3F767FD09F08DFD0323E4\n:10402000020002209A43024B1043C01810BDC04644\n:104030000000808010B5F3F757FD09F03FFD032322\n:10404000020002209A43024B1043C01810BDC04624\n:104050000000808010B5F3F747FD09F041F8032315\n:10406000020002209A43024B1043C01810BDC04604\n:104070000000808010B5F3F737FD09F06FF80323D7\n:10408000020002209A43024B1043C01810BDC046E4\n:104090000000808070B50D00F3F726FD041C280099\n:1040A000F3F722FD011C201C09F074FA032302001F\n:1040B00002209A43014B1043C01870BD000080805D\n:1040C00010B5F3F711FD0021041C06F011F80028CB\n:1040D00002D00748FEF7D8FC201C09F0D7FE0323C6\n:1040E000020002209A43034B1043C01810BDC04683\n:1040F0003F7A03000000808070B5060008680D005C\n:10410000F3F7F2FC0021041C05F0FCFF002802D0AC\n:104110001848FEF7B9FC201C09F078F9041C012EA0\n:1041200006D1032302209C432043134BC01870BDCB\n:104130006868F3F7D9FC0021051C05F0E3FF0028AF\n:10414000E6D1FE21281C890505F0CCFF002803D00C\n:104150000A490B4811F0BDFA281C09F057F9011C57\n:10416000201C06F081FA0323020002209A43104328\n:10417000DBE7C0463F7A030000008080482503004B\n:104180002CDE020070B5050000291CDB032905D8D0\n:104190000800002405F0D2FD181806060123023994\n:1041A00099430C00FE26B52109023143280011F085\n:1041B00070FF002C04D005492800214311F069FF4D\n:1041C000AE61EC6170BD0024F226ECE780B0000027\n:1041D00070B504000D0010490CF04CFD6968012217\n:1041E0002000F3F74DFB0D4E200031000CF042FD96\n:1041F000A96801222000F3F743FB310020000CF0F6\n:1042000039FDE96801222000F3F73AFB0449200058\n:104210000CF030FD70BDC046517A0300BDF70200BE\n:10422000EC1E030070B5060010200D0014000DF008\n:104230006BF8034B466085600360C46070BDC04688\n:10424000D0D70200F7B50D00110000220600009241\n:1042500028001F000B4BFDF72BFD10200DF061F81F\n:10426000041E08D1084B094A094C5A6200232660F3\n:104270002000A360FEBD39002800F0F719FEE060C1\n:10428000F4E7C046FFFF0000802E0020CC9B020018\n:10429000982E002010B5013810C9F0F709FEE06033\n:1042A000004810BD388D0200F8B57F2553B20400D8\n:1042B0000E0017001540002B0ADB6B1E012B07D8E0\n:1042C0000B6858680EF0EFFB010020000CF0D2FCE8\n:1042D000022D16D10F4920000CF0CCFCF368002B06\n:1042E00002D05A68002A04D10B4920000CF0C2FC0D\n:1042F000F8BD012A07D1002299682000F3F7C0FA1F\n:10430000F6E7002DEAD03A00F1682000F0F776FDDC\n:10431000EEE7C0465A740300FC0B0300C368034871\n:104320005A68002A00D098687047C046388D02004D\n:10433000136810B51400002B0BD0FC23FF339942F7\n:1043400006D10C4B52689A4202D10023C3802360ED\n:1043500010BD094B994201D1C368F8E7074B0268C9\n:104360009A42F5D1064B9942F2D1FFF7D7FF206070\n:10437000EEE7C046388D020003020000C4DC0200F4\n:10438000E30200000EB470B5050087B010200CF0F9\n:10439000C8FF041E0BD11A4B1A4A1B4C9D611862B0\n:1043A0005A62200007B070BC08BC03B01847002157\n:1043B000056081600120F0F77BFD2521E0600500AC\n:1043C0000B9814F063F8061E09D10B9814F076F8D8\n:1043D000320001000B98F4F77DFDA860E1E702A828\n:1043E00010210DF085FA0CAA0B9902A80192F1F7A1\n:1043F00043FE02A90548E568F4F736FDEDE7C0463F\n:10440000802E0020CC9B0200982E00209CC602002B\n:1044100010B50300820708D1064A0168914204D111\n:10442000054AD9680120914203D004491800FDF7DC\n:1044300011F910BDACD002004542010004D90200C0\n:1044400010B50400F3F704FA034BC2689A4200D097\n:1044500024690023A36010BD45420100F8B5160091\n:104460001D0004000F00F3F7F3F9154BC2689A42E0\n:1044700000D02469A068002811D10C300CF051FF45\n:10448000A06000280AD003236360E288A16893003B\n:10449000CB180332E2801F605E609D60F8BDE38848\n:1044A000A18802338B42F0DB0331890001220CF03A\n:1044B00056FF0028F2D0A388A0600333A380E4E76E\n:1044C0004542010070B5150004000E00F3F7C0F975\n:1044D000064BC2689A4200D02469A368002B02D11F\n:1044E00033602B6070BDE2883260FAE7454201001C\n:1044F00010B50B790349002B00D103490CF0BAFB2E\n:1045000010BDC046407003003A70030037B50C0080\n:10451000110000221D00009201232000FDF7C8FBBE\n:10452000002C05D02868F3F7B9FB034B002800D115\n:10453000024B18003EBDC04670DE020068DE02007D\n:10454000002313B5044A046A09050093890C8A58AC\n:10455000A16B11F029FF13BDB4DE0200F0B587B0E6\n:1045600000931B7804000F0002922A2B05D1826869\n:10457000525C002A01D0A62A14D11A00213A022A3C\n:104580002DD8A568E8190378032B5CD104A96668C7\n:1045900011F0D4FFAB19984206D16760049920004E\n:1045A00011F030FF07B0F0BD0378032B4BD105A904\n:1045B00011F0C4FF009B1B78212B04D1049B059AAA\n:1045C00013430493E6E7222B03D1049B059A53403F\n:1045D000F7E7232BDED1059B049A1340F1E71A007D\n:1045E000243A022A00D986E0A368D81901930378F7\n:1045F000032B28D1636804A9039311F09FFF0600E1\n:10460000019B039A9B189E42C7D0B378B01C757863\n:10461000032B18D105A911F091FF0600372D35D1D4\n:10462000059A1F2A0FDC4249049B114199420ADB7B\n:10463000C021090611418B4205DB93400493049A83\n:1046400053005340DCD500226368029DDB1B0193BD\n:10465000561CED0969D1019B0135DB09FCD1023201\n:104660005219390020000DF0B8F90400009B029A9D\n:104670001B7831001A330370013011F017FE701CE3\n:104680002018019A290011F011FE8BE7392D08D16D\n:10469000059B1F2B01DD1F230593049B059A1341E6\n:1046A000CCE72F2D03D1049B059A9B18C6E7302D2C\n:1046B00003D1049B059A9B1AC0E7312D09D10599B6\n:1046C0000498F9F7AFFA0028BDD1059B049A53432B\n:1046D000B4E7332DB7D00599352D06D10029B2D0D6\n:1046E00004980FF021FC0490A9E70029ABD00498AE\n:1046F0000FF02AFCF7E7272BA5D1A368D8198378F8\n:10470000032BA0D14578023011F027FF2F2D01D1C6\n:10471000049042E7302D06D14042430004905840B7\n:1047200000D43AE78FE7C043F2E7320090E7C04693\n:10473000FFFFFF3FF0B597B00890C0200025602331\n:104740000AAC80000F00160025706360A5600CF0B5\n:10475000E8FD2561E0606561A561E5612762E562CC\n:10476000A84218D1C449C54811F071FD00230600C4\n:1047700013930D980CF0F7FD002E00D1E1E100231A\n:10478000BA6B39683000FFF769FE38000FF045FD5D\n:104790003000EEF711FE3822002E03D00232022E36\n:1047A00000D02A000026B6490096920052582000F8\n:1047B000B96B330011F0F8FD10200CF0A5FD1021AD\n:1047C00004000DF095F80AADAB682A78002B00D1F3\n:1047D00094E1002AC6D1EA68013BAB60DB00D31844\n:1047E000DA78A7499200525802921A689D881202FC\n:1047F000120A0592029ADB88527806920F220699D5\n:104800000A400492002D2DD030220393069B1340C2\n:10481000102B29D0202B65D0002E00D047E101239A\n:10482000069A1A400992099A02992A405300CB1815\n:1048300080215B88490107931B0B1B038B4200D02F\n:104840004DE13B00079940331B780905090D8B4268\n:1048500000D02BE1002A00D123E13800F9F77AFFDC\n:104860000135E0E76368CFE7002D01D0002E35D099\n:104870008022390052014031049BAB4201D801260D\n:10488000A1E7029B6E009B195B88180B0003904206\n:1048900013D108781B051B0D984221D121000AA8CD\n:1048A00011F0BFFD002819D13B0040331B78052BC8\n:1048B00000D03AE17349744856E7049A6B1C93425E\n:1048C00006D2039A059900920AA8029A11F06CFD8B\n:1048D000029B9E1971880AA8FFF732FE002672E734\n:1048E0000135C9E7002E0BD0029A6B009B5A1B0BB7\n:1048F000032B47D1012120000DF03AF8002303706B\n:10490000049BAB4242D880200026029B049A0233CB\n:104910005100C9184001994271D1A368039A9818AF\n:1049200000230493A2686368D318984272D3029B51\n:104930001B78052B01D00C2B00D10126029B597846\n:1049400040230B405842434149B25B421E4000297C\n:1049500000DA01260025039B0695D0180795049BD5\n:104960009D425ED1002E02D1079B012B69D0069992\n:1049700020000DF061F8029B059A03992000FFF7D3\n:10498000EDFDABE7012D00D879E78DE78021029B93\n:104990006E009E19738849011A0B12038A4225D1B1\n:1049A0003A0040321278DBB29A421BD1072A07D173\n:1049B000B96CF86CF6F700F80100200011F0EAFC81\n:1049C000002D0AD1029B5B787F2B06D90E9B20001D\n:1049D000591C06930E9111F015FD3800F9F7BAFE37\n:1049E00001358DE7002D00D149E75DE7039A6B1C87\n:1049F00000920599029A0AA811F0D6FC6AE71A8873\n:104A0000150B2D03854203D1D2B2062A00D9012607\n:104A1000023380E7049B01210133049311F069FC08\n:104A200080E7069A037801320692002B04D0079B98\n:104A30000133079300230693012111F05AFC01353D\n:104A40008DE7A268039B944663441D00049B9E422D\n:104A500000D143E72B78002B07D1A3680122E91A84\n:104A600020000CF0F1FF0136F0E72800012111F0E1\n:104A700040FC0500F7E7C046587A03005CDB020003\n:104A8000B4DE0200807A030030DA0200012D00D18A\n:104A9000F5E601232A001A402ED0049A032A0DD0ED\n:104AA00002E721000AA811F0BCFCD9E60135049BFD\n:104AB000022BEBD10023012D00D1E0E6069A691EFE\n:104AC000D20705D5029A9288120B012A00D16908F3\n:104AD000012900D04FE7002B00D1FFE64BE7039AF6\n:104AE000059900920AA86B1C029A11F05DFC0799C7\n:104AF0000AA8FFF725FD66E61300DFE7002A00D0CD\n:104B000030E63B0040331E78002E00D0CCE66368D0\n:104B1000002B00D1C8E62B692000591C11F072FC53\n:104B2000A3686B62EB69AB6223E6022B01D10A49F1\n:104B3000C1E60A3B09480A49012B00D814E6094995\n:104B400012E638000FF069FB089A13AB13CB13C2BF\n:104B5000089817B0F0BDC046927A030000DD02004D\n:104B6000C67A0300376A030010B50400FAF720FA8A\n:104B7000074B02001B69074907480CF03CF9FEF798\n:104B800075FF012C01D1FEF793FF044810BDC0460C\n:104B9000802E0020F67A0300348C0200388D02004B\n:104BA00010B5F2F73DFFECF7C9F8014810BDC0465B\n:104BB000388D020010B5FEF757FC014810BDC04605\n:104BC000388D020010B5FEF745FC014810BDC04607\n:104BD000388D020010B586B0040005AB04AA03A905\n:104BE00002A8F5F75BFF059B029A0193049B064917\n:104BF00000930648039B0CF0FEF8012C01D1F5F759\n:104C000089FF034806B010BD0B7B0300348C020003\n:104C1000388D020010B5084C002805D1A83423684F\n:104C200001305B00184310BD0868F2F7F9FEA834A4\n:104C300020600248F7E7C046802E0020388D020031\n:104C4000F0B58BB0079310AB10CB009001911B789F\n:104C5000062A12D8012A08D93F230B700B00013312\n:104C60000193002301990B7001E0002AF9D1012082\n:104C70009042804140420BB0F0BD0099002929DAF2\n:104C8000019B01995F1C2D230B70802109068C4626\n:104C9000009B63440093019BFF210993009BC9057E\n:104CA00018000840884222D120234E21079AF81C80\n:104CB0001A4013001143009A540212D149225A405B\n:104CC0003A70462253407970BB700023FB70019B01\n:104CD000C01AD0E7019F002BDDD0390001370B70DF\n:104CE000D9E74124634039707B70B970EDE7002C3F\n:104CF00000DA06240199013A7D1A551B20220799F2\n:104D000011430291672940D1002C00D1CFE1002B43\n:104D100079D0A64A934200D9D5E0A549009805F07C\n:104D200005FA431E984100230026303003932033B8\n:104D3000059004939F4B039A0099D05805F0ECF925\n:104D4000002808D0049B039AF6189B4B0098D15872\n:104D500005F062FE0090049B5B100493039B0433F8\n:104D60000393182BE6D115330393009A8F4B93428C\n:104D70005DD38F49009805F0D9F9002851D0002E55\n:104D80007DD0FE239B05009351E0002BC1D1029BF7\n:104D9000662B38D1631CAB4200DBAC1E029B651C4A\n:104DA000049300231E0003930593E343DB171C4089\n:104DB000049B652B00D0EFE0651C00230693069B47\n:104DC0009D424DDD009806F033F97B1C08930300EB\n:104DD00030333B70059A069B934205D1002C03D0DB\n:104DE000BB1C08932E237B7006F042F9011C00982F\n:104DF00005F044FF714905F00FFE069B009001335A\n:104E00000693089FDBE7631DAB4200DBAC1F029BF0\n:104E1000652B00D1B0E000250493039505952E0085\n:104E2000C3E70098654905F0F7FD01360090029B45\n:104E3000662B03D0672B3AD1042E38DC6B461B7DE2\n:104E40003B70029B672B01D1731EE418631CAB42BD\n:104E500000DBAC1E002C15D16623013703940493AC\n:104E6000029B662B00D0AFE0012E00DDDCE0544950\n:104E7000009805F05BF9002800D0ABE0D4E02B23CC\n:104E800003937EE72E23250030227B70BB1C013E5E\n:104E90001F00002E76D0002D05D1039501235B4223\n:104EA000059367334DE01A70013D0133EFE76B1F47\n:104EB000A3426CDC029A672A66D01300AC1F00255F\n:104EC0000493059571E70023002603932033049390\n:104ED000394B039A0099D05805F014F9002808D0EE\n:104EE000049B039AF618334B0098D15805F094FDB3\n:104EF0000090049B5B100493039B04330393182BD3\n:104F0000E6D12E49009805F011F9002805D0009847\n:104F10002C4905F081FD01360090029B662B12D1D1\n:104F2000AE4214DAA3190133AB4204DBAC1B023CE2\n:104F3000631C00D100240023351903930135059625\n:104F40006633049331E7029B652B00D0B1E06B1F01\n:104F5000A34200DCAC1F2B230025039305953A33B5\n:104F6000EFE7231DAB4200DB6C1F029BA64200DB78\n:104F7000A3E0731CE41ADEE7029B002504932B23B5\n:104F800003934BE7039689E71C00029B97E70025F4\n:104F9000029B059504930BE7049B672B00D00CE75D\n:104FA000251E00D009E701252C0006E7FFFF7F3F03\n:104FB000F8FF7F3F04E202001CE2020000002041F3\n:104FC0000000A040CDCCCC3D3E49009805F0AEF8A5\n:104FD000002824D030217B1E1A782E2A50D01000B1\n:104FE0003038092843D901330193019B1B78302BBA\n:104FF00015D1019A52782E2A46D10499662943D0B8\n:1050000001994B70039B0A702D2B3BD1013E002E62\n:105010003CD03B00019A9A423BD331231370029B50\n:10502000672B01D1002C3AD1039B002B1AD02022F0\n:10503000079B0A2113401A00452313433B706B461C\n:105040001B7B30007B7004F017FF0A2104F0FAFF8D\n:105050003031B97030000A2104F0F4FF3C1D3031CA\n:10506000F970270000233B70099BF81A03E6392AE0\n:1050700002D001321A70B7E7019A19709342B4D086\n:10508000013BA9E70136C4E70137C2E72B230393AD\n:10509000BFE75A1E117819701300BBE71F007B1E73\n:1050A0001A78302AFAD02E2ABED11F00BCE701247C\n:1050B0002DE6029B672B00D153E704932B23002599\n:1050C0000393FEE60000A04070B505000C200C0024\n:1050D0000CF01AF9024B45600360846070BDC04655\n:1050E00034E20200030010B50548002B03D111F093\n:1050F000A1F8EEF761F9096811F0A2F8F9E7C046E6\n:105100003CDD020010B503480968F2F7DDFB0248F8\n:1051100010BDC046348C0200388D0200F0B508C9BD\n:105120008DB00593244B06AC0138009301940623FF\n:10513000FCF7EEFDE068214E214FB04202D0EDF7C2\n:10514000FBFE07001F4B20690393B04202D0EDF72E\n:10515000F3FE03901C4B60690493B04202D0EDF75C\n:10516000EBFE0490194D38002900F6F75DFA29008E\n:105170000398F6F759FA29000498F6F755FA012032\n:105180000523049A0399059D5279497904354042D3\n:10519000FB5652B2009049B2280004F0E5F8002313\n:1051A000A2686168280004F065F82800069904F0F8\n:1051B00099F830000DB0F0BDD0E30200388D020048\n:1051C00030960200409602003896020030B8020085\n:1051D000F0B50E6887B0736807000C00002B02D191\n:1051E0001248FDF751FC4868F2F71AFC010002A8CA\n:1051F0000CF08FFB0025032F03D1A068F2F710FC01\n:1052000005000024039B0193A34208D9301D290007\n:1052100004F092F9049B185501930134F2E702A9B6\n:105220000348F3F721FE07B0F0BDC046597B0300E9\n:105230009CA5020070B505006B6886B00800002BC5\n:1052400002D10B48FDF720FC012203A9F2F7A2FDD1\n:10525000039E3400049AA31B01929A4205D9217837\n:10526000281D04F069F90134F4E7024806B070BD66\n:10527000597B0300388D0200F0B505006B6889B0DA\n:1052800008001400002B02D10E48FDF7FDFB01229F\n:1052900002A9F2F77FFD20000024022205A9029F47\n:1052A000F2F778FD059E039B0193A34206D9395D71\n:1052B000281D04F041F930550134F4E7024809B0E3\n:1052C000F0BDC046597B0300388D02000022104B10\n:1052D00010491A6003001233FF3341185A701A70D4\n:1052E00004338B42FAD10100030000220931083354\n:1052F000FF311A709A705A70DA7004338B42F8D109\n:10530000C3237F229B00C254034B044A1A60704798\n:105310004C2B00201103000064000020D50C03007A\n:10532000F0B500267E24320031009300C318FF330D\n:105330005F7C7F2F4CD09B7CF618F6B2531CDBB2FF\n:10534000EF2E2AD9C1267D25B60086193700AC4636\n:105350009C4516DA9B00C318FF3359749974D974AD\n:1053600019757D230232D2B2934211DA9300C31829\n:10537000FF335C749974D974197500260132D2B266\n:10538000D3E73D68043FBD6001256D42AC44DFE7D3\n:105390003568013B7560043EE6E77D2FEED80D4D84\n:1053A000EF5D01252F42E9D0C1227D2692008218AF\n:1053B0009E4208DA9A008218FF3254749174D174B4\n:1053C00011751A00D9E71568013E5560043AEFE7F8\n:1053D000F0BDC0464D7C030070B5002140250D4C4A\n:1053E0008B00C318FF335A7C7F2A11D0A25C013195\n:1053F000C9B22A42F4D05A7D7F2AF1D0A25C7F2A1A\n:10540000EED9DA7D56B2002EEADD0132DA74E7E732\n:1054100070BDC046FC7B03000300F7B500214C4A79\n:105420001333FF338218197004339A42FBD1FC23E3\n:1054300000249C462200844453B2002B04DA454BDE\n:10544000454A1A60002008E063461F69BC4205D344\n:105450007F234432920013540120FEBDDE68355D87\n:10546000602D01D9203DEDB2611CC9B28F4251D0EF\n:10547000735C602B01D9203BDBB2232D4DD1303B37\n:10548000092B02D9334B354ADBE70234E1B28F42B4\n:1054900004D8FF2BF6D843700C00CDE7745C2500D0\n:1054A000303D092DF5D80A256B430131303BE31817\n:1054B000C9B2ECE70136512E30D10023284C1F5DD4\n:1054C000DEB22A2F0CD1274FFF5CAF4208D19300E8\n:1054D000C318FF335E74447801321C75D2B2DBE727\n:1054E0000133512BEBD1204C493B08342678AE4296\n:1054F00008D0013C002B02D1164B1C4AA1E7013B0E\n:10550000DBB2F3E7002BF7D014004334A4000419F6\n:10551000A370C1E7232DB5D000230026F7B2019771\n:10552000104FF75DAF42C5D10D4FF75D2A2FC1D0A7\n:105530009F42BFD1694693000979C318FF3359745C\n:105540004178013202341975D2B2E1B2A4E7C04603\n:1055500012030000640000206D7B03007F7B0300CA\n:105560008C7D03003B7D0300DD7D03008D7B03000C\n:1055700010B51130084A0949FF3003787F2B00D15C\n:1055800010BD02240457002C03DCCB5C43700430B4\n:10559000F3E7D35CFAE7C046EB7C03009B7C030097\n:1055A000F0B50023070085B09E00BE193100FF3121\n:1055B0004A7C9C467F2A01D105B0F0BD544B0220A5\n:1055C0009C5C63460133DBB20442EDD001256046AA\n:1055D0002C4247D15419E0B200904E487C358018D7\n:1055E00040780190C87C097D02900391C121890017\n:1055F000791808009D422BDA68469B000078FB185A\n:10560000FF33587468460079941C98746846007A91\n:10561000E4B2D8746846007B18753E486346821829\n:105620003000FF309578027D023300927D22C67CE7\n:10563000DBB29A4211DA9B00FB18FF335C749D7455\n:10564000DE746A4612781A7563460333DBB2ABE741\n:105650000468013D44600438CCE70868013A4860BA\n:105660000439E6E70130C0B2010044318900C95D68\n:105670000029F7D07F2909D008242548405C204222\n:1056800000D091E72439012900D88DE73000511C62\n:10569000C9B200911F49FF30891849787D250191D1\n:1056A000C17C0291017D0391C121890079180C0010\n:1056B0009D4223DA6C469B002478FB18FF335C7410\n:1056C0006C462479134D9C746C46247ADC746C46C9\n:1056D000247B1C75941CAA1863469678027D0233BD\n:1056E00000927D22C57CDBB2E4B29A420BDA9B00C9\n:1056F000FB18FF335C749E74DD74A2E72668013DDD\n:105700006660043CD4E70868013A48600439ECE775\n:10571000FC7B03009B7C0300F7B500229300C318B9\n:10572000FF335C7C002C03D10132D1B20A00F5E7D3\n:105730007F2C00D127E1102693490D5D511CC9B281\n:10574000354228D0DC7CAD06ED0FA4462C00C125E7\n:105750001434AD001F7D019445196D368E4215DA63\n:105760006C468D0024794519FF356C740024AC74A7\n:1057700064462F75EC745C7C352C00D0C5E05A7BF8\n:10578000824CA25C5207D1D5102285E02C68013EE4\n:105790006C60043DE2E74E2C1CD118220D24DD7C08\n:1057A0005C741E7DC1239B00C31870348C420CDADC\n:1057B0008B00C318FF335A740022DD749A741E756F\n:1057C000B4E71B22EAE71C22E8E71F68013C5F60A0\n:1057D000043BEBE74F2CF4D0502CF4D06DB2002DED\n:1057E0002BDADD7C002D28D00D004435AD002D5C7A\n:1057F000002D22D1961CF5B20195AD004519FF355B\n:105800006F7C7F2F19D0604EF75D7F2F15D9EF7C0D\n:10581000002F12D0C1237D229B00C318019C94420B\n:1058200006DD1F236B740023AB74EB742B757DE7CF\n:105830001C68013A5C60043BF0E7172C2ED15C7BBE\n:10584000013AD2B2452C1DD11B3C5C731500433587\n:10585000AD004D4C2D5C655D7F2D00D866E70132B3\n:10586000D2B292008218FF32557C002D00D180E028\n:10587000645D7F2C00D859E7D27C002A00D055E720\n:105880001E3209E0392C01D10D3CDEE73E4A125DA3\n:105890007F2A00D84AE712225A7447E7182C07D10A\n:1058A0005A7B394CA25C7F2A00D83FE71322F3E7EA\n:1058B000202C05D15A7B3C2A00D037E7163AEBE77B\n:1058C000482C15D15C7D7F2C02D14B245C7403E005\n:1058D0002D4D2C5DA406F8D55C7C2B4D2D5DED0780\n:1058E00000D448E75D7B202D3CD10C3C5C741DE767\n:1058F0003C2CF1D15A7D7F2A00D117E7224CA25CC3\n:10590000920600D512E73F22C6E72A2C16D1DA7C90\n:105910001C7DC1237D259B00C3188D4209DA2B25F0\n:105920008B00C318FF335D740025DA749D741C75F9\n:10593000FCE61E68013D5E60043BEEE72C2C11D1B5\n:10594000DA7C1C7DC1237D259B00C3188D4204DABF\n:105950008B00C318FF332D25E5E71E68013D5E600F\n:10596000043BF3E7452C00D170E7392C00D0DDE68D\n:105970006CE7527D7F2A00D1D8E6A25C7F2A00D84E\n:10598000D4E61E2288E7F7BDFC7B03004D7C0300B4\n:10599000F0B50022060085B0130044339B009B5DE8\n:1059A0007F2B31D05B4CE35CDB072AD51300511E03\n:1059B000C9B244318900584F7118013BDBB2002B4A\n:1059C00023D008787F2803D0385C04397F28F4D9A5\n:1059D00099007118FF31487C7F280ED02027255C64\n:1059E0003D4204D04C4D285C0425284205D0887CDB\n:1059F0004508AC460130604488740133DBB2934201\n:105A0000E6D10132D2B2C7E70023022712E06B07CA\n:105A100008D4EB070DD56246FF32937CD9085B1A98\n:105A2000937406E0039B039A9B7B99080133CB1880\n:105A30009373029B9A00B2181100FF3194464A7C7E\n:105A40007F2A64D034485D1C845CEDB2029565B257\n:105A5000002D21DA029A9200B218FF320392527C92\n:105A60000192855C019C2A0041257F2C00D0150005\n:105A700040242242CBD1019C123C012CD9D8402297\n:105A80000233DBB244339B009B5DC35C1342D0D036\n:105A90008B7C013B8B74CCE71E4DAA5C08252A4207\n:105AA0000ED0029B9B00F318FF335A7C7F2AC0D094\n:105AB000825C3A42BDD006229A7405229A73B8E7F6\n:105AC0003C421AD00133DBB21A0044329200925D9C\n:105AD000002AF7D07F2AACD00F498A5C3A42A8D07E\n:105AE0009B00F318FF339A7C520801329A74624685\n:105AF000FF32937C5B08013392E710231A4298D05F\n:105B00004B7BC35C3B4294D08B7C023BC2E705B02D\n:105B1000F0BDC0464D7C0300FC7B030070B5040063\n:105B2000FFF7D4FB2000FFF777FC23000022FC33B3\n:105B3000DA601A61904226D02500224E1135336872\n:105B4000FF35934203D029001F48F9F71DFD2000BF\n:105B5000FFF7E2FD2000FFF73FFC2000FFF708FD04\n:105B60002000FFF715FF2000FFF71AFDC4222B00CD\n:105B70009200A1181A78502A06D97F2A07D000204F\n:105B8000124B134A1A6070BD04338B42F2D1336852\n:105B9000002B02D00F480AF07DFA2000FFF7C0FB6F\n:105BA0003368002B03D029000B48F9F7EDFC2000E7\n:105BB00010F024FE054B0949186812F075FC4342A9\n:105BC0005841E0E7442A0020A47B03006400002041\n:105BD000B37B0300D97B0300E97B0300D50C0300F2\n:105BE00010B50400080010F04EFE0300002C03D096\n:105BF000012C06D0002003E00348002B00DC034802\n:105C000010BD40002043FBE770DE020068DE0200AA\n:105C100043684B6083688B60C3680800CB60014BAE\n:105C20000B60704764E4020030B5040087B00D00DB\n:105C30000020042A25D1200010F025FEAB0722D138\n:105C4000184B2A689A421ED103AA2900EBF74CFB95\n:105C500010200BF059FB144BE2680360039B616852\n:105C600053435B184360049B6168019353435B1883\n:105C7000059983604A43C260002902DAE2689B1AF0\n:105C8000836007B030BD002301002A002068F1F7CF\n:105C90009FFFE36858436368C0180123400018431E\n:105CA000EFE7C046D0D7020028E40200F0B50E00AE\n:105CB000002785B0110003901D000122032330004E\n:105CC0000097FBF7F5FF10200BF01EFB039B040071\n:105CD000036001234760C36028689E4205D1F1F745\n:105CE0009FFEA060200005B0F0BDF1F799FE606056\n:105CF0006868F1F795FEA060032EF3D1A868F1F76C\n:105D00008FFEE0600028EDD10148FCF7BDFEC046E3\n:105D1000E67D030070B50D004A688B6808490400F1\n:105D20000BF069F8EA68012A04D1064920000AF05C\n:105D3000A1FF70BD044920000BF05DF8F9E7C046F3\n:105D4000F07D0300EC1E0300FD7D0300136810B519\n:105D50001400002B05D1A42904D140680CF015FED5\n:105D6000206010BDB9235B00994201D18068F5E73E\n:105D7000024B9942F5D1C068F0E7C046BF0200006F\n:105D80000722436804481B791340044AD35C002B64\n:105D900000D003487047C04670DE0200DB000020E0\n:105DA00068DE020010B50124037A05499B005A58A9\n:105DB0000448224200D10448A243CA5010BDC04644\n:105DC000502B002070DE020068DE020070B5037AFE\n:105DD000064C05009B00185940080CF0D6FD012226\n:105DE0002B7A9B0019590A401A5170BD502B002084\n:105DF00030B5A222A025D200ED05AA580723CA403B\n:105E00001100164C0340E056421EC90700D5421C43\n:105E1000022A0ADC002082421ADB1149CD5C85424D\n:105E200001D0C8540230E25430BD072A09DD0C2AE3\n:105E300010DC0B490320CD5C002DF4D10238C8548E\n:105E4000F1E707490320C95C0029ECD10800EAE723\n:105E50000200E8E703200C22E5E7C046E30000204B\n:105E6000DB0000201D4B70B559791879FFF7C0FF92\n:105E7000022805D11A490B689A1C012313430B60B1\n:105E8000184B59791879FFF7B3FF022805D1144947\n:105E90004B689A1C012313434B60134C2000F5F709\n:105EA0008FFB124DA84203D161792079FFF7A0FF43\n:105EB0000F4C2000F5F784FBA84203D161792079CB\n:105EC000FFF796FF0B4C2000F5F77AFBA84203D1B1\n:105ED00061792079FFF78CFF70BDC0468096020083\n:105EE000502B0020209602001096020020B80200DD\n:105EF0005896020068960200072203791340014A6F\n:105F0000D05C7047DB00002037B50400A068FCF7C8\n:105F1000EDF9019000280ED06568074B9D4205D031\n:105F200001AB002201212800FCF788F8F1F7B6FE4A\n:105F30000028EBD001983EBD388D0200BFF34F8F93\n:105F4000024B034ADA60BFF34F8FFEE700ED00E03B\n:105F50000400FA05F0B597B018220021060010A839\n:105F600012F058FA132110A811F0DCFF032110A839\n:105F700012F0FCF84C4B1B68002B00D10133DBB254\n:105F800002934A4A012300210BA803F047F9484B2A\n:105F90009E4200D9002672B6464B64211C68464BCF\n:105FA0003000079303F068FF052510306843201880\n:105FB00008900A21300003F05FFF0A2104F042F844\n:105FC000103169436118099130000A2104F03AF850\n:105FD00010314D43802364190A9400249B010193DE\n:105FE000029B002B5DD0002500272E1F07AB9B19BD\n:105FF0000593032C03D1802300249B01019307AB5D\n:106000005B592E4A03936300D318049300231900AD\n:1060100006205843049A16187678B4466246039EC2\n:10602000B25C10269446049A105C62460641164201\n:1060300002D00120984001430133092BE8D1C94324\n:106040001F4B059A090119401268039B934225D101\n:10605000312F23DC00210BA812F07EF8FA23159AC9\n:106060001199DB00106801421BD0013B002BF9D1D4\n:10607000019B01345B000193FA230137E4B25B001A\n:106080009F42B6D10435102DAED1074B1B68002BB3\n:10609000A6D0029F013FFBB20293A1E7019B1943E7\n:1060A000D9E7FFF74BFFC0465C2B0020F0FF000054\n:1060B000E703000068000020397E0300037E030030\n:1060C000F01F0000F0B500281BDD0F4C421E2768B2\n:1060D00011000020BE09FB0F73407B403E097D0884\n:1060E0007340BF087B406B40DB072B4301251F003B\n:1060F00040002B401843E940ECD18242E8D32760AE\n:10610000F0BD0248FCE7C046582B002017FCFFFFFB\n:106110000023F0B50121A12604241F00094D0A48DF\n:106120000A4A2B60F6000160576051680029FCD0D4\n:1061300081591B02013C0B43002CF5D12B6001233C\n:106140004360F0BD582B002000D00040FCD0004040\n:10615000014B18607047C046582B0020020010B554\n:10616000014B12CB12C210BD602B0020034B1A68EA\n:10617000034B1A607E225A607047C04668000020B8\n:10618000602B002070B5051E14DD0B4E0B4C3368E0\n:10619000002B02D0206811F013FEFA2120680024A1\n:1061A000074B89008361C4626943356011F010FEBA\n:1061B000200070BD0348FCE7682B0020982B0020CE\n:1061C0006D62010017FCFFFFF8B5114F06003D6836\n:1061D000002D0AD1302012F097F8040002F00CFED6\n:1061E0000C4BA5612360E5623C600B4D2B68002BD6\n:1061F00009D1102012F088F8040011F08AFD200067\n:106200002C6011F060FD3000FFF7BCFFF8BDC04608\n:10621000982B002038E90200942B0020014B1868CD\n:106220007047C046682B002070B50D4C2368002BCA\n:1062300003D00C4B1B68002B02D10620FFF7C4FFD4\n:10624000206811F057FD02000749C3170D684E681A\n:106250005219734120680A604B6011F051FD70BD06\n:10626000942B0020982B00201801002010B5FFF778\n:10627000DBFF0024054BA200D058002802D00368A1\n:106280001B68984701340A2CF4D110BD6C2B0020F8\n:1062900010B5FFF7C9FFFA22034B9200186859683E\n:1062A000002303F04DFF10BD1801002010B5FFF7CB\n:1062B000BBFF024B1868596810BDC046180100208A\n:1062C0000B4B10B51B680400002B03D0094B1B6857\n:1062D000002B02D10620FFF777FF0023064A990022\n:1062E0008858002801D00133F9E78C5010BDC04612\n:1062F000942B0020982B00206C2B0020002310B53D\n:10630000044A99008C58844201D00133F9E70020F7\n:10631000885010BD6C2B002010B50400002902D05D\n:106320000B78002B03D1034B2360200010BD10F02D\n:1063300005FBFAE770E50200014B03607047C046B9\n:1063400070E5020010B50548054C206010F070FBA8\n:10635000044A0549200011F0C8FF10BD70E5020095\n:106360009C2B0020000000202F690200084B73B511\n:106370001C680500002C0AD001002668083108229C\n:10638000684612F02BF80CCD31682000884773BDA9\n:10639000A02B002010B5054C0121200010F03CFB83\n:1063A000034A0449200011F0A0FF10BDA42B0020D7\n:1063B00000000020D56902000388074A10B50120BB\n:1063C000934208D0834202D00020DB0703D41E2072\n:1063D000FFF7C0FD002010BDFFFF00000048704720\n:1063E00016FCFFFF10B5124C0023083482800460B5\n:1063F0004162022414220100837184720363838644\n:10640000028136310A78C360A243F134224003612D\n:1064100043618361C36103620A70020040321370FA\n:10642000021DD387013343878387C38710BDC046CE\n:1064300090E50200F0B5514F97B03B680600059318\n:10644000002B3FD106AC0B331C222121200001F090\n:10645000B7F80EAD0B231D2222210AA801F0B0F8D7\n:106460000B231B222321280001F0AAF8082011F099\n:106470004BFF0122059B1100049011F0C8FA3A214C\n:10648000300011F0CBF9002827D0A38812ADAB80E3\n:10649000A3795C20AB713A4B1293A3681493237BCE\n:1064A0002B73637B6B73A37BAB7311F02DFF042302\n:1064B0000193363300932A00049B3100040001F05D\n:1064C000EDFC3C602F4B2D4C1868002802D0216851\n:1064D00010F050FC206817B0F0BD3221300011F0F0\n:1064E000CDF900281CD0A38812ADAB80A3795C2025\n:1064F000AB71234B1293A3681493237B2B73637BA1\n:106500006B73A37BAB7311F0FFFE042301932E3357\n:1065100000932A00049B3100040001F05DFED0E7E7\n:106520003C21300011F062F9002822D0AB8812AC77\n:10653000A380AB79A420A371114B1293AB68149381\n:106540002B7B23736B7B6373AB7BA37311F0DCFE3C\n:10655000052305000293013B019338330093220089\n:10656000049B310001F0B8FB064B3D6044351D60D3\n:10657000A8E73220FFF7EEFCA4E7C046A82B0020D6\n:1065800080E50200AC2B0020F0B56149C56885B0FC\n:106590008D4254DA0300022236331B78134059D15E\n:1065A00004698C4264DA020036321278520768D4E9\n:1065B000426901920200019E40328E426FDA010070\n:1065C00036310978090774D4002B7DD113780293F2\n:1065D000002B16D006000127011DCB8F3636013364\n:1065E0009BB2CB8703963678BC46374000D188E013\n:1065F0001D2B06D963469E43039B1E700023CB8749\n:10660000137010F062FA434A0723904276D9424948\n:10661000043B8D4272DBC8220133920095426DDC4F\n:10662000023B8C426ADB013B944267DC01980433F5\n:10663000884263DB0133904260DC00235EE0C822C5\n:10664000002352009542ABDD030036331A78002355\n:106650009207A5D4012306001F003636327854086D\n:10666000A7433C0002279C40BA432243327097E77D\n:10667000C822520094429BDD020036321278520743\n:1066800096D406000122363633789F08BA43970025\n:10669000042293431A003A433270012388E7C82149\n:1066A000019E49008E428FDD0100363109780907CD\n:1066B0008AD40100012636310B78DF08BE43082753\n:1066C000F600BB4333430B701378032B00D97DE7EF\n:1066D0000133DBB21370012B03D10021031DD987D5\n:1066E00074E7042B00D071E7020036321178033BC7\n:1066F0000B43137000230430C3870B33180005B01D\n:10670000F0BD092B00D87CE7029BCF87013B77E7E0\n:1067100070FEFFFFFF700200E0FCFFFFF0B5040019\n:1067200087B0C06806F044FA00900191206906F035\n:106730003FFA04900591606906F03AFA02000600FB\n:10674000802000060B180F000098019907F02AFA24\n:1067500006F0BAFAE062051C07F0B0F90390281CB5\n:1067600006F0BEFC051C039806F05CFA009A019B3B\n:1067700005F02EFC00900191281C06F053FA32001F\n:106780003B0005F025FC02000B000098019905F084\n:1067900091FE02000B000498059907F003FA06F039\n:1067A00093FA0022051C00233000390003F07AFC24\n:1067B000002806D1A5620223A2791343A37107B072\n:1067C000F0BD0021281C03F0A7FC0B4E002811D1BE\n:1067D0000A4F281C06F026FA02000B003000390090\n:1067E00005F068FE32003B0004F0CCFC06F06CFAC9\n:1067F000A062E0E7024FECE7EA2E4454FB21F9BF28\n:10680000FB21F93F0048704716FCFFFF002310B53D\n:106810000400838083710D4821640830206080204B\n:10682000C000A061E0612062E36020002361636139\n:106830006362A362E36223636363A363E3636364EA\n:10684000110010F04EFA200010BDC046C4E5020051\n:10685000F0B5504F97B03B6806000593002B3FD131\n:106860000B331C22212106A80AAC00F0A9FE0EADB4\n:106870000B231D222221200000F0A2FE0B231B224D\n:106880002321280000F09CFE082011F03DFD01228C\n:10689000059B1100049011F0BAF81D21300010F092\n:1068A000D5FF002825D0A38812ADAB80A379602046\n:1068B000AB71394B1293A3681493237B2B73637BC7\n:1068C0006B73A37BAB7311F01FFD0523019318338A\n:1068D00000932A00049B3100040001F0B3FB3C60EC\n:1068E0002E4B2C4A1B681068002B00D0436417B055\n:1068F000F0BD3C21300010F0D9FF00281CD0A38847\n:1069000012ADAB80A3796020AB71234B1293A368C7\n:106910001493237B2B73637B6B73A37BAB7311F09B\n:10692000F3FC05230193373300932A00049B3100C5\n:10693000040001F0F3FCD2E73C21300010F056FFD8\n:10694000002822D0AB8812ACA380AB79A420A3711D\n:10695000114B1293AB6814932B7B23736B7B637384\n:10696000AB7BA37311F0D0FC052305000293013B20\n:106970000193383300932200049B310001F0ACF9FD\n:10698000064B1D6044353D60AAE73320FFF7E2FA6D\n:10699000A6E7C046AC2B002080E50200A82B002013\n:1069A00030B50425837985B004002B421BD10368E0\n:1069B000DB699847200010F0CEF9A379A1882B431A\n:1069C000A3710322012368460FF0F4FFA0790300AE\n:1069D000AB43A3710223184043425841034B40424A\n:1069E000184005B030BD0248FBE7C04614FCFFFF6D\n:1069F00015FCFFFFF0B5040089B0406C10F01FF9E2\n:106A0000071C606C10F00EF902222100061C05A87C\n:106A100010F0B2F9069804F02BFB051C079804F05F\n:106A200027FB041C381C07F049F80390381C06F0BB\n:106A300057FB0190301C07F041F80290301C06F023\n:106A40004FFB0399071C201C03F0E6FF0199061C6D\n:106A5000281C03F0E1FF011C301C04F00FF9061C98\n:106A6000059804F005FB391C03F0D6FF0299071CBA\n:106A7000281C03F0D1FF039903F0CEFF011C381C42\n:106A800003F058FC0299051C201C03F0C5FF019976\n:106A900003F0C2FF011C281C03F04CFC311C07F062\n:106AA00089F90F4903F0B8FF06F0BCF80D4A0E4B08\n:106AB00004F084FE06F008F9011C0C4804F0DEF82E\n:106AC0000021041C03F014FB002804D0201C0449FE\n:106AD00003F030FC041C201C04F0AAFA09B0F0BD3D\n:106AE0000000B443EA2E4454FB2119400000B44294\n:106AF0001FB50122010001A810F03EF9029804F030\n:106B0000B7FA041C019804F0B3FA211C07F052F9FB\n:106B10000D4903F081FF06F085F80C4A0C4B04F098\n:106B20004DFE06F0D1F80021041C03F0E1FA002824\n:106B300004D0201C074903F0FDFB041C201C04F0BA\n:106B400077FA04B010BDC04600003443EA2E445426\n:106B5000FB2109400000B44310B5837904005A07B3\n:106B60000DD49B0701D4FFF71BFF636C2000002BA3\n:106B700002D0FFF73FFF10BDFFF7BAFFFBE7014868\n:106B8000F9E7C04615FCFFFF82B0F0B50400EDB098\n:106B900064207393729211F020FA052210A811005C\n:106BA00010F0A9FF974911A801F0CEFD002221ABFA\n:106BB0006CA91A605A609A600C339942F9D1192273\n:106BC000002113A811F026FCA06810F0BEFC0026DE\n:106BD0000B90FF21A06800F0B5FB8B4FA06800F080\n:106BE00041FB07960996884B9F4203D0874B9F42F3\n:106BF00000DBFDE0A06810F0F6FCA56884491AA847\n:106C0000FFF78AFB78221AA9280000F071FB1AA866\n:106C10000FF08DFE00267C4F0322099B6068013334\n:106C20001A4009920FF0E9FF050060680FF0ECFFD1\n:106C30000022784B05929D4210DB013205922A001A\n:106C4000C8320BDBAA22042192000591954205DC93\n:106C500002220592C82D01DD013205920022069222\n:106C6000984210DB012306930300C8330BDBAA23F1\n:106C700004329B000692984205DC02230693C82842\n:106C800001DD0133069310A810F02CFF002513AB93\n:106C9000EB5C012B08D160496B00CA185278C95CC3\n:106CA00010A8FF2301F0E2FC0135192DEFD16B464E\n:106CB00018229A5E6B4610A81421595E099B01F0B8\n:106CC000D5FC002F01DB0F2E07D90023A06800930D\n:106CD00074301A0010A910F015FF01230893089BC7\n:106CE00005995A004C4B9B189A1E12788A4226D15D\n:106CF000013B1B78069A934221D1089A6CAB9B18F2\n:106D0000663BFF3B0A931B78012B18D00C23079A94\n:106D1000216853431D0000220CA810F02DF821AA71\n:106D20002B0094460CAA634423CA23C301220A9B66\n:106D300001361A70079BF6B20133DBB20793089B4A\n:106D4000013308931A2BCAD1642011F046F9079B2E\n:106D5000643F3FB2182B00D845E71A0021A91AA8B2\n:106D600010F06AFA6A461DAB23CB23C21B6813607E\n:106D70001A991B9A1C9B20680FF0C5FFE568002D2F\n:106D80000CD0264912A8FFF7C7FA1C231AAA12A989\n:106D9000280010F012FD12A80FF0C9FDA06810F035\n:106DA00022FC11A912A8A56810F094FE00221C4B29\n:106DB000009212A901932800130000F06FFA12A8A4\n:106DC00010F07BFEFA20800011F007F9A06810F0A7\n:106DD0000AFC0B99A06800F0B5FA11A810F06DFE3E\n:106DE00010A810F06AFE6DB0F0BC08BC02B01847E5\n:106DF000002F02D00F2E00D00EE7A06800F032FA6C\n:106E00000AE7C046198003008C3C0000D18AFFFFCE\n:106E10005E80030058FDFFFF7E8003007380030047\n:106E2000DC050000F0B587B001930EAB1B880600AF\n:106E300003930D9B0D000093019B02920C9F002B6E\n:106E40003ED0002F02D1009BDB0739D5282011F05E\n:106E50005BFA040010300FF0A3FD6B461B8918206D\n:106E60002580638011F050FA0500009B08220593ED\n:106E7000019B002103600C30049711F0CBFA08222B\n:106E800004A9281D11F0AAFA0E4B02226B610023FF\n:106E90000399E3602362636233680A43A560A280BA\n:106EA0005B68210030009847002807D0200010F0D0\n:106EB00099FD2000282111F01FFA034807B0F0BD0A\n:106EC0000248FBE75D6E020016FCFFFF17FCFFFFA8\n:106ED00030B54260002283600C4B04000160C26048\n:106EE000186887B090420DD00592C03202926A466F\n:106EF000074904AB049122CB22C2230003220521BF\n:106F0000FFF790FF200007B030BDC046A02B002047\n:106F1000896B0100F0B5040085B0637A9C46002BB4\n:106F200004D1200010F0A6F905B0F0BDA37A266FB9\n:106F300001931023019AF35600259B1801229A40D1\n:106F40002900F36803920293029BAB4231DDB368E0\n:106F5000019A6B439B1872695B00E77AD3181A7821\n:106F60005878E379012F14D15F1E3F1A10003A00C0\n:106F70005B004343606F8218D3189B79634500DD43\n:106F80006346627B1A4202D00123AB4019430135AC\n:106F9000DAE7022F05D15F1EBA1A277A013F381AA5\n:106FA000E6E7032FE4D1277A013FBF1A0200380039\n:106FB000DEE71123C943F356606C994023691940F9\n:106FC000039B194311F0C8F8A27B072AACD8637B56\n:106FD0000C495B006373531CDBB290004158A373F0\n:106FE000022A03D8080010F0EDFF96E7064B2000B8\n:106FF000236300236363054BE4622364143010F0C1\n:10700000E7FE91E7F0E50200156F01005F720200F4\n:1070100010B50400044B036010F0D2FE200001F014\n:1070200001FF200010BDC04638E9020010B5040081\n:107030000E4B08330360FFF761F92000743010F045\n:107040003CFD2000603010F038FD200058300FF07B\n:107050006EFC200050300FF06AFC2000044B14300E\n:107060006361FFF7D5FF200010BDC04610E60200A7\n:107070005CE90200F8B500250400324B8580083336\n:1070800003608571143016000F0001F0B5FE20007A\n:107090002D4BE562636125645030FFF74DF9200008\n:1070A0005830FFF749F92000603001F0D9FA20008C\n:1070B0000423F25E33682667590009B2743010F079\n:1070C0001AFD3368226FE37173680126237210235F\n:1070D0006581A7802561D35691685918994204DDCE\n:1070E0003000984001330543F8E711230120D356BF\n:1070F000D1685918994206DD02009A402669013389\n:1071000032432261F6E7142011F0FEF822690021D3\n:107110002A430123060002F081F8FF232200637254\n:107120000133A381002348326664A37320001370E7\n:10713000A366FFF7C5F80123A27920001343A371CA\n:10714000F8BDC04610E602005CE90200F0B5437AE3\n:1071500085B00400002B04D1200010F08BF805B09E\n:10716000F0BD0122837A11009C461023066F002592\n:10717000F35603926344994002912900F368019306\n:10718000019BAB422CDDB36872696B4363445B00C7\n:10719000E77AD3181A785878E379012F10D15F1E57\n:1071A0003F1A10003A005B004343606F8218D31807\n:1071B0009B79002B02D0039BAB4019430135DFE7DD\n:1071C000022F05D15F1EBA1A277A013F381AEAE763\n:1071D000032FE8D1277A013FBF1A02003800E2E707\n:1071E0001123C943F356606C994023691940029BEF\n:1071F000194310F0B1FF667AB31EDBB2FC2B14D832\n:10720000FFF70CF80B4B0500236300230A48636368\n:107210000A4BFF21E4622364704302F02DFE290033\n:1072200041432000143010F0D3FD637A012B00D9C4\n:1072300095E791E775720200B60300005F720200E5\n:107240001FB5012381881A0068460FF0B3FB0123A4\n:1072500003491A0068460FF0ADFB05B000BDC046FB\n:10726000FE0300001FB5030048331A780400002A0B\n:107270000DD000221A70012381881A0068460FF091\n:1072800099FB012304491A0068460FF093FB200084\n:10729000743010F027FC1FBDFF03000073B5079C7E\n:1072A0000500002C1CDB060048363078002802D090\n:1072B0003078012816D106981BB2C0B20090280081\n:1072C00012B2743010F01EFC002C07D02B004A3391\n:1072D0001C80002407234C352C803370200076BDA1\n:1072E000014CFBE7014CF9E717FCFFFF12FCFFFF25\n:1072F000F8B50400171E1DDD060048363378002B54\n:1073000002D03378012B17D12200E3795632013BAA\n:10731000137023000025200054331D8050300FF0DF\n:1073200023FB23004A331F80022328004C3425808E\n:107330003370F8BD0148FCE70148FAE717FCFFFF8E\n:1073400012FCFFFFFF2902D841720020704701485C\n:10735000FCE7C04617FCFFFF13B5040004A8007843\n:107360000090200010F08BFC002801D1207516BD84\n:107370000048FCE70EFCFFFF13B5040004A80078EA\n:107380000090200010F063FC002801D1207516BD8C\n:107390000048FCE70EFCFFFF7FB50D0011000F2237\n:1073A0006A4404001E1E117016D0089B002B13DDCA\n:1073B000012329000093FFF7DFFF002802D00748D0\n:1073C00004B070BD0090089B320029002000FFF738\n:1073D000C3FF0028F4D0F2E70148F1E70EFCFFFFFD\n:1073E00017FCFFFF10B5040086B0006C02F05AFBDA\n:1073F000217BA0228B00185100200C4BD20098500A\n:107400000B4A14309850636C68465B7CC91849B2CB\n:1074100010F03AF9039B019A03211A60207B013096\n:10742000C0B202F025FD217306B010BD007000400F\n:107430000405000082B070B50400002588B00C92ED\n:107440000D93636C9A68AA420ADD197C02A8491957\n:1074500049B210F019F9069B039A01351A60F0E75A\n:107460005D7C237B02A8ED186DB2290010F00CF9A9\n:10747000039A059B01921A600021182202A810F0BD\n:10748000C9FF02A80022290010F051FD206C00283D\n:1074900002D0082110F030FF082010F035FF29003D\n:1074A000060002F0D9FA094B2000E3620023FA211A\n:1074B0002363074B2664A462E3631030090110F0D4\n:1074C00087FC08B070BC08BC02B01847E573010027\n:1074D00033760200F0B504000E00150085B01F00E1\n:1074E0000CAB1B88103001930FF05AFA2680658090\n:1074F000182010F009FF02AE050033000AAA03CAE3\n:1075000003C32F602800082700213A000C3010F038\n:1075100081FF3A003100281D10F060FF064B022267\n:107520006B61200000230199A5600A43E360A280FB\n:107530002362636205B0F0BD4976020070B50400B5\n:1075400086B010300D0001F057FC0023194AA362E9\n:107550002261194AE36316686564237323606360DC\n:10756000A3609E4220D0154A28200492059310F073\n:10757000CBFEC02305006A46029304AB03CB03C2D3\n:107580002300062102222800FFF7A4FF3368290008\n:107590005B6830009847002806D0280010F022FAD7\n:1075A0002821280010F0A8FE00232000236406B044\n:1075B00070BDC0465CE90200A02B002035740100BC\n:1075C00030B5002403730123034D8471056081806D\n:1075D00082734373846030BD80E5020070B58379A7\n:1075E0000400DB0703D51821806810F085FEA3791D\n:1075F0009B0703D51821A06810F07EFEA3795B07D6\n:1076000008D5A0230021164ADB00D150A06808311C\n:1076100010F072FE0826A379334209D0A568002D28\n:1076200006D0280010F0FAFA3100280010F064FEAD\n:10763000A379DB0605D5A068002802D00368DB68C3\n:1076400098476023A2791A4205D0A068002802D08A\n:1076500003685B6898470023A360A37170BDC046B0\n:1076600000700040F7B50126037B040033422AD0A6\n:10767000612385791D4017D1FFF7B0FF182010F066\n:1076800043FE0E230700E35618220093637B290074\n:10769000019310F0BFFE019A0099380010F047FCEA\n:1076A000A379A7603343A3716023A279A0681A422B\n:1076B00002D010F0FCFAFEBD436940681B68184018\n:1076C000431E9841F7E70148F5E7C04616FCFFFF67\n:1076D00010B50124837941731C4004D0806810F0F8\n:1076E00045FD002010BD6022134203D0806810F0D9\n:1076F000E5FAF6E70048F5E716FCFFFF10B50029AC\n:1077000003DB024B196010F08FFB10BDB02B002083\n:1077100070B504001E0004AB1D7801F037FB20009B\n:107720000E4B40302360FEF707FE230001364C333A\n:10773000013522001E701D730023E1214E32A36427\n:107740006365138053809381D381013B2000636480\n:107750004902FFF7D3FF200070BDC04658A30200C6\n:10776000F7B580277F053D697C690822113C6C4391\n:1077700006002100684610F031FE104B009A9A4234\n:1077800019D00093002301937969300013396943BC\n:107790000FF0A0FF019A009930000FF0B3FF210015\n:1077A00030000FF097FF7969AB0813396943220065\n:1077B00030000FF099FF0198FEBDC046FECA0000E0\n:1077C000F0B50D00A9B00D9200213022060010A8DE\n:1077D0000B9310F01FFE280010F070FE431C0C935A\n:1077E000102B00D9B6E00B9B202B00D9B2E029006A\n:1077F00030000FF0AEFF071E50D129000C9A10A8E0\n:1078000010F0ECFD0D990B9A14A810F0E7FD802301\n:107810005B051A695F690C92113F7A4330005D691C\n:107820000B92FFF79DFF3022002104001CA810F0EE\n:10783000F1FD290000270C9B1339594330000FF04C\n:1078400049FF0D9730257D430B9B0833ED18A74268\n:1078500043DA290030221CA810F0C0FD10A91CA892\n:1078600010F022FE002828D13C49300022000E9161\n:107870000F940FF047FF6A46099513AB23CB23C241\n:1078800023CB23C223CB23C23000129B1099119A21\n:107890000FF046FF01230D930137D3E70D99103008\n:1078A0000B9A10F08CFD30210400380010F024FDFC\n:1078B000002CA2D1200029B0F0BD6A4609951FAB6B\n:1078C00023CB23C223CB23C223CB23C230001C995A\n:1078D0001D9A1E9B0FF024FFDEE7E5433023ED17D2\n:1078E00025405D430B9B08355D190D9B002B1DD179\n:1078F0000C9B3021981E02F035FAA0422CD017497B\n:107900000134300022000E910F940FF0FBFE6A4606\n:10791000099513AB23CB23C223CB23C223CB23C292\n:1079200030001099119A129B0FF0FAFE0B9930005B\n:107930000FF0D0FE80235B0559690C230C9A133994\n:1079400063434A430233110030000B9A0FF0CCFE20\n:107950000024AFE7024CADE7024CABE7FECA0000E3\n:1079600017FCFFFF13FCFFFF022802D10122014B8D\n:107970001A707047442E002070B5064C050023781D\n:10798000002B04D1044801F045F80123237028009E\n:1079900070BDC046452E00206979010070B50C000D\n:1079A0000EF0C0FF002810D00023144DA40A2B7045\n:1079B00020000FF00AFF002803D00A2010F00DFB72\n:1079C000F6E72B78002BFCD070BD02210C4B0D4A42\n:1079D00099508021C90008005D58002DFCD0A121DC\n:1079E000C9005C5019580029FCD000219950802111\n:1079F000C9005A58002AFCD0E6E7C046442E0020B1\n:107A000000E0014004050000F8B50C0015001E0060\n:107A10000EF088FF002811D00023174F3B70320072\n:107A2000290020000FF0CFFE002803D00A2010F01C\n:107A3000D4FAF4E73B78002BFCD0F8BD01210F48C5\n:107A40000F4B844619508021C9005A58002AFCD097\n:107A500080270022FF00964207DD910068586050A1\n:107A6000D9590029FCD00132F5E7002261465A506D\n:107A7000DA59002AFCD0E0E7442E0020040500007B\n:107A800000E0014008B4024B9C46443808BC604703\n:107A9000CF770200FA21F8B50389C90004005943E1\n:107AA00032480FF0AFFFFA21890002F05BF9304F46\n:107AB0002081A17A38000FF0A5FF230026002500C1\n:107AC00022894C33A072A0361A808C35317800237D\n:107AD0002A2228680FF094FD002801D02548F8BD1F\n:107AE00031781F235B2228680FF08AFD0028F5D12A\n:107AF000317820235C2228680FF082FD0028EDD128\n:107B0000317801232C2228680FF07AFD0028E5D176\n:107B1000317801232D2228680FF072FD0028DDD175\n:107B2000317801232E2228680FF06AFD0028D5D174\n:107B3000A17A38000FF061FF3178C3B20E222868B5\n:107B40000FF05EFD0028C9D1FA212389890059432D\n:107B500006480FF052FF01230343DBB231782A229B\n:107B600028680FF04DFD0028B9D0B7E730E60200D5\n:107B700028E602000EFCFFFF08B4024B9C46443886\n:107B800008BC6047957A0100074B10B51A00040045\n:107B900008323C330260436444300FF06FF8200039\n:107BA0000EF083FF200010BD90E6020008B4024BE7\n:107BB0009C46443808BC6047897B010008B4024BEE\n:107BC0009C46443808BC6047D9770200F0B50425CC\n:107BD00083798BB004002B4204D100F0EFFBA37932\n:107BE0001D43A57120009030FFF73CFD0026B042F8\n:107BF0000FD12300A033197820000C2307AD009388\n:107C00008C302B0001220068FFF7C6FB061E03D054\n:107C10002C4E30000BB0F0BD0A2304AA9B182A7822\n:107C20005A706A781A700022985EAA785A70EA78B8\n:107C30001A700022995E03912A795A706A791A7033\n:107C400000229F5EAA795A70EA791A7000215A5E62\n:107C500004922A7A5A706A7A1A7000215A5E059242\n:107C6000AA7A5A70EA7A1F251A7000229B5EA27ABD\n:107C70009C46039B504359425143CB172B407A43B8\n:107C80005B185B11A361C3172B401818D3171D4055\n:107C90006423AD18059A5B425343A367642361468E\n:107CA000049A40115A434B43E2676D11221DE06173\n:107CB00025622000D3670EF073FF200044300EF0E1\n:107CC000E5FFA6E70EFCFFFF08B4024B9C464438D4\n:107CD00008BC6047CD7B0100F7B51E00040008AB6F\n:107CE0001B881500019309AB00911A8831000AAB7B\n:107CF0001F88FEF777FB20003A0031004430FEF782\n:107D000085FD134B20001A003C33636423000832C6\n:107D10002260009A8C331A60AB8890308380AB79F4\n:107D20006A4683710B4B92880360AB6803218360C2\n:107D30002B7B03736B7B4373AB7B83732300A03379\n:107D40001A80FFF7C5FC2000FFF7A4FE2000FEBD4F\n:107D500090E6020080E50200F8B5FA260189B60037\n:107D60000400714326480FF04DFE310001F0FAFF88\n:107D7000244F2081A17A38000FF044FE2500A07224\n:107D80005835297800232A22606C0FF039FC00282E\n:107D900001D01D48F8BD297810232B22606C0FF00C\n:107DA0002FFC0028F5D1297801232D22606C0FF0DB\n:107DB00027FC0028EDD1297801232E22606C0FF0DA\n:107DC0001FFC0028E5D1A17A38000FF016FE2978B3\n:107DD000C3B20E22606C0FF013FC0028D9D12189A8\n:107DE000074871430FF009FE01230343DBB22978F2\n:107DF0002A22606C0FF004FC0028CBD0C9E7C046F3\n:107E0000F8E60200F0E602000EFCFFFF10B50400E9\n:107E1000034B083303600EF048FE200010BDC0463F\n:107E200058E702007FB50425837904002B4204D172\n:107E300000F0C4FAA3791D43A57120004830FFF774\n:107E400011FC0025A8420DD12300583319780623D0\n:107E500002AE009301223300606CFFF79DFA051E0D\n:107E600003D00D4D280004B070BD02230021042072\n:107E7000F356A27ADB00715630565B425343C00082\n:107E8000C90051434243A3612368E16122629B6AB6\n:107E900020009847E6E7C0460EFCFFFFF8B5040057\n:107EA000150006AA168807AA0F0012881900FEF707\n:107EB00099FA0F4B6764083323602300AA8848337C\n:107EC0009A80AA7920009A710A4AA264AA68226557\n:107ED0002A7B1A736A7B5A73AA7B9A730023A37155\n:107EE000230058331E80FFF737FF2000F8BDC0463F\n:107EF00058E7020080E5020010B50400034B083388\n:107F000003600EF0BBFE200010BDC046ECE702008F\n:107F1000F0B507005C3787B00400397800231022E1\n:107F2000806C0FF06DFB0326002802D01F4807B0BD\n:107F3000F0BD0F2502ABED1801233978082200931C\n:107F4000A06C2B00FFF728FA184B9842EED02B7844\n:107F5000334203D0642000F0BDFAEAE7FA26218913\n:107F6000134DB600714328000FF04CFD310001F0B5\n:107F7000F9FE20813978A0231122A06C0FF040FB7C\n:107F80000028D3D1A36C21890393714328003F7843\n:107F90000FF033FD01231843C3B2102239000398B8\n:107FA0000FF02EFB0028C2D0C0E7C0460EFCFFFF3A\n:107FB0008CE7020070B50825837986B004002B4257\n:107FC00004D100F0FBF9A3791D43A57120004C30CA\n:107FD000FFF748FB061E0DD023005C3319780623FB\n:107FE00004AD009301222B00A06CFFF7D5F9061E0B\n:107FF00003D0134E300006B070BD0E232A786B44B8\n:108000005A706A7820001A700022995E64224A43EE\n:10801000A263AA785A70EA781A700022995E6422E4\n:10802000524251436163297959706979197000216D\n:108030005B5E5A432368E2631B6A9847DAE7C046EF\n:108040000EFCFFFFF8B50400150006AA168807AA63\n:108050000F0012881900FEF7D9FB0D4BA7640833F7\n:1080600023602300AA884C339A80AA7920009A7151\n:10807000084AE264AA6862652A7B1A736A7B5A73AB\n:10808000AA7B1E829A73FFF743FF2000F8BDC0460B\n:10809000ECE7020080E50200F7B5FA250189204FE0\n:1080A000AD000400694338000FF0ACFC290001F07A\n:1080B00059FEA17A20811B480FF0A4FC2600636CB6\n:1080C000A0720093218958363378694338000193B0\n:1080D0000FF093FC07230343DBB2202201990098A1\n:1080E0000FF08EFA002801D00F48FEBD3178102322\n:1080F0002222606C0FF084FA0028F5D1A17A094899\n:10810000656C37780FF079FC80235B420343DBB268\n:108110002322390028000FF073FA0028E5D0E3E7A6\n:1081200020E8020018E802000EFCFFFF10B5040072\n:10813000034B083303600EF0B8FC200010BDC046AE\n:1081400090E80200F0B50425837985B004002B4245\n:1081500004D100F033F9A3791D43A5712000483004\n:10816000FFF780FA061E0DD0230058331978062336\n:1081700002AD0093A8222B00606CFFF70DF9061EDC\n:1081800003D0144E300005B0F0BD1F200023EA5E7E\n:10819000D31703409B180222A95E5B11CA17024045\n:1081A000521804216F5E5211F9170140C919491183\n:1081B0002B806A80A980A07A5B42434352424243AB\n:1081C0004143E3612368A26121629B6A20009847D2\n:1081D000D8E7C0460EFCFFFFF8B50400150006AA5C\n:1081E000168807AA0F0012881900FEF7FBF80F4B3C\n:1081F0006764083323602300AA8848339A80AA79E9\n:1082000020009A710A4AA264AA6822652A7B1A731E\n:108210006A7B5A73AA7B9A730023A3712300583395\n:108220001E80FFF739FF2000F8BDC04690E802002D\n:1082300080E50200F7B5FA2504000189134EAD0070\n:10824000694330000FF0DEFB290001F08BFD2700B1\n:10825000A36C208100935C373B7881B26943300086\n:1082600001930FF0CAFB6022C3B2019900980FF08E\n:10827000C7F9002801D00648FEBD397801236222E3\n:10828000A06C0FF0BDF90028F6D0F4E7C4E80200B6\n:108290000EFCFFFF10B50400034B083303600EF023\n:1082A000EDFC200010BDC046ECE802007FB50825BB\n:1082B000837904002B4204D100F080F8A3791D4398\n:1082C000A57120004C30FFF7CDF9051E0DD023001D\n:1082D0005C331978062302AE0093E8223300A06CC9\n:1082E000FFF75AF8051E03D00B4D280004B070BDEF\n:1082F0000223F25E96235B425A4362630021725E60\n:1083000020005343A3630423F25E96235343E363A5\n:1083100023681B6A9847E8E70EFCFFFFF8B50400E6\n:10832000150006AA168807AA0F0012881900FEF782\n:108330006DFA0D4BA764083323602300AA884C33E1\n:108340009A80AA7920009A71084AE264AA68626554\n:108350002A7B1A736A7B5A73AA7B1E829A73FFF771\n:1083600069FF2000F8BDC046ECE8020080E502008D\n:1083700010B572B60B4B1C68002C08D020000FF013\n:10838000B0FA0023E364084B2000E36310BD62B63B\n:108390005C200FF0B9FF5C220021040010F03AF8D5\n:1083A000EFE7C046D82B002000400020024B187891\n:1083B000012318407047C046462E0020002310B508\n:1083C00004499C006258002A01D00133F9E760504B\n:1083D000100010BDBC2B002010B50024084BA200DB\n:1083E000D058002802D003685B6898470134062CF7\n:1083F000F4D1044B1B68002B00D120BF10BDC04638\n:10840000BC2B0020D42B0020F8B5FFF7CFFF0028AD\n:108410001CD02A4D2C68E36CDA0718D502273B43A1\n:10842000E364274B1E680423F26C30001343F364AB\n:10843000636BF3630FF06CFA3000716C00F099FA23\n:108440002868C36C3B4201D000F0CDFAF8BD1D4F47\n:108450001D4E3A683168002A1ED129602A6891426F\n:1084600008D11B0706D52C60FFF7B6FF3B68002B31\n:10847000FAD02B6029688C42E8D03368994214D135\n:10848000124B4B63124B8B6320000FF041FA2968AB\n:10849000626C4B6C20000DE0206DB84203D1606D22\n:1084A000002800D002002A60D8E79C42ECD10022CC\n:1084B00010004B6C00F01CFAC8E7C046E02B00200F\n:1084C000B82B0020D42B0020DC2B0020FC3F002008\n:1084D0004379020070B50500FFF768FF002803D15B\n:1084E00028000FF07AFD70BD0C4B1C68E36CDB07B5\n:1084F00006D5FFF73DFF0A4B1860002800D00400A6\n:10850000FDF7C6FE2D18A56420000FF0EAF9054915\n:1085100020000FF0D4F9FFF777FFE4E7E02B00200D\n:10852000B82B0020B42B002070B5114E3278022AEF\n:108530001AD081421AD90C1A072C17D90D0003231F\n:1085400005432B4012D172B60A4DD2005051AA18E1\n:1085500051608022A408120614430460327801326C\n:10856000327062B6180070BD0348FCE70348FAE7B2\n:10857000482E0020E42B002013FCFFFF17FCFFFF18\n:1085800070B5134C06002378124D002B0CD1124904\n:1085900012482B70FFF7C8FF114B984202D11E20E2\n:1085A000FDF7D8FC0123237000242B78A34209DDBA\n:1085B0000C49E300C91830000FF0C9F9002805D1B3\n:1085C0000134F2E71420FDF7C5FC002070BDC04661\n:1085D000472E0020482E002000380020E02F0020E9\n:1085E00017FCFFFFE42B002070B5002819D0104BBA\n:1085F00010491C7800239C4216DDDA00555885424C\n:1086000010D28A18526882420CD9041F2368002BAA\n:1086100002DC1E20FDF79EFC802322681B0613430C\n:10862000236070BD0133E6E71E20FDF793FCF8E7F9\n:10863000482E0020E42B00200268084B406810B54B\n:10864000C018C000101803009A4205D81C688C425C\n:1086500002D31800083BF7E710BDC046FFFFFF1F1D\n:10866000014B03607047C04618E9020030B500684E\n:108670004488A1420CDA8588AA4209DA002907DB7E\n:10868000002A05DB5443401800198371002030BDD7\n:108690000048FCE717FCFFFFF0B5070085B00E00AF\n:1086A0001D00002921DD002A1FDD002B1DD00468DC\n:1086B000638803938B4200DD0391A3880293934266\n:1086C00000DD0292002306340193019B029A93423B\n:1086D0000EDA29002000039A0FF080FE3B68AD19E6\n:1086E0005B88E418019B0133EEE7024805B0F0BD5A\n:1086F0000020FBE717FCFFFFF8B504000D00160093\n:108700001F00002901DB002A02DA0E4B2360F8BDAE\n:10871000100048430630FFF733FF20600EF085F964\n:1087200023685D8023689E80002F06D03B003200C6\n:1087300029002000FFF7B0FFE9E720000FF0D2F991\n:10874000E5E7C04618E90200F7B506000D1E03D1A3\n:10875000244B03603000FEBD00200F000400010028\n:1087600001903B78002B1AD03022524294469C4410\n:108770006246092A11D90A2B0AD1019B2418013318\n:108780000193A14200DA2100002004000137E8E74C\n:108790000028FBD001340020F8E70120F6E76A4604\n:1087A0009288300012B209B2FFF7A6FF33680A249C\n:1087B0009A1D01235B42180029780029CAD00F00B6\n:1087C000303F092F07D85F1C00D1002363435B189B\n:1087D000303B0135F0E7591CFBD013700132030028\n:1087E000F7E7C04618E90200F0B5040087B004A816\n:1087F0000E0001921D00FDF7B1FC236801995A8813\n:10880000914233DA9B889D4230DA1F2E2ED9059B88\n:1088100000939E422ADC05230022203E5E43049BF7\n:108820009B1903930021039BAE189B5C0293019B51\n:10883000CF1823685888009087420EDA9888B04293\n:108840000BDDDB1910270F41009870431B180298AD\n:108850000740781E87417F429F7101310529E6D18B\n:108860000132052ADED1002007B0F0BD0048FBE749\n:1088700017FCFFFFF7B50468070063880E1E01931D\n:108880001EDD994218DA0023063400933B68009AF3\n:108890009B889A4212DA019BA1199D1B2A00200095\n:1088A0000FF09CFD601931000FF00EF93B685B88FA\n:1088B000E418009B0133E8E70FF014F9002000E012\n:1088C0000048FEBD17FCFFFF10B50548054C2060B1\n:1088D0000EF0AEF8044A054920000FF006FD10BD69\n:1088E00018E90200F42B002000000020BB7A0200EF\n:1088F000002815D0006041608260C360046145615A\n:108900008661C761444604624C46446254468462B0\n:108910005C46C462644604636E4646637446846380\n:10892000002A06D0C46B043C043A25681560B442A2\n:10893000F9D18C6BA6464E6BB546002B06D0CC6B9E\n:10894000043C043B1D682560B442F9D10C6BA4467D\n:10895000CC6AA3468C6AA2464C6AA1460C6AA04621\n:10896000CF698E694D690C69CB688A680868496867\n:108970007047006041608260C36004614561866148\n:10898000C761444604624C464462544684625C4675\n:10899000C462644604636E46466374468463C46B73\n:1089A000043C043925680D60B442F9D1C769866971\n:1089B000456904697047006041608260C36004617A\n:1089C00045618661C761444604624C464462544630\n:1089D00084625C46C462644604636C4644637446C5\n:1089E000846304697047846BA646446BA546046B98\n:1089F000A446C46AA346846AA246446AA146046A9D\n:108A0000A046C769866945690469C36882680068C9\n:108A100041687047014B18607047C046F82B002032\n:108A200080B2002807D1BFF34F8F034B034ADA60AF\n:108A3000BFF34F8FFEE7704700ED00E00400FA053A\n:108A40000120054B10B51A7850401870034B1B6875\n:108A5000002B00D0984710BD492E0020FC2B002091\n:108A6000F0B5254B85B01B78DBB20093002B18D0F6\n:108A7000224E234F33685A425A41D2B201923A6889\n:108A8000002A14D1009C002B0BD021E003983B68F6\n:108A900098472C0019E028003368984729E0002CFB\n:108AA00005D005B0F0BD002CFBD1009C019403A8BB\n:108AB0000FF0BAF8009C0500052806D00028E5D084\n:108AC00000221100FFF7ACFF0024019B002BE6D130\n:108AD0000C4B03A91B880B800B4B1D6828000FF063\n:108AE000A5F80528DFD00028D5D000221100FFF717\n:108AF00097FF002CECD1D9E74A2E0020002C002053\n:108B0000082C0020C42D00200C2C0020074B10B591\n:108B10001B68002B07D09847002803D000221100C3\n:108B2000FFF77EFF10BDFFF79BFFFBE7042C002043\n:108B300002210C4B0C4A30B599508021C9000C0021\n:108B40005D58002DFCD0A121C900585019590029A9\n:108B5000FCD0002199508021C9005A58002AFCD02D\n:108B600030BDC04600E0014004050000032370B59D\n:108B7000040098409C4315331840E73383408140FC\n:108B8000012022689A438918074B084A9850802090\n:108B9000C00005001E58002EFCD021605959002944\n:108BA000FCD00021995070BD00E001400405000098\n:108BB00070B5012580260D4B0D4CF6001D519D59B9\n:108BC000002DFCD0802592001218ED00091A904269\n:108BD00005D100221A515A59002AFCD070BD0E58F6\n:108BE00006605E59002EFCD00430F0E700E0014042\n:108BF0000405000070B504000D00160000211022CD\n:108C00000FF008FC054B320023612900200000F022\n:108C10001FFD034B20001C6070BDC046A0860100F4\n:108C2000102C002010B50400016100F0CBFC014BBA\n:108C30001C6010BD102C002070B5054D04002B6881\n:108C4000834203D0016900F0BDFC2C6070BDC046BA\n:108C5000102C0020054B10B51B68002B04D11922E5\n:108C60001821034800F0DEF910BDC0462C2D00206D\n:108C7000D42F0020030010B50020022B0ADD074985\n:108C8000033B9B005A585850824204D0136810008E\n:108C90005B68984710BD01204042FBE7142C002080\n:108CA00070B50C001500022810DC0F4B1B68002B60\n:108CB00001D1FFF7CFFF6619B44205D021780B48E8\n:108CC00000F09EFA0134F7E7280070BD0338084B26\n:108CD0008000C058002803D003681B689847F4E759\n:108CE00001204042F1E7C0462C2D0020D42F002067\n:108CF000142C002010B50C0002280BDC0C4B1B6858\n:108D0000002B01D1FFF7A6FF0A480FF0DCF9207015\n:108D1000012010BD0338084B8000C058002803D044\n:108D200003689B689847F4E701204042F1E7C0469A\n:108D30002C2D0020D42F0020142C0020030010B56F\n:108D40000120022B08DD033B054A9B0098580028B0\n:108D500003D00368DB68984710BD01204042FBE761\n:108D6000142C0020030010B50020022B08DD033B6B\n:108D700005489B001858002803D003681B699847D2\n:108D800010BD01204042FBE7142C002010B5040068\n:108D900000F006F8014B2000236010BD28E9020016\n:108DA0000C4B70B50360002343608360C3600362B3\n:108DB00043628363962304009B01051DC36328005F\n:108DC00000F030F928002200034900F0C7F9200024\n:108DD00070BDC0464CE90200EF7D020010B50400F2\n:108DE000044B03600EF0ECFF200000F01BF82000A5\n:108DF00010BDC04638E90200084B10B508330360C7\n:108E0000002343608360C360040000F017F8044946\n:108E100020610FF0EEF8200010BDC04668E90200A6\n:108E2000B77E020010B50400034B083303600FF057\n:108E30004FF8200010BDC04668E9020000487047A6\n:108E40007CE9020010B502480FF0DCF810BDC04606\n:108E50007CE90200012310B50D4C0E49A364802368\n:108E60009B00CB670C490D4A086D002804D00020F8\n:108E7000086511680131116009490B60A923DB0005\n:108E80001068E358010C9BB20004184310BDC046A3\n:108E90000090004004E100E0FC9000401C2D002008\n:108EA00000E100E0F8B50F4C636C002B0FD00027F9\n:108EB0000D4E67643378BB4209D00C4B1D68FFF739\n:108EC000C9FF2D1ABD4202DC3770FFF7BBFF236DCF\n:108ED000002B05D0064A1368013313600023236575\n:108EE000F8BDC046FC9000404B2E0020202D0020F5\n:108EF0001C2D002070B51B4D2878002831D1012190\n:108F0000194B1A4A596050608020C00501605168B1\n:108F10000029FCD000221649A2205A500424012125\n:108F2000C000D9601C5008381A501248C2261A5086\n:108F3000C122802092000003985080204002985067\n:108F40000D4AB60090590D4C0440C0200002204349\n:108F50009051C0248020640080001051106019607E\n:108F6000297070BD4C2E002000900040FC00004095\n:108F7000040500004C05000000E100E0FF00FFFFD9\n:108F8000044B10B51B78002B01D1FFF7B3FFFFF79F\n:108F900061FF10BD4C2E0020104B70B51B780400F3\n:108FA000002B01D1FFF7A6FF0D4D0E4E2B78002BA5\n:108FB00002D03368A34210D0FFF74CFF201A0A28D2\n:108FC00003DCFFF747FF0A30040001232B70A823BE\n:108FD000054A3460DB00A4B2D45070BD4C2E002092\n:108FE0004B2E0020202D002000900040012310B5C2\n:108FF0000A4ADC0014598C4207DD013BDB00D31820\n:109000005A680168064BCA5010BD0133112BF0D1CC\n:1090100080210268024B4905D150F5E798E902002A\n:1090200024050000F8B50F0016000122244BBA40B9\n:109030000360A023234CDB05195905000A431A518C\n:109040008022195912060A430121B1401A511A59B6\n:109050008A4396211A511A598901520052081A510D\n:10906000FFF7C4FF002204202B6817495A506C39BF\n:1090700058500121996019601900FC31CA601349E8\n:109080005A506A6014391F325A5011495F500918FA\n:109090005A501E517B1C03D0032138000FF009F9F0\n:1090A000731C03D0032130000FF003F90122094B98\n:1090B00029001A60084807320FF090F9F8BDC04641\n:1090C00000200040140500006C0500001C05000095\n:1090D0000C0500002C2D0020D42F0020962310B565\n:1090E000DB00994202DDFFF781FF10BD9E2102687F\n:1090F000014BC902D150F8E7240500000168034B79\n:10910000002A01D1CA5070470E22FBE76C0500000F\n:10911000C1230E4A9B00D15810B5090603D50C494E\n:10912000096A002908D1D3585B0704D5084B0021F0\n:10913000DB68002B01D110BD0121064B1868002807\n:10914000F9D0054B1B689847F5E7C0460020004062\n:10915000FC200040282D0020242D0020034B196006\n:10916000436803499B005A507047C046242D002095\n:10917000282D002000681F4B30B5C3185C426341A6\n:109180005B00002A1CD0002911D0012914D0FF2037\n:10919000C024DD00A8401849A4000A598243C02019\n:1091A000A84002430A5101229A400A6030BDC12200\n:1091B000042192008150EAE7C12280219200F9E760\n:1091C000002908D00129F1D1C222802492008450C4\n:1091D0008258920806E0C2220421920081508258EF\n:1091E0000339D2099143E1D001229A401300034A86\n:1091F000D367DBE700E0FFBF00E100E004E100E04F\n:1092000003681A00FC32106A0128FCD100201062A9\n:10921000014AC9B2995070471C0500000261064A14\n:1092200010B54260054A01738260054A1900026068\n:109230000EF06FFF10BDC046040500501005005031\n:109240000007005001704B1C0AD001238B40436083\n:10925000044BC360044B0361044B4361044B8360C4\n:109260007047C046080500500C050050100500501E\n:109270001405005070B51D00A02304001600DB008B\n:10928000002D0ED000224068C250082902D012489A\n:109290000EF0AAFE032E16D8300000F04FFD170581\n:1092A00010120268D550F0E70223A0220B48D2002A\n:1092B000002D0DD061680B5002238B5070BD04232C\n:1092C000F3E70623F1E706480EF08EFE0023ECE7F5\n:1092D00021680B500123F0E7B08003005405000023\n:1092E000C9800300036810B55A1C0DD0A0220020CD\n:1092F000164CD20098501000154AA14205DC80217E\n:109300008904995001221A5010BD124CA14202DC6E\n:109310008021C904F5E7104CA14202DC8021090537\n:10932000EFE70E4CA14202DC80214905E9E70C4C35\n:10933000A14202DC80218905E3E70A4CA14202DC5C\n:109340008021C905DDE780210906DAE78FD0030017\n:10935000240500001FA107003F420F007F841E006C\n:10936000FF083D00FF117A00F7B5009308AB1B78AA\n:1093700005005BB20F0016000193013357D1614B1A\n:109380001A78022A3ED15978FAB291423AD19978A4\n:10939000F2B2914236D1DA786B461B789A4231D1DB\n:1093A0000123594C03720123002201205B426B60B0\n:1093B0003900564B2C60E250E050A023C131FF3100\n:1093C000DB058900C850524967500099C131FF310F\n:1093D0008900C850A1210098C90060503100C131F6\n:1093E000FF318900CA50A223DB00E650FC3408217B\n:1093F0002800E2601300FFF73DFF46492800FFF711\n:1094000071FFF7BD444A1378DBB2022B0FD15078BD\n:10941000F9B288420BD19078F1B2884207D1D17865\n:109420006A461278914202D12B723C4CBBE73A4B10\n:109430001A78002A50D10232F9B21A705970F1B27A\n:10944000997069460978354CD9702A72019B0133AD\n:10945000A9D0012300222D495B4238002B60023342\n:109460006C6062506350A021C130FF30C90580009C\n:1094700042503000C130FF30800042500098C1306F\n:10948000FF30800042500198C130FF3080004250D0\n:10949000A221C90067501E490098665004396050E7\n:1094A00001981F4960502100FC318A60CA62A721DF\n:1094B000C9006350103163501A481B4960501B4863\n:1094C0001B4960508021042089006050F939FF3920\n:1094D0002800FFF7CFFE94E70A4B1A78002A0CD138\n:1094E00002321A70FAB25A70F2B29A706A46127860\n:1094F000054CDA7001232B72A8E70E480EF074FDBC\n:10950000A4E7C0464F2E002000300040FC0F0000B2\n:109510000C05000040420F00532E00200040004088\n:10952000140500004E2E0020440500004D2E0020A2\n:1095300034050000DA80030003681A00FC32D068AA\n:109540000028FCD105481950D1680129FCD100211F\n:10955000D160A322D20098587047C0461C05000075\n:109560000368074A9950074AFC33196A002902D058\n:10957000002018627047013A002AF6D10120F9E76D\n:109580001C050000A186010010B50368002A03D065\n:10959000802202209200985001221C001A62084A80\n:1095A000FC34E068002806D00020A322E060D2004E\n:1095B0009B580B7010BD013A002AF2D10120F9E747\n:1095C000A186010010B50B4C02680B4BA14205DCD3\n:1095D0000A498160CC214904D15010BD084CA142F8\n:1095E00004DC084981608021C904F5E706498160EF\n:1095F000CD21F9E78FD0030024050000A0860100EB\n:109600007F1A060090D00300801A060070B504008F\n:109610001000A025C026C130FF30F600ED05800007\n:1096200046510800C130FF3080004651A125206816\n:10963000ED004251054A815019002000FFF7C2FF9A\n:10964000A02305212268DB00D15070BD0C0500006D\n:10965000F8B50E001500040000F09CFA264AF1B29D\n:109660001378DBB2012B1DD1507888421AD197783C\n:10967000E8B2874216D16373204B19000022FC31F7\n:109680002360657126718A62A021C9005A501C4965\n:1096900020005A5001325A502A003100194BFFF76E\n:1096A000B5FFF8BD184BE8B21F78012F09D15F78DC\n:1096B0008F4206D19F78874203D102236373134BF5\n:1096C000DBE71778002F04D10123137051709070DD\n:1096D000D1E71A78002A04D101321A7059709870B3\n:1096E000EBE70B480EF080FC0023FC222360657141\n:1096F00026719362FFDEC0464F2E002000300040EE\n:10970000FC0F0000A0860100532E00200040004006\n:10971000EB800300036800221900FC3110B58A6257\n:10972000A021C9005A5006495A5001325A50052208\n:109730000421825641568368FFF768FF10BDC0467A\n:10974000FC0F0000036800211A00FC3210B5916084\n:1097500001315961074B9168002905D00024047339\n:10976000FFF7D8FF200010BD013B002BF3D10120F3\n:10977000F9E7C046A1860100036810B51900FC3165\n:109780008A6A0020012A08D1044C1C5988625A6157\n:109790000238A40701D40120404210BDC4040000D7\n:1097A000F7B5A223A022DB00D205D358BE22019335\n:1097B000314B5200995800293FD0C1218900595896\n:1097C00000293ADA0024E025C0269C50ED00B602BC\n:1097D0002A4BA700F85800282CD0294BE35C002B1B\n:1097E00017D0019B0121E3400B4227D02300A02288\n:1097F000C133FF339B00D2059B589B039B0F032B68\n:109800001CD0204B1B68E3400B4217D01E4B1B683B\n:109810009847A023DB05FF187A5932420AD07A59BB\n:109820001A490A407A51019AE240D3071FD57A5962\n:1098300032437A5101341F2CCAD1F7BD019B01225A\n:10984000E3401342E5D12300A021C133FF339B0045\n:10985000C9055B589B039B0F032BDAD10C4B1B688C\n:10986000E3401342D5D0084B02211B68D0E7802289\n:10987000795992020A43DCE700600040302D002055\n:10988000572E0020B42D0020AC2D0020FFFFFCFF40\n:10989000B02D002030B5040008004D1C1CD00F482E\n:1098A00021600260BE2200200D4C5200A0500D4AE3\n:1098B0008D00AB5001220C4B5A54C12280239200E0\n:1098C0001B06A350094B0A4C99580C40C0210904AF\n:1098D0002143995040221A6030BDC046AC2D002073\n:1098E00000600040302D0020572E002000E100E0F5\n:1098F000FFFF00FF70B5A024E0250068E4058300A9\n:10990000ED001B195C591F4E34405C511E4D012463\n:109910002E68002A26D0A14203D181400E432E603A\n:1099200006E0022904D18440184A11680C431460EF\n:109930002A680121C2400A4204D1144A1268C24076\n:109940000A420ED0A021A222C905D2008958F132C4\n:10995000C140FF329858C90711D5C021890201437F\n:10996000995070BD012902D181408E43D7E7022969\n:10997000DED1844005490A68A2430A60D8E7802105\n:10998000ECE7C046FFFFFCFFB42D0020B02D002007\n:109990000023134A30B5D35683421DD00123D3563A\n:1099A00083421BD00223D356834214D102231900D1\n:1099B00045310C480C4CFF3189000C5001210D0041\n:1099C0005C00601C8540A140A120084C2943C000D8\n:1099D0002150FF21D15430BD0023E8E70123E6E701\n:1099E000EB00002000600040031F020000F0014077\n:1099F000A820012110B5124A124B1488C0005960EA\n:109A00001C50548810481C509088A922D2009850AD\n:109A1000802208209200985080200932FF320003F3\n:109A200098500A4A1078A222D2009850084A10880A\n:109A3000084A985000221960FC331A6510BDC046D0\n:109A4000D200002000A0004044050000EE000020ED\n:109A5000D00000204C05000070B50E000E4C050033\n:109A60002100300000F0F4F828600023E3565A1C6F\n:109A700001D1002302E0B3420CD1A368A02201204F\n:109A80000649D2002B7188506A221B021343044AF4\n:109A90008B5070BD0C34E8E720EA020000700040F3\n:109AA000040500000B4B0C4910B55A580B4C2240D2\n:109AB0005A5002795C58120222435A5080200122E7\n:109AC000C0001A6019581142FCD1A122D200985846\n:109AD00080B210BD0070004004050000FF00FFFFD1\n:109AE000A023F0B5284FDB00FA5885B00192002280\n:109AF000A024FA50E023254AE405DB00E658E250B2\n:109B00007833E15801250291E250A1238022DB0045\n:109B1000D205E2500420E5500EF0B4FBA222D200A0\n:109B2000A35803979B0F2B4228D0A35813242B42F2\n:109B300025D00120A023E0220299DB05D2009E500F\n:109B400078329950A023039A0199DB00D15005B0D7\n:109B5000F0BD0F4B0420EF500EF094FBA123DB006F\n:109B6000EF5004200EF08EFBA223DB00EB585B00CD\n:109B7000DFD4013C002CECD12000DBE71324A0252E\n:109B80000127ED05F5E7C046004000400D06000046\n:109B90000C050000A023E021134ADB05C90010B525\n:109BA0005A5078315A50114B00221900FC31CA60CA\n:109BB0000A62A1211E20C9005A500D4A0D4C98502E\n:109BC000CC200D4A40049850A2200C4AC0001450EA\n:109BD0000B480C4C145001205050A0220521D200FB\n:109BE0009950FFF77DFF10BD0C06000000400040BB\n:109BF0000C050000384100402405000000F0014041\n:109C0000140500001C4000400848026803210A4374\n:109C100002600749074A084B9B1A03DD043BC858FA\n:109C2000D050FBDC0548804705480047240500402C\n:109C30005C8103000000002014010020719C0100E1\n:109C400009010000FEE7FEE7FEE7FEE7FEE7FEE7AC\n:109C500010B50400431C07D00EF03BFB0400431C6E\n:109C600002D102480EF0C0F9200010BDFC800300B4\n:109C7000224910B50B68DBB2012B0FD1204B1B68BA\n:109C80001B070BD11F4BE0241A68F023100018406B\n:109C9000224228D11C4A12681A4227D00B68DBB234\n:109CA000012B12D1164A126812070ED1F021154A63\n:109CB00012680A40402A08D1134A12680A4204D1A5\n:109CC0008021C122C905D2008B508022A32300210C\n:109CD000D205DB00D1500D4B9960013191609A683B\n:109CE000002AFCD010BD3028D4D0D7E7084B094A51\n:109CF0001A608022084B12021A60CFE7E00F00F0D2\n:109D0000E40F00F0E80F00F0EC0F00F0FC00004062\n:109D100004050040DFFF07C0186C0040014B1868C5\n:109D20007047C046B82D002002B47146490849006A\n:109D3000095649008E4402BC7047C04602B47146C1\n:109D400049084900095C49008E4402BC7047C0467E\n:109D500003B47146490840004900095E49008E4439\n:109D600003BC7047002243088B4274D303098B4223\n:109D70005FD3030A8B4244D3030B8B4228D3030CDB\n:109D80008B420DD3FF22090212BA030C8B4202D37D\n:109D90001212090265D0030B8B4219D300E0090AA5\n:109DA000C30B8B4201D3CB03C01A5241830B8B42AE\n:109DB00001D38B03C01A5241430B8B4201D34B0397\n:109DC000C01A5241030B8B4201D30B03C01A5241FC\n:109DD000C30A8B4201D3CB02C01A5241830A8B4281\n:109DE00001D38B02C01A5241430A8B4201D34B026A\n:109DF000C01A5241030A8B4201D30B02C01A5241CE\n:109E0000CDD2C3098B4201D3CB01C01A5241830981\n:109E10008B4201D38B01C01A524143098B4201D3BB\n:109E20004B01C01A524103098B4201D30B01C01AE6\n:109E30005241C3088B4201D3CB00C01A5241830860\n:109E40008B4201D38B00C01A524143088B4201D38D\n:109E50004B00C01A5241411A00D2014652411046ED\n:109E60007047FFE701B5002000F0F0F802BDC046E2\n:109E70000029F7D076E7704703460B437FD40022D2\n:109E800043088B4274D303098B425FD3030A8B428E\n:109E900044D3030B8B4228D3030C8B420DD3FF22F8\n:109EA000090212BA030C8B4202D31212090265D0C6\n:109EB000030B8B4219D300E0090AC30B8B4201D379\n:109EC000CB03C01A5241830B8B4201D38B03C01AC0\n:109ED0005241430B8B4201D34B03C01A5241030B37\n:109EE0008B4201D30B03C01A5241C30A8B4201D3E8\n:109EF000CB02C01A5241830A8B4201D38B02C01A93\n:109F00005241430A8B4201D34B02C01A5241030A09\n:109F10008B4201D30B02C01A5241CDD2C3098B42EE\n:109F200001D3CB01C01A524183098B4201D38B016B\n:109F3000C01A524143098B4201D34B01C01A52410E\n:109F400003098B4201D30B01C01A5241C3088B4253\n:109F500001D3CB00C01A524183088B4201D38B003E\n:109F6000C01A524143088B4201D34B00C01A5241E0\n:109F7000411A00D201465241104670475DE0CA0FB7\n:109F800000D04942031000D34042534000229C4677\n:109F900003098B422DD3030A8B4212D3FC22890181\n:109FA00012BA030A8B420CD3890192118B4208D357\n:109FB000890192118B4204D389013AD0921100E0B9\n:109FC0008909C3098B4201D3CB01C01A52418309CD\n:109FD0008B4201D38B01C01A524143098B4201D3FA\n:109FE0004B01C01A524103098B4201D30B01C01A25\n:109FF0005241C3088B4201D3CB00C01A524183089F\n:10A000008B4201D38B00C01A5241D9D243088B42F4\n:10A0100001D34B00C01A5241411A00D20146634697\n:10A0200052415B10104601D34042002B00D54942FB\n:10A03000704763465B1000D3404201B5002000F03A\n:10A0400005F802BD0029F8D016E770477047C046F2\n:10A050008446101C62468C46191C634600E0C046CC\n:10A060001FB501F04DFF002801D40021C8421FBDDB\n:10A0700010B501F0A5FE4042013010BD10B501F051\n:10A080003FFF002801DB002010BD012010BDC046AD\n:10A0900010B501F035FF002801DD002010BD0120C2\n:10A0A00010BDC04610B501F0C7FE002801DC00203D\n:10A0B00010BD012010BDC04610B501F0BDFE002846\n:10A0C00001DA002010BD012010BDC0468446081CE6\n:10A0D0006146FFE71FB500F04FFC002801D40021C6\n:10A0E000C8421FBD10B500F0D1FB4042013010BD89\n:10A0F00010B500F041FC002801DB002010BD01205C\n:10A1000010BDC04610B500F037FC002801DD00206E\n:10A1100010BD012010BDC04610B500F0DFFB0028C7\n:10A1200001DC002010BD012010BDC04610B500F0BC\n:10A13000D5FB002801DA002010BD012010BDC0466B\n:10A14000002B11D1002A0FD1002900D1002802D004\n:10A150000021C943081C07B4024802A1401802901C\n:10A1600003BDC046E9FEFFFF03B4684601B502988F\n:10A1700000F01EF8019B9E4602B00CBC7047C04622\n:10A180009E2110B5C905041CFFF7D0FF002803D19C\n:10A19000201C00F04DFF10BD9E21201CC90500F0C1\n:10A1A0006DFD00F045FF80231B069C466044F2E7EE\n:10A1B000F0B54F464646D646C0B5040082B00D0005\n:10A1C000914698468B422FD82CD04146484602F003\n:10A1D0001DFE29000600200002F018FE331A9C46DE\n:10A1E000203B9A4600D576E04B46524693401F00EE\n:10A1F0004B46624693401E00AF4228D825D05346B6\n:10A20000A41BBD41002B00DA7BE00022002300925A\n:10A2100001930123524693400193012362469340E8\n:10A22000009318E08242D0D90022002300920193CB\n:10A230000A9B002B01D01C605D600098019902B060\n:10A240001CBC90469946A246F0BDA342D7D9002235\n:10A250000023009201936346002BE9D0FB07984648\n:10A26000414672080A437B0866460EE0AB4201D1C4\n:10A27000A2420CD8A41A9D41012024196D4100214D\n:10A28000013E24184D41002E06D0AB42EED9013ECE\n:10A2900024196D41002EF8D10098019953460019F8\n:10A2A0006941002B23DB2B005246D3402A00644631\n:10A2B000E2401C0053461500002B2DDB26005746BC\n:10A2C000BE40330026006746BE403200801A9941E6\n:10A2D00000900191ACE7624620239B1A4A46DA407F\n:10A2E0006146130042468A4017001F4380E76246DA\n:10A2F00020239B1A2A0066469A402300F34013430A\n:10A30000D4E76246202300219B1A0022009101928B\n:10A310000122DA40019280E72023624626009B1A40\n:10A32000DE402F00B0466646B74046463B0033430A\n:10A33000C8E7C046F8B54746CE4643025B0A44002C\n:10A34000C20F9C464800DD004B02240E5B0A000E43\n:10A3500080B5984626009146C90FDB00271A8A422D\n:10A3600029D0002F15DD00284AD1002B00D095E020\n:10A37000ED08FF2C00D188E06B025B0AE6B25B02BD\n:10A38000F605580A3043D20710430CBC9046994654\n:10A39000F8BD002F00D087E0601CC0B2012800DCAF\n:10A3A000B6E0EE1A720100D5C5E0002E3DD10022C4\n:10A3B00000260023E3E7002F00DC96E000285DD0B4\n:10A3C000FF2C60D08022D20413431B2F00DDECE071\n:10A3D0002022D21B18009340F8405A1E9341034399\n:10A3E000ED186B017BD50134FF2C00D1B7E00122C1\n:10A3F00007262A406B089A4D1D4015432E4029E040\n:10A40000FF2CB5D08022D20413431B2F00DDB2E015\n:10A410002022D21B19009340F9405A1E93410B434E\n:10A42000ED1A6B015BD5AD01AE09300002F0D0FC36\n:10A4300005388640844265DC041B3300202001344B\n:10A44000E340041BA640751EAE41334307261D00A2\n:10A4500000241E4001224B461A40002E04D00F2338\n:10A460002B40042B00D004356B0100D480E701346D\n:10A47000E6B2FF2C2FD1FF26002380E7002B52D11C\n:10A48000FF2C00D074E70A00ED08002DF3D08023E4\n:10A49000DB032B435B025B0AFF2670E7013F002FC3\n:10A4A000BED0FF2CB1D163E7002C47D0FF2869D084\n:10A4B0008024E4047A4225431B2A00DDC5E02C00F9\n:10A4C0002026D440B21A95406A1E954125435D1B53\n:10A4D00004008946A5E7AB015B0A50E7002401228E\n:10A4E0004B461A406B07BAD142E7002F3BD10134EB\n:10A4F000E0B201284ADDFF2CBDD00726ED186D081B\n:10A500002E40A7E70723574D241A35401E40A1E7E8\n:10A51000002C1BD1002D6ED1002B00D19AE00A0037\n:10A520001D003C0024E7013F002F00D158E7FF2C1D\n:10A5300000D04AE7A7E75E1B894676E7002D1CD1CD\n:10A540000A00FF281FD004001D0011E7002D5DD177\n:10A55000002B17D180230022DB03FF260FE70A0020\n:10A56000FF2600230BE7002C21D1002D66D1FF2808\n:10A57000E9D11D0087E7012352E77A1CA7D0FA43EF\n:10A58000FF2899D10A001D00FF24F1E6002E21D1F9\n:10A59000002D4FD0002B4CD0ED186B019ED5314BC8\n:10A5A00007362E4001241D4054E7012318E7FF28F9\n:10A5B000DFD08024E4047F4225431B2F4DDC20267E\n:10A5C000F61B2C00B540FC406A1E95412543ED1852\n:10A5D000040006E7002DCCD0002B00D153E78021EA\n:10A5E0006046C903084203D04046084200D11D001E\n:10A5F0000121114047E7002B00D1B9E6EA1A5001CA\n:10A6000025D507265D1B2E40894623E7FF24002B16\n:10A6100000D1ADE680226046D203104204D040460D\n:10A62000104201D11D00894601224B46FF241A40E9\n:10A630009EE62B00DD080A0000249DE67A1CC6D0A9\n:10A64000FF43FF28B9D11D001DE701253FE7151E77\n:10A6500000D044E70022002391E60125B7E7C04679\n:10A66000FFFFFF7DFFFFFFFBF8B557464E4645460F\n:10A67000DE464402E0B546008846640A360EC70F3F\n:10A68000002E63D0FF2E24D08023E400DB041C4383\n:10A69000002399469B467F3E434642465D02D20FC9\n:10A6A0005B006D0A1B0E9046924665D0FF2B55D07D\n:10A6B00080220021ED00D2047F3B1543F61A434669\n:10A6C0004A467B400F2A00D98DE06D48920082589F\n:10A6D0009746002C54D108239946063BFF269B46FB\n:10A6E000DAE70025534602291BD0032900D1BFE039\n:10A6F000012928D030007F30002820DD6A0704D0EF\n:10A700000F222A40042A00D004352A0103D5300044\n:10A710005C4A80301540FE2803DCAC01640AC2B2FA\n:10A7200001E0FF2200246402D205600ADB07104327\n:10A7300018433CBC90469946A246AB46F8BD012260\n:10A74000101A1B287CDD00220024ECE7002C1DD110\n:10A7500004239946033B00269B469DE7FF3E002DC0\n:10A7600020D1022143464A467B400A430F2AD8D8CB\n:10A770004548920082589746002D19D10121F1E7F2\n:10A780000C239946093BFF269B4685E7200002F0F3\n:10A790001FFB7626431F9C4000237642361A9946BB\n:10A7A0009B4679E74A4603231A439146032186E7ED\n:10A7B000280002F00DFB431F36189D40763600211D\n:10A7C0007DE780240023E403FF22ACE700258023FB\n:10A7D000DB031C4228D01D4226D12B435C02640AB5\n:10A7E0004346FF229FE762016C01A24224D21B2153\n:10A7F0000025013E012710006D005200002801DBFA\n:10A80000944201D8121B3D4301390029F3D11400B1\n:10A81000621E944125436DE7BA46594625005346CA\n:10A82000022900D061E77CE78023DB031C4364023C\n:10A83000640A3B00FF2276E7121B1A210125D9E7A3\n:10A840009E362A00B5402C00C240651EAC41144320\n:10A85000620704D00F222240042A00D0043462018F\n:10A8600003D4A401640A00225DE7012200245AE710\n:10A870008024E4032C436402640AFF2253E7C046A9\n:10A8800074EA0200FFFFFFF7B4EA020070B542006D\n:10A890004E024C0045026D0A120EC30F760A240EBA\n:10A8A000C90FFF2A0FD0FF2C11D00120A24200D0E7\n:10A8B00070BDB542FCD18B420DD0002AF8D12800E2\n:10A8C000451EA841F4E70120002DF1D1EBE701205E\n:10A8D000002EEDD1E9E70020EAE7C04670B54A0056\n:10A8E0004E02450244006D0A240EC30F760A120E72\n:10A8F000C90FFF2C15D0FF2A0ED0002C15D1002A2D\n:10A9000001D1002E1CD0002D14D08B4227D0022064\n:10A91000013B1840013870BD002EEED002204042AD\n:10A92000F9E7002DFAD1FF2A0ED0002A0ED1002E11\n:10A93000EDD00BE001230139994308000130EAE72B\n:10A940000020002DE7D0E2E7002EE7D18B42DED1D8\n:10A95000944205DD0221581E08400138DBE700243F\n:10A96000A24204DCB542D2D80020B542D3D2581E50\n:10A97000012398430130CEE730B5420044024D0236\n:10A98000C30F4800640A120E6D0A000EC90FFF2A99\n:10A9900012D0FF280CD0002A12D1002819D1002D86\n:10A9A00017D1002C2BD00220013B1840013826E0A3\n:10A9B000002DF0D0022022E0002CFBD1FF281FD078\n:10A9C00000281FD1002D1DD10220013B1840013865\n:10A9D00015E0002C0ED08B42E5D10022904204DC21\n:10A9E000AC42E0D80020AC4209D2581E0123984363\n:10A9F000013004E00123013999430800013030BDE2\n:10AA0000002DD7D18B42CED18242E7DD0221581EE4\n:10AA100008400138F3E7C046F0B54E465746454674\n:10AA2000DE46E0B543025B0A450083B00F1C994641\n:10AA30002D0EC60F002D57D0FF2D24D08020DB0017\n:10AA4000C0041843002381469A469B467F3D7C0202\n:10AA50007A00FB0F640A120E984623D0FF2A4BD0CF\n:10AA6000E30080240020E4047F3A1C43AD186B1CF3\n:10AA700047460193534677403A000F2B48D87D490B\n:10AA80009B00CB589F46002B00D085E008339A46A8\n:10AA9000063B9B467C027A00FB0FFF25640A120EE0\n:10AAA0009846DBD1002C00D090E0524601231A4397\n:10AAB00092460120DBE74C4658461700022824D076\n:10AAC000032800D1CFE00022002301284DD15802F5\n:10AAD000D205400AFF071043384303B03CBC904600\n:10AAE0009946A246AB46F0BD002B5BD104239A46A3\n:10AAF000033B00259B46AAE7FF35002C60D1524658\n:10AB000002231A4392460220B1E7FF220023DEE728\n:10AB10004B461B0C9C464B462604360C18046146DB\n:10AB20003300220C6446000C43434E4350435443CD\n:10AB300080191A0C1218964203D9802149028C46BA\n:10AB400064441B041B0C1004C01883015E1EB34137\n:10AB5000800E1843130C1B199B0103431C00230197\n:10AB600079D5012362081C401443019A7F32002AE0\n:10AB70004DDD630704D00F232340042B00D00434A1\n:10AB8000230103D53C4B019A1C408032FE2ABCDCD9\n:10AB9000A3015B0AD2B29AE70C239A46093BFF2530\n:10ABA0009B4654E7180002F013F94A46431F7625E6\n:10ABB0009A4000236D4291462D1A9A469B4646E7DD\n:10ABC000524603231A439246032050E7200002F026\n:10ABD000FFF8431F2D1A9C40763D002047E7802355\n:10ABE0000027DB03FF2272E7424666E74C4632004D\n:10ABF000584662E780234A46DB031A4222D01C42B1\n:10AC000020D123435B025B0A4746FF225FE7012313\n:10AC10009A1A1B2A21DC23000199D3409E318C40D3\n:10AC20001A0023005C1EA34113435A0704D00F22CD\n:10AC30001A40042A00D004335A0111D49B015B0A44\n:10AC4000002244E780234A46DB0313435B025B0A8E\n:10AC50003700FF223BE7019587E70022002336E714\n:10AC60000122002333E78023DB0323435B025B0ADB\n:10AC7000FF222CE7F4EA0200FFFFFFF7F8B5474692\n:10AC8000CE464400C20F80B547024802400A8446BF\n:10AC9000664648007F0A240EF60025009046FB0019\n:10ACA000000EC90FB146FF2800D185E00126714092\n:10ACB000261A914257D0002E43DD002800D07FE0B5\n:10ACC0004946002900D1AAE0013E002E00D0F7E05D\n:10ACD0005B1A5A0100D48BE09B019C09200002F012\n:10ACE00077F805388440854200DDD3E0451B23001A\n:10ACF00020200135EB40451BAC40621E94412343AC\n:10AD0000072400251C40012241460A40002C04D0A3\n:10AD10000F211940042900D00433590100D480E0E8\n:10AD20000135ECB2FF2D00D0A3E0FF2400235B022D\n:10AD3000E405580AD207204310430CBC90469946BC\n:10AD4000F8BD002E74D1601CC0B2012800DCA7E061\n:10AD50004A469C1A620100D5B6E0002CBED1002202\n:10AD600000240023E3E7002E00DC85E0002846D025\n:10AD7000FF2C49D080224846D2041043814601224C\n:10AD80001B2E09DC20204C46801B84404A462000B4\n:10AD9000F240441EA04102439B185A0128D50135B8\n:10ADA000FF2D00D1A8E00122072494491A405B0836\n:10ADB0000B4013431C40A6E7002E00D078E775E750\n:10ADC000FF2C54D080224946D204114389460122E7\n:10ADD0001B2E09DC20214846891B88404A46010079\n:10ADE000F240481E81410A439B1A5A0100D573E77D\n:10ADF000012241460A40590700D089E711E0484640\n:10AE0000002858D1FF2C0CD1DB08002B00D18CE797\n:10AE10008020C00303435B025B0AFF2487E7FF2C0B\n:10AE200025D0DB08FF2DF0D05B025B0AECB27EE799\n:10AE3000002C4DD0FF2818D08024E4047242234314\n:10AE40001B2A00DDC4E01C002025D440AA1A934030\n:10AE50005A1E934123434A460500D31A884638E7D1\n:10AE6000721CF8D0F243FF28EAD10A004B46FF25B6\n:10AE7000D7E79B015B0A5AE7002E41D1651CE9B276\n:10AE8000012945DDFF2D00D14FE707244B445B0826\n:10AE90001C4038E707225A4B2D1A2340144032E752\n:10AEA000002C1DD1002B7AD14B46002B00D191E014\n:10AEB0000A000025B5E7013E002E19D14B446CE78E\n:10AEC000FF2C84D1FF25ACE74A468846D41A05E713\n:10AED000002BC5D10A00FF28C8D005004B46A0E7CB\n:10AEE000002B49D14B46002B77D00A00FF2598E76D\n:10AEF000FF2C00D043E787E70A00FF24002316E772\n:10AF0000002C15D1002B57D1FF28E6D14B467BE70B\n:10AF1000002C20D1002B57D04946002953D04B4458\n:10AF20005A0168D50724364A1C4001251340EAE639\n:10AF3000FF28EBD08022D204764213431B2E53DC31\n:10AF40002025AD1B1A00AB40F2405C1EA341134309\n:10AF50004B44050021E7002BD8D04946002900D1F9\n:10AF600052E78021C9030F4200D14DE760460842F5\n:10AF700000D049E74B4647E74846FF25002800D167\n:10AF80004FE78022D203174204D06046104201D11D\n:10AF90004B46884601224146FF250A4041E7484684\n:10AFA00000281FD01A1A500120D54A460724D31A68\n:10AFB0001C4088460025A6E6741CC9D0F643FF282D\n:10AFC000BCD14B4620E799464B460025DB082BE7D2\n:10AFD000012340E700220023A9E680230022DB03AF\n:10AFE000FF24A4E600251CE70123B1E7002AF1D0E5\n:10AFF00013000025FCE60025FAE6C046FFFFFF7DB2\n:10B00000FFFFFFFB42024B0240004900520A5B0A6D\n:10B01000090E000EFF2806D00020FF2902D11800DB\n:10B02000431E98417047FE38002AFBD1F4E7C04622\n:10B0300041024200C30F490A120E00207E2A0DD998\n:10B040009D2A0CD8802000040143952A0ADC962012\n:10B05000821AD1404842002B00D108007047034AB1\n:10B060009818FBE7963A9140F4E7C046FFFFFF7F50\n:10B0700070B500283DD0C317C5185D40C40F280027\n:10B0800001F0A6FE9E22121A962A07DCD2B20828E8\n:10B0900033DD083885406802400A23E0992A0BDD39\n:10B0A000052329001B1AD94003001B339D402B00A8\n:10B0B0005D1EAB4119430D00052801DD431F9D4076\n:10B0C0002B000F490B406E0709D00F263540042D89\n:10B0D00005D004335D0102D59F220B40121A9B015B\n:10B0E000580AD2B24002D205400AE4071043204376\n:10B0F00070BD002400220020F4E76802400AF1E756\n:10B10000FFFFFFFB70B5041E34D001F061FE9E22EC\n:10B11000121A962A07DCD2B208282EDD083884409D\n:10B120006002400A21E0992A09DD030021001B3357\n:10B1300099404B1E994105231B1ADC400C430528FE\n:10B1400001DD431F9C4023000D490B40650709D0DA\n:10B150000F252C40042C05D004335C0102D59F221E\n:10B160000B40121A9B01580AD2B24002D205400A83\n:10B17000104370BD00220020F7E76002400AF4E7A8\n:10B18000FFFFFFFBF0B54F464646D6460C000903CD\n:10B19000C0B5490A470F5E0039431F03DB0F9C46C9\n:10B1A00065007B0A570F1F436D0DE40F760DA14616\n:10B1B000C000B846D200AB1B64457BD0002B5FDDDE\n:10B1C000002E00D0A4E03E00164300D112E15E1E26\n:10B1D000002E00D09EE1871A4346B84280410125E7\n:10B1E000C91A4042091A0B0200D431E149024E0A41\n:10B1F000002E00D16EE1300001F0EAFD0300083BB3\n:10B200001F2B00DD61E120223900D21A9E40D1407F\n:10B210009F400E439D4200DD51E15D1B6B1C1F2BC7\n:10B2200000DD7CE12021C91A3D0030008F408840BC\n:10B23000DD40791E8F41310007222843D940002587\n:10B2400007433A40002A09D00F233B40042B05D086\n:10B250003B1DBB42BF417F42C9191F000B0200D4F6\n:10B2600026E26A1CC64B55056D0D9A4200D106E1D7\n:10B27000C44AFF080A40530752023B43120B8EE0B8\n:10B28000002B00D0B8E06B1C5B055B0D012B00DCD4\n:10B2900030E1871A4346B842B641CB1A76429E1B2C\n:10B2A000330200D54CE13B003343A1D100220024FE\n:10B2B000002570E0002B00DCE5E0002E00D183E0EB\n:10B2C000AF4EB54260D0802636043743B846382B9F\n:10B2D00000DC3EE1434613431F007A1E97413F18AE\n:10B2E00087428041404209180B0200D4B0E0A44BD1\n:10B2F00001359D4200D1C3E0A24A7B080A400121EA\n:10B300000F401F435108D30707221F433A4099E7D4\n:10B310009B4EB54238D0802636043743B846382B8A\n:10B3200000DDDCE01F2B00DC30E11E004746203E44\n:10B33000F740BC46202B04D04026F31A46469E40D8\n:10B340003243170063467A1E97411F43CCE0002B1F\n:10B3500000D104E24346134300D159E14B07C00832\n:10B3600018438023C9081B03194208D04546ED083D\n:10B370001D4204D14346D008590708432900420F13\n:10B38000C9007F4D1143C0004B07CA087C49C00863\n:10B3900003438D4268D012036D05120B6D0D002121\n:10B3A00012031800130B0A0D12051A43764B2D05D4\n:10B3B00013402B435B00E4075B08234319001CBCCC\n:10B3C00090469946A246F0BD3E00164312D05E1E3E\n:10B3D000002E00D000E1871887428041414440425E\n:10B3E000091801250B0233D5022585E76446330091\n:10B3F000414610001D00C7E7002D00D0DAE00C0028\n:10B400000443F3D05C1C00D19FE15D4CA64200D107\n:10B410002FE1DB43382B00DD66E11F2B00DD83E1EC\n:10B4200020240500E41A0F00DD40D940A040434627\n:10B43000A7405B1A441EA04198462F433843171A71\n:10B44000BA42924143465242991A64463500CAE6CE\n:10B4500007223A40002A00D0F6E64B07CA084849BE\n:10B46000FF083B438D4296D11900114300D19EE164\n:10B47000802109030A431203120B414D8FE7150087\n:10B48000002200238BE7002B00D0C7E06B1C5F0578\n:10B490007F0D012F00DCF1E0394DAB4200D1B9E066\n:10B4A00085180A00854289414244494251180722C1\n:10B4B000CF076D082F4349083A401D00C2E6072216\n:10B4C0003049ED1A31403A40BCE63E00283886400B\n:10B4D00000279FE6380001F07BFC20308EE64346D3\n:10B4E00013431F007A1E9741C71BB8428041404258\n:10B4F000091A78E60E003B0006431343002D61D184\n:10B50000002E00D0F4E0002B00D11BE1644639008E\n:10B51000100039E71A4FBB427AD03300FFE6300003\n:10B520001F3DE840202B03D04021CB1A9E403743DB\n:10B530007B1E9F41072207433A400021002589E7EF\n:10B54000171A4346BA42B641591A76428E1B6446D0\n:10B550004EE61F2B00DDADE020264746F61AB74029\n:10B56000B9461700B246DF404E463E4337005646C6\n:10B57000B240561EB24117434246DA408918AEE641\n:10B58000FF070000FFFF7FFFFFFF0F8020264746D9\n:10B59000F61AB740B9461700B246DF404E463E4362\n:10B5A00037005646B240561EB24117434246DA4073\n:10B5B000891A99E77F4CA6425BD0802424045B4221\n:10B5C000214327E7002E0CD1002B00D1CBE06446AD\n:10B5D00039001000774DD7E6764FBB4218D03300C4\n:10B5E00075E6002B14D04B07C00818438023C90808\n:10B5F0001B03194207D0FC081C4204D17907D0086C\n:10B600000843E14621004C46420FC9001143C000E7\n:10B61000684DB9E61D0000220023C0E6002D5BD175\n:10B620000D00054300D1E2E65D1C00D1B0E0614DA4\n:10B63000AE421FD0DB43382B71DC1F2B00DD96E0C0\n:10B6400020250F00ED1AAF40B9460700AA46DF409B\n:10B650004D463D432F005546A840D940451EA841C0\n:10B6600088440743BF1897429241514241443500F4\n:10B670003AE6644635004146100085E60B00034378\n:10B68000002D00D063E6002BF5D04346134300D1D4\n:10B690007AE68718874280410722414440420918D0\n:10B6A0003A400B0200D4D5E6434B01351940C9E5B9\n:10B6B000380069E61E004746203EF740BC46202B76\n:10B6C00004D04026F31A46469E4032431700634694\n:10B6D0007A1E97411F4302E6364DAE42CAD08025FE\n:10B6E0002D045B422943A6E70843411E8841A6E694\n:10B6F000002B00D148E6871A4346B842B641CB1A20\n:10B7000076429E1B33024BD5171A4346BA429241EA\n:10B71000591A5242891A072264463A4092E5014377\n:10B720000F00791E8F419DE71C000F00203CE74071\n:10B73000202B03D04024E31A99400843411E88413E\n:10B7400038437CE60022002425E6171A4346BA4215\n:10B750009241591A5242891A6446350043E54146DE\n:10B760001000144D10E680220024120380E61D0014\n:10B770000F00203DEF40BC46202B03D04025EB1AA4\n:10B780009940084307006346781E87411F4369E7D5\n:10B79000871897429B4141445B42C9183500A3E595\n:10B7A0003B003343CED0072231003A4052E600231B\n:10B7B0001A00F4E5FF070000FFFF7FFFF0B55746D2\n:10B7C000DE464E464546E0B5834607000E03480078\n:10B7D00085B092461C00360B400DCD0F002800D1DD\n:10B7E0009DE0954B984239D08023F6001B041E4300\n:10B7F000924A7B0F33439946944603006344009377\n:10B8000000230026FF00029323031B0B98466300CE\n:10B81000E40F52465B0D019400D1B3E086498B42A0\n:10B8200000D19EE04246D100802212040A435146D4\n:10B83000490F11438B46814952468C460099634417\n:10B84000CB1A0021D20000932B0063409A460F2EA2\n:10B8500000D905E17A4BB6009B599F465B463343BE\n:10B86000994600D0B8E002230826002700900293F2\n:10B87000CAE7CB463A0002990195019B9A460229F4\n:10B8800027D0032900D180E2012944D06D49009BD3\n:10B890008C4663441C00002C38DD530700D013E2B3\n:10B8A000D2085B46DB0109D55946674B19408B46E8\n:10B8B0008021C9008C46009B63441C00634B9C4262\n:10B8C00007DC5B4664055F075B0217431B0B620DD9\n:10B8D00002E000230027584A00211B031C0B0B0D1C\n:10B8E0001B05234314055A4A380013401C43534692\n:10B8F0006400DB0764081C43210005B03CBC904693\n:10B900009946A246AB46F0BD0122524201231B1BC1\n:10B91000382B00DCADE1002200230027DCE75B468A\n:10B92000334399465ED0002E00D18AE1300001F009\n:10B930004FFA03000B3B1C2B00DD7BE11D22D31AC9\n:10B940005A460100DA4008398E4013005F463343FF\n:10B9500099468F403F4B00261B1A00930023029309\n:10B9600052E7414653460B433B499B468C46009B5E\n:10B97000634400935B46002B3BD1022300221E430D\n:10B98000022161E7434613439B4637D04346002BD1\n:10B9900000D162E1404601F01BFA03000B3B1C2B77\n:10B9A00000DD53E102004146083A914088461D21DE\n:10B9B000CB1A5146D9400B0041460B439B46534698\n:10B9C00093401A00009B25499C46604403008C4626\n:10B9D00063440093002137E70323B14600900C260F\n:10B9E000029311E7002300930133042600270293FA\n:10B9F0000AE70323C3461E43032125E701331E4301\n:10BA00000022012120E700239A46802300271B0300\n:10BA1000094A61E7802349461B03194200D1E2E04D\n:10BA20005946194200D0DEE00B431B0317001B0BE5\n:10BA3000A246014A50E7C046FF07000001FCFFFF95\n:10BA400034EB0200FF030000FFFFFFFEFE070000D3\n:10BA5000FFFF0F800DFCFFFF01F8FFFFF303000065\n:10BA6000D94500D9CBE000D1C6E03C0048460027CC\n:10BA7000009B013B00935B46160E1B021E43130204\n:10BA8000984633041B0C9946310C0191FEF7F0F9EE\n:10BA90004A4642430B04210C050019438A4207D948\n:10BAA0008919013D8E4203D88A4201D9851E891920\n:10BAB000881A0199FEF7DCF909048C464A462104EC\n:10BAC00064464243090C030021438A4204D9891980\n:10BAD000013B8E4200D8F1E02D041D43AB464346A6\n:10BAE000891A4246280C12041D0C5B46140C2200D5\n:10BAF0001B041B0C5A4303946B4344430295684355\n:10BB00001B19150CEB189C4203D980246402A4462F\n:10BB100060441C0C15041B042D0C20185D19814277\n:10BB200077D373D00C1AA24A7D1BAF42BF41944613\n:10BB3000009B7F426344E01B1C00864200D1DBE097\n:10BB40000199FEF795F94A4642430B04290C070078\n:10BB500019438A4207D98919013F8E4203D88A4284\n:10BB600001D9871E8919881A0199FEF781F90904FC\n:10BB70004A46894629044D464243090C030029439D\n:10BB80008A4207D98919013B8E4203D88A4201D9DA\n:10BB9000831E89193F04891A3A00039F1A4338000B\n:10BBA00013041B0C584381460298150C6F43434302\n:10BBB00045434846000C8446DB1963449F4203D941\n:10BBC000802040028446654448461F0C00041B0444\n:10BBD000000C7D191818A94200D284E000D17FE042\n:10BBE00001231A4357E680234A461B0313431B03D2\n:10BBF0001B0BAA466F4A6FE6BA4200D935E74B469F\n:10BC0000DC0758087B081C43FF0734E70024AF42D9\n:10BC100089D247444745A4415B466442A41964184D\n:10BC2000013BA6421ED2A0426DD800D1B6E0241A34\n:10BC30009B4678E703005A46283B9A4000279146E6\n:10BC400088E6584601F0C4F8203072E603005246F8\n:10BC5000283B9A4093460022B4E6504601F0B8F8DB\n:10BC600020309AE6A642E2D1B845DCD9341A9B4688\n:10BC700059E71F2B65DC504C0099A4465C46614493\n:10BC800008008C4011008240D940501E82410C4374\n:10BC900014435A46DA401300620709D00F222240AB\n:10BCA000042A05D02200141D9442894149425B18A0\n:10BCB0001A0262D50122002300270DE68A4200D82D\n:10BCC0000AE7831E891907E70F231340042B00D1CD\n:10BCD000E6E5171D9742924153429B44FA08E0E57E\n:10BCE000002800D1D7E57118531EB14227D3A942CD\n:10BCF00015D358D01A0073E7002B00DC04E60123AB\n:10BD000000229B44CDE502234744474589415B42DD\n:10BD10009C46494289190C19E344241A03E7434617\n:10BD20005F0047459B41B8465B429E19023A89191C\n:10BD3000A94200D054E7404500D051E7ABE51A00D6\n:10BD4000F6E71F215F4649420C1BE740202B07D036\n:10BD50001A49009B8C46634418005B4683401A4393\n:10BD6000501E82413A4307270023174009D00F2174\n:10BD7000002311401400042995D122005F075B02C3\n:10BD80001B0BD20817430022A6E5802359461B034C\n:10BD90000B431B0317001B0B064A9DE5BD42B2D89F\n:10BDA0009B460024BFE68045B9D31A00C3E7C046CE\n:10BDB000FF030000FF0700001E0400003E04000017\n:10BDC000F0B54F464646D6468446C0B58046194E25\n:10BDD00018030F034D00000B5C0082463F0B6D0DF6\n:10BDE000C90F9146640DDB0F0120B5420AD0B44261\n:10BDF00003D0A54201D157450CD01CBC90469946B2\n:10BE0000A246F0BD66463E43F7D1AC42F5D154465A\n:10BE10001443F2D10120C845EFD1994207D0002D3B\n:10BE2000EBD163461F433800471EB841E5E70020C9\n:10BE3000E3E7C046FF070000F0B54F464646D6464A\n:10BE40004D00C0B50E03C90F8A462C491F035C0084\n:10BE50008046360B6D0D91463F0B640DDB0F8D4216\n:10BE60001ED08C4216D0002D1ED130438446002CAB\n:10BE700001D13A4323D06246002A1AD09A4529D0EC\n:10BE8000514602200139084001381CBC90469946B1\n:10BE9000A246F0BD39001143E5D002204042F4E74C\n:10BEA0003043FAD1AC420FD0002C0FD13A43E7D047\n:10BEB0000CE00122013B934318000130E5E76346A3\n:10BEC0000020002BE1D0DBE73A43E6D19A45D7D1F9\n:10BED000A542D5DCA54205DBBE42D1D808D0002062\n:10BEE000BE42D2D250460123013898430130CCE7FC\n:10BEF000C845C5D80020C845F4D3C6E7FF070000F1\n:10BF0000F0B54F464646D6464D00C0B50E03C90FA4\n:10BF10008A462E491F035C008046360B6D0D914604\n:10BF20003F0B640DDB0F8D4218D08C4211D0002DD9\n:10BF300018D130438446002C1ED13A431CD16346AD\n:10BF40000020002B30D05146022001390840013832\n:10BF50002AE039001143EAD0022025E03043FBD12A\n:10BF6000AC4226D0002C26D13A4324D1514602209F\n:10BF700001390840013817E06246002A0FD09A457F\n:10BF8000E1D1A54205DBBE42DDD819D00020BE427A\n:10BF90000AD25046012301389843013004E00122BF\n:10BFA000013B9343180001301CBC90469946A246C1\n:10BFB000F0BD3A43D0D19A45C5D1A542C3DCE0E7F4\n:10BFC000C845C0D80020C845E3D3EDE7FF0700000F\n:10BFD000F0B55746DE464E464546E0B58346060078\n:10BFE0000F03480087B092461D003F0B400DCC0F59\n:10BFF000002800D16FE0DE4B984238D08023FF004C\n:10C000001B041F43730F3B430193DA4B00279946F0\n:10C0100000239B46F60081442B0369001B0B52460C\n:10C020009846490DED0F002900D185E0D04B99428B\n:10C0300000D173E04346DA0080231B0413435246C9\n:10C04000CC48520F84461343524600206144D2002C\n:10C0500089442100694000918C46012149448A4667\n:10C060000F2F00D990E0C449BF00CF59BF465B46AF\n:10C070003B43019300D06AE1022308270026814652\n:10C080009B46C9E732005846019B61460091022851\n:10C0900000D175E0032800D1FEE1012800D02CE199\n:10C0A00000230027002600253F032A0D3F0BB3483D\n:10C0B00012053A4302401B051343009A5B00D10767\n:10C0C0005B080B433000190007B03CBC9046994612\n:10C0D000A246AB46F0BD5B463B43019300D12FE146\n:10C0E000002F00D1A5E1380000F072FE03000B3BE9\n:10C0F0001C2B00DD96E11D22D31A5A460100DA40BE\n:10C100005E4608398F4013008E403B4301939C4BA1\n:10C1100000271B1A994600239B467DE7414653465C\n:10C120000B4393498C46E144002B00D01AE10222D4\n:10C130000220174300228CE7134300D10DE1434650\n:10C14000002B00D181E1404600F042FE02000B3A94\n:10C150001C2A00DD72E10100434608398B409846F5\n:10C160001D239A1A5346D3401A004346134352469E\n:10C170008A404946081A824989468144002068E776\n:10C180007B4B002700268EE7140C1204120C1100C2\n:10C19000370C3604350C794328008C462E0060435A\n:10C1A0006044834656432100300C8046584679430C\n:10C1B00040440291844506D98846802149028C4634\n:10C1C000E044414602913604010C360C00048B46D3\n:10C1D00081191E0C1B041B0C0391190079438C461A\n:10C1E000280075436544A8465843050C45447743E9\n:10C1F000A94203D9802149028C466744290C8C4608\n:10C2000039000004000C2D042D186144AB44059145\n:10C210005946049101990F043F0C080C3900514311\n:10C220004243904602008C46090C8B4662437C4395\n:10C2300044445C44A04503D98021490288464244D5\n:10C24000210C884661460904090C8C463900594383\n:10C25000434370437E430F0CF6182404BE19644414\n:10C2600042448C46B34203D980235B029846404443\n:10C27000029B61469846049B370443449B46AB456A\n:10C28000AD416B420D0405992D0C8C467F19674416\n:10C29000FD18A8465D462D19A542A4419346644267\n:10C2A000A446C344DC448F42BF4198459B4193451B\n:10C2B0009241A445A4415B427F421F43360C524247\n:10C2C0006442BF192243BF18624638184302D20D98\n:10C2D000039913436A020A43501E82416146ED0DE1\n:10C2E0002A434E023243D90100D4B3E0012650085C\n:10C2F00032400243DE0732435B08224C5444002C98\n:10C3000062DD510709D00F201040042805D0101D10\n:10C310009042924152429B180200D90104D58024D8\n:10C320001948E400034054441848844200DD27E7DC\n:10C330005E075B02D2081F0B630516435B0DB2E676\n:10C34000002399460133042700269B4664E6032315\n:10C35000019781460C279B465EE601220120174388\n:10C36000002276E6032303201F43434671E6C046BE\n:10C37000FF07000001FCFFFF74EB0200FFFF0F80CE\n:10C380000DFCFFFFFF030000FFFFFFFEFE070000A4\n:10C390000023802700933F030026434B83E6019B45\n:10C3A0003200A446584670E6AC466EE680270199F6\n:10C3B0003F0339422DD03B422BD11F433F033F0B5C\n:10C3C00000951600384B6EE601252D1B382D00DD3B\n:10C3D00066E61F2D40DC35481C00504416008240A4\n:10C3E0008440EE40501E824134431443EB406207C8\n:10C3F00009D00F222240042A05D02200141D9442A5\n:10C40000804140421B181A023ED501230027002616\n:10C4100049E68027019B3F031F433F033F0B0094E6\n:10C42000214B40E603005A46283B9A4000260192E1\n:10C430006DE6584600F0CCFC203057E6030052462B\n:10C44000283B9A401300002293E6504600F0C0FCBF\n:10C4500020307BE6CA4650E71F201E004042041BE6\n:10C46000E640202D03D0124C5444A3401A43501EE2\n:10C470008241324307260027164009D00F200023AF\n:10C48000104014000428B9D122005E075B021F0B84\n:10C49000D2081643002306E680273F031F433F03CD\n:10C4A0003F0B1600004BFEE5FF0700001E040000D6\n:10C4B0003E040000F8B557464E464546DE460C00A1\n:10C4C0000903E0B5490A460F5F0031431E03DB0F45\n:10C4D000760A9B46530F3343C84E6500C000E40FF5\n:10C4E000D2006D0DA24681467F0D9C469046B74214\n:10C4F00000D1B9E05B46012673409B46EE1BA34585\n:10C5000000D183E0002E63DD002F00D0B1E0634650\n:10C51000134300D123E1731E002B00D0BAE1861A29\n:10C520006346B04280410125C91A4042091A0B02F4\n:10C5300000D447E149024B0A98464346002B00D1FC\n:10C5400089E1404600F044FC0300083B1F2B00DD5E\n:10C550007CE120223000D21A4146D04099400200AE\n:10C560009E400A439D4200DD6AE15D1B6B1C1F2B50\n:10C5700000DD94E1202110003500C91A8E40DA4018\n:10C580008840DD40711E8E4111000722284300259E\n:10C5900006433240002A09D00F233340042B05D034\n:10C5A000331DB342B641764289191E000B0200D4F6\n:10C5B0003DE26A1C914B55056D0D9A4200D119E17F\n:10C5C0008F4AF6080A40570752023743120B9BE086\n:10C5D000002E00D0C5E06E1C7605760D012E00DC25\n:10C5E00048E16746861ACB1BB042BF417F42B8463E\n:10C5F0001F004346FF1A3B00B8461B0200D55FE10F\n:10C6000037439AD100220024002579E0002E00DC77\n:10C61000FAE0002F00D18DE0784B9D4267D0802357\n:10C6200067461B041F43BC46382E00DC52E16346BC\n:10C6300013435A1E93411E188642804140420918F6\n:10C640000B0200D4BEE06D4B01359D4200D1D2E01B\n:10C650006B4A73080A4001210E401E435108D3075C\n:10C6600007221E43324095E71E00164300D045E7DF\n:10C6700040E7624B9D423AD0802367461B041F432C\n:10C68000BC46382E00DDEBE01F2E00DC3AE1330023\n:10C690006746203BDF403B00202E05D04027BF1BD4\n:10C6A0006646BE40324390464646721E964133432C\n:10C6B000DAE0002B00D114E26346134300D168E1B5\n:10C6C00080234E07C008C9081B030643194208D03F\n:10C6D0006046C008184204D163460100D2085E07D4\n:10C6E0001643F3009946C900720F444D11434B465F\n:10C6F000DE08424B4F073743CA089D4200D16EE027\n:10C7000012036D05120B6D0D00211203130B0A0DA0\n:10C7100012051A433B4B2D0513402B435B00E407E6\n:10C720005B082343380019003CBC90469946A2465A\n:10C73000AB46F8BD6346134311D0731E002B00D0E7\n:10C7400007E186188642804161444042091801256C\n:10C750000B0237D502257BE73E0061469146350046\n:10C76000C5E75C46002D00D0E1E00B000343F3D0A9\n:10C77000731C00D1ACE1214B9F4200D13AE1F3435D\n:10C78000382B00DD6FE11F2B00DD8CE120250E0032\n:10C79000ED1AAE40B0460600AA46DE404546354397\n:10C7A0002E005546D940A8406346451EA8415B1A55\n:10C7B0009C463043161AB242924163465242991A3D\n:10C7C0003D00B4E607223240002A00D0E4E60B4BDD\n:10C7D000F6084F073743CA089D4200D090E73B0058\n:10C7E000134300D1A6E180231B031A431203120B4B\n:10C7F000024D89E715000022002785E7FF070000AA\n:10C80000FFFF7FFFFFFF0F80002E00D0C7E06B1CF3\n:10C810005E05760D012E00DCF0E0C84DAB4200D184\n:10C82000B9E085180A00854289416244494251189D\n:10C830000722CE076D082E43490832401D00A9E6A5\n:10C84000BF49ED1A114007223240A3E632002838D2\n:10C850008240002686E6300000F0BAFA203073E607\n:10C86000634613435A1E9341C61AB0428041404268\n:10C87000091A5CE60E00674606431743002D5ED199\n:10C88000002E00D0F3E0002F00D11EE15C4661468F\n:10C8900091462CE7A94FBE427BD01E00F1E6100066\n:10C8A0001F3DE840202B03D04021CB1A9A4016436D\n:10C8B000731E9E410722064332400021002583E774\n:10C8C000161A6346B2428041591A40420B1A9846E2\n:10C8D0005C4632E61F2E00DDABE02027BB1B9A46EC\n:10C8E00063465746BB40994613004F46F3401F43EB\n:10C8F0003B005746BA40571EBA4113436246F240C6\n:10C90000891898E62027BB1B9A4663465746BB40CA\n:10C91000994613004F46F3401F433B005746BA4029\n:10C92000571EBA4113436246F240891A9CE7834B73\n:10C930009F425FD080252D047342294320E7002EBB\n:10C940000CD1002F00D1D0E05C46614691467B4D72\n:10C95000CDE67A4FBE421CD01E0065E6002F18D0EF\n:10C96000C0084E0706438020C9080003014208D0D2\n:10C970006346DC08044204D12100DA46D2085E078F\n:10C980001643F300994601245346C900720F114320\n:10C990001C406A4DABE61D0000220027B4E6002DC6\n:10C9A00059D10B00034300D1D6E6731C00D1B2E08D\n:10C9B000624B9F421ED0F343382B6FDC1F2B00DDF0\n:10C9C00097E020250E00ED1AAE40B0460600AA46BC\n:10C9D000DE40454635432E005546A840D940451E09\n:10C9E000A8418C440643B618964292415142614494\n:10C9F0003D0025E63D006146914678E60B00034385\n:10CA0000002D00D055E6002BF5D06346134300D12E\n:10CA10006DE6861886428041614440420918002232\n:10CA20000B0200D4D0E6464B01351940B2E5B146C1\n:10CA30005DE633006746203BDF403B00202E05D0FB\n:10CA40004027BF1B6646BE40324390464646721E94\n:10CA500096413343EFE5394B9F42CBD080252D04DF\n:10CA600073422943A8E70843411E8841A2E6002FEC\n:10CA700000D13CE66346861ACF1AB0429B415B4226\n:10CA8000FB1A98461B024ED5161A6346B2429241D3\n:10CA9000591A5242891A5C4600227BE501430E0076\n:10CAA000711E8E419FE71D000E00203DEE40B046F6\n:10CAB000202B04D04025EB1A994008438146484674\n:10CAC0004346411E8841184374E60022002417E6BD\n:10CAD000161A6346B2429241591A5242891A3D00CF\n:10CAE00025E561469146154D01E68022002412039A\n:10CAF00079E61D000E00203DEE40B046202B04D00C\n:10CB00004025EB1A9940084381464E464346711E24\n:10CB10008E411E4367E7861896429B4161445B4203\n:10CB2000C9183D008CE547463743CED00722414621\n:10CB3000324049E600273A00E6E5C046FF0700001C\n:10CB4000FFFF7FFF30B5144D0A034B00120B5B0D46\n:10CB5000C90F0024AB4211DD104CA34210DC80242D\n:10CB6000640322430E4CE41A1F2C0CDD0D48C31A3B\n:10CB7000DA4013005C42002900D11C00200030BDC7\n:10CB8000094BCC18FAE7094DE040AC4663449A40A3\n:10CB900013000343EEE7C046FE0300001D0400003F\n:10CBA0003304000013040000FFFFFF7FEDFBFFFFD5\n:10CBB00070B500282DD0C317C5185D40C40F2800DC\n:10CBC00000F006F9154B1B1A5B055B0D0A2815DDF5\n:10CBD0000B38854000222D032D0B002110002D0362\n:10CBE0000A0D2D0B12052A430D4D1B052A40134338\n:10CBF0005B00E4075B082343190070BD02002900B5\n:10CC0000153291400A000B21081AC5402D032D0B47\n:10CC1000E3E70024002300250022DEE71E040000D5\n:10CC2000FFFF0F804100090E4B1C70B5DBB24602BE\n:10CC3000750AC40F012B14DDE0239B006D07360B32\n:10CC4000CB1800210A0D280012051C4D32435B054C\n:10CC50002A405B0813435B00E4075B082343190089\n:10CC600070BD002914D1002D1ED0280000F0B0F8AE\n:10CC70000A281CDC0B232A001B1ADA400300153398\n:10CC80009D400F4B12031B1A5B05160B5B0DD8E77B\n:10CC9000002D06D0320B802636036D071643094B54\n:10CCA000CFE7084B0026CCE700230026C9E70300A6\n:10CCB0002A000B3B9A400025E3E7C046FFFF0F80A8\n:10CCC00089030000FF070000F0B54C00640D0B0362\n:10CCD000621C5B0A460F5205C90F1E43C500520D68\n:10CCE000012A29DD374BE718FE2F1CDC002F3BDD26\n:10CCF0008001431E98410722F3006D0F03432B432D\n:10CD00001A40002A04D00F221A40042A00D004330B\n:10CD10008022D2041A4024D00137FAB2FF2F02D069\n:10CD20009B01580A01E0FF2200204002D205400A80\n:10CD3000C90710430843F0BD3543002C04D1002D32\n:10CD40000AD100220020F0E7002DECD08020C003A3\n:10CD50003043FF22E9E7002400235B02580AE2B2D5\n:10CD6000E3E7DB083C00F8E73B001733F3DB802305\n:10CD70001B0433431E26F61B1F2E14DD02225242D3\n:10CD8000D71B1A00FA401700202E04D00E4A9446F2\n:10CD90006444A3401D432B005D1EAB4107223B436F\n:10CDA0001A400027ADE7094A2800A2189540934091\n:10CDB0006C1EA541F04007222B4303431A40002775\n:10CDC0009FE7C04680FCFFFFA2FCFFFF82FCFFFF45\n:10CDD0001C2101231B04984201D3000C10391B0AAB\n:10CDE000984201D3000A08391B09984201D300096F\n:10CDF000043902A2105C40187047C04604030202C6\n:10CE000001010101000000000000000010B5002930\n:10CE100003D1FFF7DDFF203002E0081CFFF7D8FF49\n:10CE200010BDC046F0B5C646714B450000B5041CA8\n:10CE300007006D089D4208DDFF23DB059D4271DC84\n:10CE4000002800DC9DE06B486FE06B4B9D4200DDED\n:10CE50007AE06A4B9D426BDD01267642211C201C44\n:10CE6000FDF7DAFD011C8046FDF7D6FD6449051C7F\n:10CE7000FDF7D2FD6349FDF75DFA291CFDF7CCFDF6\n:10CE80006149FDF757FA291CFDF7C6FD5F49FDF71B\n:10CE900051FA291CFDF7C0FD5D49FDF74BFA291C2D\n:10CEA000FDF7BAFD5B49FDF745FA4146FDF7B4FDD4\n:10CEB00059498046281CFDF7AFFD5849FDF7DEFEB5\n:10CEC000291CFDF7A9FD5649FDF7D8FE291CFDF7E1\n:10CED000A3FD5449FDF7D2FE291CFDF79DFD5249E3\n:10CEE000FDF7CCFE291CFDF797FD011C4046FDF720\n:10CEF00021FA211CFDF790FD731C44D04B4BB6006A\n:10CF0000F158FDF7BBFE211CFDF7B8FE484B011C94\n:10CF1000F058FDF7B3FE002F07DA80231B069C466E\n:10CF2000604402E0011CFDF705FA04BC9046F0BD28\n:10CF30004049FDF7FFF9FE218905FDF7EDF80300F3\n:10CF4000201C002BF1D187E700F0C4F93A4B041CF8\n:10CF50009D421DDC394B9D4239DC011CFDF7EAF98D\n:10CF6000FE218905FDF78AFE8021051CC905201CCC\n:10CF7000FDF7E0F9011C281CFDF776FB0026041CD8\n:10CF80006CE72F48D1E7011C201CFDF777FECCE7AA\n:10CF90002C4B9D4214DCFF218905FDF76FFEFF211C\n:10CFA000051C8905201CFDF737FDFE218905FDF7CD\n:10CFB000C1F9011C281CFDF757FB0226041C4DE794\n:10CFC000011C2148FDF750FB0326041C46E7FE2107\n:10CFD0008905FDF753FEFE21051C8905201CFDF780\n:10CFE000A9F9011C281CFDF73FFB0126041C35E7AD\n:10CFF000FFFF7F50DB0FC93FFFFFDF3EFFFFFF302A\n:10D00000D769853C59DA4B3D356B883D6E2EBA3D6C\n:10D010002549123EABAAAA3E21A215BD6BF16E3D79\n:10D0200095879D3D388EE33DCDCC4C3EC4EB020050\n:10D03000B4EB0200CAF24971FFFF973FFFFF2F3F99\n:10D04000DB0FC9BFFFFF1B40000080BFF0B5C64625\n:10D0500043005F081B0E7F3B00B5051C06001C004B\n:10D06000162B1CDC8046002B21DB1A4F1F41074288\n:10D0700011D01949FDF75EF90021FDF74DF80028A0\n:10D0800009D0002D04DD80231B0423419846A844C9\n:10D090004346BB431E00301C04BC9046F0BD0F4B02\n:10D0A0009F42F8D9011CFDF745F9061CF3E70A4930\n:10D0B000FDF740F90021FDF72FF80028EBD0002DF7\n:10D0C00004DB002FE7D0FE26B605E4E7802636060F\n:10D0D000E1E7C046FFFF7F00CAF24971FFFF7F7F93\n:10D0E00000B51C4A430083B05B08934218DD1A4A1E\n:10D0F000934204DD011CFDF7C1FD03B000BD69468C\n:10D1000001F082FC03230199184001280CD0022869\n:10D1100017D0002811D00098012202F09DFAECE708\n:10D12000002101F04FFEE8E70122009802F094FA96\n:10D1300080231B069C466044DFE7009801F042FE16\n:10D14000DBE7009801F03EFE80231B069C4660440E\n:10D15000D3E7C046D80F493FFFFF7F7FF0B5CE46EB\n:10D16000474680B585B0061CFFF75CFD514A730049\n:10D170000D00040031005B0D934200D96EE04E4B70\n:10D18000200098462933FF331A685B682900FEF7B0\n:10D190001FFF43462133FF331E685F6804000D0004\n:10D1A00002000B0030003900FDF7ECFF8C46814691\n:10D1B000614632003B004846FFF77CF902000B0055\n:10D1C00020002900FFF776F94A461F231340DB00B1\n:10D1D00043441A685B680092019343464133FF332E\n:10D1E0001A685B6804000D00FEF7F2FE0022334B64\n:10D1F000FDF7C8FF43463133FF33029003911A68AD\n:10D200005B6820002900FEF7E3FE43463933FF3315\n:10D210001A685B68FDF7B6FF22002B0006000F00BE\n:10D2200020002900FEF7D4FE02000B003000390078\n:10D23000FEF7CEFE029A039B4D46FDF7A3FF0022A8\n:10D24000EB03009C019D12196B41FEF7C1FEFFF735\n:10D250003BFD05B00CBC90469946F0BD184A96427D\n:10D260001DD0184A934216D81749301CFCF754FFBA\n:10D27000002816D11549301CFCF73AFF002814D1BC\n:10D280001349301CFCF734FF002800D177E7002059\n:10D2900002F0B8FBDDE7301CFDF74CF8D9E70020C1\n:10D2A000D7E7002002F0B4FBD3E7002002F0A4FB94\n:10D2B000CFE7C0462A040000308602000000F03F9D\n:10D2C000000080FFF70700001772B142B4F1CFC22F\n:10D2D000CF8ECEC2400040087047C046F0B5C6466B\n:10D2E00043005F081B0E7F3B00B5051C06001C00B9\n:10D2F000162B1CDC8046002B21DB194F1F410742F7\n:10D3000011D01849FDF716F80021FCF705FF002899\n:10D3100009D0002D04DA80231B0423419846A84439\n:10D320004346BB431E00301C04BC9046F0BD0E4B70\n:10D330009F42F8D9011CFCF7FDFF061CF3E70949E1\n:10D34000FCF7F8FF0021FCF7E7FE0028EBD0002DEA\n:10D3500001DB0026E7E7002FE5D0044EE3E7C046F7\n:10D36000FFFF7F00CAF24971FFFF7F7F000080BF8F\n:10D3700070B50C00002121600F49430002005B08DA\n:10D380008B4217DC002B15D00C4D0021AB4208DC82\n:10D390009821C905FDF740FB1921020043005B08F5\n:10D3A00049420748DB150240FC207E3B5B188005A4\n:10D3B0002360104370BDC046FFFF7F7FFFFF7F00EB\n:10D3C000FFFF7F8070B5041C0D0002F0F3FC002805\n:10D3D00005D00021201CFCF785FE002801D0201C70\n:10D3E00070BD201C290000F005FB041C02F0E2FCCB\n:10D3F000002805D00021201CFCF774FE0028EED088\n:10D4000002F0F0FC22230360E9E7C046F0B5D646FF\n:10D410004F464646FE22C0B5030082B092059042B8\n:10D4200000D16CE0434A444982188A4200D968E03E\n:10D43000424A434992469A44524689465202120F42\n:10D4400012014A4490465246D00DC005181AFFF703\n:10D45000E9FB43461A685B68FEF7BAFD0022394BC8\n:10D46000FFF728F802000B0006000F00FEF7B0FDE2\n:10D470004B461133FF3304001A685B680D0030001F\n:10D480003900FEF7A5FD4B461933FF331A685B6878\n:10D49000FDF778FE4B460933FF33009001911A687F\n:10D4A0005B6820002900FEF793FD009A019BFDF7C1\n:10D4B00069FE22002B00FEF78BFD53460400D815B1\n:10D4C0000D00FFF775FB4B460133FF331A685B68AD\n:10D4D000FEF77EFD43469A68DB68FDF753FE320097\n:10D4E0003B00FDF74FFE22002B00FDF74BFEFFF740\n:10D4F000EBFB02B01CBC90469946A246F0BD002052\n:10D50000F7E742000FD0FF21C9058842F1D000287B\n:10D510000DDB0D4B9A420AD89621C905FDF77CFA1E\n:10D520000A4BC31884E7012002F078FAE1E702F021\n:10D5300085FADEE7000080FFFFFFFF7E0000CDC020\n:10D54000788702000000F03FFFFFFFFE000080F43C\n:10D5500043001B0E7F3B10B5162B05DC002B0EDBAA\n:10D56000094A1A41024203D10860C00FC00710BD2A\n:10D57000030093430B60191CFDF780FBF7E7C30F13\n:10D58000DB070B60F3E7C046FFFF7F0010B500F03C\n:10D59000E1F910BDF0B54F464646D646C0B54B0042\n:10D5A00089460C00CD4986B04518CD4906005A1E63\n:10D5B0008D4200D9F4E0CB498A4200D947E10023EB\n:10D5C0009A46C94BF418C94B650298462D0FE40DD5\n:10D5D000E4052D014544301BFFF724FB2A686B68E6\n:10D5E000FEF7F6FC0022C24BFEF764FF02000B00C0\n:10D5F00006000F00FEF7ECFC00900191E015FFF72C\n:10D60000D7FAAA68EB68FDF7BDFD43462133FF3327\n:10D6100004001A685B680D0030003900FEF7D8FC82\n:10D6200002000B0020002900FDF7ACFD434601334A\n:10D63000FF33029003911A685B6830003900FEF7EF\n:10D64000C7FC43460933FF331A685B68FDF79AFD50\n:10D6500004000D000098019902000B00FEF7B8FCD1\n:10D6600002000B0020002900FEF7B2FC43461133F4\n:10D67000FF3304001A685B680D0030003900FEF7C4\n:10D68000A7FC43461933FF331A685B68FDF77AFD40\n:10D69000009A019BFEF79CFC029A039BFDF772FD2A\n:10D6A00022002B00FDF76EFD040048460D00FFF739\n:10D6B000B9FA0B00020029002000FEF789FC8D4B0F\n:10D6C0000F0049000600090C994200D981E08A4BFD\n:10D6D000300098460133FF331C685D683900220032\n:10D6E0002B00FDF74FFD22002B0004000D00FEF77C\n:10D6F000E1FE02000B0030003900FEF7DBFE1F23C5\n:10D700002340DB004344029403955C681B6800934C\n:10D71000019443461933FF331A685B6806000F0013\n:10D72000FEF756FC0022724BFDF72CFD43460933F1\n:10D73000FF33049005911A685B6830003900FEF7EA\n:10D7400047FC43461133FF331A685B68FDF71AFD47\n:10D75000320004000D003B0030003900FEF738FCB9\n:10D7600002000B002000290054460025FEF730FC83\n:10D77000049A059BFDF706FD029A039BA4185D41E0\n:10D780000022E303009C019D12196B41FEF720FC6F\n:10D79000FFF79AFA06B01CBC90469946A246F0BD27\n:10D7A00050498A4253D845006B1E8B425BD80023F8\n:10D7B0009A4600282ADB514B9E4200D901E7962168\n:10D7C000C905FDF729F94E4B46009C46760866448C\n:10D7D000F7E64C4A4C4B30003900FCF763FC00285C\n:10D7E00031D10022494B30003900FCF751FC0028B0\n:10D7F00022D10022464B30003900FCF73FFC0028C4\n:10D8000000D164E7504602F0FDF8C3E763001B0E49\n:10D810007E2B15DD962B0DDC9622D21A0123934028\n:10D820005A1E22420CD14A461A40924602D0802308\n:10D830005B029A466E08BEE7504602F0DDF8A9E7A3\n:10D8400002F0FCF8A6E7504602F0E2F8A2E7002B4F\n:10D8500024D18023214ADB0343405B00934219D843\n:10D86000FE20800596E7011CFDF7D6F80021002E6A\n:10D8700059DB002D4ED1002C00DB8BE7080002F0B5\n:10D88000CDF887E780234A46DB035340134A5B0009\n:10D890009342E5D94946FCF74DFD7BE7FE22920510\n:10D8A0009642EFD0FF22410012069142F2D89342F5\n:10D8B000F0D1FE23DB059942D2D04B46084ADB4328\n:10D8C0008A4289414942DB0F0020994200D061E73A\n:10D8D00049464846FDF7A0F85CE7C046000080FFD7\n:10D8E000FFFFFF7EFEFFFFFE0000CDC09888020014\n:10D8F0000000F03FBE80000030860200FFFF7F0086\n:10D90000000080F471D5D1FFFFFF5F4000C062C00E\n:10D9100000A062C0002C00DB3CE7011CFE2080055B\n:10D92000FCF7A2FE36E763001B0E1A007F3A172AA7\n:10D930009FD89622D21A012393405A1E224298D190\n:10D940004946194095D080231B069C46012160441E\n:10D950008FE7C04630B5430059081B0E7F3B83B0AC\n:10D960000200162B1EDC00291AD00100C40F002B68\n:10D970001FDB1D4A1A41024212D05208024204D053\n:10D980009143802292031A411143184BA400E4589A\n:10D99000201CFCF7CFFC01900198211CFDF76EF9CB\n:10D9A00003B030BD124B9942FAD9011CFCF7C2FCFE\n:10D9B000F6E743020D495B0AA00045585942194356\n:10D9C0008023490ADB03120D194012051143281C5C\n:10D9D000FCF7B0FC01900198291CFDF74FF94000BD\n:10D9E0004008E4072043DBE7FFFF7F00D4EB0200A1\n:10D9F000FFFF7F7F420070B5031C0C00050051083B\n:10DA00000FD0274EB1420DD8264881420ED9120EB2\n:10DA10001219FE2A1CDC002A22DD2348D2052840E8\n:10DA2000104370BD011CFCF785FCFAE79821181C17\n:10DA3000C905FCF7F1FF1D4A031C944204DB4200B8\n:10DA4000120E0500193AE3E71949FCF7E5FFE8E78C\n:10DA5000191C184802F0A8F91649FCF7DDFFE0E7A9\n:10DA6000110016310ADA144A191C944210DD1148CB\n:10DA700002F09AF90F49FCF7CFFFD2E7CC21193217\n:10DA8000D005094A890515402843FCF7C5FFC8E7BA\n:10DA9000074802F089F90649FCF7BEFFC1E7C04616\n:10DAA000FFFF7F7FFFFF7F00FFFF7F80B03CFFFF16\n:10DAB0006042A20DCAF2497150C3000000B51C4A71\n:10DAC000430083B05B0893421BDD1A4A934204DD96\n:10DAD000011CFDF7D3F803B000BD694600F094FFC8\n:10DAE000032301991840012810D0022817D00028DC\n:10DAF00010D0009801F066F980231B069C46604414\n:10DB0000E9E70022002101F0A7FDE4E7009801F019\n:10DB100059F9E0E70098012201F09EFDDBE700984B\n:10DB2000012201F099FD80231B069C466044D2E748\n:10DB3000D80F493FFFFF7F7F00B5104A430083B0F5\n:10DB40005B08934214DD0E4A934204DD011CFDF78D\n:10DB500095F803B000BD694600F056FF0222400070\n:10DB60001040013A121A0199009801F0EFFDF0E718\n:10DB70000122002101F0EAFDEBE7C046DA0F493F40\n:10DB8000FFFF7F7F43001B0E7F3B162B04DC002B27\n:10DB900003DB034A1A4190437047C00FC007FBE7FD\n:10DBA000FFFF7F0010B500F0C3F910BDF0B5474688\n:10DBB000CE4680B58DB004000D0000F075FA294BFB\n:10DBC00006001B780F005BB29846013310D022008C\n:10DBD0002B002000290002F047FF8146002807D1D2\n:10DBE0000022002320002900FCF748FA002806D173\n:10DBF000300039000DB00CBC90469946F0BD0123B1\n:10DC00000293194B0694079503934B460A93434698\n:10DC100004940595002B15D0002300221900100054\n:10DC2000FDF7CCFD434608900991022B0ED102F07E\n:10DC3000D9F8212303600A9B0193002B0CD1089E85\n:10DC4000099FD5E7002300240893099402A802F055\n:10DC5000A3F80028EFD1EAE702F0C4F80A9B019389\n:10DC60000360ECE7EF000020DCEB0200F0B58DB0C4\n:10DC7000041C00F0F1FA0023224E051CF356013378\n:10DC800031D0211C201CFDF7BDF9071E2BD1201C13\n:10DC9000FFF720FBFE218905FCF73EFA002822D081\n:10DCA00001230293184B201C03930A97FEF7BAFF37\n:10DCB0000690079104900591144802F06FF8002334\n:10DCC000F35608900991022B10D002A802F064F8D4\n:10DCD00000280BD00A9B0193002B0CD108980999BE\n:10DCE000FEF7F2FF051C281C0DB0F0BD02F07AF81B\n:10DCF00021230360EEE702F075F80A9B01930360AD\n:10DD0000ECE7C046EF000020E4EB0200E0EB02008D\n:10DD1000F0B58DB0041C00F001FC0023224E051C60\n:10DD2000F356013331D0211C201CFDF76BF9071E7F\n:10DD30002BD1201CFFF7CEFAFE218905FCF7ECF968\n:10DD4000002822D001230293184B201C03930A972A\n:10DD5000FEF768FF0690079104900591144802F0C1\n:10DD60001DF80023F35608900991022B10D002A849\n:10DD700002F012F800280BD00A9B0193002B0CD163\n:10DD800008980999FEF7A0FF051C281C0DB0F0BDEE\n:10DD900002F028F821230360EEE702F023F80A9B43\n:10DDA00001930360ECE7C046EF000020ECEB0200BB\n:10DDB000E0EB020010B500F003FD10BDF0B5C64663\n:10DDC00000B58CB0051C0C1C00F08EFD2D4B061C04\n:10DDD0001B785BB2984601333DD0211C201CFDF717\n:10DDE00011F9002837D1291C281CFDF70BF9071E53\n:10DDF00031D10021201CFCF775F900282BD001231C\n:10DE00000293214B281C03930A97FEF70BFF060091\n:10DE10000F00201C04960597FEF704FF434606906A\n:10DE20000791002B1CD00023002219001000FDF7E1\n:10DE3000C5FC434608900991022B13D101F0D2FF93\n:10DE4000212303600A9B0193002B14D108980999A0\n:10DE5000FEF73AFF061C301C0CB004BC9046F0BD27\n:10DE60000896099702A801F097FF0028E6D00A9BC0\n:10DE70000193002BEAD001F0B5FF0A9B01930360E8\n:10DE8000E4E7C046EF000020F4EB0200F0B5002507\n:10DE90008DB0041C00F03CFF234B061C5D576B1C2F\n:10DEA0000BD0211C201CFDF7ADF8071E05D1002169\n:10DEB000201CFCF71DF9002802D1301C0DB0F0BD6C\n:10DEC00001230293194B201C03930A97FEF7AAFE25\n:10DED000002206900791049005910023002D15D093\n:10DEE00010001900FDF76AFC08900991022D0FD16E\n:10DEF00001F078FF212303600A9B0193002B0DD1D1\n:10DF000008980999FEF7E0FE061CD6E708920993E7\n:10DF100002A801F041FF0028EED1E9E701F062FF1D\n:10DF20000A9B01930360EBE7EF000020FCEB02008B\n:10DF3000F8B515004746CE465A001C006B4280B526\n:10DF40002B434B4F5208DB0F1343BB421DD84B00F2\n:10DF50005B089846464643420343DB0F89463343FA\n:10DF6000BB4212D8434BE3182B4339D00226A317E8\n:10DF70001E40CB0F1E434346034310D1022E47D011\n:10DF8000032E08D13C483D4905E002000B00280063\n:10DF90002100FDF7F7F80CBC90469946F8BD130038\n:10DFA0002B4320D0BA4224D0B8451CD043469A1AFD\n:10DFB00012153C2A2FDC002C30DA3C322EDA0020FD\n:10DFC0000021012E3ED0022E31D0002EE3D02C4A6B\n:10DFD0002C4BFEF76FFA284A2B4BFEF76BFADAE769\n:10DFE00001F042FDD7E74B462348002B0EDB2749C3\n:10DFF000D1E790452BD0022E0AD0032EC2D00020AC\n:10E000000021012EC7D180210906C4E72049C2E7BB\n:10E0100019481D49BFE718481C49D2E72A002300C8\n:10E02000FDF7CCFB01F0B4FE01F01EFDC9E7144A78\n:10E03000144BFEF73FFA02000B000F481249FEF79F\n:10E0400039FAA8E7802424060B191900A3E7022E49\n:10E0500006D0032E09D00848012E04D00D499AE7B6\n:10E060000D480E4997E70E4995E70B480D4992E791\n:10E070000000F07F000010C0182D4454FB2109C09F\n:10E08000075C143326A6A13CFB210940FB21F93F84\n:10E09000FB21F9BFFB21E93FD221337F7CD902402C\n:10E0A000FB21E9BF7CD902C0F8B54746CE46674B95\n:10E0B00080B50A000F00190005003940994200D1CF\n:10E0C0009BE004000100002F69DD3F1500D1B4E0A2\n:10E0D0005F4B12039C468023120B5B0313435B00D0\n:10E0E000CA0F67449B184A00F80703D5D20F5B009C\n:10E0F0009B188A0079108C460021802016248946BE\n:10E1000080030D189D4202DC29185B1B8144D50F4A\n:10E110005B00013C5B1952004008002CF1D100204B\n:10E120008046802020250027000609E08B425CD035\n:10E13000D40F5B00013DE31852004008002D16D0BB\n:10E14000C4198B42F2DD27180E00002C49DB5B1A44\n:10E15000A242894149425B1A121BD40F5B00013D68\n:10E1600080443100E31852004008002DE8D11343E9\n:10E170004ED143465B0837494A46884649465210C5\n:10E180004244C90702D5802109060B4361460F05A9\n:10E19000BD18180029000CBC90469946F8BD7B00BC\n:10E1A0005B0803433900002BF5D0002F3CD1E30A74\n:10E1B000153A6405002BFAD08020400303423FD17A\n:10E1C000002700E00F005B00791C0342FAD0250015\n:10E1D00020208D40401A2900D71B2200C2401A433C\n:10E1E00076E7FE43F60F8E19B1E79442A0D82718C0\n:10E1F000002CF6DB1E000023AEE702003B002800E7\n:10E200003900FDF7E5FE2A003B00FCF7BBFFC2E743\n:10E210004346013303D0434601335B08ABE7012398\n:10E2200098460023C144A6E73B000200FEF742F9EE\n:10E2300002000B00FDF7C2FAADE713000022BBE7B6\n:10E240000127210020207F42C6E7C0460000F07F62\n:10E2500001FCFFFF0000E03FFE22F8B54300041C74\n:10E2600001005B089205934261D05ADC9B4A9342BD\n:10E2700062DC8C229205934200DCCEE0FCF7CCFB02\n:10E280009749051CFCF7C8FB9649FCF753F8291C75\n:10E29000FCF7C2FB9449FCF7F1FC291CFCF7BCFB22\n:10E2A0009249FCF747F8291CFCF7B6FB9049FCF7AC\n:10E2B000E5FC291CFCF7B0FB8E49FCF73BF8291C58\n:10E2C000FCF7AAFB8C49061C281CFCF7A5FB8B4914\n:10E2D000FCF7D4FC291CFCF79FFB8949FCF72AF8C2\n:10E2E000291CFCF799FB8749FCF7C8FC291CFCF7A3\n:10E2F00093FBFE218905FCF71DF8011C301CFCF77F\n:10E30000B3F9211CFCF788FB011C7F48FCF7B6FC25\n:10E31000011C201CFCF7B2FC011C7C48FCF7AEFC85\n:10E3200004E0FCF7ABFC011CFCF79EF9F8BD0020F3\n:10E33000002CFBDC7648F9E7002870DBFE20800526\n:10E34000FCF79CFCFC218905FCF766FB041C00F033\n:10E35000DFFC6349061C050B201CFCF75DFB6149D3\n:10E36000FBF7E8FF211CFCF757FB5F49FCF786FC35\n:10E37000211CFCF751FB5D49FBF7DCFF211CFCF77E\n:10E380004BFB5B49FCF77AFC211CFCF745FB594928\n:10E39000FBF7D0FF211CFCF73FFB5749071C201C53\n:10E3A000FCF73AFB5549FCF769FC211CFCF734FBF0\n:10E3B0005349FBF7BFFF211CFCF72EFB5149FCF72B\n:10E3C0005DFC211CFCF728FBFE218905FBF7B2FF51\n:10E3D000011C381CFCF748F9311CFCF71DFB2D0310\n:10E3E000071C291C281CFCF717FB011C201CFCF730\n:10E3F00045FC291C041C301CFBF79CFF011C201C45\n:10E40000FCF732F9011C381CFBF794FF291CFBF7C1\n:10E4100091FF011CFBF78EFF88E73E4886E7FE214F\n:10E420008905FBF787FFFC218905FCF7F5FA2C49E4\n:10E43000041CFCF7F1FA2B49FBF77CFF211CFCF7CD\n:10E44000EBFA2949FCF71AFC211CFCF7E5FA2749ED\n:10E45000FBF770FF211CFCF7DFFA2549FCF70EFCE7\n:10E46000211CFCF7D9FA2349FBF764FF211CFCF7B8\n:10E47000D3FA061C201C00F04BFC1F49051C201C75\n:10E48000FCF7CAFA1D49FCF7F9FB211CFCF7C4FA9A\n:10E490001B49FBF74FFF211CFCF7BEFA1949FCF79B\n:10E4A000EDFB211CFCF7B8FAFE218905FBF742FFC2\n:10E4B000011C301CFCF7D8F8291CFCF7ADFA1249F6\n:10E4C000FCF7DCFB291CFBF735FF011CFBF732FFD7\n:10E4D000011C1148FCF7D2FB28E7C046FFFFFF3EB6\n:10E4E00008EF1138047F4F3A4611243DA80A4E3EEA\n:10E4F00090B0A63EABAA2A3E2EC69D3D6133303F6A\n:10E500002D57014039D119406821A233DA0FC93F94\n:10E51000DB0F4940DB0FC93FDA0F4940F0B5FE235E\n:10E520004646D6464F464400C0B5051C0600640862\n:10E530009B059C4200D18AE07EDC8F4B9C420EDC26\n:10E540008E4B9C4200DD8FE08D49FBF7F3FEFE21F0\n:10E550008905FBF7E1FD0300281C002B72D1281C64\n:10E56000FEF7B8FE011CFE208005FCF787FBFC21AE\n:10E570008905FCF751FA8349051CFCF74DFA8249DD\n:10E58000FBF7D8FE291CFCF747FA8049FCF776FB1D\n:10E59000291CFCF741FA7E49FBF7CCFE291CFCF74D\n:10E5A0003BFA7C49FCF76AFB291CFCF735FA7A49EF\n:10E5B000FBF7C0FE291CFCF72FFA78498046281C7F\n:10E5C000FCF72AFA7649FCF759FB291CFCF724FAD8\n:10E5D0007449FBF7AFFE291CFCF71EFA7249FCF7E1\n:10E5E0004DFB291CFCF718FAFE218905FBF7A2FE5A\n:10E5F0008146281C00F08CFB6C4B071C9C4200DC05\n:10E600007DE049464046FCF72FF8391CFCF704FA38\n:10E61000391CFBF78FFE011CFBF78CFE6449FBF7EE\n:10E6200089FE011C6348FCF729FB002E0ADC8023CD\n:10E630001B069C46604405E0011CFCF71FFB011C07\n:10E64000FCF712F81CBC90469946A246F0BD594909\n:10E65000FCF7E2F95849041C281CFCF7DDF9011C01\n:10E66000201CFBF767FEEDE7011CFCF7D5F94549D7\n:10E67000041CFCF7D1F94449FBF75CFE211CFCF7B4\n:10E68000CBF94249FCF7FAFA211CFCF7C5F94049DD\n:10E69000FBF750FE211CFCF7BFF93E49FCF7EEFAF0\n:10E6A000211CFCF7B9F93C49FBF744FE211CFCF79F\n:10E6B000B3F93A49061C201CFCF7AEF93849FCF7BF\n:10E6C000DDFA211CFCF7A8F93649FBF733FE211CC3\n:10E6D000FCF7A2F93449FCF7D1FA211CFCF79CF9AC\n:10E6E000FE218905FBF726FE011C301CFBF7BCFF51\n:10E6F000291CFCF791F9291CFBF71CFEA2E7011C61\n:10E70000040BFBF717FE494682464046FBF7ACFF79\n:10E71000011C5046FCF780F924038046211C201C74\n:10E72000FCF77AF9011C281CFCF7A8FA391C051C17\n:10E73000201CFBF7FFFD011C281CFBF795FF011CAB\n:10E74000FBF7F8FD011C1C48FCF798FA011C404639\n:10E75000FCF794FA211C051C201CFBF7EBFD011CA7\n:10E760001648FCF78BFA011C281CFCF787FA011CE1\n:10E770001248FCF783FA58E7FFFFFF3EFFFFFF3127\n:10E78000CAF2497108EF1138047F4F3A4611243D0F\n:10E79000A80A4E3E90B0A63EABAA2A3E2EC69D3D8C\n:10E7A0006133303F2D57014039D119409999793F54\n:10E7B0002EBD3B33DB0FC93F2EBD3BB3DB0F493FC3\n:10E7C000F0B54B00C6460C1CFF2100B55B08C9051F\n:10E7D0008B4217DC4200804652088A4212DCFE253A\n:10E7E000AD05AC4236D0A517AC46022567463D4084\n:10E7F000C70F3D43002A0CD1022D3CD0032D05D17B\n:10E80000304803E0011C201CFBF794FD04BC90463B\n:10E81000F0BD002B19D08B421FD08A4215D0D31ADD\n:10E82000DB153C2B29DC002C29DA3C3327DA0020CD\n:10E83000012D34D0022D2AD0002DE7D02249FBF73C\n:10E8400079FD2249FCF71AFAE0E74346002B10DB7A\n:10E850001F48DBE7FEF7E6FAD8E79A4224D0022DFC\n:10E8600009D0032DCCD00020012DCFD1802000066F\n:10E87000CCE71848CAE71548C8E71548D8E7211C6F\n:10E88000FBF7F2FEFEF726FDFEF7CCFAD0E70E49C5\n:10E89000FBF750FD011C0D48FCF7F0F9B6E78023AB\n:10E8A0001B069C466044B1E7022D05D0032D07D01E\n:10E8B000012D03D00848A9E70848A7E70848A5E7BD\n:10E8C0000848A3E7DB0F49C02EBDBB33DB0F49402F\n:10E8D000DB0FC93FDB0FC9BFDB0F493FE4CB16405D\n:10E8E000DB0F49BFE4CB16C0F8B54B00071C5B0833\n:10E8F00036D0414A44006408944231DC01329342EC\n:10E900002EDC9C4232DBC00FC5079C422FD03B4A15\n:10E91000944231DDE2157F3A3848834256DC7E2648\n:10E9200018027642013E4000FCD510007E3048DBE4\n:10E9300080207C02640A0004044330007E303BDB0C\n:10E9400080234902490A1B040B43911BE21A002948\n:10E950001BD06400002A01DB09D054000139F5E71F\n:10E96000381CFCF759F8011CFBF77EFEF8BDE80FD8\n:10E97000234B8000C058F9E7200233D07E22524258\n:10E98000013A40000028FBDCC6E7002A00DA22003A\n:10E99000002AECD019490B008A4203DC5200013EE8\n:10E9A0009A42FBDD33007E3313DA7E235B429E1BEB\n:10E9B00032412A431000D9E77E214942891B8B400E\n:10E9C000C3E77E204042801A8440B6E7DE157F3ED2\n:10E9D000ABE70C4B7F369C4662442A431000F60599\n:10E9E0003043C3E7934204DD7E22DE157F3E524270\n:10E9F0009EE77E22524292E7FFFF7F7FFFFF7F006C\n:10EA000004EC0200000080FFF0B557464E46DE469B\n:10EA10004546E0B5B04B470089B00C0006007F08C2\n:10EA20009F426EDDAD4B9F421ADC0F23AC499F43E2\n:10EA3000002800DC71E0FCF721F9AA4B061C9F427C\n:10EA400000D114E1A849FCF719F9011C2060301C21\n:10EA5000FCF714F9A449FCF711F90125606054E0B2\n:10EA6000A24B9F426FDDA24B9F4200DDF8E0862261\n:10EA700052429146FB1599444B46DD057D1B281CEF\n:10EA8000FCF7D6FAFCF7F4FA011C0590281CFCF7F9\n:10EA9000F5F88721C905FBF7BFFF8046FCF7C8FAE8\n:10EAA000FCF7E6FA011C0690051C4046FCF7E6F868\n:10EAB0008721C905FBF7B0FF00210790FBF712FB88\n:10EAC000002800D105E10021281CFBF70BFB434285\n:10EAD00043410133874A21000192022205A8009296\n:10EAE0004A4600F039FA0500002E0EDA802212069E\n:10EAF00094462368454263442360636863446360CB\n:10EB000003E00023002508604B60280009B03CBCEE\n:10EB100090469946A246AB46F0BDFBF70BFC714B05\n:10EB2000061C9F4200D1C1E06F49FBF703FC011CAA\n:10EB30002060301CFCF7A2F86B49FBF7FBFB0125BA\n:10EB400060606D42E1E7FEF7C5FB6B498046FBF76D\n:10EB500063FFFC218905FBF7EDFBFCF769FA050073\n:10EB6000FCF786FA5E498146FBF756FF011C4046DA\n:10EB7000FCF784F85C4980464846FBF74DFF824627\n:10EB8000011C40461F2D00DC83E0FCF777F883462C\n:10EB90005B46FF22DB0DFF151340FB1A082B47DDF8\n:10EBA00056494846FBF738FF8246011C4046FCF7B1\n:10EBB00065F88346011C03904046FCF75FF8514618\n:10EBC000FCF75CF880464E494846FBF725FF414676\n:10EBD000FCF754F8011C82465846FCF74FF8FF2218\n:10EBE000C30D1340D846FB1A8346192B20DD454937\n:10EBF0004846FBF711FF039B071C011C181C9A4693\n:10EC0000FCF73CF8011C80465046FCF737F8391CED\n:10EC1000FCF734F83C49071C4846FBF7FDFE391C5D\n:10EC2000FCF72CF8011C82464046FCF727F8834687\n:10EC30005B46594623604046FCF720F85146FCF7F6\n:10EC40001DF86060002E00DB5FE780231B065B443D\n:10EC5000236080231B069C46604460606D4254E73D\n:10EC6000011CFCF70BF80025606020604DE723498C\n:10EC7000FCF704F82249051CFCF700F8011C206091\n:10EC8000281CFBF7FBFF1E49FBF7F8FF012560601E\n:10EC90003BE7FBF7F3FFFF233A001C499A436B1E47\n:10ECA0009B005B5883469A42C2D171E71349FBF738\n:10ECB00041FB1349051CFBF73DFB011C2060281C90\n:10ECC000FBF7DCFF0E49FBF735FB012560606D4269\n:10ECD0001BE70323FEE6C046D80F493FE3CB1640AF\n:10ECE000800FC93FD00FC93F43443537800F494398\n:10ECF000FFFF7F7F8CEC020084F9223F0044353710\n:10ED000008A3852E00A3852E32318D240CEC020041\n:10ED10002A49430070B50200041C5B088B423BD8B3\n:10ED2000002B38D000283EDB2549C6158B420BD876\n:10ED30008020000420423DD1002300E00B0052005F\n:10ED4000591C0242FAD0F61A802352021B04520ABE\n:10ED50001A437F3E5300F10700D5930080227010C4\n:10ED60001921002600255204AC189C4202DCA5188B\n:10ED70001B1BB61801395B0052080029F4D1002B87\n:10ED800002D0012301369E43FC239B059C4676104E\n:10ED90006644C005801970BD011CFBF73DFE211CB7\n:10EDA000FBF7C8FAF7E7011CFBF768FF011CFBF74C\n:10EDB0005BFCF0E701235B42C5E7C046FFFF7F7FB6\n:10EDC000FFFF7F00F8B54746CE46584B450080B55B\n:10EDD000061C0F1C6D089D4248DCFCF729F9002831\n:10EDE00000D19BE0311C301CFBF716FE5049041C7F\n:10EDF000FBF712FE4F49FBF79DFA211CFBF70CFEB7\n:10EE00004D49FBF73BFF211CFBF706FE4B49FBF787\n:10EE100091FA211CFBF700FE4949FBF72FFF211C4B\n:10EE2000FBF7FAFD4749FBF785FA211CFBF7F4FDD8\n:10EE30008046FC21201C8905FBF7EEFD4146051CA0\n:10EE4000201CFBF7E9FD391C041C301CFBF7E4FD1A\n:10EE5000011C201CFBF712FF011C281CFBF70EFFF6\n:10EE6000011CFE208005FBF709FF53E0011CFBF7A6\n:10EE7000D3FD2F49041CFBF7CFFD2E49FBF75AFAAF\n:10EE8000211CFBF7C9FD2C49FBF7F8FE211CFBF701\n:10EE9000C3FD2A49FBF74EFA211CFBF7BDFD2849AB\n:10EEA000FBF7ECFE211CFBF7B7FD2649FBF742FA06\n:10EEB000211CFBF7B1FD244B80469D42B9DD234B5D\n:10EEC0009D422EDCFF231B069C46FE206544291C28\n:10EED0008005FBF7D3FE8146FC21201C8905FBF74A\n:10EEE0009BFD291CFBF7CAFE4146051C201CFBF7B5\n:10EEF00093FD391C041C301CFBF78EFD011C201CEB\n:10EF0000FBF7BCFE011C281CFBF7B8FE011C4846A1\n:10EF1000FBF7B4FE0CBC90469946F8BDFE20800578\n:10EF2000F8E70B4B0B4D9946D6E7C046FFFFFF3184\n:10EF30004ED747ADF6740F317CF29334010DD037C4\n:10EF4000610BB63AABAA2A3D9999993E0000483F19\n:10EF50000000383F0000903EF0B54E464546DE4684\n:10EF60005746E0B5DDB00B91669903900793180002\n:10EF7000CB4B8900CE580723D11E441EC81703402F\n:10EF80005B18D910CB43DB1719404B1CDB00D31A9D\n:10EF900005960194099104930D1B371919D4679AAA\n:10EFA0007F199046AB0001379844002620AC08E05A\n:10EFB00043469859FCF75CF80135A0510436BD4230\n:10EFC00007D0002DF4DA00200135A0510436BD42EF\n:10EFD000F7D1059B002B00DA24E3059B039901334D\n:10EFE0009B009946079B9A00944600920022904607\n:10EFF00048AA9346F4225242614492460F005CAB09\n:10F0000063449A44019B0026002B0FDB55460026E3\n:10F01000039C4544296801CCFBF7FEFC011C301C15\n:10F02000FBF788F9043D061CBC42F3D15B4642461F\n:10F030009E5004239C46E044C845E3D10CA9042219\n:10F040008C46524262449446059DAB009C44624605\n:10F050008C460892039A083B634494460A93009BAB\n:10F0600063449A465A46AB000093D658002D26DDDD\n:10F070008C4BA846EC1847AB99460CAB1D00A4007E\n:10F080005C44EE21301C8905FBF7C6FCFBF7D0FF82\n:10F09000FBF7EEFF8721C905071CFBF7BDFC011C30\n:10F0A000301CFBF7EBFDFBF7C3FF216801C5381CE3\n:10F0B000FBF740F9043C061C4C45E2D14546049F51\n:10F0C000301C3900FEF796FCF8218905041CFBF77B\n:10F0D000A3FCFEF703F98221C905FBF79DFC011C87\n:10F0E000201CFBF7CBFD061CFBF7A2FF0400FBF77F\n:10F0F000BFFF011C301CFBF7C1FD061C002F00DC0C\n:10F10000C4E06A1E92000CAB9B5808201900C01B7B\n:10F110000141641881405B1A0CA98B500722D21B55\n:10F12000134198464346002B29DD0134002D00DCB5\n:10F13000F0E10C9F0123002F00D08EE0012D08D0BC\n:10F1400099000CAA57580133002F00D086E09D4249\n:10F15000F6D1049B002B0EDD012B00D1FCE0022B2D\n:10F1600009D16B1E9B000CAAD25802923F22029931\n:10F170000A400CA9CA504346022B00D1D6E0002118\n:10F18000301CFAF7AFFF002800D19DE0059B691EF7\n:10F190008B420FDC0CAA94460022424B0898EB18D5\n:10F1A0009B0063441E68043B32438342FAD1002A29\n:10F1B00000D0DCE0059B0CAA013B9B00D358002B40\n:10F1C00000D0C7E001220A9B043B596801320029A4\n:10F1D000FAD052196B1C069293423ADC531B9B00E7\n:10F1E0000293099B00275B199B009946079B9C464D\n:10F1F00020AB98466544AD00A844679A4B469446B8\n:10F20000DB1963445868FBF733FF4346D851019B31\n:10F21000002B20DB4346DD193B00039C57460026AC\n:10F220009A4600E0286802CCFBF7F6FB011C301C74\n:10F23000FBF780F8043D061CA742F3D15346BA46BB\n:10F240001F00009BFB185B445E60029B04379F42DB\n:10F25000D3D1069D06E70026F3E700218022520065\n:10F26000D71B0CAA57509D420EDD0CA98C46009965\n:10F270009B006144D25808006344FF2100E01A68F3\n:10F280008A1A04C38342FAD1012762E7049B002B48\n:10F290000AD16B1E9B000CAAD3581B12984641E75B\n:10F2A000D0EF0200FFFFFF3FFC218905FAF73EFF88\n:10F2B000002800D021E100230021301C9846FAF7F5\n:10F2C00011FF002800D061E74346049F301C7942BB\n:10F2D00002940393FEF78EFB8721C905041CFAF7FD\n:10F2E00025FF002800D17EE1EE21201C8905FBF7D7\n:10F2F00093FBFBF79DFEFBF7BBFE8721C905061CB0\n:10F30000FBF78AFB011C201CFBF7B8FCFBF790FE07\n:10F31000009A0CAB985008376B1C301C9D00019371\n:10F320000497FBF785FE0CAB58513CE0FE20311CE6\n:10F330008005FBF7A3FC061C002F00D11FE7FE2071\n:10F3400004998005FEF756FB011C301CFBF796FC68\n:10F35000061C14E701223CE76B1E9B000CAAD25846\n:10F3600002927F2202990A400CA9CA5003E7434641\n:10F37000049A03930CA88B00C358083A0294019195\n:10F380000492002B0FD1B1480B0084460CA86344B3\n:10F3900084469B006344043B58680139083A0028BE\n:10F3A000F9D004920191FE2004998005FEF722FB1A\n:10F3B000019B061C002B00DA3AE19B001D005C4615\n:10F3C00004930CAB5859FBF753FE311CFBF724FB9D\n:10F3D000EE2160518905301CFBF71EFB043D061C25\n:10F3E0002B1DEED1A346049B994D5B449846019B8F\n:10F3F00001339B4600239A4634AB99465B46009303\n:10F40000059B9B465B460027002B14DB002691489A\n:10F410000027002403E0043654450CDC70594346B1\n:10F420009959FBF7F9FA011C381CFAF783FF0134EC\n:10F43000071CA345EFDA53464A469B00D7500123E9\n:10F440009C46053BE2449C46009BE0445345D9D191\n:10F45000669B022B62DC002B1EDC13D1049B002078\n:10F460004B441D0033AC2968043DFAF763FFAC42FE\n:10F47000F9D1039B002B03D080231B069C466044DC\n:10F480000B9B18600720029B18405DB03CBC904667\n:10F490009946A246AB46F0BD019B0020002B0DDB38\n:10F4A00034AB9946019B00209B004B441D0033AEBA\n:10F4B0002968043DFAF73EFFAE42F9D1039B002BC9\n:10F4C00000D098E00B9B011C18603498FBF7D6FB2A\n:10F4D000019B002B0EDD34AB01261D00019CB30007\n:10F4E000E9580136FAF726FFB442F8DA039B002BFD\n:10F4F00000D08DE00B9B5860C4E70223013498468E\n:10F50000002D00DD15E6FE20311C8005FBF7B6FB63\n:10F51000061C34E600271CE634AB9946669B032B99\n:10F52000B0D1019B002B00DC8EE0019A93009B463A\n:10F530004B46594694465B589846444B454663446F\n:10F540009E00009333AB9A464E443768291C381C02\n:10F55000FAF7F0FE041C011C381CFBF78FFB291C7A\n:10F56000FAF7E8FE043EB0607460251CB245ECD1A9\n:10F57000019B012B68DD4B465A469E58009B4C462A\n:10F580009B009846444400E01C002768311C381C4E\n:10F59000FAF7D0FE051C011C381CFBF76FFB311C71\n:10F5A000FAF7C8FE231F606025602E1C9945EBD139\n:10F5B0004646002004364E443168043EFAF7BAFE4F\n:10F5C000B442F9D14B460399349A5B68002924D0A0\n:10F5D000802109068C460B996244634460440A60AA\n:10F5E0004B6088604EE7201CFBF722FD009A0CABB5\n:10F5F00098500195D7E680230B9A1B06C318136019\n:10F60000011C3498FBF73AFB019B002B00DD62E7FD\n:10F6100080231B069C4660446CE70B990A604B6094\n:10F6200088602FE7079B9B00009348AB9B4605E54E\n:10F63000669B022B00DD6FE7002B00DD2CE700202E\n:10F64000002B00D115E71DE70020BBE7FFFFFF3FC0\n:10F65000A4EF02000000C93FF8B54746CE4680B58A\n:10F660001700334A4300041C0E1C5B08934205DC60\n:10F67000FBF7DEFC0300201C002B46D0211C201CC5\n:10F68000FBF7CAF9051C011C201CFBF7C5F9294929\n:10F690008046281CFBF7C0F92749FBF7EFFA291C25\n:10F6A000FBF7BAF92549FAF745FE291CFBF7B4F92F\n:10F6B0002349FBF7E3FA291CFBF7AEF92149FAF7D6\n:10F6C00039FE8146002F24D0FC21301C8905FBF730\n:10F6D000A3F94946071C4046FBF79EF9011C381C5C\n:10F6E000FBF7CCFA291CFBF797F9311CFBF7C6FA9C\n:10F6F0001549051C4046FBF78FF9011C281CFAF739\n:10F7000019FE011C201CFBF7B9FA0CBC9046994667\n:10F71000F8BD011C281CFBF77FF90B49FBF7AEFA7B\n:10F720004146FBF779F9211CFAF704FEEDE7C046E4\n:10F73000FFFFFF31D3C92E2F342FD7321BEF3836BE\n:10F74000010D50398988083CABAA2A3EF0B5DE4647\n:10F7500057464E464546E0B58A4B460083B0041CEA\n:10F7600088469246834676089E4212DCFBF760FC90\n:10F77000002828D1534601331E4300D1F5E05346FB\n:10F78000012B00D1FBE0211C7F48FAF76DFF051C1F\n:10F79000B5E07E4B9E4216DD002805DA80231B066D\n:10F7A0009C46434498466444211C7948FBF766FA1A\n:10F7B0004146041C7748FBF761FA211CFAF7BAFDB1\n:10F7C00000239846041C211C201CFBF725F9011C72\n:10F7D000071CFBF721F9391C051C201CFBF71CF941\n:10F7E0006D498146281CFBF717F96C49FAF7A2FD11\n:10F7F000291CFBF711F96A49FAF79CFD291CFBF754\n:10F800000BF96849FAF796FD291CFBF705F96649DB\n:10F81000FAF790FD291CFBF7FFF86449FAF78AFD17\n:10F82000391CFBF7F9F862490190281CFBF7F4F842\n:10F830006049FAF77FFD291CFBF7EEF85E49FAF7FD\n:10F8400079FD291CFBF7E8F85C49FAF773FD291CE0\n:10F85000FBF7E2F85A49FAF76DFD291CFBF7DCF8D3\n:10F860005849FAF767FD011C0198FAF763FD49460C\n:10F87000FBF7D2F84146FAF75DFD391CFBF7CCF8EF\n:10F880004146FAF757FD5049051C4846FBF7C4F8B6\n:10F89000291CFAF74FFD011C071C201CFAF74AFD32\n:10F8A0003A4B051C9E4232DC5346012B27D0011CEB\n:10F8B000060B3548FAF7D8FE3603211C8046050BA7\n:10F8C000301CFBF7DBF92D03011C381CFBF7D6F9C4\n:10F8D000291CFBF7A1F8291C041C301CFBF79CF821\n:10F8E000FE218905FAF726FD011C201CFAF722FDEE\n:10F8F0004146FBF791F8291CFAF71CFD051C281C52\n:10F9000003B03CBC90469946A246AB46F0BD50467B\n:10F91000FBF7AEFB291C061C281CFBF77DF8311CED\n:10F920008046281CFAF706FD011C4046FAF79CFEAB\n:10F93000391CFBF7A3F9011C201CFBF79FF9011CE4\n:10F94000FAF7F8FC011C301CFBF798F95B46041C25\n:10F95000981702231840013B181AFBF789FB011C7A\n:10F96000201CFBF759F8051CC9E7201CFDF7B2FC69\n:10F97000011CFE208005FAF777FE051CBFE7251C59\n:10F98000BDE7C046FFFF7F31000080BF3FA12C3F95\n:10F99000DA0F493F682122338453D9377AC095382A\n:10F9A000B937813948DEBE3A1F37113CD10D5D3D74\n:10F9B0005FAE9BB745F4A338C8261A3A16696B3B6D\n:10F9C000A427B33C8988083EABAAAA3E70B50D00B7\n:10F9D000041C00F007FA0560201C70BD10B50B1C5C\n:10F9E000002802D080231B06CB18181CFBF714F844\n:10F9F0002221FFF7EBFF10BD802110B54905FFF76D\n:10FA0000EDFF10BDD12110B54905FFF7E7FF10BD8F\n:10FA1000E02110B5C905FFF7E1FF10BD10B50028C2\n:10FA200008D1FE2080050021FAF71EFE2221FFF7F3\n:10FA3000CDFF10BD0048F6E7000080BF70B5011C87\n:10FA4000041CFBF71BF9011CFAF70EFE211C051C18\n:10FA5000201CFBF7D7FA002804D1281C2121FFF72E\n:10FA6000B5FF051C281C70BDF8B54E4657464546E7\n:10FA7000DE46A04BE0B54E0080468A4689467608B1\n:10FA80009E420CDD9C4B9E4200DDA2E000D19DE039\n:10FA90004B46002B00DCE0E0984B994AA1E0994BE3\n:10FAA0009E4200DDB3E0984B9E4200DCA1E00123C2\n:10FAB0005B429B464246534640465146FCF788FA15\n:10FAC00002000B0006000F00FCF782FA04000D0094\n:10FAD0008E4A8F4BFCF77CFA8E4A8F4BFBF752FB1A\n:10FAE00022002B00FCF774FA8C4A8D4BFBF74AFB83\n:10FAF00022002B00FCF76CFA8A4A8B4BFBF742FB87\n:10FB000022002B00FCF764FA884A894BFBF73AFB8A\n:10FB100022002B00FCF75CFA864A874BFBF732FB8E\n:10FB200032003B00FCF754FA844A06000F00844B75\n:10FB300020002900FCF74CFA824A834BFCF7BAFC00\n:10FB400022002B00FCF744FA804A814BFCF7B2FC00\n:10FB500022002B00FCF73CFA7E4A7F4BFCF7AAFC04\n:10FB600022002B00FCF734FA7C4A7D4BFCF7A2FC08\n:10FB700022002B00FCF72CFA02000B0030003900A9\n:10FB8000FBF700FB53464246FCF722FA5B46013383\n:10FB900066D05B46734A744CDB00E418D3181A68CD\n:10FBA0005B68FCF787FC42465346FCF783FC020087\n:10FBB0000B0020686168FCF77DFC030048460A00E2\n:10FBC00000280EDA802212068A180AE0002800D1E6\n:10FBD0005EE74246534640465146FBF7D3FA0300E0\n:10FBE0000A00180011003CBC90469946A246AB465C\n:10FBF000F8BD5E4A5E4BFBF7C5FA00225D4BFAF793\n:10FC000051FA002800D152E743465246E9E700F096\n:10FC1000BFF8594B04000D009E422ADC574B9E4210\n:10FC200050DC02000B00FBF7ADFA0022514BFCF751\n:10FC300041FC802306000F000022DB052000290084\n:10FC4000FBF7A0FA0B00020039003000FBF7B6FD0D\n:10FC5000002380468A469B462CE7284B484AC0E74B\n:10FC600002000B0040465146FCF724FC03000A004A\n:10FC7000B7E7444B9E421ADC0022434BFCF71AFCC8\n:10FC8000002206000F00404B20002900FCF7A0F9DD\n:10FC90000022384BFBF776FA0B00020039003000E7\n:10FCA000FBF78CFD022380468A469B4602E70B0049\n:10FCB000020036490020FBF781FD032380468A4677\n:10FCC0009B46F7E600222B4BFCF7F4FB00220600D4\n:10FCD0000F00284B20002900FBF754FA0B0002000C\n:10FCE00039003000FBF76AFD012380468A469B46B7\n:10FCF000E0E6C046FFFF0F440000F07F182D44549B\n:10FD0000FB21F93FFFFFDB3FFFFF1F3E11DA22E33C\n:10FD10003AAD903FEB0D76244B7BA93F513DD0A0EF\n:10FD2000660DB13F6E204CC5CD45B73FFF830092B5\n:10FD30002449C23F0D5555555555D53F2F6C6A2C5A\n:10FD400044B4A2BF9AFDDE522DDEAD3F6D9A74AF72\n:10FD5000F2B0B33F711623FEC671BC3FC4EB989955\n:10FD60009999C93FE0890200C08902009C7500880A\n:10FD70003CE4377E0000F03FFFFFF23FFFFFE53F2E\n:10FD8000FB21F9BFFF7F03400000F83F0000F0BFF8\n:10FD900049004B08190070470020704700200149B6\n:10FDA0007047C0460000F87F4000C90FC9074008EF\n:10FDB0000843704743000020024A5B089A424041D2\n:10FDC0007047C046FFFF7F7F10B504000448130052\n:10FDD000002804D00A000220210001F020FA10BD02\n:10FDE0001F120200014B18687047C0466C000020CB\n:10FDF000084B10B50400002B02D0002100E000BF2A\n:10FE0000054B1868836A002B00D09847200007F044\n:10FE1000ABFFC046000000003CF00200002310B51C\n:10FE2000040003604360836081814366C281036193\n:10FE300043618361190008225C3008F0EBFA054B3E\n:10FE400024626362044BA362044BE362044B2363AA\n:10FE500010BDC046E100020009010200410102009C\n:10FE60008184020010B5024908F07DFA10BDC04639\n:10FE700065040200836913B50400002B28D1836454\n:10FE8000C3640365134B144A1B6882620193984252\n:10FE900001D101238361200000F020F86060200080\n:10FEA00000F01CF8A060200000F018F80022E060CC\n:10FEB00004216068FFF7B2FF01220921A068FFF763\n:10FEC000ADFF02221221E068FFF7A8FF0123A36122\n:10FED00013BDC0463CF0020065FE0100F8B51C4BA6\n:10FEE00007001E68B369002B02D13000FFF7C2FF84\n:10FEF0004836B4687368013B04D53368002B07D0DB\n:10FF00003668F6E70C22A55E002D0DD06834F2E7C6\n:10FF10000421380008F011FA30600028F0D10C23D9\n:10FF200004003B602000F8BD20000A4B6566256098\n:10FF30006560A560E36025616561A561082229000F\n:10FF40005C3008F067FA6563A563A564E564E9E7DA\n:10FF50003CF002000100FFFF70B500260C4D0D4C77\n:10FF6000641BA410A64209D1002608F053FB0A4DD9\n:10FF70000A4C641BA410A64205D170BDB300EB5817\n:10FF800098470136EEE7B300EB5898470136F2E7A1\n:10FF9000F0000020F0000020F00000201001002000\n:10FFA0000FB40B4B13B51C68002C05D0A369002BB4\n:10FFB00002D12000FFF75EFF05AB049AA168200084\n:10FFC000019300F0FBFA16BC08BC04B01847C04609\n:10FFD0006C00002070B505000E00002804D0836975\n:10FFE000002B01D1FFF746FFAB69AC68002B02D1B3\n:10FFF0002800FFF73FFF244B9C420FD16C68A38978\n:020000040002F8\n:100000001B0702D52369002B1FD12100280000F017\n:1000100017F9002819D00120404270BD1B4B9C42AB\n:1000200001D1AC68EBE71A4B9C42E8D1EC68E6E7FB\n:100030000136A360002B04DAA2699A4216DC0A2971\n:1000400014D023685A1C22601970A3683178013BD0\n:100050000029EDD1A360002B0FDA22000A3128001D\n:1000600000F084F8431CD6D00A20D6E722002800EE\n:1000700000F07CF8431CE8D1CDE70A2023685A1C25\n:1000800022601870C9E7C046FCEF02001CF00200B5\n:10009000DCEF020010B5034B01001868FFF79AFF70\n:1000A00010BDC0466C00002010B5034B010018685D\n:1000B00008F0B8F910BDC0466C000020002370B5F0\n:1000C000064C050008001100236000F0F1FC431C01\n:1000D00003D12368002B00D02B6070BDDC2F0020E3\n:1000E00070B50C000E25495F00F086FC002803DB8C\n:1000F000636D1B18636570BDA389024A1340A38119\n:10010000F9E7C046FFEFFFFFF8B51F008B89050038\n:100110000C001600DB0505D50E23C95E0022022364\n:1001200000F0CCF9A389054A28001340A3813200CE\n:100130000E23E15E3B0000F06FF8F8BDFFEFFFFF1C\n:1001400070B50C000E25495F00F0B8F9A389421C78\n:1001500003D1054A1340A38170BD8022520113438D\n:10016000A3816065F8E7C046FFEFFFFFF8B5050023\n:100170000E001400002804D08369002B01D1FFF782\n:1001800079FE224B9C422DD16C68A369A360A389A0\n:100190001B0731D52369002B2ED023682269F7B2C3\n:1001A000981A6369F6B2834205DC2100280000F04A\n:1001B00059F9002826D1A3680130013BA3602368C8\n:1001C0005A1C22601F706369834204D0A389DB0735\n:1001D0001AD50A2E18D12100280000F043F9002872\n:1001E00012D00FE00A4B9C4201D1AC68CDE7094B1D\n:1001F0009C42CAD1EC68C8E72100280000F020F832\n:100200000028CAD0012676423000F8BDFCEF02007B\n:100210001CF00200DCEF020070B5050008001100C0\n:100220000022064C22601A00F8F73AFD431C03D165\n:100230002368002B00D02B6070BDC046DC2F00204F\n:10024000364B70B51D6806000C00002D05D0AB695B\n:10025000002B02D12800FFF70DFE314B9C420FD13D\n:100260006C680C23E25E93B219072DD4D90611D421\n:1002700009230120336037331343A381404270BD0B\n:10028000284B9C4201D1AC68EBE7274B9C42E8D15C\n:10029000EC68E6E75B0713D5616B002908D0230003\n:1002A0004433994202D0300007F097FB0023636388\n:1002B0002422A3899343A3810023636023692360DD\n:1002C0000823A2891343A3812369002B0BD1A0210A\n:1002D0008022A389890092000B40934203D0210021\n:1002E000300000F027F90123A289134011D0002328\n:1002F000A36063695B42A361002023698342BED18E\n:100300000C23E25E1306BAD540231343A3810138C0\n:10031000B5E7920700D46369A360EDE76C000020A5\n:10032000FCEF02001CF00200DCEF0200002370B5BD\n:10033000064C050008002360F8F79CFC431C03D121\n:100340002368002B00D02B6070BDC046DC2F00203E\n:10035000F7B58A8905000C00130760D44B68002BA1\n:1003600004DC0B6C002B01DC0020FEBDE76A002FD3\n:10037000FAD000232E682B6080235B01216A1A408B\n:1003800034D0606DA3895B0706D56368C01A636BC0\n:10039000002B01D0236CC01A0200216A0023280020\n:1003A000E76AB847A189431C06D12B681D2B30D8BA\n:1003B0002B4ADA40D3072CD50023636023692360DE\n:1003C000CB0405D5431C02D12B68002B00D16065FE\n:1003D000616B2E600029C7D023004433994202D0BC\n:1003E000280007F0FAFA00206063BEE70123280026\n:1003F000B847431CC6D12B68002BC3D01D2B01D09E\n:10040000162B01D12E60AFE74023A2891343A381AD\n:10041000ABE740230B430120A3814042A5E70F69CE\n:10042000002FA1D00B680F60DB1B01930023920704\n:1004300000D14B69A360019B002B00DC94E7019B7A\n:100440003A00216A2800A66AB047002803DC40234E\n:10045000A2891343DFE7019B3F181B1A0193EAE7C8\n:10046000010040200B6970B505000C00002B01D184\n:10047000002070BD002804D08369002B01D1FFF754\n:10048000F9FC0B4B9C4209D16C680C22A35E002B3B\n:10049000EED021002800FFF75BFFEAE7054B9C4206\n:1004A00001D1AC68F1E7044B9C42EED1EC68ECE77B\n:1004B000FCEF02001CF00200DCEF020070B505004A\n:1004C000080011000022064C22601A00F8F74AFCCE\n:1004D000431C03D12368002B00D02B6070BDC046A5\n:1004E000DC2F002070B50E001D000E23C95E96B0F3\n:1004F0001400002907DA00232B60B3891B0611D4EE\n:100500008023DB000FE06A4600F08AFA0028F2DB65\n:10051000F022019B12021340054A9B185A42534194\n:100520002B60EDE740230020236016B070BDC0466D\n:1005300000E0FFFFF7B502268B8905000C0033426F\n:1005400006D0230047332360236101236361F7BD95\n:1005500001AB6A46FFF7C6FF00990700280007F0C5\n:1005600037FA002808D10C22A35E9A05EFD40322A3\n:1005700093431E43A681E4E70F4BAB628023A2891D\n:1005800020601343A381009B20616361019B002BCA\n:100590000DD00E23E15E280000F054FA002806D0AA\n:1005A0000322A38993431A0001231343A381A08943\n:1005B0003843A081CBE7C04665FE0100F0B59FB08F\n:1005C00002900F0016000593002805D0836904935C\n:1005D000002B01D1FFF74EFC7B4B9F425BD1029B6E\n:1005E0005F68BB891B0762D53B69002B5FD0002386\n:1005F00006AC6361203363761033A37635002B7825\n:10060000002B01D0252B5CD1AB1B04930CD0320006\n:100610003900029807F07FFF431C00D1C4E06269F3\n:10062000049B9446634463612B78002B00D1BBE0AC\n:10063000012200235242626002A9543252186E1CF9\n:100640002360E360A3601370A365317805225F48DF\n:1006500007F0AAFE751C002835D12268D30604D500\n:10066000532302A95B1820211970130704D55323C3\n:1006700002A95B182B21197033782A2B2CD0350056\n:1006800000210A20E3682A786E1C303A092A64D9CE\n:1006900000292ED026E04E4B9F4202D1029B9F683C\n:1006A0009FE74C4B9F429CD1029BDF6899E7390042\n:1006B0000298FFF7C5FD002899D0012040421FB0E5\n:1006C000F0BD01359BE7414B2268C01A01238340EE\n:1006D000134323602E00B8E7059B191D1B68059185\n:1006E000002B01DB099304E05B42E3600223134328\n:1006F00023602B782E2B0AD16B782A2B35D1059BC2\n:1007000002351A1D1B680592002B2BDB0793324E16\n:1007100029780322300007F047FE002806D0402346\n:10072000801B834022680135134323602978062209\n:100730002A486E1C217607F037FE00283AD0284B55\n:10074000002B25D10722059B0733934308330593DC\n:100750006369039A9B18636150E7434301219B1827\n:10076000350090E701235B42D0E700230A201A00FE\n:100770000135636029786E1C3039092903D9002BB3\n:10078000C5D00792C3E74243012352183500F1E771\n:1007900005AB00933A00134B2100029800E000BF24\n:1007A0000390039B0133D3D1BB895B0600D584E75B\n:1007B0000B9884E705AB00933A000A4B210002989E\n:1007C00000F012F8ECE7C046FCEF02001C810300C9\n:1007D0001CF00200DCEF02002281030026810300EE\n:1007E0000000000017850200F0B589B004920A00ED\n:1007F00043320593039002920A7E0C000E9B6E2AF0\n:1008000000D186E01FD8632A33D008D8002A00D14F\n:100810008CE0582A4DD0250042352A7030E0642AF9\n:1008200001D0692AF7D1196825680A1D280629D53B\n:1008300008681A60002803DA2D23029A40421370D8\n:100840006B4E0A274FE0732A74D008D86F2A1FD046\n:10085000702AE0D1202209680A43226003E0752A49\n:1008600016D0782AD7D12200782145321170614EF6\n:1008700022E025001A684235111D196013682B709B\n:10088000012365E008681A606906D3D500B2D1E794\n:1008900019682568081D186008682E0605D5544E8D\n:1008A00008276F2A1BD00A2719E06D06F7D580B2FA\n:1008B000F5E745314E4E0A7018682268011D006840\n:1008C0001960150621D5D30702D520231A432260CB\n:1008D0001027002803D1202322689A432260230096\n:1008E000002243331A706368A360002B58DB042294\n:1008F000216891432160002854D1029D002B5AD0D9\n:100900002500337842352B7055E05506DBD580B293\n:10091000D9E71A680D68101D4969186013682E061A\n:1009200001D5196002E06D06FBD519800023029DF8\n:1009300023614FE01A68111D196015680021626873\n:10094000280007F031FD002801D0401B606063687B\n:1009500023610023029A13703CE023692A00049962\n:100960000398059DA847431C3ED023689B0715D4D8\n:10097000079BE068984239DA180037E0220001232B\n:10098000193204990398059EB047431C2CD00135B9\n:10099000E368079A9B1AAB42F0DCE9E70025F7E72A\n:1009A0000028ADD0029D3900F9F762FA735C013D71\n:1009B0002B700028F7D1082F09D12368DB0706D553\n:1009C00063682269934202DC3023013D2B70029B55\n:1009D0005B1B2361059B07AA00932100049B0398DE\n:1009E00007F0ABFD431CB8D10120404209B0F0BD77\n:1009F0002D8103003E81030070B505000800110041\n:100A00000022064C22601A00F8F774F9431C03D147\n:100A10002368002B00D02B6070BDC046DC2F002067\n:100A2000002370B5064C050008001100236007F094\n:100A30007EF9431C03D12368002B00D02B6070BDCE\n:100A4000DC2F0020002370B5064C05000800236051\n:100A5000F8F774F9431C03D12368002B00D02B60F6\n:100A600070BDC046DC2F002070B50C4E0D031C037A\n:100A700049005B002D0B490D240B5B0DB14208D0E2\n:100A8000064900208B4203D114432000441EA0419C\n:100A900070BD05430120002DFAD1F1E7FF070000EA\n:100AA00058220120014B40421A607047DC2F002081\n:100AB00058220120014B40421A607047DC2F002071\n:100AC000012040427047046045608660C76041462F\n:100AD000016149464161514681615946C1616146A2\n:100AE0000162694641626846704713B50400080018\n:100AF0001100002213000092F1F7DAF863689847BA\n:100B000016BD37B51C000023050000930133080013\n:100B100011001A00F1F7CCF86B68206898473EBDC9\n:100B200037B51C00002305000093023308001100B4\n:100B30001A00F1F7BDF803CC6B6898473EBD37B596\n:100B40001C000023050000930333080011001A0065\n:100B5000F1F7AEF807CC6B6898473EBDF0B51D00C5\n:100B600000230F000600012485B0009343681100A4\n:100B700038001A00F1F79CF8B3681C43002F05D128\n:100B8000A047F168E0F79CF905B0F0BD2868012F97\n:100B900003D1DFF7EDFCA047F3E7022F09D1DFF720\n:100BA000E7FC07006868DFF7E3FC01003800A047B6\n:100BB000E7E7032F0ED1DFF7DBFC07006868DFF7FC\n:100BC000D7FC0290A868DFF7D3FC02990200380036\n:100BD000A047D6E7DFF7CCFC07006868DFF7C8FC62\n:100BE0000290A868DFF7C4FC0390E868DFF7C0FC58\n:100BF000039A030002993800A047C2E7F0B50D0040\n:100C00001700040001798288C90787B0C90F1E0048\n:100C10005208C388009128003900F1F749F8237978\n:100C2000DB070CD5AA00B218390003A800F009FDB3\n:100C3000A36803AA31002800984707B0F0BDA36855\n:100C4000310028009847F8E710B500F08CFC00F060\n:100C500084FC10BD10B5806800F085FC00F083FCBA\n:100C60000430FFF7F1FF10BD10B508001100E6F7E2\n:100C700093FD10BD70B5050008000E0007F01EFCC6\n:100C8000041E04D002006B683100286898472000D9\n:100C900070BDF0B58DB0049314AB1B7807000393BF\n:100CA0000F23080004A95B180021139E19708A42C3\n:100CB00023D088421DDA2D2240421A700F25129B44\n:100CC0000A3B05930499F9F7D3F80A0084463032B9\n:100CD000092901D9059A5218102308A94C1904A909\n:100CE000C9184A55002D10D06346013D002BE9D1AB\n:100CF0000BE0B2072ED52B221A700028DED130224D\n:100D00001F2408ABDA7304ABE4180F21402504ABB1\n:100D1000C91835400B78002D20D00025AB420BD0F0\n:100D20000122039B0192009338003300DFF72AFD74\n:100D30000500159B013B15930CAB1A1B159B21005D\n:100D40000193039B380000933300DFF71BFD281845\n:100D50000DB0F0BD7207D0D52022CDE7002BEBD02F\n:100D600008AA9442E8D9013C2370E5E7F0B51F00DA\n:100D70008DB012AB1B7802900393081C2B23B9078C\n:100D800002D47B07DB0F5B010193149B04AC00933F\n:100D9000210013002022F3F753FF0600FB0507D5BF\n:100DA000431C1F2B04D82522225400221E00E2548B\n:100DB000402521003D4012D0002322781D002F2A1B\n:100DC0000DD80122009301920298DFF7DBFC092184\n:100DD0000500139B013E013B139302ABC918139B03\n:100DE00032000193039B029800933B00DFF7CAFC9B\n:100DF00028180DB0F0BD0EB403B503AA02CA0192C3\n:100E0000DFF73AFE02B008BC03B01847802010B5E7\n:100E1000C005F5F757F9FE23FE2140029B05400A65\n:100E200018438905F9F72AFF10BD70B50D00E6F7E4\n:100E3000F7FD04002800E6F7F3FD844202DD002000\n:100E4000F1F722FE001B0130F5F73CF9001901F023\n:100E50009CFD70BDF8B5070008680C00E6F7E0FDE2\n:100E60000600012F09D1002804DDF5F72BF901F068\n:100E70008CFDF8BD0020F1F707FE6068E6F7D0FDB5\n:100E8000851B022F06D18642F4DA2800F5F71AF9FD\n:100E90008019ECE7A068E6F7C3FD041E0ADD2818F8\n:100EA00001382100F8F7E8FF0028E3DDF5F70AF93B\n:100EB0006043EDE70028DDD028180130F1E710B5D8\n:100EC000E6F7AEFD04001E2801DC002802D1002058\n:100ED000F1F7DAFD8020C005F5F7F4F820220123B0\n:100EE000121B5B42D340184001F06AFD10BD4A431B\n:100EF000F8B507001E0014000025B54200D1F8BD6A\n:100F000022003900069807F069FA069B01351B1983\n:100F10000693F2E7F7B50F00002153680800146844\n:100F20000193966800F0DEFA0500002E11DA019BAD\n:100F30009C4201DA2800FEBDA300F9582800E2F720\n:100F4000D5FAA419F3E7A300F9582800E2F7CEFA7E\n:100F5000A419019B9C42F6DBECE770B5049E0400EB\n:100F600015001B2813D10022B5420ED11A000B0028\n:100F700011003200AE4200D92A00180007F01FFA13\n:100F80001B2C10D144426041C2B2100070BD192820\n:100F900005D01C2805D032002E001500E6E71A24E3\n:100FA000E7E71D24E5E700229042EEDB013200284E\n:100FB000EBD1AE4202D0AE424041E5E71A3C601EA2\n:100FC0008441E2B2E1E7F8B517000400002589008A\n:100FD0004618B44203D101206D002843F8BD390002\n:100FE00001CCE6F7CBFC431E98412D18F1E770B514\n:100FF000050008000021F1F717F904002000F1F7BF\n:1010000075F9011E00D170BD2B1D0122180000F0E2\n:1010100044FBF3E710B50400E0F7A0FA236803608F\n:1010200010BD70B50D00FFF7F5FF04002900FFF7B4\n:10103000DEFF200070BD70B505000E00E0F78EFAEF\n:1010400004003100E0F73EFB2B682000236070BDF8\n:10105000F7B50C6801900E002000002A0AD0E0F7D6\n:10106000EFFA0125019B9D4208D3336820001B68DD\n:101070002360FEBDE0F772FA0400F2E7AB00F0581F\n:10108000844204D12000E0F737FB0135EAE7002174\n:10109000F1F7CAF807003800F1F728F9011EF4D07B\n:1010A0002000E0F7EDFAF6E710B50022FFF7D0FFD9\n:1010B00010BD30B58468C36865689900AB4201D340\n:1010C000002207E0E26801335258002A04D0042AC3\n:1010D00002D0C360100030BD0431EFE710B501222B\n:1010E000E0F79EFB10BD10B50022E0F799FB10BDA4\n:1010F00010B50430012200F0D0FA10BDF7B50C0095\n:101100000025060011001F00009501232A00200081\n:10111000F0F7CEFDAC4207D121002000E0F764FBE0\n:10112000040026602000FEBD29002800E0F75CFBDB\n:10113000290004003868F1F777F805002800F1F776\n:10114000D5F8011EEDD02000FFF7D2FFF6E70B0027\n:1011500010B5010000221800E0F79EFB10BD10B58D\n:101160000022E0F799FB10BD10B5E0F7C7FCE6F7E9\n:10117000EDFAE0F701FD0028F9DB10BD10B51020F5\n:1011800000F0D4F80722037893431A000123134395\n:10119000037010BD70B50400237808005B071500CC\n:1011A00061685B0F052B0BD12368E268D802400D04\n:1011B000DFF772FA23889B0601D5E3F7E3FC70BDE5\n:1011C0000A00A3682900DFF739FAF3E770B50C00CD\n:1011D00080214900214015000A1E01D06A68296853\n:1011E000FFF7D8FF0223E2091A409A40E1B2AA1899\n:1011F000E1F744FD70BD10B5022901D105F094FB63\n:1012000010BD10B5040007F059F901002000EEF7F9\n:10121000FDFDFF38431E9841400010BDFEE77047BA\n:10122000F0B50400170082680D00561821008BB03D\n:1012300003937B00F0185B190C319B000291019322\n:10124000052814D895002A0005A807F0C7F805ABB3\n:101250005819019A039907F0C1F8606805AB3A0084\n:101260003100F0F7EBFE040020000BB0F0BD800071\n:1012700000F04AF80600A36802999A0007F0AEF859\n:10128000A368019A98000399301807F0A7F8A3689B\n:101290003A00E91860683300F0F7D0FE040030002F\n:1012A00000F061F8E0E710B5EAF78AF90368062074\n:1012B000DB00184310BD10B5F0F71CFC01F065FB16\n:1012C00010BD10B5E1F738FE407910BD102230B5E1\n:1012D0008DB0069200220392029201920A320B0014\n:1012E0000500009206A907AA08AC05A80594E1F735\n:1012F00067FF01002800FFF7BDFC0598A04201D060\n:1013000000F031F80DB030BD10B500210400F2F747\n:10131000E9F9002804D1002C02D02000F1F79EFB4F\n:1013200010BD10B50021F2F7DDF910BD10B50400B5\n:10133000FFF7EAFF002804D1002C02D02000F1F7CB\n:101340008DFB10BD10B501220C00F2F7CBFA00287E\n:1013500004D1002C02D02000F1F780FB10BD10B5A5\n:10136000F2F7C0FA10BD10B5F2F756FA10BD816859\n:1013700010B5C3688C6802000020A34204D2C9687B\n:10138000980001334058D36010BDF0B585B001908E\n:101390000E0000920293EDF725FE019BB34201D3AC\n:1013A00005B0F0BD019B3768043B0393009B002B05\n:1013B00004D03900180004F048F907003500039BF9\n:1013C0001C1DA5420AD9009B2168002B1AD13A00A6\n:1013D0001920F1F761FB029B984211D0043DAC4209\n:1013E0001BD2009B002B12D12A6839001920F1F77B\n:1013F00053FB029B9842F1D023682A6822602B603D\n:101400000394DCE7009804F020F90100DFE7296885\n:10141000009804F01AF90200E7E723683268039F96\n:1014200022603360341B019BA410EB1A013C083787\n:101430009B10A34209DA2900029B009A0198FFF74A\n:10144000A4FF35002E000197A7E73800029B009A01\n:101450003100FFF79AFF019FF4E710B50C68020016\n:101460000B00E068A168E0F707F810BD70B5040054\n:1014700008000021F0F7D8FE05002800F0F736FF3D\n:1014800001002000002900D170BDE2F72FF8F4E739\n:1014900010B50A008168C068FFF795FD10BD70B5F2\n:1014A00005001020FFF730FF04002900E2F758F98B\n:1014B000200070BD73B50D00002411001E000094C3\n:1014C000012322002800F0F7F3FBA54203D12800F6\n:1014D000FFF7E5FF76BD2000FFF7E1FF3168FFF77A\n:1014E000C5FFF7E770B50D000400FFF7D8FF002D2A\n:1014F00003D00023A400A34200D170BDE958C26804\n:10150000D1500433F7E710B5C1688068FFF7EAFFF0\n:1015100010BD83680B60C3681360704781607047BB\n:1015200070B50023150004000A0081680068E6F722\n:101530004FFBE3688000C55070BD30B50100036803\n:101540007F2500201A78C001140052B22C4020439D\n:101550000133002AF6DB0B6030BD07B5019001A80E\n:10156000FFF7EBFF0EBD0023C3560130002BFADB63\n:1015700070474123012800D0002318007047202322\n:1015800004304B60423308608B6000207047A0211C\n:10159000037802000020C133FF33C9059B00585077\n:1015A000012318000138C046C046C046C046C046A8\n:1015B000C046C046C046C046C046C046C046F1D13F\n:1015C000A220C00008581278D0401840704710B5CB\n:1015D0000120E2F7E9FE10BD022310B584171C407C\n:1015E000013B1C1B802342021B04520AC0151A43F4\n:1015F000C3B2963B5918002903DD8A4020005043AE\n:1016000010BD0B0000201F33FADB49420A41F5E709\n:1016100007B508001100002200921300F0F748FB04\n:10162000E3F786F80EBD10B504004160002903D130\n:1016300081600123236010BDC800FFF777FEA06022\n:10164000F7E7CB004160072110B5046882602140B4\n:101650001943072301601943017010BD037810B5C9\n:1016600004009B0702D48068FFF77DFE07222368F1\n:1016700000211A4001232260134302229343616038\n:101680002370A16010BD002310B504000160436009\n:101690008800FFF74BFEA06010BDF0B5036887B06F\n:1016A00004000E000292002B04D11300DB0761D569\n:1016B000E3F7F8F931000220F0F74EFC4310180070\n:1016C00021680593F8F7D4FB00270391039B01934E\n:1016D000019B9B000493049AA3689B181D68002D2E\n:1016E0000BD1029AD20745D5002F00D03B0062688B\n:1016F000013262601E60350031E0042D16D1002FEA\n:1017000000D11F00019821680130F8F7B1FB039B5D\n:1017100001918B42DCD10122029B13422AD0002F7F\n:1017200022D063689B1863603E60E4E731002800C4\n:10173000E6F724F90028E5D0029B9B070FD56368E4\n:101740000198013B6360A768049B01302168FE1883\n:10175000F8F78EFB8900CB59002B03D133602800AA\n:1017600007B0F0BD0423F9E72000E3F79BF92168F7\n:101770000598A7E70025F2E7002370B501689942B4\n:1017800001D1002513E086689C00341925680133D7\n:10179000002DF4D0042DF2D04268013A42601800C6\n:1017A000F8F766FB89008B59002B02D123602800D3\n:1017B00070BD0423FAE710B504008068FFF7D3FD7D\n:1017C000002323606360A36010BD10B50022E3F71F\n:1017D00029FA002801D1E3F7CDF910BD136870B5DF\n:1017E000002B0DD14568AC1CA40024589D4207D0A5\n:1017F0009E00A659B14204D102339B001B581360CE\n:1018000070BD0133F2E74B6810B502339B000A004C\n:101810005958E3F7B7FA10BD10B58468C36861681A\n:10182000020000208B4204D2991C89000133085920\n:10183000D36010BD10B50C68020020000B0008300A\n:101840006168DFF719FE10BD030010B50A0008300B\n:101850005968FFF7B8FB10BD436808300B60106093\n:10186000704710B5FFF77FFD10BDF8208023800280\n:1018700002785B051B694D2A01D1C01A7047802090\n:10188000C002FAE770B5050043680120C9182B684B\n:10189000060099420FD92B7B0340002083420AD1D6\n:1018A0000723103199430831A8680C00FFF74AFD5F\n:1018B000A86030002C6070BD70B50E0011000400EF\n:1018C0001500FFF7DFFF002807D1237BDB070ED5CC\n:1018D00063682568AB420AD2ED1AA36862683100DA\n:1018E00098182A0006F083FD63685D19656070BD75\n:1018F00010B50400002900D101310023216063608C\n:101900000800FFF701FD0122237BA06093432373AE\n:1019100010BD70B50D0004000131FFF7E9FF6560EF\n:1019200070BD00238260027B43600133134301607A\n:1019300003737047037B10B50400DB0702D4806893\n:10194000FFF711FD0023A36010BD027B70B50023DB\n:1019500004000D00D20709D403688068C918FFF796\n:10196000F1FC2168A060431849192160180070BD7E\n:1019700070B504000D00FFF785FF031E04D06168F9\n:10198000A3685B1849196160180070BD036842685C\n:1019900010B50400934205D00023A2686168535437\n:1019A000A06810BD0121FFF7D0FF0028F4D1F8E7AF\n:1019B00010B50C000121FFF7DBFF002800D00470F8\n:1019C00010BD70B5050008000C0006F077FD210081\n:1019D00002002800FFF770FF70BDF8B546680400EC\n:1019E000170035008E4200D90D00002F0FD03900AE\n:1019F0002000FFF747FF00280BD0A0687B19411992\n:101A0000721BC01806F0F3FC6368DF196760A068FA\n:101A10004019F8BD10B514000122FFF7DEFF0028C1\n:101A200000D0047010BD10B514000122FFF7D5FFDF\n:101A3000002800D0047010BD43688B4202D20023FE\n:101A4000436070475B1AFBE770B5040015006268DD\n:101A500008008A4203D949198A4201D8606070BDE2\n:101A6000A368121A521B5918181806F0C0FC6368B4\n:101A70005D1B6560F3E770B500221E2B02D91A00CA\n:101A80001E3AD2B2E2258418ED0064192478551C60\n:101A9000EDB27F2C12D0E22664188518F600E4B26D\n:101AA000AD192C700132D2B2934209D0E2268518CA\n:101AB000F600AD192D78FF2DF4D0ECE72A00E1E710\n:101AC00070BD802307B55B051A6E082100925B6E1E\n:101AD00068460193E7F716FA0EBD10B5EFF31080D4\n:101AE00072B600F052FF10BD002210B511001000B8\n:101AF000E4F78CFE10BD1FB5022201A9E6F74AF9F2\n:101B0000002201A91000E4F781FE05B000BD042306\n:101B10000122591A03008A40411D1878104003D150\n:101B200001338B42F9D170470120FCE710B5012841\n:101B300003D14868E6F7E6F810BD0020FCE710B5D1\n:101B400004210400FFF7E3FF03000420002B06D16B\n:101B500003212000FFF7DBFF431E9841023010BD38\n:101B6000002210B50369027642690400C360934203\n:101B70000ED21878A37E2077002B02D0052363763F\n:101B800005E0E5F79FF9FFF7DAFF0130607610BD59\n:101B9000202303771B3BF2E705235A4351181829EA\n:101BA00003D100790007C00F70470722CB08C01887\n:101BB00040791140084101231840F5E783795A43E1\n:101BC000511804224B08C018C079890011400841FF\n:101BD0000F231840704710B58479624351180422CE\n:101BE0008C002240F0241441934049084118C879E0\n:101BF00004402343CB7110BDF7B506000C001F0055\n:101C00000192BC420DDA019D089B9D4207DA2A0031\n:101C1000002321003000FFF7DEFF0135F4E7013437\n:101C2000EFE7F7BD0B011943827943795343013341\n:101C30005B10C318984202D0C1710130FAE77047B7\n:101C400010B58379427900215A430132521007308E\n:101C500006F0E0FB10BD10B50379DB0706D5FFF7F2\n:101C60009BFF030009205843C0B210BDFFF7A6FF39\n:101C7000FBE702790523D20700D483791800704767\n:101C800010B5FFF7F6FF43000120184310BD02799D\n:101C90000523D20700D4437918007047F0B593B0FC\n:101CA0000493189B0392DC43199AE417234005938D\n:101CB000D343DB171A401A9B0D905E42039B02919F\n:101CC00009929E4200DA1E00F343DB171E40029B7E\n:101CD0000D989C79039BE7181A9BFF1AFFF7C9FF21\n:101CE000039B059A9D18BD4200DD3D000695854287\n:101CF00000DD0690029B0D985D79FFF7C8FF1A9BE7\n:101D00001A9ADB43DB171A401B9B0A92DB431B9A90\n:101D1000DB171A400B921A9A059B9446634407936B\n:101D2000A34200DD0794099A1B9B944663440893E1\n:101D3000AB4200DD0895069B9E421ADA1B9B5C4273\n:101D4000049B9C4200DA1C00E343049ADB17944690\n:101D50001C40049B1B9AED18099BAD1A63449D42DD\n:101D600000DD1D000595854200DD0590059B9C4228\n:101D700009DB089B0B9A00930A99079B0298FFF7CF\n:101D80003BFF13B0F0BD039B1A9A93422FDC069BD6\n:101D90005D1E731E0E9301235B4209931B9A049BE5\n:101DA000934229DC059B013B0F93631E1093012393\n:101DB0005B4211931A9B039AEB189B1A0C930E9B90\n:101DC000AB4225D00F9F109BBB421AD03A0029008E\n:101DD0000D98FFF740FF04991B9A0300521AD2197D\n:101DE0000C990298FFF7F7FE119BFF18EBE7069B93\n:101DF00035000E930123D0E7059B0F941093012328\n:101E0000D7E7099A099B9446ED180C9B6344D5E7E4\n:101E10001A9B039A0A999D1A1B9B049AAE199F1A42\n:101E2000069B3C19ED18059B0B9AFF18029833008E\n:101E30000097FFF7E1FE089B3A0000930A992B00F8\n:101E40000298FFF7D9FE089B220000932900079B08\n:101E50000298FFF7D1FE0094079B0B9A31008DE7A3\n:101E6000F0B50B6887B048680D000493E5F7D8FD1E\n:101E70000590A868E5F7D4FD0700E868E5F7D0FD10\n:101E800004002869E5F7CCFDE343C543DB17ED17F4\n:101E90001C40054029002000E5F72EF8002306002D\n:101EA0000393029301000195049800943B00059A66\n:101EB000FFF7F4FE300007B0F0BD10B5FFF7E7FE06\n:101EC00043000120184310BDF7B50600FFF7D1FE0F\n:101ED00000903000FFF7DBFE010007000098E5F7F7\n:101EE0000BF800240190BC4212DA0025009B9D42B1\n:101EF0000CDA290022003000FFF7ADFE29000300B4\n:101F000022000198FFF767FE0135EFE70134EAE7A9\n:101F10000198FEBD10B5FFF7D7FF10BDF7B506005D\n:101F2000FFF7A7FE00903000FFF7B1FE019001001F\n:101F30000098E4F7E1FF00240700019B9C4213DABC\n:101F40000025009B9D420DDA290022003000FFF79A\n:101F500082FE092329001B1A22003800FFF73BFEEE\n:101F60000135EEE70134E8E73800FEBD10B5FFF7B4\n:101F7000D5FF10BDF0B585B0170004000E00FFF7C7\n:101F800078FE0100E4F7B8FF05002000FFF771FEBE\n:101F9000002301900393029300903B002000320045\n:101FA0002900FFF77BFE280005B0F0BD10B5040046\n:101FB0000800E5F735FD002201002000FFF7DAFFF9\n:101FC00010BD10B504000800E5F72AFD00224142CB\n:101FD0002000FFF7CFFF10BD10B504000800E5F7A3\n:101FE0001FFD002102002000FFF7C4FF10BD10B547\n:101FF00004000800E5F714FD002142422000FFF72D\n:10200000B9FF10BDF7B507000800E4F75BFF042433\n:102010000600042300251B1B0193735D012223414D\n:1020200013400832534301992A0038000135FFF765\n:10203000D2FD052DF1D1013CEBD2F7BD13B5040063\n:1020400001A94068E7F79EFBA268019900238A4234\n:1020500007D2815CE068FFF7D5FFA3680133A36076\n:10206000E368180016BD73B504000E000020042AB2\n:102070000FD101A96068E7F785FB00230500320056\n:1020800001992068E5F7A4FD295CA068FFF7BAFF75\n:10209000A06876BD052170B505000800E4F72CFFA7\n:1020A00004002900FFF7AEFF200070BD10B504004A\n:1020B000E5F7F6FA2000602106F01EF9200010BDB9\n:1020C00010B5040006F0FAF901002000E5F756FB10\n:1020D00010BD10B505F076FF10BDD0B5041E0FD0B1\n:1020E000F4F7D6F806000F00F4F7D2F8801BB941D8\n:1020F000002905D1844203D9DEF7D4FE30BFF3E7CF\n:10210000D0BD10B5F6F73CFF10BD10B5F4F7C0F820\n:1021100010BD704710B5E5F79BFB406800F0C3FCAD\n:1021200010BD10B5830702D000F02FFC10BD0028B1\n:1021300003DB012340001843F8E700F041FCF5E71A\n:10214000704770B504000D001600E5F781FBC36A07\n:10215000181E06D0320029002000984743425841FB\n:10216000C0B270BD022803D149000138084370474E\n:102170000020FCE710B50400806AFFF7F4F82000A7\n:10218000FFF7F1F810BD30B500230400858C9D42A7\n:1021900001D8002030BDA06ADA00801842688A4267\n:1021A000F8D00133F3E770B504000E001500FFF717\n:1021B000EAFF0023002816D1618CA38C8B4208D340\n:1021C0000631C900A06AFFF7BDF8638CA062063330\n:1021D0006384A38CA06A5A1CDB00C0180023A2846D\n:1021E0000360466001332B7070BD10B54368002B4F\n:1021F00002D1FFF7C8FF10BD1800F7E7F7B5446834\n:102200000E001700231E08D10023337004E003786A\n:10221000022B01D101330370F7BD5D68002DF3D0AF\n:1022200018003900FFF7AFFF2B000028F5D0037826\n:10223000023B022BE8D8042535706B46DE1D3200C8\n:1022400039002000FFF7AFFF3378002BDFD0057097\n:102250006468F2E770B505000800FFF797FB02F02D\n:10226000ECFF0400280003F0EBFE01210200030054\n:102270002000F0F7C1FB70BD07B5F4216A46FF31BD\n:10228000EFF754FF0098431E9841C0B20EBD00B551\n:1022900089B001A8F1F7BCF90120039B5B0018434A\n:1022A00009B000BD00B589B001A8F1F7B1F901206E\n:1022B000029B5B00184309B000BD13B504004068E1\n:1022C000F0F714F800280BD0A3680190591CA16006\n:1022D00001215B000B43022069460093E2F7E8FD11\n:1022E00016BDF8B507000C201D000E00FFF70CF816\n:1022F0000760040000212868EFF796FF6060002067\n:10230000012E02D96868E5F78BFBA0602000F8BDBC\n:10231000F7B51C000125002A02D1431EE418023D36\n:1023200000220023002906D000230027E356DE0FF9\n:1023300000237242BB4100210DE0160E00961E02E2\n:102340000196267817023E433200009F019E6419D1\n:102350003E43330001318142EFD11000190003B038\n:10236000F0BD13B514000193130001AA002908D190\n:10237000020001A9200006F031F813BD815C19703C\n:1023800001330138FAD2F8E770B50C00512826D095\n:1023900010D8482820D004D8012814D0422812D0C0\n:1023A00070BD4C2803D0502801D04928F8D19200A4\n:1023B0001351F5E768280FD007D864281BD066288A\n:1023C00013D06228ECD1A354EAE76C28EFD071282F\n:1023D00005D06928E4D1EAE752001353E0E7D200C0\n:1023E000A2181360DB175360DAE718009500F8F7BE\n:1023F0003FFE2851D4E7D20018008C18FAF7D8FB1A\n:1024000020606160CCE7F0B585B01D000AAB1B7899\n:1024100017000393039A0368029000911B6B9207C5\n:1024200019D55B68002401932C60002F10D02B007D\n:102430003A0000990298019EB047002808D0431C3A\n:102440000BD12B680B2B03D1002C01D000232B6068\n:10245000200005B0F0BD1B68E4E70122039B134296\n:1024600005D1009B3F1A1B1800932418DDE70400D8\n:10247000EEE710B50022E6F77DF810BD30B50C0090\n:1024800087B00500012203A96068E5F783FC032DEE\n:1024900012D1A068E5F7F0FA0021049B5A1A0193C3\n:1024A0000492824200D90200039B2068591802233B\n:1024B000E6F7DAF907B030BD042D0BD1A068E5F7D7\n:1024C000DBFA0500E068E5F7D7FA0499A942E4D9F8\n:1024D0002900E2E7012000214042DEE713B51300A6\n:1024E0000C000A1D411E002000902068E6F7DCF970\n:1024F00016BD13B513000C000A1D411E01200090EB\n:102500002068E6F7D1F916BD73B50C00050001CCC3\n:102510001600E6F777FA0023691E009322003300C5\n:10252000E6F7C2F976BD836870B55D1C040085606E\n:102530004068E5F7E7FBE5F773FA854201DB002326\n:10254000A3600121A36804225B0019436068E5F7DA\n:10255000EFFB70BD30B5884213D20378303B092BB6\n:102560000FD800230A251360136804786B43303CAE\n:102570001B1901301360814203D00378303B092BD3\n:10258000F2D930BDF7B51E000090019200259942A6\n:1025900015D3CC1A089B2F00AB4201DD27002C007D\n:1025A000009B32001D190199280005F008FF002842\n:1025B00005D0BC4202D0089BE418F1E700252800B2\n:1025C000FEBDF8B50600102015000F00FEF79CFEBA\n:1025D000040006608560002F0FD029003800E8F75E\n:1025E0009BF96060681CFEF78FFE2A00E0603900EE\n:1025F000060005F0F3FE002373552000F8BD10B56A\n:1026000000230122E6F77AFD10BD012210B5002358\n:102610005242E6F773FD10BD012310B51A00E6F72C\n:102620006DFD10BD012210B513005242E6F766FDA4\n:1026300010BD10B50A0001000220E6F71DFE10BD16\n:1026400010B50A0001000020E6F716FE10BD10B517\n:102650000A0001000120E6F70FFE10BDF0B50C00E6\n:1026600095B004280AD1C868E5F7DAF9002802D144\n:10267000206815B0F0BD0690002802DA01235B4205\n:1026800006932068E5F7E4F805006068E5F7E0F8F0\n:102690000790A84202D06068E6F768FBA068E5F7FB\n:1026A000D7F8079B834201D0A068F5E70DA9206801\n:1026B000E6F74AFC0EA909906068E6F745FC0FA909\n:1026C0000B90A068E6F740FC0E9B0D9A0A9000263E\n:1026D0009342CDD80E9B0D9F002B5BD1002E04D0D2\n:1026E0000F9A0A99300005F079FE0F9B039301239E\n:1026F0000493099D26E0089F7B425F41059BDB19FF\n:1027000005935F1B002E05D0039B3A00F0182900AB\n:1027100005F064FE039BDF19002E04D0F0190F9A18\n:102720000A9905F05BFE0E9A0F9B9446FB180393E3\n:10273000059B0D9A63441D00099B9F18049B7F1BFA\n:1027400001330493049B069A93420ED0002F0CD0C1\n:102750000E9B0B9A08930123390000932800089BD5\n:10276000FFF710FF05900028C5D1002E05D0039B70\n:102770003A00F018290005F031FE039BF918002EED\n:102780000CD1049B002B00D172E710A8FFF7C1F811\n:10279000129E9FE7002304930393AAE710A90798CA\n:1027A000E6F762FB65E7F0B50D0089B003A9070005\n:1027B0002800E6F7C9FB00240600039904A8FFF7E8\n:1027C000A8F8069B0193039BA34207D82800E5F7CE\n:1027D0003FF804A9E6F748FB09B0F0BD305DB84703\n:1027E000019B18550134EEE713B50C00012A09D1FD\n:1027F00001A9E6F7A9FB019B20606360422300204A\n:10280000A36016BD00230B604B60013B8B60012071\n:10281000F7E713B5040001A98068E6F795FBE368C4\n:102820000199020000208B4205D2D25C0130520097\n:1028300001331043E36016BD07B501A9E6F784FB39\n:102840000199E8F7B9F8C300062018430EBDF7B5A3\n:10285000050001911600FFF754FC0700A023A222F7\n:10286000DB05D2009C580123EC401C40019B9C429C\n:1028700010D1FFF746FC0700A023A222DB05D200FF\n:102880009B580122EB4013409C420BD0FFF739FCD0\n:10289000C01BFEBDFFF735FCC01BB042DED30220DB\n:1028A0004042F6E7FFF72DFCC01BB042E4D3012005\n:1028B000F6E7F0B51C0087B00EAB1B780F00059350\n:1028C0000FAB1B7804920393A36806000D9A1801BE\n:1028D0000C99039BE0F758FC3B680500834203D248\n:1028E000FEF712FD30603D603568039B201D0093AC\n:1028F0000195059B0D9A0C9902F09BFB049B1860B7\n:10290000280007B0F0BDF8B50E0017000500E7F786\n:10291000F3FD04003B0032002900043001F0D3FF36\n:102920002000F8BDF8B50F0015001E0004000021BE\n:10293000180005F06FFD33002A003900201D02F059\n:1029400013FBF8BD01220300104005D013410AD447\n:102950001800431E9841704799680029FBD01B79E5\n:1029600010001342F7D001204042F4E7D3B50F0026\n:102970000600E7F7C1FD01230400009332003B008D\n:10298000043001F0C3FE2000D6BD43001A0010B58C\n:10299000424002D40120184310BDC117FFF7E6FFE3\n:1029A000FAE7D3B50F000600E7F7A6FD0023040001\n:1029B000009332003B00043001F0A8FE2000D6BD99\n:1029C00010B5830F03D140000133184310BD00211F\n:1029D000FFF7E7FFFAE7F0B585B004000E00170037\n:1029E0000393E7F789FD039B0500009332003B004A\n:1029F0002168043001F015FF2368181820602800B2\n:102A000005B0F0BD10B5C30701D5401010BD0430AE\n:102A100002F096FAFAE710B5043002F0ECFA10BDB5\n:102A200010B50222E7F702FF10BD10B50122E7F74B\n:102A3000FDFE10BD10B5040005F040FD01002000B2\n:102A4000E7F7BAFF10BD70B5050003300C00FEF7C4\n:102A50005BFC206045702068023070BDF8B5457899\n:102A6000871C040029003800E7F774FF061E0CD10C\n:102A700029003800E7F750FF65192070AE7020007C\n:102A8000E7F71EFF06003000F8BD2000FEF76BFCE4\n:102A9000F9E710B5E7F702FF007810BD10B5E7F7CA\n:102AA000FDFE407810BD10B5E7F7F8FE023010BD0E\n:102AB00010B50C00E7F7F2FE43780230236010BD3A\n:102AC000F0B5070085B00E0000680968FBF776F9DD\n:102AD0003B683568011C041C181C0293F8F7CEF8FB\n:102AE000291CF7F7C1FD00210190201CF7F7FAFA25\n:102AF000002817D00024002D01DA802424060021AC\n:102B00000198F7F7EFFA002833D0291C0298F7F75D\n:102B1000ABFD0025002801DA80252D063D603460DC\n:102B200005B0F0BD01236A4600219373201CF7F71E\n:102B3000DFFA002801D16B46987301236A46002111\n:102B4000D373281CF7F7D4FA002801D16B46D87349\n:102B50006B469A7BDB7B9A42D1D0291C201CF7F76D\n:102B6000E9FBFE21041C89050198F8F787F801901C\n:102B7000C5E70198FAF7B2FB011C051C0198F8F7AC\n:102B80007DF8FC218905F7F7C7FA0028C6D0FE2199\n:102B9000281C8905F7F7CEFB051CBFE7FF23DB05E3\n:102BA000C918032310B59943E8F772F810BD10B5A2\n:102BB0000021EFF739FB10BD3E2307B5002201903D\n:102BC000694602200093E7F75DFC0EBD10B50A00D0\n:102BD00001000C20EFF760FF10BD10B50200362198\n:102BE0000A20EFF759FF10BD10B502002E210A2070\n:102BF000EFF752FF10BD30B5012485B00B00A042A5\n:102C000000D04C6869461868EFF70EFB05002800F5\n:102C1000EFF76CFB021E02D1200005B030BD210091\n:102C20000520EFF739FF0400F1E710B5010002209D\n:102C3000EFF792F910BD10B51A23E8F7D7F910BDD8\n:102C400010B51923E8F7D2F910BDF7B506004068B2\n:102C5000041E13D00021E2F72BF90025040073684D\n:102C6000AB420BD9AB000193F3189868EFF73EFB2A\n:102C7000071E05D12000FEF7F4FD3C002000FEBD3C\n:102C8000AB00E31898600135E9E7704710B540796B\n:102C9000EEF7BEFF10BD8168030010B5081E08D016\n:102CA0000122013999604900114358680332E5F760\n:102CB0003FF810BD7FB51D000024012306000094DD\n:102CC000080011001A00EEF7F3FFF82102AAFF3105\n:102CD0002868EFF72BFA029BA34208D021002000BE\n:102CE00002AA02F0BAFC0400200004B070BD0C205F\n:102CF000FEF70AFB06602B68040043602868E5F7CE\n:102D000001F8E4F78DFEA060EEE710B50124230082\n:102D1000884202D00278534253412340180010BD2C\n:102D2000037842780A3B1B02134302300B60704762\n:102D3000838BC26A01339BB28383118C994200D288\n:102D40001384704770B505000C00100019002A6844\n:102D5000049BE5F72BF8EB6AA4004360AB6AE050F4\n:102D600070BD13B50400080001A9FFF7D9FF019950\n:102D7000206B02F0E8FE13BDF0B587B005000C0033\n:102D800004920593002B03D008230A7D13430B758F\n:102D90006B461B8A6383EB6A1B78002B39D1059B3A\n:102DA000049A2100286B03F0C3F807B0F0BD926AC3\n:102DB000F300D31803931B78033B012B19D800238E\n:102DC00012E0029BA26ADB00D3181A78042A09D108\n:102DD000039A5B685168994204D15288286B02F0CB\n:102DE0005FFD0137029B01330293029AA38C934249\n:102DF000E7DC0136EA6A938CB342D8DC002FCED0F0\n:102E0000059B3A0000932100049B286B03F0A5F872\n:102E1000CBE700263700EDE773B51D000B781A32BB\n:102E20000600080093420ED101A903F0CCFB019BE0\n:102E30000400984200D173BD30002100A847200053\n:102E400003F0B7FBF3E7002BF5D03000A847F2E71B\n:102E500030B5040085B0080003A903F06FFB637967\n:102E60000500012B08D1E36A02225B7D03990093E0\n:102E700003002000FFF766FF039BA06A9900095832\n:102E800048232A002000E8F727FC05B030BD7FB5B5\n:102E90000400080003A9160003F050FB6379050045\n:102EA000012B06D103000096072203992000FFF7AB\n:102EB00049FF280003F07DFB039BA16A9B005D583E\n:102EC0000200402320002900E8F706FCE88904B04E\n:102ED00070BD70B5040008000D0003F06AFB01002E\n:102EE0002000E8F739FC29002000E8F735FC70BD28\n:102EF00010B50400E8F730FC206B02F04CFE10BD6A\n:102F000010B50400E8F728FC206B02F07BFE10BD32\n:102F100070B505001400A14200D170BD2800E8F78B\n:102F20001BFC0100F7E710B50400FFF7F1FF0B21D0\n:102F3000206B02F05CFF10BDF0B5040085B0080006\n:102F40000F00150003F035FB03F038FB03A903F075\n:102F5000F5FA63790600012B08D1E36A2A005B7D4C\n:102F60000399009320003B00FFF7ECFE039BA06A4F\n:102F70009900002309581A002000FFF7FDFE3000D9\n:102F800003F017FB01002000E8F7E6FB062D03D154\n:102F90000021206B02F0CAFE002301211A00206BE1\n:102FA00002F0F6FF05B0F0BD70B504000D0016008C\n:102FB000914205D10E21006BF0F766F9022113E072\n:102FC0000B78AE2B14D1006B0E21F0F75DF92800C1\n:102FD00003F034FB0028F1D1280003F0EFFA0100E0\n:102FE0002000E8F7B9FB0321206B02F060FF70BD01\n:102FF000AF2B0CD1080003F0E1FA01002000E8F744\n:10300000ABFB03F0DBFA01008642E9D1D6E7E8F733\n:10301000A3FBD3E770B50D00160004000E21006B72\n:10302000F0F732F9320029002000FFF7BDFF70BD34\n:1030300070B515000400E8F78FFB03F0BFFA2A0013\n:1030400001002000FFF7B0FF70BDF8B500240500B7\n:1030500016001F00A14202D0E8F77EFB0134BE42F9\n:1030600004D1286B210002F0E4FEF8BD31002800F5\n:10307000E8F772FB0600F1E710B513000A00002123\n:10308000FFF7E3FF10BDF8B5050016001F00E8F7D5\n:1030900063FB0400B44200D1F8BD21002800E8F72A\n:1030A0005BFB39000400286B02F0A1FEF2E710B5CB\n:1030B0000223FFF7E8FF10BD10B50123FFF7E3FF80\n:1030C00010BD10B50023FFF7DEFF10BD10B50400E2\n:1030D000E8F742FB0621206B02F07CFE10BDF7B53D\n:1030E00004000D00170006690193731C0361BD42C3\n:1030F00004D13100206B02F07FFCF7BD29002000D5\n:10310000E8F72AFB05008742F1D032000199206BD5\n:1031100002F0CCFDEBE710B50023FFF7E0FF10BD98\n:1031200010B50123FFF7DBFF10BDF7B50D0004005C\n:103130001100280003F031FA290007002000E8F709\n:103140000BFB002306000193032F03DD236901938A\n:103150000133236101230093009B01339F421BDC59\n:10316000032F18DD2569206B6B1C2361290002F0F9\n:1031700080FD0199206B02F03FFC0121206B02F0E1\n:1031800081FB206B02F049FD206B02F03BFD290022\n:10319000206B02F031FCF7BD3378012B33D170780E\n:1031A000B11C36380B282CD8F6F7C8FD3C2B062B63\n:1031B0002B2B2B2B252723291A252000E8F7CCFAC7\n:1031C000009B060002330093BB4205DA206B02F03D\n:1031D00005FD206B02F038FD2900206B02F007FE90\n:1031E000009BBB42B8DA019A0021206B02F05EFD21\n:1031F000B2E71B25E1E71C25DFE71D25DDE71E25DE\n:10320000DBE71F25D9E72225992B06D0300003F0F4\n:1032100015FA023D002800D10335300003F0C9F94A\n:103220000100CAE71925C8E710B5C36A04005A7D32\n:10323000FFF72DFE01002000E8F730FB10BD37B589\n:103240000400080001A9256B03F06EF9019B226AB6\n:103250009B002800995802F057FC37BD1FB50400A9\n:1032600023680800002B0BD1002909D00B78192BFB\n:1032700006D903AB02AA01A903F0CCF9029B236093\n:103280001FBDF7B504000D001700914203D31100D4\n:10329000E8F762FAF7BD0669731C03610B78902B9F\n:1032A00027D1080003F08AF901002000E8F754FA5A\n:1032B00031000190206B02F00AFD002201992000EC\n:1032C000E8F704FD280003F074F905002000FFF77B\n:1032D0002FFD3A0029002000FFF7D3FF206B3100BB\n:1032E00002F053FDA38B206B013BA38302F013FD7F\n:1032F000D0E7E8F731FA31000500206B02F0E7FC77\n:10330000206B02F07FFCE1E713B50400019101A8F6\n:10331000752103F067F9019902002000FFF7B1FF62\n:1033200013BD7FB50400080003A9150003F006F9DA\n:1033300062790600012A05D1030000950399200057\n:10334000FFF700FD206B02F01CFC039BA26A9B00B0\n:103350009D58002329001A002000FFF70DFDE98980\n:10336000206B02F0C5FB300003F023F90378010065\n:10337000B82B00D10021200002230022E8F794FF9F\n:10338000E88904B070BD10B5C36A04005A7DFFF728\n:10339000C8FF01002000E8F781FA10BD9142924178\n:1033A000002310B511401A00E8F77EFF10BDF0B5FC\n:1033B0000400056985B003936B1C03610E00006B6C\n:1033C0002900170002F09BFC2000FFF7B1FC002F42\n:1033D00026D10321206B02F055FA31002000E8F7D6\n:1033E000BBF90321206B494202F04CFA206B02F03A\n:1033F000C2FC206B0E21EFF747FF2900206B02F083\n:10340000FBFA0B9803F0DAF801002000E8F7A4F9C2\n:10341000A38B206B013BA38302F07DFC05B0F0BDC4\n:103420000A9B3A0000933100039B2000E9F7EAF879\n:10343000DCE7F0B5060087B008000D0003F0B9F82E\n:1034400003900378FD221C00763414400CD17221C5\n:1034500003A803F0C7F80300039A00942900300082\n:10346000E9F7D0F807B0F0BD892B1ED104A903F00D\n:10347000AAF87221059005A803F0B4F8040003F03F\n:1034800098F8049B984203D100942300059AE5E73D\n:10349000059F200003F08DF823003A00019000946E\n:1034A00029003000FFF783FFDCE700220190009243\n:1034B0001300F5E710B54B234A22E9F7A9FA10BD2E\n:1034C00010B543234222E9F7A3FA10BDF8B50D0069\n:1034D0000400110028001600FFF717FC0021002847\n:1034E00035D12B78A62B34D1280003F067F80500DE\n:1034F00003F05FF8027813005733DBB2012B15D8C5\n:1035000003F05CF8070029002000E8F725F9200007\n:1035100032003900FFF7FCFC31003800246B03F067\n:103520003CF8411C200002F091FC06E0C12A05D1C4\n:10353000BE3A29002000FFF7FFFCF8BD290020005B\n:10354000E8F70AF901002000E8F706F90221206BEC\n:10355000E9E729002000E8F7FFF80121F7E7F8B5CF\n:103560000D000400110028001600FFF7CEFB071E17\n:1035700006D000231A0019002000FFF766FD18E0AE\n:10358000280003F01BF8050003F013F8027813007D\n:103590005733DBB2012B05D803F010F833000200DB\n:1035A0002900E9E7C12A05D1BB3A29002000FFF72D\n:1035B000C3FCF8BD33002A003900DDE770B54D7853\n:1035C00002310400E8F7C8F82F2D04D10321206B45\n:1035D00002F000FC70BD206B0421302DF8D00521D5\n:1035E000F6E770B50D00040011002800FFF78DFB11\n:1035F000002100280ED12B78742B0FD1280002F067\n:10360000DDFF01002000E8F7A7F801002000E8F73F\n:10361000A3F80221206B02F0DBFC70BD2900200022\n:10362000E8F79AF80121F5E7F0B5060087B00D003C\n:103630001400002906D101212160306802F0ECF964\n:1036400007B0F0BD00220B7801927E2B0CD1080050\n:1036500002F0B4FF050002F0ACFF2100FFF760FBB1\n:10366000002DE8D0012301932B78002BE3D00A3BF7\n:103670000F2B0AD805A92800FFF752FB019B002B4E\n:1036800001D1059B23600599D7E7280002A902F024\n:103690009AFF019B0500002B02D12100FFF740FBA0\n:1036A00001242F006442029B9F4223D1200003A9E2\n:1036B000FFF7C9F92F000400029B9F4225D1039810\n:1036C000FFF7CCF90100306802F0A6F9019B002B4E\n:1036D000B6D0280002F06DFF0400029B9C42AFD0E0\n:1036E00005A92000FFF71CFB05990400306802F0D3\n:1036F0002AFAF2E705A93800FFF712FB0700059840\n:10370000FFF7CCF901342418CDE7BD4202D22E23B5\n:103710002370013404A93800FFF702FB05A9070054\n:103720000498FFF7C5F9059A0100200004F056FE41\n:10373000059BE418C0E737B504000D00006B0021BD\n:1037400002F08EF9206B0E21EFF79EFD200029007C\n:1037500001AA3030FFF768FF01992000E8F79EF8D2\n:1037600037BD10B50278012A05D143780F3B584286\n:103770004341180010BD0023032AFAD102F0EDFEE8\n:103780000300581E8341F4E710B50278012A05D1E1\n:1037900043780D3B58424341180010BD0023032AD3\n:1037A000FAD102F0DAFE43424341F5E7F0B50400F6\n:1037B00085B008000E0015000093FFF7E5FF002814\n:1037C00009D0002D03D10099206B02F052FA30008D\n:1037D00002F0EFFE4FE03000FFF7C3FF002802D0F9\n:1037E000002DF4D0EFE73378192B4ED903A9300020\n:1037F00002F0E9FE33780700362B2ED1002D28D1B8\n:1038000001262369019301332361380002F0D1FEC0\n:10381000039B98420DD13900009B2A002000FFF73E\n:10382000C5FF01990600206B02F0E6F8300005B0F4\n:10383000F0BD32003900019B6A402000FFF7B6FF5F\n:103840000700E2E73900009B2A002000FFF7AEFFE7\n:103850000700039EB742F5D1E8E7372B02D1002DD0\n:10386000F7D0CDE7382B08D1012201006A40009B38\n:103870002000FFF79BFF0600D8E7442B05D130005E\n:1038800002F0DCFE0028ABD09BE731002000E7F718\n:1038900063FF009A06002900206B02F0F6F9C5E7E5\n:1038A000F0B504000F00066987B00293B31C0361F2\n:1038B0003100006B751C039202F09EF82900206B0A\n:1038C00002F047FA002239002000E8F7FFF938003B\n:1038D00002F06FFE02F06DFE039B834221D102993C\n:1038E0002000E7F739FFE36A1978062912D1206B27\n:1038F00002F07CFB206B02F085F93100206B02F0B6\n:10390000B8F92900206B02F077F8206B02F02DFA4D\n:1039100007B0F0BD0C9B206B9A00053202F0D4FA80\n:10392000EBE70378C22B09D103A902F04CFE330068\n:10393000010000222000FFF739FFCDE705A902F0C2\n:1039400042FE02F036FE070002F033FE01002000C6\n:10395000E7F702FF206B012102F0E8F90C9B059AC2\n:10396000013300933900029B2000FFF799FFC4E761\n:10397000F7B5040008000F0002F01BFE02F01EFE67\n:1039800025690022AB1C0100236120002B00FFF7FA\n:103990000DFF6E1C390001902000E7F7DDFE3100BD\n:1039A000206B02F066F92900206B02F025F8012156\n:1039B000206B494201F066FF01992000E7F7CCFE39\n:1039C0003100206B02F018F8F7BDF0B589B007920E\n:1039D000038B07690493438B7E1C0593C38B07837A\n:1039E0000693BB1C0361838B4683C38304000800DA\n:1039F0000D0002F0DEFD029002F0DBFD03902800D6\n:103A0000FFF7C2FE00281ED123692800019301336D\n:103A10002361FFF7A6FE002803D13100206B02F0DE\n:103A200028F90199206B01F0E7FF02992000E7F7E0\n:103A300093FE3100206B01F0DFFF019B0122290082\n:103A40002000FFF7B3FE6B461B8A079A23836B4661\n:103A50009B8A63836B461B8BE383039B934203D058\n:103A600019002000E7F778FE3900206B01F0C4FF51\n:103A700009B0F0BDF0B50400256985B06B1C0800E5\n:103A8000236103910092FFF77FFE071E1FD003986A\n:103A900002F08FFD039002F08CFD0390039B009ACF\n:103AA00093420ED06C2103A802F09CFD07000398FE\n:103AB000B8423FD1009B9F4203D039002000E7F776\n:103AC0004BFE2900206B01F097FF05B0F0BD266981\n:103AD0000398731C2361FFF744FE33003A00019002\n:103AE00003992000FFF762FE010003902000E7F732\n:103AF00033FE019B07000390002BE2D10099FFF7F2\n:103B000004F9002809D1206B01F0B7FE00280CD180\n:103B10002900206B02F0ADF807E0380002F049FD03\n:103B20000099FFF7F2F80028EDD03100206B01F08A\n:103B300063FFB3E702F042FD0390FFF725FE01901B\n:103B4000002807D0039802F034FD039002F031FD05\n:103B50000390ACE726690398731C2361FFF701FE0D\n:103B600033000290019A03992000FFF71FFE010025\n:103B700003902000E7F7F0FD029B0390002BA0D1FB\n:103B8000206B01F07AFE002803D12900206B02F09F\n:103B900070F83100206B01F02FFF88E7F0B589B095\n:103BA00003910B7804000D00012B01D07B2B38D141\n:103BB00007950025612107A802F014FD00260700E3\n:103BC0000798B84238D1039802F0F3FC2200039022\n:103BD00007783032030001923100012F03D15B7866\n:103BE000206B312B35D0206B01F03AFF662103A802\n:103BF00002F0F8FC0027039E0290029B9E423CD3F9\n:103C00003900206B02F015F9290004AA0198FFF78A\n:103C10000BFD039D029B9D423FD3206B01F0F2FF01\n:103C200029E00026782BCED1080002F0C7FC0790CF\n:103C300002F0BFFC0500BDE70378012B07D14378F4\n:103C40004A2B04D1013602F0B4FC0790B8E70336E2\n:103C5000F9E701F005FF0221206B01F049FF39006F\n:103C6000206B02F0E6F8019807AA2900FFF7DCFCB8\n:103C7000206B01F0EAFE09B0F0BD300002F09EFCBE\n:103C800007A9FFF74DF80799206B01F031FF3000CD\n:103C900002F08FFC01370600AFE705A9280002F00B\n:103CA00092FC06A9FFF73CF806990500206B01F08D\n:103CB000C0FE059B0699AB4205D007A92800FFF777\n:103CC0002FF8050007992000E7F7E8FDA2E7F0B517\n:103CD00085B0039008000D00FDF7CBFF05240428F4\n:103CE00003DC2800FDF7C5FF04002800FDF7CFFF27\n:103CF0000527042803DC2800FDF7C9FF0700039B04\n:103D00000193002302930093009BA34212DBE34341\n:103D1000DB171C4005236343039A0433D3180022A6\n:103D2000042C2BDC1A705A709A70DA701A710134F4\n:103D30000533F5E70026BE420ADBFB430021DB1713\n:103D40003B40052B13D0019AD21811710133F8E7CB\n:103D5000320000992800FDF77EFF019B029A9B1913\n:103D60001871012383401A4302920136E3E7009B56\n:103D700001330093019B05330193C5E76A46039B1A\n:103D800012891A8405B0F0BD73B5060008000D0055\n:103D9000002404F093FB230001002200280000947B\n:103DA000E3F756FC01230100009330002300962224\n:103DB000E9F74CFD73BD70B5040008001600E3F789\n:103DC0002FFE05003000E3F72BFE29000200200043\n:103DD000E9F78EFE43000120184370BDA0210423A3\n:103DE0000320C9051A00C132FF329200013350503E\n:103DF000112BF7D1704710B503785AB2002A0BDAAD\n:103E00007F2213403F3A1A4208D13F210130027805\n:103E100014008C43802C04D0180010BD934352082A\n:103E2000F1E79B010A4001301343F0E73F220130E4\n:103E300003789343802B00D070470130F8E730B50A\n:103E400000223F24814201D8100030BD01390B7897\n:103E5000A343803B5D1EAB41D218F3E730B50200AF\n:103E600041183F2400208A4200D330BD137801322C\n:103E7000A343803B5D1EAB41C018F4E710B50400BE\n:103E8000E9F7B8FE002800D02034200010BD10B59E\n:103E90000400E9F7BBFE002800D0203C200010BD44\n:103EA0003038092802D9202398430738704770B565\n:103EB0001468012927D9102523000178AB4315D1B7\n:103EC000302920D146781039831C3143782902D11A\n:103ED0001560181A70BD002C19D16F2902D16739ED\n:103EE0001160F6E7622910D16039F9E70300082C68\n:103EF0000FD13029EDD1202243781A4303006F2AD5\n:103F0000E7D1831CE5E7002C01D10A2313600300ED\n:103F1000DFE7022CDDD13029DBD1202243781A43A0\n:103F20000300622AD5D1ECE710B50C00F6F78AF849\n:103F3000002903DA002C05DC080010BD0029FBD0A5\n:103F4000002CF9DA0919F7E710B5002806DB00297B\n:103F500001DACB43C018F5F78FFF10BD0029FADB5B\n:103F6000401A0130F7E773B5050001A98068E4F74E\n:103F7000EBFFEB68019A0400002093420CD2E41896\n:103F80002000FFF753FF061B310001222000E4F759\n:103F9000A1FFEB689E19EE6076BD802340109B0563\n:103FA000C018C0234910401A80001B064008C018E2\n:103FB00001231843704770B5038C046B032B03D1A6\n:103FC0000023C56A9D4205D18B00E25002F089FBB7\n:103FD000012070BD9E00A659964201D00133F1E741\n:103FE0000020F6E710B5040002F05EF8200002F0B1\n:103FF0004FF810BD8BB270B505000C00038442620F\n:10400000032B05D1C36A00219A00006B04F002FA69\n:10401000043C614261412800013102F03DFB28006F\n:104020000021F0F7AFF870BD70B5060034200D0028\n:10403000FDF76AF904002022002104F0EBF92900C1\n:10404000200002F016FBA662E562A800FDF75CF90D\n:104050002063200070BD10B50400006BFDF783F9EC\n:104060000021200002F00DFB2000FDF77CF910BDBF\n:1040700002690123272A21D0222A1FD0752A04D0C1\n:1040800011000F339943622912D141690123272975\n:1040900014D0222912D0722A0AD1002362290DD10C\n:1040A00080690123272809D022384342434105E093\n:1040B0000023622A02D14269722AF1D018007047A7\n:1040C000026910B504000A2A22D1C3690133C36111\n:1040D00001232362636960682361A3696361A36844\n:1040E00098476369A0610D2B07D1033B6361984238\n:1040F00003D16068A3689847A061A369013306D122\n:1041000063695A1C03D00A2B01D00A23A36110BD96\n:10411000036A092A02D10733023A93430133D8E7ED\n:10412000F8B504000E00002501272069431C01D1C9\n:104130002800F8BD0A2809D1002E02D0A36A002B5E\n:10414000F6D02000FFF7BCFF3D00EEE7E9F712FDD7\n:10415000002803D02000FFF7B3FFE6E72369232BF5\n:1041600008D12000FFF7ACFF23695A1CDDD00A2BD1\n:10417000F7D1DAE75C2BDBD163690A2BD8D12000B9\n:10418000FFF79EFFE6E77FB50600542001910292FB\n:104190000393FDF7B9F8030001AD40C3040007CD58\n:1041A00007C3022200250123524222620C32E2623E\n:1041B000E36123636562A5621420FDF7A5F86063DF\n:1041C000200020214430FDF793FB636B20001D800D\n:1041D000A56165612561FFF773FF2000FFF770FFA0\n:1041E0002000FFF76DFF2000EAF7B4FAE36B012B24\n:1041F00003D02300052240331A70200004B070BDA4\n:104200001FB5040001A8EBF7ABFC0199029A039BD0\n:104210002000FFF7B8FF04B010BD10B5041E0CD08D\n:10422000E3684068984720004430FDF783FB606BEB\n:10423000FDF799F82000FDF796F810BD406870472B\n:1042400041607047012803D1CB885B001843704759\n:104250000020FCE74368F7B505009800FDF754F827\n:10426000002607006968B14205D83B000022A86813\n:10427000EDF7E4FE0BE0B3000193EB18D868EEF71E\n:1042800035F8041E04D13800FDF76DF82000FEBD9E\n:10429000B300F8500136E5E710B50122EAF722FF36\n:1042A00010BD10B50222EAF71DFF10BD10B50022A7\n:1042B000EAF718FF10BD0B6870B58668DC00B342E2\n:1042C00001D3002208E0C268013312191568002DDD\n:1042D00004D0042D02D00B60100070BD0834EEE74E\n:1042E000010010B50C318068FFF7E5FF002800D011\n:1042F000006810BD1FB5010004000C318068FFF795\n:10430000DAFF00280DD02279012A0CD0022A0CD025\n:10431000026802A902924368022001930393E0F726\n:10432000C7FD04B010BD0068FBE74068F9E710B5B1\n:104330000C7A0023012C05D11F2803D14968EAF724\n:10434000C7FF0300180010BD70B505001020FCF772\n:10435000DBFF04002900EBF7A1F8200070BD70B569\n:1043600005008068FFF7F0FF2B68416803606B6809\n:104370000400DA0807230B400121D20013434360F5\n:104380002A79D207D30F02798A431A4302239A4328\n:1043900002712B79D2B29B080B4003318A439B00F8\n:1043A00013430371AB68E968DA00C06804F016F8DB\n:1043B000200070BD4068C008704770B5150004004B\n:1043C00001220430E0F72EFA4560200070BD022281\n:1043D00013B504000090019110006946EAF782FECF\n:1043E000200016BD0430704773B56B46DE1D3200E9\n:1043F0000D000400FDF7D7FE33780100002B03D039\n:104400002A002000FDF7FAFE73BD37B56B460400A5\n:10441000DD1D2A00FDF7C7FE2A782378002A06D082\n:10442000012B02D90223037037BD0023FBE7012BC8\n:10443000FAD90378002BF7D10233F4E770B5050001\n:104440000E00100019001C00FDF79DFE0378002BE4\n:1044500004D1B36821002800984770BD012B01D119\n:10446000F368F7E74288022B04D133682100280063\n:104470009847F2E77368F9E70239814202D30B8863\n:10448000002BF9D00231081A4010704770B51D0991\n:104490000024954217D26C000919541B0F222500E5\n:1044A00013400E883200012D02D04A881204324394\n:1044B000DA40013D92B2028002310230002DF0D18B\n:1044C00053425A41A41A200070BDF0B5059C121B3E\n:1044D0009446002227001400002F11D1059B5D0097\n:1044E0004219491916006546002D12D163465B003A\n:1044F000D218002C01D014800232101A4010F0BDE6\n:104500008E5A9D5A013F761934198452240C023276\n:10451000E2E70B88013D1C1934800231240C02367D\n:10452000E2E7F7B50025089C2E0027000193121B37\n:10453000002F0BD16400031915001F000919002D6D\n:104540000FD152009918FFF797FFFEBD4B5B013F5B\n:104550009C46019B66445B5BF61A46533614023553\n:10456000E6E70C88013DA6193E8002313614023779\n:10457000E5E770B505000C00022900D20224A86806\n:10458000002803D02B689B08A34209D26100FCF7E6\n:10459000D9FE03232A68A40013401C43A8602C60A2\n:1045A00070BD70B505000C20FCF7AEFE01212B7824\n:1045B0000400DB07DA0F03788B4313430222934393\n:1045C00003702B6821689808032382000B40134373\n:1045D00023606B686360AB68002B02D1A36020008E\n:1045E00070BD4000FCF790FEA0602B68A9689A0897\n:1045F000520003F0F3FEF2E710B54B00C018D218DA\n:10460000002901D1080010BD0238023A038814883D\n:104610001B1B02D404D10139F2E701204042F2E72A\n:104620000120F0E710B5041E05D08068FCF79BFE62\n:104630002000FCF798FE10BD70B505000C000221AB\n:10464000FFF797FF2B780122002C07DA13432B701A\n:10465000644200236B60002C03D170BD93432B7028\n:10466000F7E76B685A1C6A60AA685B009C52240CCE\n:10467000F1E70023036043608360704710B50028B2\n:1046800005D003789B0702D48068FCF76CFE10BD50\n:1046900070B50C0005004968FFF76BFF0121237816\n:1046A000A868DB07DA0F2B788B4313432B70636802\n:1046B000A1686B6063685A0003F090FE70BD10B58E\n:1046C000002901D1416010BDFFF7B6FFFBE770B5CF\n:1046D0000D000400FFF7CDFF29002000FFF7EFFFDA\n:1046E00070BD70B5012504788160AC4325000224BB\n:1046F0002C43047094000322056819002A402243C9\n:10470000026000224260FFF7DAFF70BDF8B50400D6\n:104710001F0006AB1D7804211600FFF72AFF23783F\n:104720000122002D0CD0002F0ADA1343237000233E\n:104730007242BB41002161601100194305D1F8BDEF\n:104740009343237032003B00F4E761681D04481C6A\n:104750006060A06849000A52100C190C05432A0039\n:104760000B00E9E7F7B50E1C01210378F20F8B432C\n:104770001343FF220370D201330C0700134002D110\n:1047800000237B60F7BD9342FAD07F237400240E90\n:104790005B42E518F4D4002D02D1FFF74DFFF1E79D\n:1047A00021000F236F39CA171A4052188021760250\n:1047B0001211760A090400920E43162D28DC0833E4\n:1047C0005D1BEE4000252C0000993800FFF7D1FE5C\n:1047D000009B7B6063000193002C04D01A00002131\n:1047E000B86803F017FE002D08D03300AB40BA685C\n:1047F0006100535210235D1BEE400134009B6400A6\n:104800005B009C42BED0BA681653360C0234F8E7FF\n:104810001D40963CE217173D1D4013401C19241102\n:10482000D2E7F0B504000D001E008B18D100090975\n:1048300085B001310293FFF79CFE23780122002E00\n:104840000DD0134323700023280063600A9B9BB2A2\n:104850000393029B984204D3401B05B0F0BD9343E1\n:10486000F0E703781A00303A092A04D9113A192AD4\n:1048700018D8373B1A000A9B9A42EDD26368A768A2\n:104880009C463E0001936346002B11D1019B5B00C7\n:10489000FB18002A01D01A800233DF1B7F106760EB\n:1048A0000130D6E71A00613A192AD5D8573BE1E71B\n:1048B0003188039B594301238A185B4232809C4410\n:1048C000120C0236DFE7F8B5040015001E000127C0\n:1048D000002902D0531EF618023FE9000F310909E2\n:1048E0002000FFF746FE0122237893432370002324\n:1048F0006360002D08D163685900A3685918180037\n:10490000FFF7BAFD6060F8BD00200F2B08DC32789D\n:10491000013D9A40104380B20833F619002DF4D1BE\n:104920006168103B4A1C6260A26849008852E0E757\n:104930000A00416870B50500002903D153680800DA\n:10494000002B14D013782C78DB07E007DB0FC00FA7\n:10495000181A0CD1536899420AD30130994203D8EE\n:104960009268A868FFF748FEE30700D5404270BD93\n:1049700001204042F8E710B50400884201D0FFF75B\n:1049800087FE012223789343237010BD10B50400E5\n:10499000884201D0FFF77CFE01212278D307DB0F8C\n:1049A000CB1A0B408A431343237010BD7FB504001C\n:1049B000884201D0FFF76CFE6268002A0BD101210A\n:1049C0002000FFF7D6FD0123A268138022786360E0\n:1049D000134323707FBD0E26012523786E442B429E\n:1049E0000AD0A168AB4323703580330000950800DE\n:1049F000FFF797FD6060EDE7511C2000FFF7B9FD60\n:104A0000A16835803300009562680800FFF75DFDFE\n:104A1000237860601D432570DCE7F0B50D00496820\n:104A200087B004001600002901D0002A05D1290012\n:104A30002000FFF72DFE07B0F0BDFFF79AFD330011\n:104A4000A9686A68A068FFF721FD606002900120F4\n:104A50002B78DB07D90F237883430B432370034262\n:104A6000E9D00E23002102AA9B186A683009198038\n:104A70000392039A8A4201D0814212D1039A824260\n:104A8000D9D9A9684000405A01250F210E402900BC\n:104A9000B1400139014200D01D80198800290CD194\n:104AA000C9E74A0094466746AA68BA5A002A10D055\n:104AB0000121039A19808242E3D8029AA068012159\n:104AC000002A08D00091029A0100FFF7FEFC606006\n:104AD000B1E70131CDE701806160ACE773B55368A0\n:104AE0000C00496806001500994206D308D8926860\n:104AF000A068FFF781FD002802DA23002C001D00CA\n:104B000023782A7861685340DB0715D401313000DF\n:104B1000FFF72FFD6B68B0680093AB686268A1680F\n:104B2000FFF7D3FC012170602378DB07DA0F3378BD\n:104B30008B431343337073BD3000FFF71AFD6B686E\n:104B4000B0680093AB686268A168FFF7EAFCE9E728\n:104B5000F7B553680C00496806001500994208D360\n:104B60000027994209D89268A068FFF745FDB8422E\n:104B700003DA230001272C001D0023782A786168BE\n:104B80005340DB0719D501313000FFF7F2FC6B68A9\n:104B9000B0680093AB686268A168FFF796FC70602C\n:104BA00023780121DB07DB0F3278002F01D0CB1AED\n:104BB0000B408A4313433370F7BD3000FFF7D9FC35\n:104BC0006B68B0680093AB686268A168FFF7A9FCE6\n:104BD000E5E7F0B54B68160052688BB005000C0095\n:104BE000934201D234000E000121227863680A4208\n:104BF00001D132781140C9182800FFF7BAFCA36828\n:104C000021780393636872680193B36834780493DE\n:104C10000B0000266340A868B446DB0702D4CB072C\n:104C2000DB0F9C46C907CB0F1E00029363460700AB\n:104C30005B429BB2E40707937342E40F9BB2089375\n:104C400063429BB20693019B0594591ED31A0993A4\n:104C50004B1C14D1019B590063464118002B02D014\n:104C600001230B800231FFF707FC0122029B6860E1\n:104C70001C402B7893431C432C700BB0F0BD039B5E\n:104C8000089A1B8853409E19099B069A5B188B4211\n:104C900006D8049B1A88069B5A40049B023304934F\n:104CA000059B0139D318079A0593334053409BB2B3\n:104CB00063443B801B0C059A9C46039B120C0233F9\n:104CC0000592360C02370393C2E7F0B54B68160025\n:104CD00052688BB005000C00934201D234000E00E4\n:104CE0000121227863680A4201D132781140C91843\n:104CF0002800FFF73EFCA368217802936368A86848\n:104D00000093B3687268039301233478194200D189\n:104D10002340C907C90F0E000191594289B2E40727\n:104D200007917142E40F89B20891614289B2009FF4\n:104D300006910099D21B05940139049009924A1CEE\n:104D40000ED1009B59004118FFF796FB0122019BF1\n:104D5000686023432C7894431C432C700BB0F0BD47\n:104D6000029A089F12887A409619099A069F52184B\n:104D7000BC468A4206D8039A12885740BC46039A1A\n:104D8000023203923700059A360C624405921743AB\n:104D9000079A01395740BAB29446049A6344138083\n:104DA000059A1B0C120C0592049A02320492029A84\n:104DB00002320292C3E7F0B54B688BB004000E00DC\n:104DC0001500002B02D05368002B03D10023636031\n:104DD0000BB0F0BD814237D10800FFF7E2FB0600BF\n:104DE0000190A54200D1050073686A6820009918F7\n:104DF000FFF7BFFB236800219A085200A06803F068\n:104E000009FBA3680593B368059907937368069334\n:104E1000AB6802936B689C46069B5B00049300237F\n:104E2000049A023209926246002A3ED163602B78CE\n:104E3000317822785940012319423CD19A4322709B\n:104E40000198FFF7EFFBC3E7002301938242CBD128\n:104E50001000FFF7A6FB05000190C5E71388DB19DA\n:104E60000893038802301F00029B1B887B43089F26\n:104E7000DF19039B1780013B3F0C03930232039B16\n:104E8000002BEBD1049BCB18002F03D0099B049A75\n:104E90005B188F52059A02319B1A012252429444A8\n:104EA000029A5B1002320292BDE7069B07980393B9\n:104EB0000A000027E3E713432370C1E7F8B54B6806\n:104EC00007001500002B03D001241378234202D0E1\n:104ED00000237B60F8BD5368002B03D12100FFF74E\n:104EE000ABFBF7E70800FFF75CFB06002800FFF7C5\n:104EF00058FB210005003800FFF79EFB6B68002B74\n:104F000011D0AB681B88234204D03200390038002E\n:104F1000FFF751FFA96823006A680800FFF7B6FA97\n:104F20006860002806D13000FFF77CFB2800FFF7FF\n:104F300079FBCFE7320031003000FFF73CFFDDE7BF\n:104F4000816843680200002010B55B00CB18023B6B\n:104F50009C1CA14204D31378DB0700D5404210BD4E\n:104F60001C8800042043F2E7F0B587B00391049257\n:104F70001D00002901D0049A9D1800248268260093\n:104F800000924268019201220292019A002A26D0E0\n:104F9000009A24041188049A10369A180C4305923A\n:104FA000072E06DC009A02320092019A013A019221\n:104FB000EBE701270278A1B23A4207D0FF228A43E9\n:104FC0001100029A891889B20A0A0292039AC9B298\n:104FD000002A06D06A1E94461170934207D107B08A\n:104FE000F0BD6A1C9446059A29709445F7D0083E96\n:104FF000240A6546D4E7F8B58668436805000020B2\n:105000005C003419023CA31C9E4206D32B78DB07BC\n:1050100002D580231B06C018F8BD8F21C905F5F7FE\n:10502000FBFC071C2088F6F723F8391CF5F782F9FA\n:10503000E8E7F0B589B007930EAB1B780F9F060029\n:10504000069114000393381E05D00B00023B1E2B63\n:1050500003D90020387009B0F0BD7568002D11D15A\n:105060003B00002A09D13023037000230130037074\n:10507000C01BF0E71A700134013322781800002AAF\n:10508000F8D1F0E76D002800FCF73EF92A00B1687E\n:10509000029003F0A3F9029B04975B190593079B09\n:1050A00001973A3B07930021059D029B023DAB42CD\n:1050B00012D93031392901D9079BC918019B5D1CD0\n:1050C0001970029B059A93420ED3039B002B2CD0A0\n:1050D00001231EE00195E6E72888090408430699A4\n:1050E000F4F7C6FE2880E0E71A88002A0DD10233C3\n:1050F000E8E7013802781A70013320E01178187857\n:10510000013B10705970013224E0039B002BE1D069\n:105110000023049AAA1A032A05D16946019A097B39\n:10512000951C51700495002BD4D00298FCF71BF904\n:10513000002C07D0200003F0C1F92B0020181D001F\n:10514000A042D6D83378DB0702D52D232B7001354A\n:105150003A006B1E9A42D1D30023E81B2B707AE7EA\n:105160008368C268934203D25A1C826018787047E1\n:1051700001204042FBE7036810B50400002B02D079\n:105180004068FCF7F0F82000FCF7EDF810BD802334\n:10519000F0B55B0587B01D69EAF7FAFC037805AF47\n:1051A000FD2B19D1EAF7F4FC03783B70EAF7F0FC29\n:1051B0000400EAF7F9FC00950290029B9C4218D18A\n:1051C000200000F027FA012239002000ECF746FD0C\n:1051D000EAF748FD07B0F0BDEAF7E6FC03783B705C\n:1051E000EAF7E2FC0400EAF7D3FC6B42029000937A\n:1051F000E3E7009B2000E61800F00CFA200000F026\n:1052000009FA802335005B051B69009ADB09DB0185\n:10521000B21A9B1901920393039B34009D42CCD098\n:105220002B78002B04D0802229000198ECF716FD82\n:10523000019B803580330193EEE770B5050003F0E4\n:105240003DF9002301001A002800EAF713FE041EAE\n:1052500005D02800FDF7EEFB2100EAF793FF70BDB3\n:1052600010B500220400A05C8B5C002808D15842D5\n:1052700058410123184010BD98420AD10132F2E78B\n:10528000002BF9D1E8F7A6FC030001205840C0B27A\n:10529000EFE70020EFE710B54368984710BD70B501\n:1052A00004000D00002201794020E2F761FFE3686D\n:1052B0002B60A3685843686023790020AB6070BD01\n:1052C000416870B5C2688C6803000020A24207D212\n:1052D0009C68551C08791219C968DD60E2F7B0FFB7\n:1052E00070BD73B50E0000251C00110002230122C1\n:1052F00030000095ECF7DCFC2068E4F72DFA00782C\n:10530000012E03D12900EBF7B5F976BD6168EBF703\n:1053100071FAFAE7F0B5062514001268CB00060012\n:105320008BB00F0004301D43002A29D12900DFF77C\n:1053300079FA002802D0436823601FE005AB187497\n:10534000079031681800059606970894EBF7DCFD86\n:1053500023680193002B11D1F22149008F420DD017\n:1053600002AA3000ECF7E2FE029B002B06D002AA54\n:1053700001990120049500F070F920600BB0F0BD98\n:105380006668002E07D102222900DFF74BFA0028B9\n:10539000F4D00023D0E701222900DFF743FA46606A\n:1053A000F7E737B51D000023009301330400080020\n:1053B00011001A00ECF77CFC0820FBF7A5FF2B6816\n:1053C000436004603EBD37B51C00002300930233E8\n:1053D0000500080011001A00ECF76AFC0C20FBF72E\n:1053E00093FF236862680560826043603EBD30B50C\n:1053F0001400126887B0002A0CD101AB0190029111\n:10540000039201000132180004941A74EBF77CFD3A\n:1054100007B030BD806B0028FAD0CB00062165684C\n:1054200004301943002D06D10222DFF7FBF90028D2\n:10543000EED02560ECE70122DFF7F4F90028E7D091\n:105440006368436000232360E2E7F0B58BB003ADEF\n:1054500004000191170000210822280002F0DAFF61\n:105460002C2305A88360012600232168037446606D\n:10547000C5600594EBF748FD039B3000042B07D172\n:105480002069E2F7E5F93A00C36A01992069984773\n:105490000BB0F0BDF0B589B001AE040008220F00DA\n:1054A0003000002102F0B6FFF523002503A85B00C1\n:1054B0004360C73BFF3B21688360C660057403946B\n:1054C000EBF722FD019B1800AB4208D0042B08D15A\n:1054D0002069E2F7BDF93900436A2069984709B0AD\n:1054E000F0BD32002900280000F0B7F8F7E710B54A\n:1054F000EE24002288B0640003AB01A90494CD3CE3\n:1055000003900691FF3C016818001A740192029200\n:105510000594EBF7F9FC0198431E9841C0B208B01E\n:1055200010BD10B50C00E2F793F92100ECF7C2F8BA\n:1055300010BD70B50D000400E2F78AF92900ECF700\n:1055400089F8031E00D02369180070BD0268137823\n:105550003E2B05D83C2B05D2212B07D0402303E05E\n:10556000402BFBD101320260180070473E23F9E75F\n:10557000F7B505000668741C20780194E8F712FB63\n:10558000A71B030001340028F6D1390028680A223D\n:10559000DCF7D4FF019B40102B60FEBD73B5E4F730\n:1055A000DBF800906846FFF7D1FF00240600009B5F\n:1055B0001878002803D164000130204376BDE8F755\n:1055C000F1FA0125002803D06846FFF7D1FF050056\n:1055D000009B1978732904D16419009B013300934F\n:1055E000E5E701AA3000E2F7C3FD019B5A1E5B42CA\n:1055F000013DF2D314191C400419F9E770B50D00F0\n:105600000400DAF719FE29002000F3F7AFFADAF701\n:1056100003FE70BD10B50400DAF70EFE2000F3F7AC\n:1056200087FADAF7F9FD10BD8022030052051069F0\n:105630000138184043425841C0B27047002310B5AA\n:105640001A001900ECF7FAFC10BD07B50022019111\n:1056500001AB0121ECF7F2FC0EBD10B5140052684D\n:10566000531E9A4193001018E31A0A0008330100F0\n:105670002068ECF7E3FC10BD07B56A46ECF788FD3F\n:1056800001990098002900D10EBDEFF71DFDFBE741\n:10569000F8B500F0D5FCFEF7A5FE002506007368FE\n:1056A000AB4200D8F8BDB368EF00DC59002C0ED037\n:1056B000042C0CD0E4082000FDF7F5F903785F2BEB\n:1056C00005D0B3682000DF197968ECF715FC0135C7\n:1056D000E5E710B5002903D100F0ACFDDDF76CFE65\n:1056E00000F0B5FDFAE710B5F0F7D2FD4300012058\n:1056F000184310BD10B5140008001100E2F73EF881\n:10570000200010BD73B514006A46551D0B007F269E\n:1057100029002200013D32402A70E409F9D1802697\n:10572000491B984701AB591B76428C4204D16A460B\n:1057300012795D1B425573BD2A5D32430255013417\n:10574000F3E70300006A5A790918032A02D81800FF\n:10575000196270471A6B19621018FAE710B50C003D\n:105760000121FFF7EEFF047010BD0300806A5A7933\n:105770000918032A02D81800996270475A6A996278\n:1057800080181A6B1018F8E710B50C000121FFF70C\n:10579000ECFF047010BD10B52821EDF771FC10BDB1\n:1057A00010B52921EDF76CFC10BD70B50400150093\n:1057B000FFF7EAFF0322A36A042103339343A362A2\n:1057C0002000FFF7D2FF056070BD70B543790D0072\n:1057D0000024032B06D9836A033CE41AC3699200B0\n:1057E000D358E4180321FFF7C0FF4470240A057062\n:1057F000847070BD10B53820FBF798FD10BD10B552\n:10580000040081618800FBF77FFDE06110BD10B5E9\n:105810000400C069FBF7A7FD2000FBF7A4FD10BD45\n:1058200013B543790400012B18D00021FFF796FF30\n:105830006379032B13D1226AD01C9843A36A206298\n:105840006062E362C018FBF771FDE3682063D88AE9\n:105850001B8BC0188000FBF769FD606313BD042B30\n:10586000FCD1E068636AE26A216B9A18037D0093B9\n:105870000069636BDCF7FAFAF0E78079431E984120\n:10588000C0B270474379012B09D08368C918C36837\n:105890008160DA8B914200DDD983002383717047E8\n:1058A00070B5012114000500FFF7ECFF0F2C06D89E\n:1058B00021005039C9B22800FFF766FF70BD2200F1\n:1058C00019212800EDF7DCFBF8E770B5150004009E\n:1058D0000121FFF7D7FF2A001A212000EDF7D0FBA6\n:1058E00070BD70B50D0004000121FFF7CBFF2A0049\n:1058F0001B212000EDF7C4FB70BD70B50D00040046\n:105900000121FFF7BFFF2A001C212000EDF7B8FBA3\n:1059100070BD012170B5494214000500FFF7B2FFC8\n:105920000F2C06D821004039C9B22800FFF72CFF00\n:1059300070BD220022212800EDF7A2FBF8E701212B\n:1059400070B5150004004942FFF79CFF2A0023218F\n:105950002000EDF795FB70BD70B50D00012104002E\n:105960004942FFF78FFF2A0024212000EDF788FB32\n:1059700070BD70B50D00012104004942FFF782FFA0\n:105980002A0025212000EDF77BFB70BD70B50D00CE\n:1059900004000021FFF776FF2A002A212000EDF7FE\n:1059A0006FFB70BD70B50D0004000021FFF76AFFAA\n:1059B0002A002B212000EDF763FB70BD70B50500B8\n:1059C0000498C91A440000021843059B091B0600ED\n:1059D000D4B2002B0AD002392800FFF753FF32005F\n:1059E0000134E1B22800EDF74BFB70BD2800FFF752\n:1059F00049FF32002100F5E770B504000D000021D9\n:105A0000FFF740FF6379012B05D0032B03D8A26A6F\n:105A1000E369AD00EA5070BD70B50D0001210400CE\n:105A20004942FFF72FFF2A0068212000EDF728FBED\n:105A300070BD70B50D0004000121FFF723FF2A009F\n:105A400069212000EDF71CFB70BD012110B5040099\n:105A50004942FFF717FF6A212000FFF795FE10BDAE\n:105A6000F7B50C0001210500FFF70CFF23001033F0\n:105A70003F2B06D821008039C9B22800FFF784FEE9\n:105A8000F7BD14212800FFF77FFE6B460533190090\n:105A90007F20E2B217005E1E0740E4113770671CDA\n:105AA000012F18D840273A40013416D1002A02D1DC\n:105AB000023B18701E002800891B8025FFF755FE49\n:105AC000002201AB9C1B6D42A2420CD16A461279A6\n:105AD0009B1BC254D4E73300DBE7002AEBD0002243\n:105AE000023B1A70E6E7B15C294381540132EBE7CF\n:105AF00070B50D0004000121FFF7C4FE2A00162135\n:105B00002000EDF7BDFA70BD70B504000D00012155\n:105B1000FFF7B8FE20001721FFF736FE0322A36A25\n:105B2000042103339343A3622000FFF71EFE0560A8\n:105B300070BD10B504000121FFF7A4FE182120005C\n:105B4000FFF722FE10BD70B50D0004000021FFF725\n:105B500099FE2A001D212000EDF792FA70BD70B564\n:105B60000E00012114005300C91A0500FFF78AFE38\n:105B700021004C1EA141320028001E31EDF780FAB1\n:105B800070BD10B504000121FFF77CFE202120002C\n:105B9000FFF7FAFD10BD012110B504004942FFF7DF\n:105BA00071FE21212000FFF7EFFD10BD70B50D0043\n:105BB000022104004942FFF765FE2A002621200049\n:105BC000EDF75EFA70BD032110B504004942FFF7FE\n:105BD00059FE27212000FFF7D7FD10BD10B50400A6\n:105BE0000121FFF74FFE30212000FFF7CDFD10BD52\n:105BF00010B504000221FFF745FE31212000FFF718\n:105C0000C3FD10BD012110B504004942FFF73AFE63\n:105C100032212000FFF7B8FD10BD10B504000021AF\n:105C2000FFF730FE33212000FFF7AEFD10BD70B549\n:105C300004000D00FFF77DFF2000FFF7EEFF2900B5\n:105C40002000FFF7B3FF70BD10B504000021FFF77F\n:105C500019FE34212000FFF797FD10BD10B5040098\n:105C6000FFF767FF2000FFF7EFFF2000FFF7ABFF14\n:105C700010BD70B50D0004000021FFF703FE2A00DF\n:105C800035212000EDF70AFA70BD70B50E00012134\n:105C9000150049420400FFF7F5FD2A003621002EC9\n:105CA00000D137212000EDF7F9F970BD70B50E0075\n:105CB0000121150049420400FFF7E4FD2A003821C4\n:105CC000002E00D139212000EDF7E8F970BD70B544\n:105CD0000D0004000221FFF7D5FD2A003D21200020\n:105CE000FFF773FD70BD70B50D0004000021FFF7D4\n:105CF000C9FD2A003F212000FFF767FD70BD70B588\n:105D00000D0004000021FFF7BDFD2A004021200006\n:105D1000FFF75BFD70BD012110B504004942FFF79C\n:105D2000B1FD41212000FFF72FFD10BD70B50D0022\n:105D30002B005A1E934103215B4219400400FFF7D8\n:105D4000A1FD4721002D00D105392000FFF71CFDE2\n:105D500070BD70B50D0004000121FFF793FD2A000E\n:105D600043212000FFF731FD70BD042110B54942E9\n:105D7000FFF788FD10BD10B504000021FFF782FD7C\n:105D800044212000FFF700FD10BD70B504000D0098\n:105D9000FFF7F1FF20000E21EDF776FA2900200031\n:105DA000FFF72AFE20000221FFF76CFD20003E21B4\n:105DB000FFF7EAFC042120004942FFF763FD70BDB4\n:105DC00010B504000021FFF75DFD45212000FFF71D\n:105DD000DBFC10BD70B50C0000210500FFF752FD83\n:105DE000210030392800C9B2FFF7CEFC70BD70B574\n:105DF00005000C00222919D00026232901D10136E3\n:105E0000033C012128004942293CFFF73BFDE1B258\n:105E10002800FFF7B9FC002E07D000212800FFF76B\n:105E200031FDD6212800FFF7AFFC70BD01261F24ED\n:105E3000E7E770B50D0001210400491BFFF722FDC3\n:105E40002A0050212000EDF71BF970BD70B50D0040\n:105E500001210400491BFFF715FD2A0051212000F4\n:105E6000EDF70EF970BD70B50D0004000121FFF7CC\n:105E700009FD2A0053212000EDF702F970BD02212F\n:105E800010B504004942FFF7FDFC54212000FFF744\n:105E90007BFC10BD70B50D0001210400491BFFF70C\n:105EA000F1FC2A0056212000EDF7EAF870BD70B52C\n:105EB0000D0001210400491BFFF7E4FC2A005821D2\n:105EC0002000EDF7DDF870BDF8B5050017000329D7\n:105ED0000FD0042910D0002402262800E143FFF748\n:105EE000D1FCE2199200324328005721EDF7C8F89F\n:105EF000F8BD00242600F0E70124FBE770B50D0093\n:105F000004000139FFF7BEFC2A0059212000EDF7FB\n:105F1000B7F870BD70B5140005000E008918FFF7C2\n:105F2000B1FC2202324328005A21EDF7A9F870BDD6\n:105F300070B51A430D0004000121002A07D1FFF7B4\n:105F4000A1FC60212A692000FFF72FFC70BD4942A7\n:105F5000FFF798FC2A696121F5E770B50E000499F6\n:105F60000400D5B20B430DD10121891AFFF78AFC39\n:105F7000622132692000FFF718FC29002000FFF79A\n:105F800003FC70BDD143FFF77DFC32696321F1E76B\n:105F900007B5019300920B0064220021FFF70EFD6C\n:105FA00007BD13B50124019300920B0066226142E4\n:105FB000FFF704FD13BD012110B549420400FFF7AE\n:105FC00061FC01235B21A3712000FFF7DDFB10BD05\n:105FD00070B505000C004942FFF754FC280002216F\n:105FE000FFF7C3FB5C234470037070BD10B5040061\n:105FF0000021FFF747FC0423E2682000117D0B43DA\n:1060000013755D21FFF7C0FB10BD012110B5040021\n:106010004942FFF737FC0423E2682000117D0B435F\n:1060200013755E21FFF7B0FB10BD10B50421FFF71B\n:1060300029FC10BD032110B54942FFF723FC10BD18\n:106040004068704710B5E1F74FFDF7F79BFDDDF7AE\n:1060500003F810BD10B5E1F747FDF7F73FF9DCF79E\n:10606000FBFF10BD10B5E1F73FFDF6F7EFFFDCF7E2\n:10607000F3FF10BD13B504000800110000220092C8\n:106080001300EBF715FE0420FBF73EF9046016BD84\n:10609000704710B50C00022100F017FB002802D059\n:1060A0000470240A447010BDC36910B50400002BAD\n:1060B00004D0B02109021943FFF7EBFFBD21A3690A\n:1060C000090219432000FFF7E4FF10BD70B50D0071\n:1060D0000421140000F0F9FA002805D0057084703E\n:1060E0002D0A240A4570C47070BD10B5DB00114341\n:1060F0001943FFF7CEFF10BD10B5072A09D8D2000B\n:1061000007290CD80A438C21C9011143FFF7C1FFAD\n:1061100010BD13004022083BDB001A43F0E7802348\n:1061200008391943EEE74369890070B5CC58E0217E\n:10613000050043680902E41A043C23055B0D19437A\n:10614000FFF7A7FF2B680120022B07D1E40AE40226\n:1061500004D080231B01E4186042604170BDF8B593\n:106160001D0043699200D45843680600E41A043CB9\n:106170006310002D16D10A02D021FF270902114316\n:106180003B401943FFF785FF012332681D00022AB7\n:1061900005D1BC4303D00134FF34654265411D4045\n:1061A0002800F8BD802080228001204012021B05BB\n:1061B00002431B0D1A438B01F02180200902194371\n:1061C000C000A312034024031943A40E214330004E\n:1061D000FFF77CFFE4E74369F822890070B5CC58EB\n:1061E000F021050043681202E41A043C63109BB2DC\n:1061F0001A4363025B0D09021943FFF767FF2B681F\n:106200000120022B07D1A40DA40504D08023DB03B9\n:10621000E4186042604170BD10B544680C6081684C\n:106220001160C2681A6010BD10B51300C468002266\n:10623000A04710BD002210B51100FFF7F5FF10BDFB\n:1062400007B5019101AA0121FFF7EEFF0EBD10B5C0\n:10625000EEF798F810BD10B5E1F7FAFAEEF7D8F8B6\n:1062600010BD70B504000D00FFF7F5FF002803D046\n:106270002000E1F7EDFA040029002000EBF7EAF92D\n:1062800070BD10B50B7901215B001943ECF704FCDC\n:1062900010BD10B50023012806D00B7901215B0049\n:1062A0001943EBF759FE0300180010BD10B57F2409\n:1062B00040181440431E1C708024091A6442581868\n:1062C000002800DC10BD2000D209013B10431870EB\n:1062D000F5E730B5010003687F2500201A78C0017A\n:1062E000140052B22C4020180133002AF6DB0B6058\n:1062F00030BD13B5421C019202780C000300082A3D\n:1063000011D81000F3F71AFD07110F0509090F0F37\n:106310000B0005330193019816BD0333FAE701A87A\n:10632000FFF7D7FFF7E7192A01D80233F2E701A8F0\n:10633000FFF7CFFF01A8FFF7CCFF002CEBD0019BAC\n:1063400018180190E7E770B5040016000800002156\n:10635000A3694D1CDB091BD10231FBF709FB0823A4\n:10636000037029000130A269FFF7A0FF6569A369E6\n:10637000AB4206D30835A900E069FAF7E3FF65618F\n:10638000E061A369E269591C9B00A1619E5070BD48\n:106390002900DEE710B50C000221FBF7E9FA230A19\n:1063A0000A330370447010BDF8B51E000378040072\n:1063B0000D001700002B0DD1416883688B420ED36E\n:1063C0001831C9000122C068FAF7C9FF002802D1BC\n:1063D00001232370F8BD6368E06018336360A2682E\n:1063E000E368511CD2009B18A16019682D022A0A8B\n:1063F0000D0E2D0615431D603A789E80DA70069AC0\n:10640000DA80E7E710B50C000521FBF7B1FA0323AA\n:106410000370431C05301C70013324128342FAD1EF\n:1064200010BDF0B5046A89B02300403303931D7892\n:1064300007000E00072D0BD1A16CE06CE4F7BCFA4D\n:1064400001003000FFF7A6FF2000E8F783F94DE0D8\n:10645000082D0DD100222300A16CE06CDCF76EF852\n:106460000200C3070ED541103000FFF7CBFFEBE76A\n:10647000092D0CD1009401220023A16CE06CDCF703\n:10648000D9F8020031003800FFF75DFFDCE72B0090\n:106490000A3B012B40D8A16C04A8FBF729FAA26C97\n:1064A000E16C04A8FBF708FA2000E8F753F9039B16\n:1064B0001B789D42F3D00A3B0020012B17D9059988\n:1064C00006980A2915D8E4F777FA041E14D00A3D75\n:1064D00003213000FBF74CFA6B1E9D4144700435DC\n:1064E000240A0570847004A8FBF724FA012009B07F\n:1064F000F0BDE4F72FFAE8E7069805990A2D08D1D0\n:106500002200E2F7E7FC020031003800FFF71BFF32\n:10651000E9E7E2F7F7FCF6E702213000FBF728FA9B\n:106520000123457003708FE713B50130019001A876\n:106530000C00FFF7CEFE2060019816BD002310B5B9\n:106540000B60C2185278DC00A2400C680133224371\n:106550000A60042BF5D1053010BD07B501A9FFF77E\n:10656000EDFF01980EBD37B5150002780C00032A27\n:1065700007D1FFF7F2FF0123400018432060180005\n:106580003EBD0023082AFAD101A9FFF7CDFF019BE8\n:106590009B005B5923600123F1E770B50D000024D7\n:1065A000A84201D3200070BD01210134FFF7A1FEF4\n:1065B000F6E710B50121FFF79CFE10BD10B50021D4\n:1065C000FFF797FE10BD13B50130019001A80C0034\n:1065D000FFF77FFE01A8FFF77CFE019B18182060E3\n:1065E000180016BD13B5040000680378002B02D113\n:1065F0000130206016BD192B03D80121FFF779FE69\n:10660000F8E71A318B42F8D101A9FFF7DCFF2060CF\n:106610000198EFE737B51C00431C0193037801A8EC\n:106620001A3B0B601500FFF754FE286001A8FFF726\n:1066300050FE019B1818206018003EBD07B501A947\n:10664000FFF7C1FF019B181A43425841C0B20EBD6B\n:1066500010B58068002800D110BD4468FAF783FEA9\n:106660002000F7E710B5E8F7A3FC4300012018432A\n:1066700010BD10B5040001618800FAF745FE6061A5\n:1066800010BD10B50400002902D0C068FAF76BFEF7\n:106690006069FAF768FE10BD70B504000D000129AD\n:1066A0000AD10121036949429A00406901F0B2FE12\n:1066B00000232560636070BD0229F9D14068FAF7B4\n:1066C00023FE6368E060A360F2E710B504684268E7\n:1066D0000023022C01D1C3689B188918416018005F\n:1066E00010BD0368012B03DC426843698900CA506E\n:1066F000704742684B1E9B184942194041607047E1\n:1067000070B50C001500FFF7E0FF0419002803D155\n:1067100070BD05702D0A0130A042FAD1F8E7F0B53E\n:1067200085B000AFBB605B009B185C1C7860396073\n:10673000FA60A400042B20D823006A460E33DB083D\n:10674000DB00D31A9D4600266D4628003B68221FB9\n:1067500008C0B96A01F042FEF9682B000131BA683D\n:106760007868EBF76BFC0400002E02D03000FAF7DB\n:10677000FAFD2000BD4605B0F0BD2000FAF7D1FDBE\n:10678000051ED9D00600E0E707B5009313000A0004\n:1067900081684068FFF7C3FF0EBD70B50D000400AF\n:1067A000E1F756F82900036A04222000984770BDDB\n:1067B00070B50D0016000400E1F74AF83200036AD4\n:1067C00029002000984770BD70B50D000400E1F766\n:1067D0003FF82900036A00222000984770BD70B579\n:1067E0000D000400E1F734F82A00836921001F201E\n:1067F000984770BDFC30C16002617047002370B5DE\n:1068000004001D007F26AA00A218FF32517C7F29B8\n:1068100006D102339B0019552000DFF75DFE70BDE5\n:106820000135EDB27E2907D102339B001E552000B1\n:10683000DFF752FE0023E6E70029E4D09800201895\n:106840000172917C01334172D17CDBB28172127D85\n:10685000C272D8E7C26810B50300002A05DD41689E\n:106860008068814208DB002010BD00208242FBD0FE\n:1068700059689C68A142F7DD012059684C00521804\n:1068800020435A60F0E783684268C1689B1A5B182E\n:1068900010B5581C002900DD581EF3F7EDFAC3436C\n:1068A000DB17184010BDF7B51D00002602230700B6\n:1068B0000096080011001A00EBF7FAF90C20FAF71D\n:1068C00023FD07602B680400436031006868EBF724\n:1068D000ABFCA0602000FEBD7FB40C1C0326564319\n:1068E000351CA0230C21DB0305331B025A18083387\n:1068F000011CEFF3108640B472B608E0196006423E\n:1069000000D11160760807D10134013D05D0802601\n:10691000C04611602078F1E7FBE7116040BC86F3C8\n:1069200010887FBC0020704710B5EFF707FB10B54B\n:106930000400006800F086F8200010BD70B5060065\n:1069400008000D0001F0BAFD04000530F1F718FE53\n:10695000306000F06AF8336829005C803068621C9F\n:10696000043001F03BFD70BD70B50B680400006899\n:106970000D00984205D000F065F82868206000F00E\n:1069800057F8200070BD0022914207DB0368022205\n:10699000985E0022884201DD5B181A79100070476A\n:1069A000002310B503600400EFF780FCA060E160F5\n:1069B000200010BD70B50180428004001D00EFF77B\n:1069C00075FCA060E160002D02D02000EFF7CEFC46\n:1069D000200070BD10B50400006800F033F82000FE\n:1069E00010BDF8B5D443E4171440050020000C3066\n:1069F0001F000E00F1F7C4FD286000F016F82B68A8\n:106A00001C722B685F60002E05D0286822000930B8\n:106A1000310001F0E3FCF8BD002310B504000A00CA\n:106A20001900FFF7DEFF200010BD0323038070472D\n:106A300010B50400EFF7C0FC002802D12388023310\n:106A4000238010BD10B50400EFF7B6FC002805D177\n:106A50002388023B9BB2012B01D0238010BD200074\n:106A6000F1F7C2FDFAE770477047036870B504009C\n:106A700001811B6A9847236805005B6920009847DD\n:106A80002081280070BD00897047036870B504003C\n:106A900081721B6A984723680500DB6920009847CC\n:106AA000A072280070BD807A70477047704710B59B\n:106AB0000400102101F020FC200010BD10B50400DE\n:106AC000442101F019FC200010BDC368016942692E\n:106AD00049435B4352435B18981870477FB50400E5\n:106AE000FFF7F3FF2500902306001B043135984281\n:106AF0002AD9638F002B07D1013308221B21684656\n:106B0000FFF758FF0123638790239B049E4219D906\n:106B1000A38F002B07D1013309221B216846FFF701\n:106B200049FF0123A3878023DB049E420AD9E38F18\n:106B3000002B07D101330A221B216846FFF73AFFD9\n:106B40000123E38700232B702B78042B0ED801330D\n:106B50002B702000EFF718FD02000B280BD1628686\n:106B600001231B216846FFF725FF15E00023E3877B\n:106B7000A3876387EDE72300A18E303381420CD1D8\n:106B80001A78042A01D801321A70A28E618E9142BD\n:106B900002D01B78042BE2D87FBDA0860022F3E749\n:106BA00030B50400036A8BB0009302AD416A82697C\n:106BB000C369280000F06EFF23000C3307CD07C324\n:106BC0000222A37920009343A371FFF787FF0123DB\n:106BD000A1881A0006A8FFF7EDFE00200BB030BD1B\n:106BE00070B505000B680C0008005B6A98472B0025\n:106BF0000C3407CC07C3280070BD10B5040003682F\n:106C00005B6A9847E06810BD10B5040003685B6AD2\n:106C10009847206910BD10B5040003685B6A984767\n:106C2000606910BD10B5040003685B6A9847A379DA\n:106C30009B0702D42000EFF771FDA06A10BD10B5CC\n:106C4000040003685B6A9847A3799B0702D420007D\n:106C5000EFF764FDE06A10BD408E7047036870B5C1\n:106C6000040001811B699847236805009B69200087\n:106C700098472081280070BD00897047704710B583\n:106C80000400482101F038FB200010BD30B504009D\n:106C9000436BC26801699A1A83698BB05A43836B4C\n:106CA00092125B1AC16942634B439B128363C16BAF\n:106CB000406902AD091A206A41438912E1630091DB\n:106CC0002800216C00F0E6FE2300283307CD07C31F\n:106CD0000123A1881A0006A8FFF76CFE00200BB064\n:106CE00030BD002310B58371643303810368040051\n:106CF00081801B6998470222A37993431A000123DC\n:106D00001343A37110BD84B030B506930300049102\n:106D1000059204AC0C3326CC26C326CC26C32268AD\n:106D20001A60022382791343837130BC08BC04B01B\n:106D30001847030030B50C3134C934C334C934C3E7\n:106D40000A681A6030BD0223807918407047042316\n:106D500080791840704780220023D2008261C2618E\n:106D600002620222C36003614361436283799343F9\n:106D7000837170474164704773B50C0005001600BD\n:106D80000B680800DB699847E36B280001960093C5\n:106D9000626BA36B216C00F03EFE280076BD70B5DF\n:106DA00005000B680C000800DB6998472B002834AD\n:106DB00007CC07C3280070BDF0B587B0010003A859\n:106DC000FFF7EDFF0398F5F7F3FE040004980D00BC\n:106DD000F5F7EEFE060005980F00F5F7E9FE220034\n:106DE000009001912B0020002900F5F7F1F8320006\n:106DF00004000D003B0030003900F5F7E9F802000F\n:106E00000B0020002900F4F7BDF9009A019B040053\n:106E10000D0010001900F5F7DBF802000B00200050\n:106E20002900F4F7AFF9F6F7C1FEF5F78BFE07B0CE\n:106E3000F0BD10B504000368DB699847A06A10BD77\n:106E400010B504000368DB699847E06A10BD10B50F\n:106E500004000368DB699847206B10BD82B030B531\n:106E6000050085B0089202A80822099301F0B6FA3D\n:106E7000039B029C5A10AD18DB0701D52B681C59E7\n:106E80000AA90822684601F0A9FA089A099B280075\n:106E9000A04705B030BC08BC02B01847F8B50A6876\n:106EA00003680E000700981AF4F7E2F872687B682E\n:106EB000051C981AF4F7DCF8B368041CB868C01A0B\n:106EC000F4F7D6F8291C061C281CF3F7A5FD211C95\n:106ED000051C201CF3F7A0FD011C281CF3F72AFA5F\n:106EE000311C041C301CF3F797FD011C201CF3F728\n:106EF00021FAF8BDF0B585B0019002910392FFF739\n:106F0000CDFF0127041C061C039B9F4217DA0C21AE\n:106F10007943029B01985918FFF7C0FF051C011C1B\n:106F2000201CF3F7F9F8002800D02C1C291C301C79\n:106F3000F3F7DEF8002800D02E1C0137E4E7211C0F\n:106F4000301CF3F79BFE05B0F0BDF0B58BB0099394\n:106F50008023DB000024C36003614361002305003C\n:106F60000C27079108920460446084608461029356\n:106F7000119B9C4265DB00270023109C0593019721\n:106F800000973E1C059B119A934270DA210007A8D6\n:106F9000FFF784FFF6F77AFF011C03900298F3F7DE\n:106FA00063FBFE218905F3F769FE0490301CF4F7BA\n:106FB0003FF806000498F4F73BF8864200DA060032\n:106FC0003000F4F755F82368079A061C981AF4F76E\n:106FD0004FF80399F3F748FB400004994008F3F792\n:106FE0001BFD011C0098F3F7A5F9089B0090069380\n:106FF000069A6368981AF4F73BF80399F3F734FBA1\n:10700000400004994008F3F707FD011C0198F3F7CD\n:1070100091F9A368019009980C34181AF4F728F82C\n:107020000399F3F721FB400004994008F3F7F4FCBF\n:10703000011C381CF3F77EF9059B071C01330593EF\n:10704000A0E739006143109B07A85918FFF726FFF6\n:10705000F6F71CFFF3F7ECFFF4F70AF80299061CA9\n:10706000F3F75AF8002800D00296013480E700991F\n:10707000081CF3F7D1FC0199041C081CF3F7CCFCA5\n:10708000011C201CF3F756F9391C041C381CF3F7BB\n:10709000C3FC011C201CF3F74DF9F6F7F7FE041CA6\n:1070A000011C0098F3F7E0FA311CF3F7B5FCFE2160\n:1070B0008905F3F73FF98921C905F3F7ADFCF3F72B\n:1070C000B7FF211CE8600198F3F7CEFA311CF3F703\n:1070D000A3FCFE218905F3F72DF98921C905F3F7F2\n:1070E0009BFCF3F7A5FF211C2861381CF3F7BCFAC1\n:1070F000311CF3F791FCFE218905F3F71BF9892177\n:10710000C905F3F789FCF3F793FF079B68612B60D0\n:10711000089B029800936B60099BAB60F3F788FFB4\n:10712000A86128000BB0F0BDF0B5002504001700E1\n:107130000B002E0028002A0091B00791BA4208DA0D\n:107140001968013240185968761899680C336D181F\n:10715000F4E73900F2F790FE390020603000F2F7D2\n:107160008BFE390060602800F2F786FE3A00A060CE\n:1071700007992000FFF7BEFE00260DAB0A9005968A\n:1071800006960393C8235B420493C8235B42029391\n:10719000C8235B4201932200039B23CA23C32268B6\n:1071A000049B9446039A6344136062681D009446EE\n:1071B000029B039A63445360A26808939446019B20\n:1071C000039A6344936007993A0003980993FFF781\n:1071D00091FE0A990B90F2F78BFF002805D0089BCF\n:1071E000099E05930B9B06950A93019BC833019357\n:1071F0001A00C8235B009A42CDD1029BC833029388\n:107200009342C5D1049B029AC83304939342BCD1E4\n:107210002368069A934206D16368059A934202D185\n:10722000A368B34205D0069BA6602360059B6360FC\n:10723000A8E7200011B0F0BD70B504000D001600E5\n:1072400086B003A8FFF770FF200001960095039910\n:10725000049A059BFFF779FE200006B070BD4A68CE\n:1072600010B55310C0180B68D20701D50268D35867\n:10727000984710BD10B50021406C00F06DFF10BDA7\n:1072800010B50400EFF7D2FE2000782101F034F8A9\n:10729000200010BD10B50400EFF7BAFE2000302129\n:1072A00001F02AF8200010BD70B505000400743507\n:1072B00001212800F1F7DEFA22005632137801335B\n:1072C000DBB21370E17901318B4222D10023260019\n:1072D0001370226D54360221525E3388202193426E\n:1072E00005DA200019B25030FFF74DFB0100E279BA\n:1072F00000232800F1F778FA226D33880221525ECC\n:10730000934207DD2300002248331A702000EFF774\n:1073100097FF70BD01333380FBE770B505000600B1\n:10732000826D5C350221525E2B8804007436202168\n:10733000934204DA19B25830FFF725FB010000230D\n:1073400030001A00F1F750FAA26D2B880221525E2C\n:10735000934207DD2300002248331A702000EFF724\n:107360006FFF70BD01332B80FBE773B5040006008F\n:10737000250074363000643500F0B4FB0023EA5E6B\n:107380002100002360310093300000F0BBFB002897\n:1073900004D123006C331B78002B0AD16622A2563D\n:1073A000002A06D02B886C349B182B800123237075\n:1073B00073BD2300002248331A702000EFF740FF0E\n:1073C000F6E7F0B506000021050004006636006E01\n:1073D0007156408864350023EA5E4B1D1B1A20005D\n:1073E00085B06C3003909A4210DC0378002B0DD0EE\n:1073F0001C3D2B78062B02D1083000F073FB0023D4\n:1074000020002B70EFF71CFF05B0F0BD270074378C\n:10741000002A04DD494209B23800F1F72BFA0023B3\n:10742000EA5E2100002360310093380000F06AFB1F\n:107430000023F356002B05D12200483213702000A0\n:10744000EFF7FEFE0123039A137000232A88F356F8\n:107450009B182B80D8E770B5050048352B780400C1\n:10746000002B31D0EEF7DAFE22004C3213881818C8\n:10747000230080B210804A331B88834224D8002323\n:1074800013802B78022B02D12000FFF70DFF2B7801\n:10749000032B02D12000FFF740FF2B78042B02D1F1\n:1074A0002000FFF762FF2B78052B02D02B78062BEC\n:1074B00002D12000FFF785FF2B78072B04D1002392\n:1074C00020002B70EFF7BCFE70BD1FB5036F827AF2\n:1074D0009B68040001339A4208D18188012302226B\n:1074E0006846FFF767FA0023A3721FBDEFF72EFE71\n:1074F0002000FFF7B0FFA37A0133F5E710B58379D9\n:107500000400DB0704D5027B022A02D1FFF7DDFF6E\n:1075100010BD837A016F0133DBB2837289688B42BD\n:1075200001D100238372002A02D12000EFF70EFE62\n:10753000237B012B05D1637300232000A373EFF796\n:10754000E9FC2000FFF787FFE2E7407A7047F0B5DB\n:10755000837987B004000D00DB0703D5002903D031\n:1075600007B0F0BD0029FBD01023216F01278A68E6\n:10757000CB5698180022984204DD3E009E4001330D\n:107580003243F8E71123C868CB56012700211818A9\n:10759000984204DD3E009E4001333143F8E70A4340\n:1075A000002D09D00123002101A8F1F737FE0123A6\n:1075B000A2791343A371D3E72B00290001A8F1F7A7\n:1075C0002DFE290001A800F092FD0122A37993432A\n:1075D000F0E710B50121FFF7BAFF10BD10B500218B\n:1075E000FFF7B5FF10BD10B5743000F07BFA10BD89\n:1075F00010B50400F1F7FEFA00232000237510BD3A\n:107600001FB503AC63700023227000932200023385\n:10761000EFF7B2FE04B010BD1FB50F2401236C4478\n:1076200000932300EFF7B8FE002800D1207804B0C3\n:1076300010BD4A6810B55310C0180B68D20701D5A9\n:107640000268D358984710BD82B030B5050085B0A8\n:10765000089202A80822099300F0C0FE039B029C36\n:107660005A10AD18DB0701D52B681C590AA908224E\n:10767000684600F0B3FE089A099B2800A04705B0B1\n:1076800030BC08BC02B0184770B504000D001822C9\n:10769000002100F0BFFE2900200000F05AFC20006D\n:1076A00070BD0368426880689B1810B518180321E4\n:1076B000F2F7E2FB4B2800DA4B20A9235B0098424B\n:1076C00000DD1800181A0821FF23FF315843F2F794\n:1076D000D3FB10BD13B50C0001A8F0F74DF9210044\n:1076E00001A8F0F75BF913BD73B50D0014001E007F\n:1076F00001A8F0F741F933002A00210001A8F0F7B2\n:1077000083F973BD802307B55B05009101921A6967\n:107710005B696946133B5A430223FFF7E5FF07BD48\n:1077200084B010B504928022039105935205136929\n:10773000516952691139133A5A434B430F99CB1A85\n:10774000D21803A90C23FFF7CFFF10BC08BC04B06C\n:10775000184780235B05F7B51A695B690191113BF6\n:107760005A430092EFF7FCFF0600041E23D030209E\n:1077700000F0CAFD302200210400002500F04AFE7E\n:1077800030273B006B4300990831C918B5420BDA2A\n:107790003A00200000F022FE2100019800F084FE53\n:1077A000002808D00135ECE7B54204D12000302193\n:1077B00000F0A2FD00242000FEBD10B509680431D0\n:1077C000EFF7FEFF10BD29DF704728DF704710B5C7\n:1077D00003685B6A984710BD10B50400F0F7D4F950\n:1077E0002000A42100F088FD200010BD10B5C9B212\n:1077F0000D22FFF711FFC7384342584110BD10B5A5\n:1078000003685B6A984710BD10B50400F0F7FEFAF4\n:1078100020005C2100F070FD200010BD10B5C9B241\n:107820000D22FFF7F9FE5A384342584110BD10B5FA\n:107830000368DB69984710BD10B50400F0F75CFBE6\n:107840002000602100F058FD200010BD10B5C9B225\n:107850000722FFF7E1FEC4384342584110BD10B57E\n:1078600003685B6A984710BD10B50400F0F75EFC32\n:1078700020005C2100F040FD200010BD10B5C9B211\n:107880000F22FFF7C9FE33384342584110BD10B5EF\n:107890000368DB69984710BD10B50400F0F7FAFCE7\n:1078A0002000602100F028FD200010BD10B5C9B2F5\n:1078B0004F22FFF7B1FE40384342584110BD72B627\n:1078C0000B680165002B05D143658365086062B6CE\n:1078D000704713005A6D002AFBD1586583654265D5\n:1078E000F5E7036D002B0FD072B6826D436D002A51\n:1078F0000BD05365436D002B01D0826D9A65002338\n:1079000043658365036562B67047026D1360F1E7F6\n:1079100070B50500EFF30884C36B006C1C1B6B6C27\n:107920001B1A9C420CD91F2320349C43002801D0F1\n:10793000F0F75AFE2000F0F723FE2864001968646F\n:1079400070BD10B5F0F748FDF0F75EFDFAE7F0B551\n:107950008208830703D1031E02D11800F0BD013253\n:10796000541C72B6802621C93606854225D9036883\n:10797000002B02DB9B00C018F7E75B005B08990057\n:1079800041180F68002F08DA8D4206D931007F00B8\n:107990007F08DB1919430160F1E7A342EAD3023201\n:1079A0009A4203D292008218954209D803685B007C\n:1079B0005B08036062B6031DCFE762B60023CCE725\n:1079C000191B80231B06043A0B4313600460F1E784\n:1079D00010B50800F0F7D4FD10BD10B50800F0F7A1\n:1079E00003FE10BD10B5838804009B0703D5182142\n:1079F000806800F081FC200010BD10B5F0F71CFE7F\n:107A0000406810BD10B5F0F717FE006810BD01709A\n:107A100042704360704782B0F0B505920200069351\n:107A200008AB1B7805ACE0CCE0C2002B1ED04A7836\n:107A3000002A05D0069A52424260079A524282605A\n:107A40004A68022A16D0032A1AD0012A04D10268F1\n:107A50004168524201604260012B17D0022B05D1D0\n:107A600043685B42436083685B428360F0BC08BC50\n:107A700002B0184702685242026042685242EAE786\n:107A800042680168524202604160E5E7426803686B\n:107A90000260E7E782B037B50400180007930B785F\n:107AA00006920193089B009303002000FFF7B3FFA9\n:107AB00020003EBC08BC02B0184710B504000068A6\n:107AC000FEF7C0FF200010BD10B50A00002100F035\n:107AD000A1FC10BD10B5040008682060FEF7A8FFE7\n:107AE000200010BD10B500684388818806305943D6\n:107AF000FFF7EAFF10BD10B504000023F0F7FCFD0E\n:107B0000200010BDF0B587B003910CA909780700DB\n:107B1000049101680020029149888C468A426BDA00\n:107B2000029989888B4267DA039C266874880194DD\n:107B30001419009484425FDDB5885C190594844271\n:107B40005ADD824205DA0098604509DD6046009002\n:107B500006E06046801A0090040001988442F6DC3A\n:107B6000002B2FDA059C8C4200DD0C00B01D002696\n:107B7000D11755422940B34202DA019D6E425E435D\n:107B8000029D761886190635111C002A00DA00219C\n:107B9000002209B2934201DD62465A43049B511808\n:107BA0006D18002B1DD000221000A24224DA002301\n:107BB00000998B420BDAF15C002901D0E9540130C5\n:107BC0000133F5E7CC1AAC42D0DD2C00CEE7039BA5\n:107BD00001321B6801935B88F6183B685B88ED18DF\n:107BE000E3E7049B0193019BA34207DBE043009B77\n:107BF000C01720404343180007B0F0BD31002800F3\n:107C0000009A00F0EBFB039B1B6802935B88F6185D\n:107C10003B685B88ED18019B0133E3E710B5040076\n:107C200000F02AFB200010BD51DF704761DF704774\n:107C3000F8B506000F0004001518AC4200D1F8BDDD\n:107C4000BB1B195D2000F0F791FF0134F5E7F0B59B\n:107C500085B01C000AAB0500039116001F78F0F7F1\n:107C6000EBFF01235F4000972300320003992800B7\n:107C700000F0D2FA201A441EA04105B0F0BDF0B5C4\n:107C800085B01C000AAB0500039116001F78F0F7C1\n:107C9000D3FF01235F40009723003200039928009F\n:107CA00000F078FA201A441EA04105B0F0BD8369A7\n:107CB00080681B681840431E9841704710B5043017\n:107CC00000F054FA10BD036810B50400002B05D174\n:107CD000C06800F0F1F901236060236010BD10B5A9\n:107CE00004000068002804D0E06800F0E5F963684B\n:107CF000C01A10BD10B58468FFF7F1FF201810BD41\n:107D000010B50400C06800F0D7F900236060A360DC\n:107D100010BD002310B50360436083600400F1F7D9\n:107D20008DF8E0602000FFF7EBFF200010BD10B5DC\n:107D3000022804D8802300209B014B6010BDF8F777\n:107D400051F80923036001204042F7E710B50120F4\n:107D5000F8F74EF87047704710B5FFF7FCFFFFF7D4\n:107D6000F9FFDAF74BFE10BD10B5002801D000F086\n:107D7000F5F8FEE7704710B50400402100F0BCFAAA\n:107D8000200010BD10B500F071F810BD10B500F066\n:107D900072F810BD10B5040043684269991800F0EC\n:107DA0008FF8E36A002B04D1A369002B00D0984719\n:107DB00010BDA0690028FBD021001C319847F7E7CF\n:107DC00010B5040000F084F80023A361E36210BD45\n:107DD00070B50D00040000F07BF86561206900F0CB\n:107DE0006BF94119200000F06BF870BD7047182343\n:107DF0004A1C5A43594382189268431810B5DB68ED\n:107E0000002A03D1002B00D0984710BD002BFCD0D6\n:107E10001031411818009047F7E710B504004021D1\n:107E200000F06AFA200010BD70B50D0004000430A7\n:107E3000F1F754F9E56370BD10B5043000F050F966\n:107E400010BD70B50C00030011000430221E0AD0D2\n:107E5000182215004D435D19EC604C1C62439B18C1\n:107E600000229A600132F1F785F970BD10B5043037\n:107E700000F029F910BD10B50C000430F1F7C0F97D\n:107E8000200010BDC36A010010B58069002B03D12A\n:107E9000002800D0804710BD0028FCD01C31984736\n:107EA000F9E710B50400F0F799FF2000302100F049\n:107EB00023FA200010BD10B503689B68984710BDD9\n:107EC00010B50A000300011D006900F0BDF810BDE7\n:107ED00010B5011D006900F0D3F810BD70B50D009C\n:107EE00004001600F1F7AEF96B1C07D0002120004A\n:107EF00000F042F93100200000F038F970BD70B593\n:107F0000436804000D00002A0AD0C26813602000F4\n:107F1000012100F031F92900200000F027F970BD9F\n:107F20000269F3E710B50322FFF7D8FF10BD10B5C3\n:107F3000FFF7D4FF10BD70B50D0004001600F1F777\n:107F400081F96B1C04D0320000212000FFF7D7FF1D\n:107F500070BD10B50022FFF7EEFF10BD10B59AB04E\n:107F6000032102A8FFF7F5FF022108A8FFF7F1FFA0\n:107F700001210EA8FFF7EDFF102114A8FFF7E9FF7C\n:107F80009624059B039A20001A60099A0C9B1A609C\n:107F90000F9A129B1A60159A179B01921A6000F0B3\n:107FA0001CF8069B039A20001A60099A0B9B1A6022\n:107FB0000F9A119B01921A60159A189B1A6000F093\n:107FC0000CF8DEE770B50400F0F7DAFF0500F0F713\n:107FD000D7FF401BA042FAD370BDFA2310B59B0017\n:107FE0005843FFF7EFFF10BD0FB4012010B5F7F7AE\n:107FF000FFFE70B504000D0003681B6898476368B6\n:108000001D6070BD036870B5DB6804009847636845\n:108010005A682368002A02D19B68984770BD5B6844\n:108020001568984763682D1A5A68002D07DC916817\n:1080300059601B68002BEAD050689847E7E723682F\n:1080400010681B699847E9E770B50D0072B64B6080\n:10805000002346680A607468002C09D1002B0DD1FA\n:10806000036875601B6910009847AC6062B670BD0C\n:108070002168511AF2D42300A468EDE79D60F4E76B\n:1080800010B572B6426853688B420DD19B6853603D\n:108090000268002B03D19368984762B610BD12693D\n:1080A00018689047F9E71300002BF6D09A688A42C7\n:1080B000F9D18A689A60F0E710B503685B68984761\n:1080C00010BD7047704703681A00FC32D16801295F\n:1080D000FCD10021D160A322D2009858C0B27047D1\n:1080E0000368FC33D8680138434258417047F8B5FB\n:1080F00005000E00002401273B00A3402A691A4214\n:1081000003D060B2310000F0D4F801341F2CF3D159\n:10811000F8BD30B5002902D001290FD030BD0122B1\n:108120000C0013008B4005691D4203D005688B00CD\n:10813000EB181C6001311F29F3D1EFE700230A007F\n:108140009A400469144203D004689A00A21811608E\n:1081500001331F2BF3D1E1E70B00426810B514681F\n:108160000169634019406140116010BD10B500788D\n:1081700040B200F09EF810BD002902D0012900D0C5\n:1081800070470023A022C356D205C133FF339B00A2\n:108190009950F5E7F7B50192B1221E000368491026\n:1081A000D20099508021012289005A5019000024E0\n:1081B0000500FC31CC601A60771E019BA7420BDCE6\n:1081C000D91901222800F1F7DFF9002819D0280079\n:1081D000F1F7A0FA3E0010E0191900222800F1F78B\n:1081E000D3F900280BD02800F1F7C6FA06002800C2\n:1081F000F1F790FA002E00DB26003000FEBD0134BE\n:10820000DAE7089B002BF8D02B68FC339A68002A29\n:10821000FCD000229A60F0E7F8B51700B1221C00EC\n:108220000368D200491099508022002592009D5089\n:10823000012206009A60A54209DB069B002B04D0B0\n:108240003000F1F77FFA002813D120000EE0795DAD\n:108250003000F1F785F9002809D03000F1F75AFA1B\n:108260003000F1F789FA002800DB2800F8BD01355D\n:10827000E1E701204042F9E710B5407840B2F1F75C\n:1082800087FB10BD82B00190C046C046C046C046C4\n:10829000C046C046C046C046C046C046C046C046AE\n:1082A000C046C046019B013B0193002BECD102B0BC\n:1082B0007047A0238000DB05C018E02310B50C2414\n:1082C000DB00C2588900A243C250C2581143C150BA\n:1082D00010BD0023CB565A1C01D1180002E0834286\n:1082E00001D1486870470C31F3E70B0010B501006D\n:1082F0001800F7F769FD10BD10B500F001F810BDCA\n:1083000010B5F0F771F910BD10B5041E00D101349D\n:108310002000F0F735F9002807D1F1F7FFFC00281D\n:1083200001D100F003F88047F2E710BD10B5062038\n:10833000F7F7BAFE0120FFF717FD70B568254A1E52\n:1083400055430E0029007431FFF742FB041E08D08C\n:1083500000212A00016046600C30A060683200F005\n:1083600059F8200070BDF7B5040007000026019100\n:108370004834002C01D13000FEBD6368A56800932D\n:10838000009B013B009301D52468F2E7AB89012BE8\n:1083900008D90E22AB5E013304D029003800019BBE\n:1083A000984706436835EBE7C9B28218904201D17D\n:1083B0000020704703788B42FBD00130F6E730B5E0\n:1083C0000024A24201D1002005E0035D651C0C5D84\n:1083D000A34201D0181B30BD2C00F2E7002310B5DA\n:1083E0009A4200D110BDCC5CC4540133F8E710B5FB\n:1083F000884202D98B18984203D3002307E08B5C94\n:108400008354013AFBD210BDCC5CC45401339A4270\n:10841000FAD1F8E703001218934200D1704719709F\n:108420000133F9E770B504000D001F2904D91623A4\n:1084300003600120404270BD436C002B04D08A00D1\n:108440009B181A68002A08D1200000F015F82A00AD\n:1084500001002000F7F732FEEDE70020012AEAD004\n:10846000511C03D1162301302360E4E700242800C7\n:108470001C6090472000DEE710B5F8F711FB10BD37\n:1084800010B50E23C95EF7F751FF10BDC9B20378CE\n:10849000002B04D08B4200D170470130F7E74B42EC\n:1084A000594149420840F7E702780B78002A03D087\n:1084B000013001319A42F7D0D01A70470023C25CD4\n:1084C0000133002AFBD1581E7047002330B59A4271\n:1084D0000AD0013AC45CCD5CAC4204D1934202D0D4\n:1084E0000133002CF6D1631B180030BD936810B522\n:1084F000013B9360002B04DA9469A34207DB0A294D\n:1085000005D01368581C10601970080010BDF7F7EB\n:108510002DFE0100F9E7F8B506000F001400D5188C\n:10852000AC4201D1002007E021783A003000FFF78B\n:10853000DDFF0134431CF3D1F8BDF7B515000193FD\n:108540008A680B6900900C00934200DA1300220045\n:108550002B6043321278002A01D001332B6023684C\n:108560009B0602D52B6802332B60062723681F4029\n:1085700027D0230043331B785A1E9341226892066A\n:1085800030D42200019943320098089EB047431C22\n:1085900025D0062320682A68E16803400025042BC3\n:1085A00003D18D1AEB43DB171D40A3682269934268\n:1085B00001DD9B1AED180027BD4220D1002010E0FC\n:1085C0000137E3682A689B1ABB42D2DD22000123EF\n:1085D000193201990098089EB047431CF0D1012040\n:1085E0004042FEBD3020E1184331087021005A1C82\n:1085F00045310978A218433202331170C1E72200D5\n:1086000001231A3201990098089EB047431CE6D016\n:108610000137D1E7F8B5C046F8BC08BC9E467047A4\n:10862000F8B5C046F8BC08BC9E4670470000000084\n:10863000000000000000F03F748515D3B0D9EF3F73\n:108640000F89F96C58B5EF3F515B12D00193EF3FA2\n:108650007B517D3CB872EF3FAAB968318754EF3F38\n:108660003862756E7A38EF3FE1DE1FF59D1EEF3FF1\n:1086700015B7310AFE06EF3FCBA93A37A7F1EE3F17\n:108680002234124CA6DEEE3F2D89616008CEEE3F0B\n:10869000272A36D5DABFEE3F824F9D562BB4EE3FE8\n:1086A000295448DD07ABEE3F85553AB07EA4EE3F36\n:1086B000CD3B7F669EA0EE3F745FECE8759FEE3F7A\n:1086C0008701EB7314A1EE3F13CE4C9989A5EE3FC1\n:1086D000DBA02A42E5ACEE3FE5C5CDB037B7EE3FB3\n:1086E00090F0A38291C4EE3F5D253EB203D5EE3FEC\n:1086F000ADD35A999FE8EE3F475EFBF276FFEE3F1F\n:108700009C5285DD9B19EF3F6990EFDC2037EF3FEE\n:1087100087A4FBDC1858EF3F5F9B7B33977CEF3FD0\n:10872000DA90A4A2AFA4EF3F40456E5B76D0EF3F56\n:10873000000000000000E8429423914BF86AAC3F2F\n:10874000F3C4FA50CEBFCE3FD6520CFF422EE63FC6\n:108750000000000000003843FE822B6547154740AB\n:108760009423914BF86ABC3EF3C4FA50CEBF2E3F1F\n:10877000D6520CFF422E963FBEF3F879EC61F63FDD\n:10878000DEAA8C80F77BD5BF3D88AF4AED71F53FFF\n:10879000DB6DC0A7F0BED2BFB010F0F03995F43F4A\n:1087A000673A517FAE1ED0BF8503B8B095C9F33F7D\n:1087B000E92482A6D831CBBFA564880C190DF33FFC\n:1087C0005877C00A4F57C6BFA08E0B7B225EF23F80\n:1087D00000819CC72BAAC1BF3F341A4A4ABBF13F54\n:1087E0005E0E8CCE764EBABFBAE58AF05823F13FC2\n:1087F000CC1C615A3C97B1BFA70099413F95F03F0F\n:108800001E0CE138F452A2BF000000000000F03F4F\n:108810000000000000000000AC479AFD8C60EE3FB5\n:108820008459F25DAAA5AA3FA06A021FB3A4EC3F37\n:10883000B42E36AA535EBC3FE6FC6A573620EB3FA7\n:1088400008DB2077E526C53F2DAAA163D1C2E93F09\n:108850007047220D86C2CB3FED417803E686E83FA4\n:10886000E17EA0C88B05D13F624853F5DC67E73F46\n:1088700009EEB6573004D43FEF39FAFE422EE63FF8\n:108880003483B848A30ED0BF6A0BE00B5B57D53FCB\n:1088900023410AF2FEFFDFBFBEF3F879EC61F63F39\n:1088A0001930965BC6FEDEBF3D88AF4AED71F53FDD\n:1088B000A4FCD432680BDBBFB010F0F03995F43F64\n:1088C0007BB71F0A8B41D7BF8503B8B095C9F33F6B\n:1088D0007BCF6D1AE99DD3BFA564880C190DF33FBA\n:1088E00031B6F2F39B1DD0BFA08E0B7B225EF23F10\n:1088F000F07A3B1B1D7CC9BF3F341A4A4ABBF13F8B\n:108900009F3CAF93E3F9C2BFBAE58AF05823F13F29\n:108910005C8D78BFCB60B9BFA70099413F95F03F10\n:10892000CE5F47B69D6FAABF000000000000F03F79\n:108930000000000000000000AC479AFD8C60EE3F94\n:108940003DF5249FCA38B33FA06A021FB3A4EC3F91\n:10895000BA913854A976C43FE6FC6A573620EB3FFB\n:10896000D2E4C44A0B84CE3F2DAAA163D1C2E93F11\n:108970001C65C6F04506D43FED417803E686E83F26\n:10898000F89F1B2C9C8ED83F624853F5DC67E73F6D\n:10899000CC7BB14EA4E0DC3F0B6E49C91676D23FCA\n:1089A0007AC675A06919D7BFDDBAA76C0AC7DE3FC2\n:1089B000C8F6BE484715E7BF2BB82A654715F73FED\n:1089C0004FBB610567ACDD3F182D4454FB21E93FE7\n:1089D0009BF681D20B73EF3F182D4454FB21F93FD6\n:1089E000E2652F227F2B7A3C075C143326A6813C5C\n:1089F000BDCBF07A8807703C075C143326A6913C07\n:108A0000188A020002000000188A02000400000018\n:108A1000188A020001000000ACD002007E020000B3\n:108A2000A90100000000000000000000000000009C\n:108A30000000000000000000BD0100000000000078\n:108A40000000000000000000000000000000000026\n:108A5000000000000000010000000200000004000F\n:108A6000ACD0020045020000000000000000000041\n:108A70005D0B020065210200000000000000000004\n:108A800000000000000000000000000000000000E6\n:108A9000000000000000000000000000ACD0020058\n:108AA000450200000000000000000000B9040000C2\n:108AB000652102000000000000000000000000002E\n:108AC00000000000000000000000000000000000A6\n:108AD0000000000000000000ACD0020045020000D1\n:108AE0000000000000000000EB0A02006521020007\n:108AF0000000000000000000000000000000000076\n:108B00000000000000000000000000000000000065\n:108B100000000000ACD00200450200000000000090\n:108B200000000000030B02006521020000000000AD\n:108B30000000000000000000000000000000000035\n:108B40000000000000000000000000000000000025\n:108B5000ACD0020045020000000000000000000050\n:108B6000210B02006521020000000000000000004F\n:108B700000000000000000000000000000000000F5\n:108B8000000000000000000000000000ACD0020067\n:108B90004502000000000000000000003F0B020042\n:108BA000652102000000000000000000000000003D\n:108BB00000000000000000000000000000000000B5\n:108BC0000000000000000000ACD0020045020000E0\n:108BD0000000000000000000FD0B02006521020003\n:108BE0000000000000000000000000000000000085\n:108BF0000000000000000000000000000000000075\n:108C000000000000D88A020075070000D8CB0200DF\n:108C100017000000020000001C8C0200860F0000FC\n:108C2000FE0000004E0F0000048C020094D50200EC\n:108C30000C8C020000000000690C0200C88B0200CE\n:108C400000000100C50D0000148B0200E90D0000BA\n:108C5000D88A0200A90D0000508B02002B0E0200E2\n:108C6000508B0200690D0000C88B02000200030057\n:108C7000550E0200D8CB020047000000080000009B\n:108C80008C8C0200148B0200BF0E0200860F0000C5\n:108C9000360C00003E0C0000848C0200460C0000E4\n:108CA0003C8C02004E0C0000688C0200560C000048\n:108CB000588C02005E0C0000488C0200360C00004C\n:108CC000508C0200660C0000608C020094D50200FB\n:108CD000748C0200D88A0200950E0000D8CB0200E6\n:108CE0001F00000003000000EC8C0200860F000053\n:108CF000060100004E0F0000D48C02000E0100009F\n:108D0000208D020000000000398EE33D398E633E65\n:108D1000398EE33EABAA2A3F721C473F0000803FDA\n:108D2000D88A0200950E000094D50200DC8C020067\n:108D3000508B0200F90E00003C8D0200ACD0020006\n:108D4000CC010000B5100000000000000000000091\n:108D5000652102000000000000000000000000008B\n:108D60000000000000000000000000000000000003\n:108D70000000000000000000D49B0200080000007A\n:108D8000C4900200CC900200BC900200E49002006B\n:108D9000DC900200EC900200F4900200D4900200FB\n:108DA000D49B02000C000000249102002C910200D0\n:108DB000349102003C910200449102004C91020067\n:108DC000549102005C910200649102006C910200D7\n:108DD000149102001C91020094D50200E08D020063\n:108DE000D8CB02001F00000003000000F08D02003D\n:108DF000860F0000C616000076140000308D0200B9\n:108E00007E0E000014CC020000000000C100000033\n:108E1000C2000000C3000000C4000000C500000044\n:108E2000C6000000C7000000C8000000C900000024\n:108E3000CA000000CB000000D8CB020047000000B1\n:108E400008000000688E0200148B0200011100006F\n:108E5000508B0200BD110000508B0200ED1100008C\n:108E6000148B020029120000CE050000B08E020013\n:108E7000D6050000B88E0200DE050000C08E02009C\n:108E8000E6050000488E0200EE050000A88E0200F4\n:108E9000F6050000508E0200FE050000588E02000C\n:108EA00006060000608E0200148B0200991100007B\n:108EB000148B0200C5100000148B0200D9100000B2\n:108EC000148B0200ED100000CC8E0200ACD002002A\n:108ED000B7000000000000000000000000000000DB\n:108EE0000000000000000000000000000000000082\n:108EF0000000000000000000000000000000000072\n:108F000000000000388E0200ACD0020044020000D5\n:108F10008D150000FD100200000000007517000014\n:108F200055190000000000000000000005150000B9\n:108F30000000000000000000000000000000000031\n:108F4000E08F0200ACD00200B20200008D150000DC\n:108F5000FD10020000000000751700005519000008\n:108F600000000000000000000515000000000000E7\n:108F7000000000000000000000000000E08F020080\n:108F8000508B020065160000148B0200F9160000D9\n:108F9000148B020015100200C88B02000200FFFFB4\n:108FA000A9100200C88B02000200FFFF1117000089\n:108FB000508B020081160000508B0200E710020067\n:108FC000508B0200DD100200508B020021150000C2\n:108FD000508B02005F110200508B02004F11020003\n:108FE000D8CB02009700000012000000F08F0200B2\n:108FF000F60F0000808F02002E0C0000888F020008\n:109000003E050000908F020076110000B08F020034\n:109010004E110000988F020056110000A48F02002C\n:10902000AE120000B88F0200B6120000C08F02001E\n:10903000CE120000C88F020016130000D08F02006D\n:109040001E130000D88F0200D6140000809002008A\n:109050002E15000088900200461600009090020035\n:109060004E16000098900200DE160000A09002004C\n:10907000FE160000A8900200F60E000070E202004A\n:10908000148B020051170000508B020021170000C2\n:10909000508B020037100200508B0200C5160000F2\n:1090A000508B020023100200C88B02000200FFFF59\n:1090B0009D16000094A202000951815F94A2020053\n:1090C00001047D4494A2020001C4554294A202000E\n:1090D000011C531194A202000967140494A2020017\n:1090E0000184544794A20200094150CC94A202008A\n:1090F0000110957194A2020001447C4194A20200E7\n:109100000160030794A2020009FB93BF94A202002E\n:1091100001AAAAAA94A202000160100094A202006F\n:109120000142100094A202000184100094A20200E7\n:109130000108110094A202000100130094A2020091\n:109140000100700094A202000100100C94A2020021\n:109150000100108494A202000100104294A20200B7\n:109160000100102194A202000100900194A20200CB\n:1091700001001C0094A202000940015594A20200C3\n:1091800001317E4794A202000144454594A20200A9\n:109190000180280294A2020001E6780794A202004E\n:1091A000017F03E594A2020009BFFE5F94A20200C2\n:1091B000014308A794A20200014081E894A20200A2\n:1091C00001EA7F4794A202000140390294A2020002\n:1091D00001C47DA794A20200010A202294A20200E9\n:1091E0000184907394A202000184D17394A20200BE\n:1091F000095ECABD94A202000951111594A2020091\n:10920000097E9DE794A2020001B57E4294A202006D\n:1092100001A5BCF594A202000118FFAF94A20200C0\n:109220000940011794A2020009117CCA94A202000D\n:1092300001AE7EE794A20200010080E894A2020041\n:1092400001632B0794A20200093FC6F894A2020012\n:1092500001C0290794A2020009E4131594A2020098\n:10926000010A104594A202000184104794A2020052\n:1092700001C46D4794A2020001C07D0594A20200C2\n:10928000096194F494A202000180A80F94A2020044\n:1092900001FB3BE794A2020001EE936294A202005C\n:1092A00009C411F794A202000100A22205000000E7\n:1092B0000500000003000000090000000D0400008C\n:1092C000A10A030061FF0000090001000000000086\n:1092D00000000000C88B020008000400E12B000021\n:1092E000ACD002009A010000000000000000000065\n:1092F000000000000000000000000000000000006E\n:10930000000000000000000000000000000000005D\n:10931000C49202000000000024930200148B02009B\n:10932000D12B0000D8CB02004F0000000900000044\n:1093300034930200CE1000001C930200960C000033\n:109340007C930200060F000060A30200160F0000CD\n:10935000D4920200E60C000084930200AE060000E6\n:1093600044A40200CE0B000050A40200C60B000073\n:109370005CA40200B606000068A40200148B020080\n:1093800059FE0000148B0200BD2B0000ACD002007F\n:109390009B01000000000000000000000000000031\n:1093A00000000000000000000000000000000000BD\n:1093B000000000000000000000000000D493020044\n:1093C0000000000024930200C88B0200020002008B\n:1093D000F12B000061FF0000090001000000000007\n:1093E00001000000ACD002001A02000000000000E2\n:1093F0000000000021120200000000000000000038\n:10940000000000000000000000000000000000005C\n:10941000000000000000000000000000000000004C\n:10942000148B0200A7120200148B02008D2D000085\n:10943000508B02000D2D0000D8CB02006700000009\n:109440000C00000068940200D8CB02006700000006\n:109450000C000000C8940200D8CB02006F0000008E\n:109460000D0000002895020036010000D896020089\n:109470002E010000B896020046010000D0960200BE\n:109480003E010000B09602004E010000C8960200A6\n:1094900056010000C09602004E02000007000000C6\n:1094A00056020000030000005E0200000100000000\n:1094B0003E020000289402004602000030940200A0\n:1094C000960100002094020036010000D8960200A8\n:1094D0002E010000B896020046010000D09602005E\n:1094E0004E010000C896020056010000C09602001E\n:1094F0005E010000909502004E020000070000008F\n:1095000056020000030000005E020000010000009F\n:109510003E0200002894020046020000309402003F\n:10952000960100002094020036010000D896020047\n:109530002E010000B896020046010000D0960200FD\n:109540003E010000B09602004E010000C8960200E5\n:1095500056010000C096020066010000A8960200B5\n:109560004E02000007000000560200000300000049\n:109570005E020000010000003E020000289402008C\n:109580004602000030940200960100002094020080\n:10959000148B0200B7120200ACD0020023000000BE\n:1095A00000000000000000000000000000000000BB\n:1095B00000000000000000000000000000000000AB\n:1095C000000000000000000000000000000000009B\n:1095D00038940200ACD0020022000000000000001D\n:1095E000000000000000000000000000000000007B\n:1095F000000000000000000000000000000000006B\n:10960000000000000000000000000000489402007C\n:10961000E096020000030100989502000A0604008B\n:10962000D49502000B1A0500D49502000C14010019\n:10963000D49502000D170100D49502000E1601000A\n:10964000D49502000F150100D495020010100100FE\n:10965000D495020013000900E09602000102010007\n:10966000D4950200141E0900E096020002010100D8\n:109670009895020003040400989502000405040074\n:10968000D495020005110500D4950200060C0400D3\n:10969000D4950200070B0400D495020008120100C3\n:1096A000D4950200090A0400148B0200D92E000090\n:1096B000148B0200592E0000148B0200552D00005F\n:1096C000508B0200B52E0000508B02008D2E000042\n:1096D000508B0200C92D0000508B0200AD2C000001\n:1096E000ACD00200240000000000000000000000D8\n:1096F000000000000000000000000000000000006A\n:109700000000000000000000000000000000000059\n:10971000000000000000000058940200C88B020006\n:1097200006000400ED2F0000F8CF02001C97020095\n:10973000D8CB020017000000020000004097020092\n:109740001612000028970200A6160000509702008B\n:10975000C88B0200060004006D2F0000ACD0020090\n:1097600054020000CD120200D930000000000000B9\n:1097700015A50000EDA5000000000000000000009D\n:1097800000000000000000000000000000000000D9\n:109790000000000030970200000000000000000000\n:1097A00009340000F9330000013400006A020302AA\n:1097B000388D0200A802010200000000508B020058\n:1097C000ED340000148B020085350000148B02007C\n:1097D00007150200508B020091140200508B02000A\n:1097E000ED360000C88B0200040004005B14020088\n:1097F0008C8B020039350000D8CB02005F000000DE\n:109800000B0000000898020016100000BC97020030\n:109810002E0C0000C49702003E050000CC97020009\n:109820000E110000D4970200CE110000DC97020058\n:1098300096120000E49702009E120000F0970200CA\n:10984000D6140000609802002E1500006C980200EB\n:109850004615000074980200C61500007C980200AE\n:10986000C88B02000200020009360000508B020083\n:1098700085360000148B0200B5340000C88B02004E\n:109880000300FFFFAD350000ACD002007302000002\n:10989000A5360000B514020000000000713400007D\n:1098A000953700000000000069380000993400007E\n:1098B00000000000000000000000000000000000A8\n:1098C000F8970200508B0200D5400000860F000080\n:1098D0006E0C0000960B0000109902001E0700009D\n:1098E00004990200060D000018990200760C000091\n:1098F0006C990200D8CB02002F0000000500000088\n:10990000CC980200C88B02000100FFFFF94600005E\n:10991000D88A0200C9440000D88A0200BD3F000076\n:10992000D8CB02000F0000000100000030990200B7\n:109930008E0C0000C4980200109602005896020097\n:10994000689602009001030100000000A5000100DC\n:1099500001000000E2000300388D02008F010300C7\n:10996000388D020094D50200F4980200ACD00200B9\n:109970008E0100000000000011160200000000002F\n:10998000731502005147000000000000094100006B\n:1099900000000000000000007F1502000000000031\n:1099A00000000000209902000600000000000000F6\n:1099B00000000000148B0200B14C0000D8CB020064\n:1099C0001F00000003000000CC990200CE10000030\n:1099D000B4990200760D0000E49902006E160000B2\n:1099E000EC990200508B0200CB170200C88B0200DA\n:1099F000040004007D4C0000ACD0020047020000CF\n:109A0000554B00000000000000000000652102002E\n:109A100000000000000000000000000041210200E2\n:109A2000A14C000000000000000000000000000049\n:109A3000BC990200ACD00200470200000000000008\n:109A400000000000054B000065210200000000003E\n:109A50000000000000000000000000000000000006\n:109A600000000000000000000000000000000000F6\n:109A7000ACD00200670200000000000000000000FF\n:109A800000000000000000000000000000000000D6\n:109A90000000000041210200114D00000000000004\n:109AA000000000000000000000000000D8CB020011\n:109AB0002F00000005000000BC9A0200860F000085\n:109AC0009E0C00002E150000F49A0200EE0C00001F\n:109AD000E49A0200FE0C0000EC9A0200A60C0000C2\n:109AE000889B0200D88A0200E5000100148B020066\n:109AF0002D010100148B020031FF000094D50200FB\n:109B0000AC9A020096010000970100009801000045\n:109B1000990100009E0100009CC6020000000000A8\n:109B200017000000C90E03009CC6020000000000E0\n:109B3000080000007C260300909B02000500000046\n:109B4000689B0200289B0200589B0200789B020041\n:109B5000189B0200049B02009CC60200000000004B\n:109B60000A000000620E03009CC602000000000014\n:109B7000080000007C2603009CC6020000000000D4\n:109B80005B0000006D0E0300D88A02007D4D0000CE\n:109B9000ACD00200D602000007180200000000004E\n:109BA00000000000554E0000ED4E0000DD170200E1\n:109BB000ED4F0000E14D000000000000000000003B\n:109BC000000000000000000000000000D49B020024\n:109BD00000000000ACD00200D6020000FD4D0000E5\n:109BE0006150000000000000554E0000ED4E0000E6\n:109BF00000000000ED4F0000E14D000000000000FB\n:109C0000000000000000000000000000249C020092\n:109C1000508B020049180200C88B020004000400A7\n:109C200035180200D8CB0200170000000200000027\n:109C3000349C02000E110000109C020096120000DD\n:109C4000189C0200ACD00200CC0000000000000014\n:109C50000000000000000000000000000000000004\n:109C600000000000000000000000000000000000F4\n:109C7000000000000000000000000000809C0200C6\n:109C8000D8CB02004700000008000000909C0200B2\n:109C900076060000009D02007E060000089D02007E\n:109CA00086060000D09C02008E060000D89C0200B0\n:109CB000CE050000E89C0200D6050000F09C0200E2\n:109CC000DE050000F89C020096060000E09C020001\n:109CD000148B02006D510000148B0200055100002E\n:109CE000148B020059510000148B02001D5100001A\n:109CF000148B020031510000148B0200455100000A\n:109D0000148B0200E9510000148B0200E1500000A6\n:109D1000449C02001C9D0200C1010000ACD0020066\n:109D20000100000089520000000000000000000057\n:109D30000000000000000000000000000000000023\n:109D40000000000000000000000000000000000013\n:109D50000000000000000000A2000000A7000000BA\n:109D6000A70000007F00000080000000E20000006B\n:109D70003C0000003C00000000000000000000006B\n:109D8000E10000003C0000003B000000000000007B\n:109D900000000000C80000000000000000000000FB\n:109DA0003600000037000000C7000000000000007F\n:109DB000000000003600000036000000D88A0200D3\n:109DC000DB1A0200148B0200D5670000D88A02005B\n:109DD000CD67000094D50200DC9D0200D8CB0200C4\n:109DE000570000000A000000EC9D0200860F0000F2\n:109DF000F60C0000E61600003C9E0200C6000000C3\n:109E000020D30200DE060000CC9D02006E1100008F\n:109E1000BC9D02008E110000C49D02000E140000C3\n:109E2000108A0200FE130000008A020006140000DF\n:109E3000088A02009E16000080A70200D88A02004D\n:109E4000C31A0200D88A0200F16A0000D88A020010\n:109E5000B1690000148B0200856E0000D88A0200F0\n:109E6000E9670000C88B02000100FFFF016B0000E2\n:109E7000D8CB02007F0000000F000000989E020077\n:109E8000D88A020035690000148B0200A56E00001C\n:109E9000D88A0200F5680000860F0000560D000009\n:109EA0004E0F00005C9E0200C60000005C9E020097\n:109EB0005E0D0000649E02006E050000449E0200DC\n:109EC000760500004C9E0200660D0000889E020090\n:109ED0006E0D0000109F0200760D0000549E0200DF\n:109EE0007E0D0000809E0200860D0000189F02007B\n:109EF0008E0D0000909E0200CE0D000005000000B7\n:109F0000D60D000001000000DE0D0000030000007F\n:109F1000D88A0200E91A0200148B0200F71A020024\n:109F200094D50200709E0200C88B02000C0008004D\n:109F300095700000508B0200796F0000ACD00200D9\n:109F4000B000000000000000000000000000000061\n:109F50002D1B02000000000000000000672002002E\n:109F6000E16E0000000000000000000000000000A2\n:109F70000000000000000000D8CB020077020000C3\n:109F80004E000000C49F0200ACD002006702000037\n:109F900000000000000000000000000000000000C1\n:109FA000000000000000000000000000412102004D\n:109FB0003D20020000000000000000000000000042\n:109FC000000000007E020000D0A202008602000015\n:109FD00058A20200A602000050A202009E02000049\n:109FE00068A20200AE0200007CA20200B6020000DD\n:109FF00084A20200BE0200008CA20200C602000081\n:10A0000074A202003E0500003CA2020046050000CA\n:10A0100044A202008E02000060A20200960200002C\n:10A02000349F0200D6020000289F0200DE020000DA\n:10A03000BC910200E6020000C4910200EE020000A2\n:10A04000B4910200FE02000034920200F602000009\n:10A050001C92020006030000749102000E0300002F\n:10A06000B490020016030000FC9002001E030000E2\n:10A070005C92020026030000249202002E030000DE\n:10A080009C91020036030000D49102003E030000C0\n:10A09000A492020046030000F49102004E03000067\n:10A0A00024910200560300002C9102005E03000080\n:10A0B00034910200660300003C9102006E03000030\n:10A0C00044910200760300004C9102007E030000E0\n:10A0D00054910200860300005C9102008E03000090\n:10A0E00064910200960300006C9102009E03000040\n:10A0F00014910200A60300001C910200AE030000B0\n:10A10000C4900200B6030000CC900200BE03000021\n:10A11000BC900200C6030000E4900200CE030000E1\n:10A12000DC900200D6030000EC900200DE03000089\n:10A13000F4900200E6030000D4900200EE03000059\n:10A1400084920200F60300007C920200FE030000ED\n:10A150000C91020006040000849102000E0400002D\n:10A160008C91020016040000449202001E040000BC\n:10A170004C920200260400000C9202002E04000003\n:10A180007C91020036040000DC9102003E040000D5\n:10A19000E491020046040000EC9102004E0400002D\n:10A1A00004920200560400009C9202005E0400002B\n:10A1B000FC910200660400006C920200DE040000C4\n:10A1C000A08D0200D6040000788D02006E0400000D\n:10A1D0008C92020076040000149202007E040000BB\n:10A1E0009491020086040000CC9102008E040000CD\n:10A1F0007492020096040000049102009E04000084\n:10A2000054920200A6040000A4910200AE040000D3\n:10A2100064920200B6040000AC910200BE0400008B\n:10A220002C920200C604000094920200CE040000AA\n:10A230003C92020094A2020001000000148B020074\n:10A24000151F0200C88B02000A000500611E0200F3\n:10A250008C8B02003D710000148B0200BB1E0200BB\n:10A26000148B02006D1F0200C88B0200080004005E\n:10A2700095710000508B0200EF1F0200508B02000E\n:10A28000AD1F0200508B0200C31F0200508B020062\n:10A29000D91F0200ACD002004C000000097200007F\n:10A2A000C97200000000000000000000E575000019\n:10A2B000000000000000000000000000000000009E\n:10A2C000000000000000000000000000789F020075\n:10A2D000148B0200811C0200ACD002006702000057\n:10A2E000000000000000000000000000000000006E\n:10A2F00000000000000000000000000041210200FA\n:10A30000A96F000000000000000000000000000035\n:10A3100000000000ACD00200AC0000000000000013\n:10A32000000000000000000000000000000000002D\n:10A330000000000000000000396F00000000000075\n:10A34000000000000000000000000000000000000D\n:10A350000000000000000000A1760000AD20020017\n:10A36000148B020013210200C88B020002000500BA\n:10A37000297E0000D88A020025810000D88A0200C8\n:10A38000D5800000D88A0200ED800000D88A020043\n:10A3900005810000D88A0200A5220200D88A0200A6\n:10A3A0008F220200C88B02000000010035810000EE\n:10A3B00094D50200B8A30200D8CB020047000000E9\n:10A3C00008000000C8A30200860F0000361200003B\n:10A3D000EE10000074A30200661100007CA30200CE\n:10A3E0008611000084A30200D61200008CA3020094\n:10A3F0001E1400009CA302001614000094A3020087\n:10A4000066160000A4A30200ACD0020034020000D3\n:10A4100000000000E3220200000000000000000035\n:10A4200000000000000000000000000041210200C8\n:10A43000BB2202000000000000000000000000003D\n:10A4400000000000C88B020002000200732402001A\n:10A45000C88B02000400030049870000C88B02007B\n:10A4600002000200A5870000C88B0200040004005F\n:10A470007D240200D8CB02002F0000000500000060\n:10A4800084A40200860F00000E0D0000160D0000CF\n:10A49000E0A40200260D0000ECA402001E0D000046\n:10A4A000D4A402004E0D00003CA50200E10002020F\n:10A4B00040000000A701020248000000A6010202BD\n:10A4C00080000000A501020280000000A801010236\n:10A4D00000000000C88B02000300FFFFDD24020023\n:10A4E000C88B02000300FFFF09250200C88B020091\n:10A4F0000300FFFFF3240200ACD00200670200005B\n:10A50000000000000000000000000000000000004B\n:10A5100000000000000000000000000041210200D7\n:10A52000B9890000000000000000000000000000E9\n:10A530000000000094D5020074A40200148B0200F5\n:10A54000058A0000C88B020000000100E98A0000B3\n:10A55000ACD0020067020000000000000000000014\n:10A5600000000000000000000000000000000000EB\n:10A570000000000041210200272502000000000029\n:10A580000000000000000000000000009CA5020088\n:10A59000000000000000000000000000ACD002003D\n:10A5A00013020000A5960000919500000000000035\n:10A5B00000000000219D0000000000001D9500002B\n:10A5C000518D000000000000E9270200000000009B\n:10A5D00000000000D8A50200D8CB0200B7000000A0\n:10A5E00016000000E8A50200E6110000B0A6020077\n:10A5F0005615000024A7020096120000C8A602000B\n:10A600005E15000030A7020046130000FCA6020001\n:10A61000D615000054A702006E1500003CA70200EA\n:10A62000EE15000060A702009E110000A4A6020023\n:10A63000261600006CA70200D61300000CA702002B\n:10A640007615000048A7020006120000BCA6020012\n:10A650003615000018A702000E11000098A602008F\n:10A66000BE13000004A702000617000078A702002E\n:10A6700006130000ECA60200BE120000D4A60200E1\n:10A68000C6120000DCA6020026130000F4A6020099\n:10A69000F6120000E4A60200C88B020004000400C9\n:10A6A00075930000C88B0200040003002D92000087\n:10A6B000C88B020004000400FF250200C88B0200C2\n:10A6C0000300FFFF85A40000C88B02000400040003\n:10A6D00019260200148B0200DD940000148B020086\n:10A6E000ED940000148B02000D950000148B020005\n:10A6F000CD940000148B0200FD940000508B0200EA\n:10A7000015900000148B020039940000C88B0200E1\n:10A710000200020041260200C88B0200060004006D\n:10A720005D260200C88B0200040004000B26020014\n:10A73000C88B02000400040025260200C88B02001A\n:10A740000200030075A30000C88B02000200020093\n:10A750004F260200C88B02000200030039A200004D\n:10A76000C88B020004000300C9910000C88B0200DE\n:10A770000200020033260200148B020049940000FC\n:10A78000C88B020004000300C1A40000C88B0200B3\n:10A7900002000300212A0200C88B0200020003000D\n:10A7A0002B2A020000000000000000000A00000048\n:10A7B000E80200009B2503009E250300A825030056\n:10A7C000AC250300B0250300B4250300BA2503001F\n:10A7D000C0250300C8250300CC250300EF25030096\n:10A7E000FA25030005260300122603001F26030096\n:10A7F0002B26030037260300422603004C260300C5\n:10A80000542603005B260300632603007126030021\n:10A810007A260300852603008D2603009526030073\n:10A82000A4260300AC260300BA260300C1260300B9\n:10A83000CB260300D9260300E0260300EB26030005\n:10A84000002703001B2703002E2703003D270300DA\n:10A850004D2703005B2703006A2703007E270300C0\n:10A860009F270300C0270300CD270300D62703003E\n:10A87000E3270300EC270300F4270300F927030074\n:10A880000428030011280300182803001F280300D0\n:10A89000262803002D280300342803003B2803004A\n:10A8A00042280300492803005028030057280300CA\n:10A8B0005F280300672803006F2803007728030040\n:10A8C0007F280300872803008F28030097280300B0\n:10A8D0009F280300AA280300B5280300BF2803000F\n:10A8E000CB280300D5280300E5280300ED2803004A\n:10A8F000F5280300FD280300062903000F290300A3\n:10A9000016290300222903002E2903003B290300F6\n:10A910004929030054290300612903006D2903001C\n:10A92000742903007C2903008A290300922903006B\n:10A9300098290300A0290300AB290300B3290300D1\n:10A94000BC290300C8290300D0290300DB29030028\n:10A95000E1290300E7290300EC290300F62903009D\n:10A96000FF290300082A0300112A03001A2A030002\n:10A97000232A03002C2A0300352A03003E2A030061\n:10A98000472A0300512A03005B2A0300652A0300BB\n:10A99000702A03007A2A0300852A03008F2A030005\n:10A9A0009A2A0300A42A0300AF2A0300BA2A03004C\n:10A9B000CA2A0300D72A0300E12A0300F12A030070\n:10A9C000FA2A0300092B0300122B0300182B0300A3\n:10A9D000292B0300382B0300482B0300542B0300C2\n:10A9E0005B2B0300642B03006D2B0300762B03000D\n:10A9F000842B03008B2B0300932B03009E2B03005F\n:10AA0000AA2B0300B82B0300C02B0300C82B0300A4\n:10AA1000D22B0300DA2B0300E52B0300ED2B030000\n:10AA2000FA2B0300072C0300192C03002A2C030027\n:10AA30003D2C0300472C03004E2C0300572C030031\n:10AA40005F2C0300682C0300702C0300772C03009C\n:10AA50007E2C0300852C03008C2C0300942C030017\n:10AA60009B2C0300A92C0300BB2C0300C02C03006B\n:10AA7000C62C0300CE2C0300D72C0300E82C0300C7\n:10AA8000F32C0300FE2C03000B2D0300192D0300F3\n:10AA9000272D03003F2D03004F2D0300572D0300EA\n:10AAA0005F2D0300672D0300742D0300862D030026\n:10AAB000932D0300A12D0300B02D0300B52D03003D\n:10AAC000BC2D0300C32D0300CB2D0300D52D0300A7\n:10AAD000E12D0300EC2D0300F12D0300F62D030002\n:10AAE000FB2D0300032E0300152E03001F2E030071\n:10AAF000292E0300392E0300452E0300592E030092\n:10AB00006E2E03007C2E0300822E0300892E03008C\n:10AB1000912E0300982E03009C2E0300A22E03000A\n:10AB2000AB2E0300B22E0300B82E0300BE2E03008E\n:10AB3000C62E0300D22E0300DD2E0300E52E0300F7\n:10AB4000EB2E0300F22E0300FE2E03000A2F03005B\n:10AB5000102F0300182F0300202F03002A2F0300BB\n:10AB6000352F03003D2F0300452F0300512F030015\n:10AB70005F2F0300692F0300702F03007C2F030059\n:10AB8000862F03008D2F0300932F0300A02F0300B7\n:10AB9000AB2F0300B52F0300C12F0300CA2F030002\n:10ABA000D52F0300E12F0300EB2F0300EF2F03004D\n:10ABB000F42F0300FB2F03000230030007300300D3\n:10ABC0000C300300133003001A3003002030030060\n:10ABD000263003002C3003003230030036300300EF\n:10ABE0003D30030042300300473003004E30030085\n:10ABF000553003005A300300613003006730030012\n:10AC00006D30030071300300763003007C300300A8\n:10AC1000843003008C300300933003009A3003002B\n:10AC2000A1300300A6300300AD300300B4300300B0\n:10AC3000B9300300C0300300C7300300CE3003003A\n:10AC4000D3300300DA300300E1300300E8300300C2\n:10AC5000EF300300F5300300FB3003000131030047\n:10AC6000073103000D3103001131030016310300D9\n:10AC70001E310300253103002C3103003131030064\n:10AC8000363103003D3103004231030049310300F6\n:10AC900050310300563103005C3103006231030080\n:10ACA000683103006E310300743103007A31030010\n:10ACB0007E310300853103008A31030091310300A6\n:10ACC000963103009D310300A3310300A931030035\n:10ACD000AF310300B5310300BB310300C1310300C4\n:10ACE000C7310300CE310300D2310300D731030056\n:10ACF000DD310300E5310300EC310300F3310300E3\n:10AD0000FA310300FF310300053203000B32030068\n:10AD100011320300173203001D32030021320300F9\n:10AD2000263203002D320300343203003B3203008D\n:10AD300040320300473203004E3203005332030017\n:10AD40005A32030060320300663203006C320300A3\n:10AD500072320300763203007D3203008332030037\n:10AD6000893203008F3203009E320300A5320300B4\n:10AD7000AC320300B7320300BE320300C732030017\n:10AD8000CE320300D5320300DA320300DF32030093\n:10AD9000E5320300EF320300FA320300053303000B\n:10ADA0000B33030012330300203303002633030068\n:10ADB0002D330300343303003B33030042330300DD\n:10ADC000533303005E330300693303007133030020\n:10ADD0007A330300883303008F3303009B3303006F\n:10ADE000A5330300AE330300B8330300C0330300C0\n:10ADF000CD330300DA330300E3330300EE33030003\n:10AE0000F5330300FA330300023403001034030067\n:10AE10001A340300253403002F34030039340300AF\n:10AE2000433403004C3403005734030061340300FF\n:10AE30006B340300723403007F3403008834030052\n:10AE40008E3403009A340300A1340300AA340300B3\n:10AE5000B2340300BA340300C2340300CE3403001A\n:10AE6000D6340300DF340300EC340300FC34030069\n:10AE7000033503000D35030022350300313503008F\n:10AE80003A350300423503004C35030054350300C6\n:10AE9000603503006A350300723503008135030015\n:10AEA0008E3503009B350300AD350300BE3503002E\n:10AEB000CF350300DF350300EA350300F535030025\n:10AEC00001360300113603001F360300323603003B\n:10AED0003F3603004A3603005E3603006C3603003B\n:10AEE0007A3603008636030091360300A736030046\n:10AEF000B1360300BF360300CF360300DE36030051\n:10AF0000EE360300FC360300093703001537030053\n:10AF10002437030031370300453703004F37030060\n:10AF20005A3703006C370300773703008337030079\n:10AF300092370300A0370300AC370300B537030096\n:10AF4000C0370300C9370300D7370300E5370300D4\n:10AF5000EE370300F9370300063803001138030009\n:10AF60001C380300253803002F380300383803004D\n:10AF700043380300503803005B3803006538030092\n:10AF8000703803007B3803008A3803009B380300C5\n:10AF9000A6380300B5380300C3380300CD380300DA\n:10AFA000D7380300E7380300ED380300F438030016\n:10AFB000FA38030002390300083903000F3903008F\n:10AFC000183903001F390300273903002E39030005\n:10AFD0003A39030040390300473903004F39030071\n:10AFE000553903005A3903006139030070390300F1\n:10AFF0007B390300803903008C3903009739030043\n:10B00000A3390300AB390300B6390300C13903008B\n:10B01000C8390300CE390300DC390300E4390300EA\n:10B02000EE390300F4390300FA390300043A03004F\n:10B030000C3A0300173A03001D3A0300253A0300B7\n:10B040002D3A0300353A03003C3A0300463A030028\n:10B05000503A0300573A0300633A0300703A030082\n:10B06000843A03008A3A0300943A0300A23A0300A8\n:10B07000AC3A0300B53A0300BE3A0300CB3A0300F2\n:10B08000D13A0300DC3A0300E83A0300EF3A030048\n:10B09000F63A0300FD3A0300033B03000C3B0300B8\n:10B0A000133B03001C3B0300233B03002B3B03002B\n:10B0B000333B03003A3B0300433B03004B3B03009D\n:10B0C000583B0300633B03006F3B03007A3B0300E4\n:10B0D0007F3B03008B3B0300913B03009B3B030042\n:10B0E000A53B0300AF3B0300B63B0300C23B03009C\n:10B0F000D03B0300D63B0300DB3B0300EC3B0300EB\n:10B10000F43B0300FD3B0300033C0300123C03003F\n:10B11000283C0300323C03003C3C0300493C030054\n:10B12000553C0300603C0300683C0300753C030091\n:10B130007F3C0300873C0300913C03009E3C0300DE\n:10B14000A93C0300B63C0300C03C0300C83C03001C\n:10B15000CF3C0300DA3C0300E13C0300EC3C03007D\n:10B16000F23C0300F93C0300013D0300093D0300EC\n:10B170000F3D0300163D03001E3D0300253D030067\n:10B180002B3D0300323D03003B3D0300443D0300E3\n:10B190004A3D0300523D0300583D03005E3D03005D\n:10B1A000673D03006D3D0300743D03007A3D0300DD\n:10B1B000803D0300883D0300903D0300973D030060\n:10B1C000A33D0300AE3D0300B93D0300BF3D0300B6\n:10B1D000C63D0300CF3D0300D93D0300DF3D030022\n:10B1E000E63D0300ED3D0300F53D0300FB3D03009C\n:10B1F000083E03000F3E0300153E03001E3E030001\n:10B20000243E03002B3E0300373E03003D3E030077\n:10B21000443E0300503E0300553E0300603E0300E1\n:10B22000663E0300703E0300763E03007E3E030050\n:10B23000903E0300973E0300A33E0300AD3E030093\n:10B24000B53E0300BC3E0300CF3E0300D83E0300E2\n:10B25000E23E0300E93E0300F33E0300FE3E03002E\n:10B26000063F03000F3F0300173F0300203F03008A\n:10B27000293F0300303F0300373F03003D3F0300F9\n:10B28000433F03004D3F03005A3F0300603F03006C\n:10B290006B3F0300763F03007D3F0300863F0300C2\n:10B2A0008E3F0300953F0300A13F0300AE3F030024\n:10B2B000BD3F0300C43F0300CA3F0300D13F03006A\n:10B2C000D93F0300E03F0300E83F0300EE3F0300E7\n:10B2D000F43F0300FC3F0300134003003140030030\n:10B2E000374003003D400300494003005140030044\n:10B2F0005D4003006A400300754003008040030086\n:10B300008740030097400300A2400300AA400300C7\n:10B31000B2400300B9400300C8400300CF4003001F\n:10B32000D6400300DE400300EA400300F340030080\n:10B33000014103000A410300124103001C410300C4\n:10B34000244103002C410300354103004441030024\n:10B350004A410300ACD002003D020000B9AB00003E\n:10B3600019AC00000000000059AB00009D2B02004A\n:10B3700000000000000000000000000000000000CD\n:10B3800000000000000000000000000000000000BD\n:10B39000C88B02000400FFFF59AE0000148B0200AE\n:10B3A00069B40000148B02007DB30000148B02000E\n:10B3B000CDAE0000148B0200FDAE0000148B020025\n:10B3C000B92B0200148B02002DAF0000148B020079\n:10B3D00049AF0000C88B020000000100B5B40000B6\n:10B3E000508B0200CD2B0200C88B0200040003002A\n:10B3F00019B30000D88A020041AE0000508B020051\n:10B40000F1B20000148B02002B2C0200148B0200FE\n:10B41000DB2B0200148B020023210200C88B0200E8\n:10B4200000000100CDB30000148B0200AF2B02001E\n:10B43000148B0200057D0000D88A02004DAE00008A\n:10B44000C88B02000300FFFF372C0200C88B0200EC\n:10B450000300FFFF412C0200148B020029B40000FE\n:10B46000148B0200E92B0200148B0200C9B000000B\n:10B47000C88B02000400030045B40000C88B020022\n:10B480000100FFFF5DB10000148B020011B200004B\n:10B49000C88B0200020002003DB200008C8B02004B\n:10B4A0005DB30000C88B02000300FFFFB5B20000CF\n:10B4B000C88B020002000200F72B020094D50200A4\n:10B4C000C4B40200D8CB0200D70200005A0000002A\n:10B4D000D4B40200860F000076100000DE0E0000DB\n:10B4E00090B30200460F000068A30200AE0F0000F8\n:10B4F0009CB302006610000078DE02009E1000007F\n:10B500009CA50200861000008CCD02003E110000B8\n:10B51000D8CB0200A611000008A40200DE11000032\n:10B5200034E50200EE11000054B3020026120000C0\n:10B53000088F0200A61200005C9702009E13000014\n:10B5400088980200DE13000024CA02008E14000056\n:10B5500094D702001615000028E402004E150000E2\n:10B5600040B8020096150000448F02004E0500000E\n:10B57000D0D70200061600009CC602003E1600004E\n:10B5800070D00200B6160000D49B0200BE16000068\n:10B59000ACD002003E170000A4B70200C6100000A5\n:10B5A000F8CF0200F615000034D002000E0E0000A5\n:10B5B000149D0200E60F0000A4B302000610000074\n:10B5C000ACB30200B60B0000B4B30200561000008A\n:10B5D000BCB30200AE100000C4B30200BE100000F5\n:10B5E000CCB302005E110000D4B302007E11000053\n:10B5F000E0B30200AE1100008CA70200B6110000FB\n:10B6000098A702004E120000E8B302009E15000049\n:10B610009CB4020056120000F4B302005E12000057\n:10B62000FCB302006612000004B402009E00000099\n:10B6300044A502007E1200000CB402008612000035\n:10B6400014B40200A60000001CB40200EE120000B8\n:10B65000E8CF02000E130000F0CF02003613000006\n:10B6600028B402009613000030B40200AE130000AC\n:10B6700038B40200EE13000040B402002E140000A3\n:10B680004CB402007E14000058B40200961400006E\n:10B6900060B40200AE14000068B40200E6140000BA\n:10B6A00070B40200EE1400007CB402003E150000ED\n:10B6B00088B402006615000090B40200CE150000A8\n:10B6C000A4B4020036160000B0B40200FE0D000063\n:10B6D00004D90200E60D000050D80200EE0D000073\n:10B6E0008CD80200F60D0000C8D80200060E00003B\n:10B6F00040D90200160E00007CD902001E0E000088\n:10B70000B8D90200260E0000F4D902002E0E000067\n:10B7100030DA0200360E00006CDA0200460E00003D\n:10B72000E4DA02003E0E0000A8DA02004E0E00002D\n:10B7300020DB0200560E00005CDB02005E0E000003\n:10B7400098DB02006E0E0000D4DB0200760E0000D3\n:10B7500010DC0200860E00004CDC02008E0E0000A1\n:10B7600088DC0200960E0000C4DC02009E0E000081\n:10B7700000DD0200A60E00003CDD0200AE0E00005F\n:10B7800078DD0200B60E0000B4DD0200BE0E00003F\n:10B79000F0DD0200C60E00002CDE02009E14000048\n:10B7A000C8930200ACD00200E702000000000000D5\n:10B7B00075B500000000000000000000000000005F\n:10B7C0000000000000000000412102004B2C02009C\n:10B7D0000000000000000000000000000000000069\n:10B7E00000000000000000002D0000008B2C020073\n:10B7F000250000008B2C0200260000008B2C02008C\n:10B800009F000000DDB500002F000000DDB5000046\n:10B81000DE000000DDB500008D0100008B2C020071\n:10B82000300000008B2C0200D4000000DDB50000C9\n:10B830007D010000DDB50000280000008D2C020015\n:10B84000ACD00200A902000000000000B52C0200EC\n:10B8500000000000000000000000000000000000E8\n:10B860000000000041210200972C020000000000AF\n:10B870000000000000000000000000000CD30200E7\n:10B880003742030014D302006842030030D30200A1\n:10B89000CD42030028D302004B43030038D30200FB\n:10B8A00090430300C88E0200C4430300B08E020020\n:10B8B0001B440300B88E020053440300C08E0200F4\n:10B8C0008B44030004E502001945030010E5020063\n:10B8D0006545030024E50200B14503002CE50200A4\n:10B8E000F34503001CE502006E460300009D0200C4\n:10B8F000D2460300109D02000A470300089D020083\n:10B90000AD470300D09C020039480300D89C0200D8\n:10B91000CE480300E89C020031490300F09C02007D\n:10B92000DD490300F89C0200894A0300E09C020004\n:10B93000354B0300180000206A4B030090C602003C\n:10B94000884B030078C60200354C030048C602004D\n:10B95000CE4C030050C60200F94C030084C602001E\n:10B960008A4D030068C60200134E030060C6020041\n:10B97000354E030058C60200594E030070C602003F\n:10B98000A74E030010960200024F030058960200D3\n:10B99000314F030068960200604F0300709602006A\n:10B9A0008F4F030078960200BE4F0300809602007E\n:10B9B000ED4F0300889602001C5003009096020091\n:10B9C0004B500300989602007A500300A0960200A4\n:10B9D000A950030018960200D850030020960200D8\n:10B9E00008510300289602003851030030960200E7\n:10B9F00068510300389602009851030040960200F7\n:10BA0000C851030048960200F85103005096020006\n:10BA1000285203006096020058520300D896020094\n:10BA200088520300B8960200E6520300D096020046\n:10BA300030530300B096020086530300A89602001C\n:10BA4000FA53030034C90200585403003CC90200F1\n:10BA5000F654030048C902004155030028C90200FA\n:10BA60009755030094A20200D9550300D0A202000A\n:10BA7000CD56030058A20200F756030050A2020060\n:10BA80002257030068A20200B15703007CA2020003\n:10BA90003C58030084A202008D5803008CA20200CF\n:10BAA000E058030074A20200265903003CA20200E1\n:10BAB0007059030044A20200A359030060A20200CF\n:10BAC000585A030050000020E35A03001CD402001F\n:10BAD000285B030014D40200BD5B030044A40200F1\n:10BAE000255C03005CA40200765C030050A4020005\n:10BAF000B95C030068A40200395D03005400002013\n:10BB0000855D030000E40200E65D030018E4020026\n:10BB1000995E03000CE40200E15E030020E40200F1\n:10BB2000095F030058CF0200D65F030040CF020038\n:10BB30002560030020CF0200946003002CCF020098\n:10BB40003461030018CF0200C56103004CCF02002E\n:10BB50001E62030038CF0200486203002C8C0200F2\n:10BB600088620300B8D40200A3620300B0D40200CC\n:10BB700027630300288D020073630300208D0200F9\n:10BB8000AC630300112F0200112F02000DC400004E\n:10BB900029320200112F0200B9BE000079300200E4\n:10BBA000C9B60000112F0200D1C80000A5C80000CE\n:10BBB000FDCA0000012F0200E3350200B9B6000003\n:10BBC0009D3B020035C80000A9C70000CDCE000093\n:10BBD000753A0200CB390200CDBF000033340200B9\n:10BBE00009330200112F020071390200512E0200A8\n:10BBF000512E02002131020017310200CD30020027\n:10BC00002B3102000DB90000C3300200B930020030\n:10BC1000AF30020061B8000061B8000061B80000F8\n:10BC2000BD350200272F02002DCF00005F35020036\n:10BC3000CD340200B5CB00009D330200F12E02008E\n:10BC4000632D02007930020031300200153002000D\n:10BC500079300200D32E02008733020041CB00006E\n:10BC60003F320200D49B0200020000008608000060\n:10BC70001E0A0000D49B020008000000E608000035\n:10BC80003E0B0000C60900006E0900003E0B0000DC\n:10BC90009E0800003E0B0000960A0000D49B0200A4\n:10BCA00019000000060900003E090000D609000046\n:10BCB00056090000660A0000560A00004E090000FE\n:10BCC0003E090000D609000056090000CE0A000017\n:10BCD000C60A00004E0900003E09000036090000B7\n:10BCE00016080000660A0000F60900006609000058\n:10BCF00006080000FE0700003E080000660A00007B\n:10BD0000CE0A0000C60A0000D49B020030000000EA\n:10BD1000D6080000F6090000CE0A0000EE07000079\n:10BD2000F6070000EE070000CE0A0000F60900004A\n:10BD3000D6080000F6090000CE0A0000EE07000059\n:10BD4000F6070000EE070000CE0A0000F60900002A\n:10BD5000660A0000EE070000DE0800006609000029\n:10BD60006E090000660900009E0800000E08000031\n:10BD7000D6080000F6090000CE0A0000EE07000019\n:10BD8000F6070000EE070000CE0A0000F6090000EA\n:10BD9000CE0A00004E0800008E090000660A00006E\n:10BDA0009E0A0000EE070000DE0800006E09000099\n:10BDB000D6080000F6090000CE0A0000F6090000CF\n:10BDC000CE0A0000660A0000F609000066090000BD\n:10BDD000D49B0200280000001E0800004E0800004E\n:10BDE0001609000066080000360800003E0B00003F\n:10BDF0002E0800004E08000016090000660800002A\n:10BE0000360800003E0B000036080000160A00004D\n:10BE10006E090000F6090000660A0000F60900003D\n:10BE20006E090000F60900006E0800001609000007\n:10BE3000660900009E080000760800003E0B000026\n:10BE40008E08000016090000660900009E08000028\n:10BE5000760800003E0B000096080000160A00005D\n:10BE60006E090000F6090000660A0000F6090000ED\n:10BE70006E090000F6090000D49B02000A000000D1\n:10BE8000460B0000CE0A0000CE0A0000CE0A0000D9\n:10BE90005E0A0000560B0000660A0000660A0000F9\n:10BEA000660A0000EE090000D49B020012000000A8\n:10BEB0009E0900006E090000F60900002609000036\n:10BEC0000E0A0000260900000E0A00002E090000DC\n:10BED0003E090000660900006E090000F609000036\n:10BEE0009E080000660900002E0A00006E0800008F\n:10BEF000B609000056090000D49B02000B000000A8\n:10BF0000EE0800004E0900003E090000560900003E\n:10BF100086090000BE090000CE0900003E090000AD\n:10BF20004E09000056080000EE080000D49B0200F5\n:10BF300012000000D60800009E0800006E090000F4\n:10BF40003E090000AE0A00003E090000AE0A0000F3\n:10BF50006E0A0000CE0A00009E0800009E08000045\n:10BF6000CE0A00003E0900008E0A00003E090000D3\n:10BF70008E0A0000660A00006E090000D49B0200D1\n:10BF800005000000160B0000660A0000F60900001C\n:10BF9000660900009E080000D49B02000500000016\n:10BFA0001E09000066090000F6090000660A00008C\n:10BFB000CE0A0000D49B02006A0000007E0A000046\n:10BFC000D60A0000C60800007E0900006E080000C6\n:10BFD000AE090000A6080000760800004E08000028\n:10BFE000AE08000066090000BE090000A6080000B7\n:10BFF0006E080000B60800006E0900006E0A00001E\n:10C00000D60A00006E0900006E0A0000A6080000B3\n:10C010006609000066080000AE080000660800001F\n:10C02000760900006E0A0000DE0A00006E090000BA\n:10C030006E0A0000A60800006E09000066080000F5\n:10C04000A60900006E09000066090000A6080000AD\n:10C0500066080000AE080000C60900006E08000077\n:10C06000AE0800006E0900006E0A0000A60800007D\n:10C0700066090000A608000066080000BE0800006F\n:10C0800066080000AE08000066080000860A00008E\n:10C09000D60A000096080000860A0000D60A0000B2\n:10C0A0004E080000AE0800006E090000660800009F\n:10C0B000160A00006E090000F60900006E0A000072\n:10C0C000760800004E080000860A0000D60A00002C\n:10C0D0004E0800006E0A0000160A00006E090000FB\n:10C0E000A6080000660800006E0A00006E09000045\n:10C0F000F60900006E0A000096080000860A00009B\n:10C10000D60A000096080000860A0000D60A000041\n:10C110004E0800004E080000AE0800006E09000046\n:10C12000660800006E0A0000D60A00006E0A0000D1\n:10C13000960800008E080000F60700004E08000078\n:10C140006E0A0000D60A00004E080000160A000021\n:10C150006E090000F60900006E0A00007608000073\n:10C16000AE080000D49B02001E000000060A00007A\n:10C17000F6090000660A0000CE0A0000CE0A0000A0\n:10C18000660A0000F6090000660900009E0800002B\n:10C190009E08000066090000F60900004E0A000033\n:10C1A000C6090000EE0900003E0A0000F609000082\n:10C1B000660A0000CE0A0000CE0A0000660A0000EF\n:10C1C000F6090000660900009E0800009E080000B5\n:10C1D00066090000F6090000E609000046090000B3\n:10C1E0005E090000D49B020006000000160B000050\n:10C1F0006E0900009E080000060B00008E0800007B\n:10C200002E090000D49B020006000000FE0A000078\n:10C2100016090000F6090000260B0000260A00009F\n:10C220002E0B0000D49B020040000000FE0800001E\n:10C23000F6090000CE0A000016090000F609000009\n:10C24000F60A000016090000F6090000F6080000D2\n:10C25000F6090000CE0A000016090000F6090000E9\n:10C26000F60A000016090000F6090000F6080000B2\n:10C2700066090000CE0A0000A6090000660A000058\n:10C28000F60A0000A6090000660A0000F608000091\n:10C2900066090000CE0A0000A6090000660A000038\n:10C2A000F60A0000A6090000660A00005E08000009\n:10C2B00096090000CE0A0000A6090000660A0000E8\n:10C2C000F60A0000A6090000660A00005E080000E9\n:10C2D00096090000CE0A0000A6090000660A0000C8\n:10C2E000F60A0000A6090000660A0000F608000031\n:10C2F000F6090000CE0A000016090000F609000049\n:10C30000F60A000016090000F6090000F608000011\n:10C31000F6090000CE0A000016090000F609000028\n:10C32000F60A000016090000F6090000D49B02007E\n:10C330000900000006090000EE0A00006E0A000075\n:10C34000CE0A0000E60A0000CE0A00003E0B000004\n:10C350004E080000F6080000D49B02004F000000C9\n:10C36000AE090000660800003E0B00004E08000009\n:10C370004E080000F60700004E0800000E0B0000FB\n:10C380003E0B000066090000660900003E0B00003D\n:10C3900066080000160900003E0B00009E08000021\n:10C3A0009E0800003E0B000066090000460A0000DF\n:10C3B0003E090000160800003E0B0000EE070000DA\n:10C3C000EE070000D60A0000EE070000760A000023\n:10C3D0003E0B0000F6090000F60900003E0B0000CD\n:10C3E0009E080000660800003E0B00004E0800009A\n:10C3F0004E0800003E0B000016090000DE09000098\n:10C40000BE090000660800003E0B00004E08000058\n:10C410004E080000F60700004E0800007E080000ED\n:10C420003E0B0000CE0A0000CE0A00003E0B0000CA\n:10C4300066090000A60800003E0B0000EE070000A1\n:10C44000EE0700003E0B0000EE070000460800006B\n:10C450001E0B00008E0A00002E080000EE070000F0\n:10C46000D60A0000EE0700002E0A00002E08000089\n:10C47000EE070000D60A0000EE0700006609000083\n:10C480003E0B0000A6080000660900003E0B0000FD\n:10C49000A6080000C60900005E0B0000D49B020045\n:10C4A0000D000000FE080000660900002E0A0000D2\n:10C4B000CE0A0000BE090000F6090000AE0A000026\n:10C4C000EE070000260A0000660A0000260B0000A6\n:10C4D0004E08000036090000D49B0200070000004F\n:10C4E000FE0900004E0B0000860900004E0B000004\n:10C4F000D60900004E0B0000CE080000D49B0200BD\n:10C50000120000000E090000B60A0000A60A000092\n:10C51000C60A0000560900002E0B0000260A000083\n:10C52000C60A000056090000B60A00002E080000E6\n:10C530003609000026080000A60A0000BE0A000016\n:10C54000360A0000A60A0000360B000005000000B5\n:10C550000500000003000000090000000D040000B9\n:10C56000826C0300ACD002009C00000000000000C0\n:10C5700000000000000000000000000000000000BB\n:10C5800000000000000000000000000000000000AB\n:10C59000000000000000000000000000A0C5020034\n:10C5A000D8CB02004F00000009000000B0C5020017\n:10C5B000A602000050C602009E02000084C60200CF\n:10C5C0000605000090C602000E05000078C60200B5\n:10C5D0002E0C000048C602006E05000068C602006E\n:10C5E0007605000060C602007E05000058C6020005\n:10C5F0002615000070C602004E0003010000000076\n:10C60000A20002009001000085010102000000006C\n:10C61000A500010201000000A600010200000000C8\n:10C62000AA00030100000000A20002009600000022\n:10C63000A5000102010000005900010200000000F5\n:10C64000A600010200000000148B020079DA00004D\n:10C650008C8B0200B73D0200148B020085D40000D1\n:10C66000148B020099D40000148B020011DB00002F\n:10C67000148B0200F5D40000C88B02000300FFFFFA\n:10C68000C9D90000C88B020008000400C1DA00000C\n:10C69000C88B02000300FFFFC9D80000ACD0020025\n:10C6A000C0020000E1DC0000698F00000000000013\n:10C6B000A9DC0000219D000000000000A9DE0000B0\n:10C6C0008DDC000000000000E927020000000000EF\n:10C6D00000000000D8C60200D8CB0200B70000005E\n:10C6E00016000000E8C60200E6110000B0A6020035\n:10C6F0005615000024A7020096120000C8A60200EA\n:10C700005E15000030A7020046130000FCA60200E0\n:10C71000D615000054A702006E1500003CA70200C9\n:10C72000EE15000060A702009E110000A4A6020002\n:10C73000261600006CA70200D61300000CA702000A\n:10C740007615000048A7020006120000BCA60200F1\n:10C750003615000018A702000E11000098A602006E\n:10C76000BE13000004A702000617000078A702000D\n:10C7700006130000ECA60200BE120000D4A60200C0\n:10C78000C6120000DCA6020026130000F4A6020078\n:10C79000F6120000E4A60200148B020095DF0000F0\n:10C7A000148B020075DF0000148B0200CDDF000047\n:10C7B000508B0200ADDF0000508B02009B3F020057\n:10C7C000D88A0200E5DF0000D88A0200FDDF000001\n:10C7D000F53F0200E53F0200E1E60000B73F02003E\n:10C7E00029E200003A70030025F7020040700300C0\n:10C7F000457003004F700300537003005670030030\n:10C800005D7003007A730300637003004B810300C3\n:10C810006C70030070700300757003007A70030081\n:10C820008170030089700300FC400300B2690300BB\n:10C8300072700300CD1F03002B270300BE260300E8\n:10C840008D700300146A0300947003008A70030063\n:10C85000102E0300770F0300987003009F700300F1\n:10C86000A3700300D73A0300A9700300ACD0020004\n:10C87000D3000000000000000000000000000000E5\n:10C8800000000000000000000000000000000000A8\n:10C890000000000000000000000000000000000098\n:10C8A00000000000B0C80200148B0200C1ED0000BF\n:10C8B000D8CB02002700000004000000C0C802001E\n:10C8C000760B000028C902007E150000A8C80200EF\n:10C8D000AE0600003CC90200B606000048C90200CE\n:10C8E000DB000200A0860100DC000300388D02009E\n:10C8F000DD000300388D0200D700020100000000B7\n:10C90000D800020100000000DA0001000000000071\n:10C91000D700020100000000D90003010000000060\n:10C92000DA00010000000000C88B02000300FFFFD6\n:10C93000B9EC00006CC802000C2A0020C88B020071\n:10C940000300FFFF0DED0000C88B02000300FFFF96\n:10C9500069ED0000ACD00200010000000000000002\n:10C9600000000000000000000000000000000000C7\n:10C9700000000000000000000000000000000000B7\n:10C9800000000000000000000000000000000000A7\n:10C99000148B020051EE0000148B020085EF0000A2\n:10C9A000D8CB02001700000002000000C0C902003E\n:10C9B000D8CB02001700000002000000D0C902001E\n:10C9C0002E0C000098C902000605000090C9020064\n:10C9D000860F00001E0C0000260C0000E8C90200B3\n:10C9E00094D50200B0C90200ACD00200840100005E\n:10C9F0000000000011EF00000000000045420200AE\n:10CA0000000000000000000079EE000000000000BF\n:10CA10000000000000000000000000000000000016\n:10CA2000A0C90200ACD002007B02000000000000A0\n:10CA300001F0000000000000000000000000000005\n:10CA400000000000000000004121020055420200E9\n:10CA500000000000000000000000000000000000D6\n:10CA6000148B0200A9F00000148B02005F43020047\n:10CA7000C88B020004000300ADF40000F8CF0200F0\n:10CA800070CA0200C88B020004000300AD4202001D\n:10CA9000148B020041F40000148B02005DF40000CE\n:10CAA000D8CB0200770000000E000000B0CA0200E0\n:10CAB0002E0C000060CA02003E05000068CA020099\n:10CAC0001E1200007CCA02004612000084CA020046\n:10CAD0002E13000090CA02005E13000098CA0200E4\n:10CAE000D614000020CB0200DE1400002CCB020084\n:10CAF000A615000034CB0200FE16000040CB020059\n:10CB0000261700004CCB02002E0F000080E202002E\n:10CB1000C60F000088E20200FE0E000078E202006C\n:10CB2000C88B020004000300A3420200148B020021\n:10CB30008DF20000C88B020004000300994202003D\n:10CB4000C88B02000300FFFFADF10000148B020050\n:10CB50008DF00000ACD00200670200000000000071\n:10CB600000000000000000000000000000000000C5\n:10CB7000000000000000000041210200F542020018\n:10CB800000000000000000000000000000000000A5\n:10CB9000ACD002002802000035F1000000000000C7\n:10CBA00000000000000000002F4302000000000011\n:10CBB0000000000075F00000000000000000000010\n:10CBC000000000000000000000000000757103007C\n:10CBD000807103008A710300ACD0020027020000BC\n:10CBE000ADF30000F9F4000000000000B9F000000F\n:10CBF000D1F200000000000049F5000059F00000EB\n:10CC00000000000000000000000000000000000024\n:10CC1000A0CA0200ACD00200CF010000ADF30000BA\n:10CC2000F9F4000000000000B9F00000D1F20000AB\n:10CC30000000000049F5000059F00000000000006D\n:10CC40000000000000000000D8CB0200A0CA0200D3\n:10CC500094D5020058CC0200D8CB02004700000057\n:10CC60000800000068CC0200860F000016170000C4\n:10CC7000CE000000A0C70200B615000098C7020051\n:10CC8000BE150000A8C7020086160000C0C702003B\n:10CC90008E160000C8C7020076160000B0C702005A\n:10CCA0007E160000B8C70200ACD002006702000088\n:10CCB0000000000000000000000000000000000074\n:10CCC0000000000000000000000000004121020000\n:10CCD0009752020000000000000000000000000069\n:10CCE00000000000508B020009060100508B02007A\n:10CCF0009D050100ACD002006702000000000000AA\n:10CD00000000000000000000000000000000000023\n:10CD1000000000000000000041210200C15202009A\n:10CD20000000000000000000000000000000000003\n:10CD3000D8CB0200170000000200000040CD020026\n:10CD400016100000E4CC0200CE110000ECCC020072\n:10CD5000ACD0020004020000A9080100E352020066\n:10CD60000000000061050100B9060100000000009C\n:10CD70003509010089050100000000009F520200F2\n:10CD8000000000000000000030CD0200ACD0020026\n:10CD900010020000A9080100D909010000000000EC\n:10CDA00061050100B906010000000000350901001D\n:10CDB00089050100000000009F52020000000000F1\n:10CDC0000000000030CD0200D88A0200AD0C010046\n:10CDD000D8CB0200EF0000001D000000E0CD0200F3\n:10CDE000860F0000F60600004E0F0000C8CD0200BE\n:10CDF000C600000038CF02002607000040CF020026\n:10CE00002E07000018CF02001E0700002CCF0200E2\n:10CE10000E07000020CF0200960B00004CCF02004E\n:10CE20006E07000078BE020076070000A8BE020070\n:10CE3000BE07000024C20200A607000064C1020071\n:10CE40009E070000B4BF0200D60700009CC4020089\n:10CE5000860700002CBF02005E07000008BD02002C\n:10CE6000560700009CBC0200E6070000FCC402005C\n:10CE70007E070000F8BE0200C60700002CC30200B7\n:10CE8000CE07000058C302004607000074BC020031\n:10CE900066070000D0BD02004E07000064BC02001F\n:10CEA000DE070000D8C402009607000098BF020009\n:10CEB0008E0700007CBF0200B607000004C202001B\n:10CEC000AE070000E4C10200DE0003010000000024\n:10CED000E200030010960200A5000100010000001E\n:10CEE000A600010000000000DF00020100000000B9\n:10CEF000E0000200FFFFFFFFE200030010960200C7\n:10CF0000A500010001000000E7000202000000008F\n:10CF1000E600020200000000D88A0200890A01002F\n:10CF2000C88B02000100FFFFF10B0100C88B02005B\n:10CF30000100FFFF390B0100D88A02003D0A010001\n:10CF4000C88B02000100FFFFF90A0100C88B020034\n:10CF500000000100B10A010094D50200D0CD02000A\n:10CF600000000000000000000000000000000000C1\n:10CF700000000000D9010000FA01000000000000DC\n:10CF800000000000000000000000000000000000A1\n:10CF90000000000000000000000000000000000091\n:10CFA0000000000000000000000000000000000081\n:10CFB0000000000000000000000000000000000071\n:10CFC00000000000ED010000E6010000E1010000AA\n:10CFD000EB010000E301000000000000DE010000A2\n:10CFE0000000000001000000508B020023550200E9\n:10CFF000508B02002D170100ACD002001802000077\n:10D0000000000000A3530200000000000000000028\n:10D010000000000000000000000000000000000010\n:10D020000000000000000000000000000000000000\n:10D0300000000000ACD00200BE02000000000000B2\n:10D04000A3530200000000000000000000000000E8\n:10D0500000000000000000000000000000000000D0\n:10D0600000000000000000000000000000000000C0\n:10D07000ACD00200C7020000B1130100C753020088\n:10D080000000000000000000000000006511010029\n:10D090000000000000000000000000000000000090\n:10D0A000000000000000000000000000ACD0020002\n:10D0B000D7020000D5110100F5150100F1130100A0\n:10D0C0006521020000000000EF5302000000000094\n:10D0D0000000000000000000000000000000000050\n:10D0E0000000000000000000DA010000EC01000078\n:10D0F000E701000000000000000000000000000048\n:10D1000001000000D8CB020037000000060000003C\n:10D1100014D10200860F00000E170000A6100000B8\n:10D120004CD10200B614000060D10200BE14000011\n:10D1300054D10200EE1600006CD10200F616000079\n:10D140006CD1020094D5020004D10200148B0200BD\n:10D150009D550200C88B02000600FFFF5119010017\n:10D16000C88B02000200FFFF09190100C88B0200F2\n:10D1700004000300511701000100E2040000000058\n:10D1800000FC0000000000000000000000000000A3\n:10D19000000000000000000000000000000000008F\n:10D1A000000000000000000094D50200CC2E0020FA\n:10D1B000ACD00200450200000000000000000000AA\n:10D1C000212E01000000000000000000000000000F\n:10D1D000000000000000000000000000000000004F\n:10D1E000000000000000000000000000D8CB02009A\n:10D1F0001701000022000000FCD10200860F000091\n:10D20000BE0000006E02000094A20200FE040000B6\n:10D21000180000209605000004E502009E050000AD\n:10D2200010E50200C6050000C88E02006E06000070\n:10D23000109D0200A606000034C902006E0B00001B\n:10D2400050000020EE0B000054000020C60000003B\n:10D2500020D30200CE00000030D30200D600000030\n:10D2600028D30200DE00000014D30200E600000014\n:10D2700038D30200A601000010960200AE010000A3\n:10D2800058960200B601000068960200BE01000038\n:10D2900070960200C601000078960200CE010000E0\n:10D2A00080960200D601000088960200DE01000090\n:10D2B00090960200E601000098960200EE01000040\n:10D2C000A0960200F601000018960200FE01000080\n:10D2D0002096020006020000289602000E020000BE\n:10D2E0003096020016020000389602001E0200006E\n:10D2F0004096020026020000489602002E0200001E\n:10D3000050960200360200006096020094D502009A\n:10D31000ECD10200C88B020000000100052F0100C3\n:10D32000D88A02007D2E0100D88A0200E75602004A\n:10D33000148B02008D2E0100D88A0200CD2E010030\n:10D34000ACD002006C0100000000000000000000F2\n:10D3500000000000000000000000000000000000CD\n:10D3600000000000000000000000000000000000BD\n:10D370007CD30200000000008CD3020021300100A9\n:10D38000F55602000000000000000000D8CB0200AB\n:10D3900047000000080000009CD30200760B00004C\n:10D3A0001CD40200B60B000014D40200AE0600002C\n:10D3B00044A40200C60B00005CA40200CE0B0000D7\n:10D3C00050A40200B606000068A40200D60B0000BC\n:10D3D00003000000DE0B0000050000006F010200EA\n:10D3E00080250000700102000800000071010300A8\n:10D3F000388D020072010200010000007301030277\n:10D40000388D020074010302388D02007501030299\n:10D41000388D0200148B020005300100C88B020019\n:10D420000300FFFF252F010097570200A1570200BC\n:10D430008D590200A5590200A1580200CB580200E4\n:10D44000E3580200FB580200135902003F59020042\n:10D45000595902007359020094D5020060D40200A9\n:10D46000D8CB0200170000000200000070D40200B8\n:10D47000860F0000261000002610000050CD02008C\n:10D48000D88A0200293C0100D8CB02001F0000000E\n:10D490000300000098D40200860F0000EE00000098\n:10D4A0004E0F000080D40200F6000000B0D402004D\n:10D4B000D88A0200093C010094D5020088D40200F9\n:10D4C000CF00000019000000CCD40200760F00004D\n:10D4D000A8D1020076100000BCB40200AE0C00001F\n:10D4E000A4E102002610000058D40200C616000075\n:10D4F000D88D02000E17000044D10200E613000090\n:10D500009CD602005616000098E202003612000077\n:10D51000B0A30200BE0000000CD30200F60600001B\n:10D5200058CF0200EE000000B8D40200FE00000058\n:10D530002C8C020006010000288D02001E0C000049\n:10D54000E0C90200360C0000CC8C02009E0C0000EA\n:10D55000FC9A0200560D0000209F02006E0C000095\n:10D56000649902000E0D000034A502001617000099\n:10D5700050CC0200F60C0000D49D0200AE0000006A\n:10D58000D88D0200B600000044D1020096160000BB\n:10D5900050CC0200ACD0020087020000493C0100E0\n:10D5A000000000000000000000000000000000007B\n:10D5B0007D3C0100000000000000000000000000B1\n:10D5C000000000000000000000000000000000005B\n:10D5D000148B0200F53F0100148B0200D53F0100BF\n:10D5E000508B0200893F0100148B0200B53F0100FF\n:10D5F000148B020065600200508B02005D3F010049\n:10D60000148B020055400100148B02009D3D010067\n:10D61000148B020075400100148B02003D3E010096\n:10D62000148B020055600200508B0200313F010054\n:10D63000148B0200F93E0100148B0200053E01002C\n:10D64000148B0200593E0100148B0200E53D0100DD\n:10D65000508B0200C93E0100C88B0200020002008C\n:10D66000F9400100148B0200913E0100508B020032\n:10D6700095400100148B0200C13D0100148B020093\n:10D6800035400100148B0200C1400100148B0200E0\n:10D6900015400100148B02004560020094D5020081\n:10D6A000A4D60200D8CB0200E70000001C00000056\n:10D6B000B4D60200860F0000E6130000F609000051\n:10D6C00056F8ADC0C6140000DA0FC9C0DE15000060\n:10D6D00084D60200E61400006CD60200C6110000D9\n:10D6E00010D60200B613000058D602000611000042\n:10D6F00000D60200AE1500007CD602005E160000C7\n:10D700008CD60200EE0F0000D0D502002E100000D3\n:10D71000D8D5020046100000E8D502004E100000E7\n:10D72000E0D50200B6100000F0D50200FE100000A7\n:10D73000F8D50200D611000018D60200F61100003C\n:10D7400020D60200FE11000028D602000E120000B2\n:10D7500030D602006E13000050D6020036140000CE\n:10D7600064D60200DE12000038D60200E612000085\n:10D7700040D60200FE12000048D60200AE1600009D\n:10D7800094D602000E15000074D602003611000077\n:10D7900008D60200ACD00200910200000000000098\n:10D7A00075600200000000000000000000000000A2\n:10D7B0000000000000000000000000000000000069\n:10D7C0000000000000000000000000000000000059\n:10D7D000ACD00200A9000000D1410100000000000F\n:10D7E0000000000000000000000000000000000039\n:10D7F0000000000000000000000000000000000029\n:10D80000000000000000000000000000C88B0200C3\n:10D810000200FFFF95420100D8CB02000F0000007C\n:10D820000100000028D802004E0F00000CD80200B2\n:10D83000B8D902000000000000000000CC9B0200EC\n:10D840005CDB02000000000000000000CC9B020036\n:10D85000ACD00200BC010000A94201004542010019\n:10D860000000000000000000000000003143010043\n:10D8700000000000000000000000000000000000A8\n:10D88000000000007CD9020000000000ACD00200C3\n:10D89000BD010000A9420100454201000000000056\n:10D8A0000000000000000000314301000000000003\n:10D8B0000000000000000000000000000000000068\n:10D8C0007CD9020000000000ACD00200BE010000C4\n:10D8D000A9420100454201000000000000000000D4\n:10D8E00000000000314301000000000000000000C3\n:10D8F0000000000000000000000000007CD90200D1\n:10D9000000000000ACD00200BF010000A9420100ED\n:10D91000454201000000000000000000000000007F\n:10D920003143010000000000000000000000000082\n:10D9300000000000000000000000000018D80200F5\n:10D94000ACD00200C0010000A94201004542010024\n:10D950000000000000000000000000003143010052\n:10D9600000000000000000000000000000000000B7\n:10D97000000000007CD9020000000000ACD00200D2\n:10D98000C2010000A9420100454201000000000060\n:10D990000000000000000000314301000000000012\n:10D9A0000000000000000000000000000000000077\n:10D9B00004D9020000000000ACD00200C301000046\n:10D9C000A9420100454201000000000000000000E3\n:10D9D00000000000314301000000000000000000D2\n:10D9E00000000000000000000000000004D9020058\n:10D9F00000000000ACD00200C4010000A9420100F8\n:10DA0000454201000000000000000000000000008E\n:10DA10003143010000000000000000000000000091\n:10DA200000000000000000007CD90200000000009F\n:10DA3000ACD00200C5010000A9420100454201002E\n:10DA40000000000000000000000000003143010061\n:10DA500000000000000000000000000000000000C6\n:10DA60000000000000DD020000000000ACD0020059\n:10DA7000C6010000A942010045420100000000006B\n:10DA80000000000000000000314301000000000021\n:10DA90000000000000000000000000000000000086\n:10DAA00020DB020000000000ACD00200C701000033\n:10DAB000A9420100454201000000000000000000F2\n:10DAC00000000000314301000000000000000000E1\n:10DAD00000000000000000000000000020DB020049\n:10DAE00000000000ACD00200C8010000A942010003\n:10DAF000454201000000000000000000000000009E\n:10DB000031430100000000000000000000000000A0\n:10DB1000000000000000000004D902000000000026\n:10DB2000ACD00200C9010000A94201004542010039\n:10DB30000000000000000000000000003143010070\n:10DB400000000000000000000000000000000000D5\n:10DB5000000000007CD9020000000000ACD00200F0\n:10DB6000CA010000A9420100454201000000000076\n:10DB70000000000000000000314301000000000030\n:10DB80000000000000000000000000000000000095\n:10DB90007CD9020000000000ACD00200CB010000E4\n:10DBA000A942010045420100000000000000000001\n:10DBB00000000000314301000000000000000000F0\n:10DBC0000000000000000000000000007CD90200FE\n:10DBD00000000000ACD00200CD010000A94201000D\n:10DBE00045420100000000000000000000000000AD\n:10DBF00031430100000000000000000000000000B0\n:10DC0000000000000000000088DC020000000000AE\n:10DC1000ACD00200CE010000A94201004542010043\n:10DC2000000000000000000000000000314301007F\n:10DC300000000000000000000000000000000000E4\n:10DC4000000000007CD9020000000000ACD00200FF\n:10DC5000D0010000A942010045420100000000007F\n:10DC6000000000000000000031430100000000003F\n:10DC700000000000000000000000000000000000A4\n:10DC800050D8020000000000ACD00200D10100001A\n:10DC9000A942010045420100000000000000000010\n:10DCA00000000000314301000000000000000000FF\n:10DCB0000000000000000000000000007CD902000D\n:10DCC00000000000ACD00200D2010000A942010017\n:10DCD00045420100000000000000000000000000BC\n:10DCE00031430100000000000000000000000000BF\n:10DCF00000000000000000007CD9020000000000CD\n:10DD0000ACD00200D3010000A9420100454201004D\n:10DD1000000000000000000000000000314301008E\n:10DD200000000000000000000000000000000000F3\n:10DD3000000000007CD9020000000000ACD002000E\n:10DD4000D4010000A942010045420100000000008A\n:10DD5000000000000000000031430100000000004E\n:10DD600000000000000000000000000000000000B3\n:10DD700004D9020000000000ACD00200D501000070\n:10DD8000A94201004542010000000000000000001F\n:10DD9000000000003143010000000000000000000E\n:10DDA0000000000000000000000000007CD902001C\n:10DDB00000000000ACD00200D6010000A942010022\n:10DDC00045420100000000000000000000000000CB\n:10DDD00031430100000000000000000000000000CE\n:10DDE0000000000000000000F0DD02000000000064\n:10DDF000ACD00200D7010000A94201004542010059\n:10DE0000000000000000000000000000314301009D\n:10DE10000000000000000000000000000000000002\n:10DE2000000000007CD9020000000000ACD002001D\n:10DE3000D8010000A9420100454201000000000095\n:10DE4000000000000000000031430100000000005D\n:10DE500000000000000000000000000000000000C2\n:10DE600050D802000000000078DE02000000000030\n:10DE700078DE020001000000ACD002000C020000BD\n:10DE8000F14401000D450100000000009362020012\n:10DE9000836202000000000000000000000000009B\n:10DEA0000000000000000000000000000000000072\n:10DEB00000000000A4F20200A8F20200F4F1020047\n:10DEC000CEF20200BCF3020062F202007CF4020017\n:10DED0000EF202007CF3020082F10200F0F1020077\n:10DEE000A4F302007AF5020092F302003AF3020072\n:10DEF0001CF30200E6F2020060F3020014F10200DB\n:10DF0000ECF202003AF50200BEF20200ACF40200AC\n:10DF100052F5020028F402004CF4020046F302001D\n:10DF200050F3020076F30200D0F002006CF302001E\n:10DF3000D8F10200E2F302005CF2020062F5020096\n:10DF4000CAF00200AAF3020002F102002CF402005F\n:10DF500096F2020086F3020056F1020060F1020020\n:10DF60004AF1020042F102009EF4020096F402001F\n:10DF7000A6F4020012F40200F4F30200FAF3020025\n:10DF800058F4020020F2020086F1020074F502004B\n:10DF900000000000C2F30200ACF2020052F20200E4\n:10DFA00058F2020000F202000AF20200FAF1020046\n:10DFB000E0F20200E0F40200FAF4020002F50200CE\n:10DFC0000AF50200ECF40200E6F40200F4F40200A8\n:10DFD00088F4020010F5020022F502002AF5020082\n:10DFE00030F5020016F502001CF5020036F50200BD\n:10DFF000E8F30200B6F30200D0F3020068F2020078\n:10E000007EF202007AF2020074F202006EF2020066\n:10E0100082F4020068F10200B2F2020098F30200FA\n:10E020009EF3020040F3020026F302002CF30200EC\n:10E0300032F3020014F3020072F3020080F30200D4\n:10E0400008F3020038F202000EF102000EF30200A3\n:10E050003EF2020044F202005AF302001CF10200F8\n:10E06000DEF1020004F30200FAF20200B6F402004C\n:10E07000CCF40200C2F40200BCF40200D4F40200AA\n:10E08000D8F402004AF202005CF5020046F50200F4\n:10E090004CF5020018F402001EF402003CF40200E9\n:10E0A00042F4020052F4020066F30200B4F10200EE\n:10E0B000D2F10200C8F10200CEF10200B0F302007A\n:10E0C00008F1020032F4020090F202009CF2020019\n:10E0D00052F102005CF102008CF3020022F1020016\n:10E0E0003CF102005EF4020064F402006AF40200F3\n:10E0F00070F4020076F402008EF40200EEF30200E7\n:10E1000000F4020006F402000CF40200CAF302005C\n:10E1100084F202008AF2020014F202001AF20200F3\n:10E1200032F2020026F202002CF2020092F102000A\n:10E13000D6F00200DCF00200EAF00200E4F0020097\n:10E14000F0F00200F6F00200FCF00200AEF1020076\n:10E150009AF10200A6F1020068F502006EF50200D5\n:10E16000D88A0200C54B0100D88A0200B54B0100D5\n:10E17000148B0200A14B0100C88B020000000100BB\n:10E18000694B0100C88B020000000100154C010022\n:10E19000C88B020000000100D54B0100D88A0200A4\n:10E1A0006566020094D50200ACE10200D8CB020003\n:10E1B0004F00000009000000BCE10200860F0000D3\n:10E1C000AE0C0000F610000060A30200A6140000D0\n:10E1D00084E102002614000078E102000615000028\n:10E1E00090E10200E61500009CE102006E120000C2\n:10E1F00060E102007612000068E102004E130000A8\n:10E2000070E102001FB14F0A9595E62477CC2B32BE\n:10E2100017B7D1380AD7233CCDCCCC3DAEC59D74C1\n:10E22000CA1B0E5A20BCBE4C00401C460000C8420F\n:10E2300000002041ACD002000D02000000000000F0\n:10E2400000000000896702000000000000000000DC\n:10E2500000000000000000000000000000000000BE\n:10E2600000000000000000000000000000000000AE\n:10E27000508B0200DF670200508B0200C96702006A\n:10E28000508B02009B6702008C8B0200B16702007A\n:10E29000920100009901000094D50200A0E2020062\n:10E2A000D8CB02004700000008000000B0E20200E6\n:10E2B000860F000056160000CE0C000054E302004A\n:10E2C0002E17000030E302008E120000FCE2020074\n:10E2D000CE14000044E3020096100000A6130000D4\n:10E2E000BE110000F0E20200F614000024E3020078\n:10E2F000C88B020000000100E5500100909B020065\n:10E3000002000000AE0C000010E3020090E20200E8\n:10E31000D49B020003000000030000001300000073\n:10E3200005000000C88B0200020002000551010038\n:10E33000D49B020003000000070000000900000059\n:10E34000010000009CC60200000000000800000060\n:10E350007C2603009CC602000000000005000000AF\n:10E36000537B0300ACD002007C01000000000000E1\n:10E37000000000000000000000000000000000009D\n:10E38000000000000000000000000000000000008D\n:10E39000000000000000000000000000A0E30200F8\n:10E3A000D8CB02002700000004000000B0E3020008\n:10E3B000760B000000E40200B606000018E402003C\n:10E3C000AE0600000CE40200160C000020E402007F\n:10E3D0006F01020040420F007001020008000000BF\n:10E3E0007E010200000000007F010302388D020060\n:10E3F00080010302388D020081010302388D020082\n:10E40000C88B02000300FFFF1D510100C88B0200F2\n:10E4100004000300D1510100508B0200355201006D\n:10E420008C8B020079520100ACD00200A2020000E5\n:10E43000155D0100AD5C010000000000E15B010022\n:10E44000000000004D5D0100295C0100115C01002D\n:10E4500000000000000000000000000000000000BC\n:10E4600000000000ACD002006702000000000000C5\n:10E47000000000000000000000000000000000009C\n:10E480000000000000000000412102005568020069\n:10E49000000000000000000000000000000000007C\n:10E4A000ACD00200B100000000000000000000003D\n:10E4B000000000000000000000000000000000005C\n:10E4C000000000000000000000000000000000004C\n:10E4D0000000000000000000DCE40200D8CB0200D5\n:10E4E0001F00000003000000ECE40200A60500008D\n:10E4F00024E50200AE0500002CE50200B605000090\n:10E500001CE50200A0E4020080960200000000006A\n:10E51000A0E402002096020001000000148B02001B\n:10E52000CD5D0100148B0200815D0100148B02009F\n:10E53000A55D0100ACD002003B020000000000001D\n:10E54000A7680200000000000000000000000000BA\n:10E55000000000000000000041210200095F0100EE\n:10E5600000000000000000000000000000000000AB\n:10E57000FFFF00000000000000000000000000009D\n:10E58000676A0200696A0200AD6A0200AF6A0200AF\n:10E590000000000000000000676A0200696A0200D3\n:10E5A000AB6A0200BD6A02006B6A0200876A020061\n:10E5B0008B6A0200A76A0200DD630100DD630100CF\n:10E5C000A16B02000000000000000000676A02006A\n:10E5D000696A02007D6C02007F6C02000568010020\n:10E5E0005D6C0200796C0200056801008D6C020010\n:10E5F000010000001700000046000000A30000001A\n:10E600005F010000D6020000C4050000A00B00005E\n:10E610000000000000000000FD740200696A0200B2\n:10E620002D7001008172020038E602000300000034\n:10E6300050E6020008000000020000000000000098\n:10E6400004000000010000000800000002000000BB\n:10E65000C40900000000000088130000080000004A\n:10E660001027000010000000204E000018000000DD\n:10E670008038010020000000007102002800000026\n:10E6800000E20400300000000088130038000000A1\n:10E690000000000000000000676A0200CF7702005F\n:10E6A000897B0100D97702006B6A0200876A020049\n:10E6B0008B6A0200A76A0200957A0100CD7B0100F7\n:10E6C000A16B0200BCFFFFFF00000000676A0200B0\n:10E6D000857A0100AD7B0100BD7B0100797B0100E3\n:10E6E0005D6C0200796C0200C97C01008D6C020037\n:10E6F00000E702000300000018E702000800000025\n:10E700000200000000000000040000000100000002\n:10E710000800000002000000E20400000000000009\n:10E72000C409000008000000881300001000000069\n:10E730001027000018000000204E000020000000FC\n:10E740008038010028000000007102003000000045\n:10E7500000C40900380000000000000000000000B4\n:10E76000676A0200FF7702000D7E0100097802004F\n:10E770006B6A0200876A02008B6A0200A76A0200C5\n:10E78000597D0100257E0100A16B020094E7020083\n:10E790000B000000D430000000000000A861000061\n:10E7A0002000000050C3000040000000A0860100CF\n:10E7B00060000000400D030080000000801A060089\n:10E7C0008800000000350C0090000000006A18006E\n:10E7D000B000000000D43000D000000000A86100AC\n:10E7E000F00000000050C300F8000000000000002E\n:10E7F00000000000676A02002F780200F97E010025\n:10E8000039780200117F01005D6C0200796C020012\n:10E81000B57F01008D6C020028E8020004000000B2\n:10E8200048E80200090000000200000000000000AB\n:10E83000040000001000000008000000200000009C\n:10E84000100000003000000069020000800000009D\n:10E85000E802000090000000C40900007000000001\n:10E860008813000060000000102700005000000026\n:10E87000204E000040000000409C000030000000DE\n:10E88000A08601002000000040420F0010000000A0\n:10E890000000000000000000676A02005F780200CC\n:10E8A0002D810100697802006B6A0200876A02000C\n:10E8B0008B6A0200A76A020099800100458101006D\n:10E8C000A16B0200CCE80200040000001027000049\n:10E8D0000C000000204E00000800000050C30000A3\n:10E8E00004000000A08601000000000000000000FD\n:10E8F00000000000676A02008F7802009582010024\n:10E9000099780200358201005D6C0200796C02008A\n:10E91000AD8201008D6C0200FFFF010001000000CC\n:10E920000000000000000000757D0200777D0200FD\n:10E93000000000000000000011700100957202004C\n:10E94000957D02000000000000000000ED7D020047\n:10E950001B7E02000000000000000000DD8D0100B1\n:10E96000A37E0200857E020000000000000000007F\n:10E9700000000000000000004D7D020084E902005C\n:10E98000142D0020F58E0100818F0100C38002004C\n:10E99000C5800200998F0100B004000000F004005F\n:10E9A0006009000000D00900C012000000B0130090\n:10E9B00080250000005027004038000000003B0088\n:10E9C000004B000000A04E008070000000F07500B9\n:10E9D000127A0000000080000096000000509D00A8\n:10E9E00000E1000000F0EB00002C010000903A0173\n:10E9F00000C2010000E0D7010084030000B0AF03B3\n:10EA000090D00300000000040008070000705F07BA\n:10EA100000100E00A4DFBE0E40420F0000000010E8\n:10EA2000010000000070004004000000020000002F\n:10EA3000007000400800000003000000007000406B\n:10EA400010000000040000000070004020000000E2\n:10EA500005000000007000404000000006000000BB\n:10EA60000070004080000000FF000000FFFFFFFF7B\n:10EA700000000000E6A7010022A7010046A7010050\n:10EA8000E4A6010046A70100C2A7010046A70100B5\n:10EA9000E4A6010022A7010022A70100C2A70100ED\n:10EAA000E4A6010018A8010018A8010018A8010098\n:10EAB000CEA7010022A7010022A7010046A701005E\n:10EAC000E2A6010046A70100C2A7010046A7010077\n:10EAD000E2A6010022A7010022A70100C2A70100AF\n:10EAE000E2A6010018A8010018A8010018A801005A\n:10EAF000CCA7010010AB0100BAAA0100BAAA01001C\n:10EB0000E8AB0100B6AA0100B6AA0100DEAB010025\n:10EB1000E8AB0100B6AA0100DEAB0100B6AA010015\n:10EB2000E8AB0100ECAB0100ECAB0100ECAB010089\n:10EB3000F4AB010060BA0100D2B8010016B90100BF\n:10EB40007AB8010016B9010006BA010016B9010031\n:10EB50007AB80100D2B80100D2B8010006BA0100AB\n:10EB60007AB8010072B8010072B8010072B80100F1\n:10EB700014BA010088C101008AC001008AC00100E6\n:10EB8000A8C3010084C0010084C0010090C301003B\n:10EB9000A8C3010084C0010090C3010084C001002B\n:10EBA000A8C301009EC301009EC301009EC30100D3\n:10EBB000ACC301003863ED3EDA0F493F5E987B3FFE\n:10EBC000DA0FC93F6937AC3168212233B40F1433EF\n:10EBD0006821A2330000004B000000CB73717274F7\n:10EBE0000000000061636F73660000006173696E6E\n:10EBF00066000000666D6F646600000073717274D9\n:10EC0000660000000000000000000080000FC93F07\n:10EC1000000F494000CB9640000FC9400053FB4015\n:10EC200000CB164100ED2F41000F494100316241F8\n:10EC300000537B41003A8A4100CB9641005CA341DE\n:10EC400000EDAF41007EBC41000FC94100A0D5419D\n:10EC50000031E24100C2EE410053FB4100F20342A9\n:10EC6000003A0A420083104200CB164200141D42B3\n:10EC7000005C234200A5294200ED2F4200363642B7\n:10EC8000007E3C4200C74242000F4942A200000001\n:10EC9000F9000000830000006E0000004E0000003C\n:10ECA000440000001500000029000000FC000000E6\n:10ECB0002700000057000000D1000000F500000010\n:10ECC00034000000DD000000C0000000DB00000098\n:10ECD0006200000095000000990000003C00000068\n:10ECE000430000009000000041000000FE00000012\n:10ECF0005100000063000000AB000000DE000000D7\n:10ED0000BB000000C500000061000000B70000006B\n:10ED1000240000006E0000003A00000042000000E5\n:10ED20004D000000D2000000E000000006000000DE\n:10ED3000490000002E000000EA0000000900000069\n:10ED4000D1000000920000001C000000FE00000046\n:10ED50001D000000EB0000001C000000B1000000DE\n:10ED600029000000A70000003E000000E8000000AD\n:10ED70008200000035000000F50000002E000000B9\n:10ED8000BB0000004400000084000000E900000017\n:10ED90009C0000007000000026000000B40000008D\n:10EDA0005F0000007E00000041000000390000000C\n:10EDB00091000000D6000000390000008300000030\n:10EDC0005300000039000000F40000009C00000027\n:10EDD000840000005F0000008B000000BD00000008\n:10EDE000F9000000280000003B0000001F000000A8\n:10EDF000F800000097000000FF000000DE000000A7\n:10EE000005000000980000000F000000EF00000067\n:10EE10002F000000110000008B0000005A000000CD\n:10EE20000A0000006D0000001F0000006D000000DF\n:10EE3000360000007E000000CF0000002700000028\n:10EE4000CB00000009000000B70000004F000000E8\n:10EE5000460000003F000000660000009E00000029\n:10EE60005F000000EA0000002D00000075000000B7\n:10EE700027000000BA000000C7000000EB000000FF\n:10EE8000E5000000F10000007B0000003D000000F4\n:10EE90000700000039000000F70000008A000000B1\n:10EEA0005200000092000000EA0000006B00000029\n:10EEB000FB0000005F000000B10000001F00000028\n:10EEC0008D0000005D0000000800000056000000FA\n:10EED000030000003000000046000000FC000000BD\n:10EEE0007B0000006B000000AB000000F0000000A1\n:10EEF000CF000000BC000000200000009A000000CD\n:10EF0000F4000000360000001D000000A900000011\n:10EF1000E300000091000000610000005E000000BE\n:10EF2000E60000001B000000080000006500000073\n:10EF300099000000850000005F0000001400000040\n:10EF4000A000000068000000400000008D000000EC\n:10EF5000FF000000D8000000800000004D0000000D\n:10EF600073000000270000003100000006000000D0\n:10EF7000060000001500000056000000CA00000056\n:10EF800073000000A8000000C9000000600000003D\n:10EF9000E20000007B000000C00000008C000000C8\n:10EFA0006B0000000000C93F0000F0390000DA37B4\n:10EFB0000000A2330000842E0000502B0000C22766\n:10EFC0000000D0220000C41F0000C61B0000441730\n:10EFD000040000000700000009000000000000001D\n:10EFE0000000000000000000000000000000000021\n:10EFF0000000000000000000000000000000000011\n:10F000000000000000000000000000000000000000\n:10F0100000000000000000000000000000000000F0\n:10F0200000000000000000000000000000000000E0\n:10F030000000000000000000000000007000002040\n:10F04000000002000400060008000A000C00110085\n:10F0500017001D0025002F003B00490061007F00C4\n:10F06000A700DF00250185010902B3029703C70449\n:10F070005B0671089D0CDF124B1C6D2A913F575F98\n:10F08000FF8E7BD6000002000200040007000D0086\n:10F0900019003100610000686E0200786F0200887C\n:10F0A00071020060C0020070C1020080C302E1086A\n:10F0B000E907EE0E4D0DDA0B2F0BF7096108000082\n:10F0C000180E8E0C00008F0A6809233124203A1094\n:10F0D0001D317D2011109F33A0204810A013A120C6\n:10F0E000A220A320A22232107A20A12231107A205D\n:10F0F000A3627A20A430A412A720A520A5624D10F7\n:10F100007A2025312620832083122F10301065624B\n:10F1100012100710122313107A206A306A62481006\n:10F120007A208A1C0710081009100A100B100C1006\n:10F130000E100F100D102A202B202C208B123620A1\n:10F140008C202C234610993047102B2344108C30F0\n:10F1500045108711292029628A2088308832912021\n:10F160002A2342108B304310581C4E104F10501061\n:10F170005110531054105510561058105710591064\n:10F1800052100921141035A5151007109E30491092\n:10F1900078209E6342109F304310A7A51D10972032\n:10F1A00022101C20A630A82320107C20A630A612F6\n:10F1B000A720A8207E193610381040103E103F10AE\n:10F1C000411022107F208020802223108130812155\n:10F1D00026107F22261022101F3121207E206B183E\n:10F1E000132014201520162017200320352002207C\n:10F1F0000A21161002623D203E203E1235200320D7\n:10F200003C244C1068202D3004103D323C20072255\n:10F2100018109720996234209B309A6249107A2006\n:10F2200034627A209A309C2248109D309D333420DD\n:10F2300048109B12A7209C206462682065306731CB\n:10F2400064204810683107104A1074631A1049107E\n:10F2500078203A6233203B303B21041021312220B8\n:10F260003B100522062052305212532054205612D1\n:10F270003620062055624D105620543255205362D8\n:10F28000582056209733982048109812202021208B\n:10F2900085122720282027628620852086132F109C\n:10F2A00030103D1000610130013239203912041054\n:10F2B0004F20591509200A200B200D200C2015275E\n:10F2C0001D1097202210332049107820743003A895\n:10F2D000171007104210403043103F30491078207B\n:10F2E0003F625A107A2010221F1069201326201026\n:10F2F0007A20491078206C3074306D2419107A20EF\n:10F30000491078206C326D20632207106530663317\n:10F310006320481060634210662043100F241E10C3\n:10F320005D2021105F205D1268205E205E626120FA\n:10F3300068305F133110602066200E222110672094\n:10F340005C120E200F201AA42410483049107A2095\n:10F350001BA42410483049107C2069310710481044\n:10F360001122251069207D121E201F201E2226102A\n:10F370007D20613262201C311D20271008212810B9\n:10F3800062124A100C10286287208930896232107C\n:10F3900085200D2229105A305A627A205B305B6238\n:10F3A0001E107A200B222A1033302431252082208F\n:10F3B0008212371039105062042004100433512097\n:10F3C0004B103813041050206B20962249107A30CD\n:10F3D00051180720082059205C20102011201220ED\n:10F3E00005202022311021204F126B205020921234\n:10F3F0003220312031627A2032303222491093306B\n:10F40000931294209520942249107A3095627A20A4\n:10F410009630303392204810781279205020796449\n:10F42000041005101820061018324F2026318520B0\n:10F430008420841431103310351034107A121A20BD\n:10F4400019207B2420101C201A107A2019621C20FD\n:10F450007B307C121B201C2033337A2048108C62B6\n:10F460008D208E308D1220207A208E12A7208F20A2\n:10F470008F624810903090338D204810063357200B\n:10F480004810571220207A20472207104530911348\n:10F490002D202E202F202E234410302045102D23E8\n:10F4A00042109F3043102F224A10071016242B10B1\n:10F4B000491078206E206E126F20732071627A20BE\n:10F4C000653070241B107130491078206F637220F2\n:10F4D000743073307232702073231C1049107820FE\n:10F4E000403341204810456249107A2044233210AD\n:10F4F0000710453046624D107A20411342204320C8\n:10F5000044204263071045304630432231104730D3\n:10F510004833492048104C22321007104D624D10DC\n:10F520007A2049134A204B204C204A6207104D3064\n:10F530004B2231104E304E61071014252C107A20CA\n:10F5400049107820743076627A2077307762121012\n:10F55000212017242D107520491078207531762030\n:10F560004810223123203C10A912AA203320AA22BD\n:10F570001E107A2036222E10A9300C21362061640C\n:10F5800064726573732025303878206973206E6F3C\n:10F590007420616C69676E656420746F2025642037\n:10F5A0006279746573003C25752D626974206D6500\n:10F5B0006D6F72793E002B2D786B63642E636F6DD7\n:10F5C0002F333533B32D2B0A7CC0207C0A7CB4202A\n:10F5D0005C302F89207C0A7CB2202F83205C89201C\n:10F5E0007C0A7C8820596F7527726520666C796962\n:10F5F0006E672192204D6963726F507974686F6EE7\n:10F600002120202F7C88207C0A7C8C20486F773F2B\n:10F61000A6205C205C87207C0A7C8C202FB3207C79\n:10F620000A7C8A2030B5207C0A7C89202F7C5CB43F\n:10F63000207C0A7C8A207CB5207C0A7C852D845F16\n:10F640002F5F5C9E5F962D7C0A7CC0207C0A2BC0BD\n:10F650002D2B0A00747275650066616C7365002855\n:10F660006E756C6C29002020202020202020202076\n:10F67000202020202020003030303030303030301A\n:10F68000303030303030300063616E277420736565\n:10F6900074206174747269627574650066756E6356\n:10F6A00074696F6E2074616B657320256420706FC0\n:10F6B000736974696F6E616C20617267756D656ED8\n:10F6C00074732062757420256420776572652067E5\n:10F6D0006976656E00756E65787065637465642023\n:10F6E0006B6579776F726420617267756D656E7492\n:10F6F00020272571270066756E6374696F6E206719\n:10F700006F74206D756C7469706C652076616C75B2\n:10F71000657320666F7220617267756D656E742007\n:10F7200027257127004E6F6E6500696E76616C69E2\n:10F7300064206765737475726500736C6963652016\n:10F74000737465702063616E6E6F74206265207AD9\n:10F7500065726F006F626A656374206E6F742069F2\n:10F760006E2073657175656E6365002766726F7ACA\n:10F77000656E7365742720686173206E6F207375E2\n:10F7800063682061747472696275746500706F706B\n:10F790002066726F6D20616E20656D7074792073C4\n:10F7A00065740066726F7A656E007365742829004F\n:10F7B00066726F7A656E73657428007B002C20007A\n:10F7C0004572722033363638330045727220333634\n:10F7D000383934005DC12028412E293D454834592F\n:10F7E0002EA0284129203D41C820284152452920EA\n:10F7F0003D4141D220284152294F3D4158D2284114\n:10F800005229233D454834D2205E28415329233DC7\n:10F81000455934D328412957413D41D828415729DA\n:10F820003D414FB5203A28414E59293D4548344E77\n:10F8300049D92841295E2B233D4559B5233A284112\n:10F840004C4C59293D554C49D92028414C29233D40\n:10F8500055CC28414741494E293D415847454834F8\n:10F86000CE233A28414729453D4948CA2841295EC7\n:10F87000253D45D92841295E2B3A233D41C5203AF3\n:10F880002841295E2B203D4559B420284152522958\n:10F890003D4158D228415252293D414534D2205E43\n:10F8A00028415229203D414135D2284152293D412C\n:10F8B0004135D228414952293D454834D228414951\n:10F8C000293D4559B4284159293D4559B528415547\n:10F8D000293D414FB4233A28414C29203D55CC23A2\n:10F8E0003A28414C5329203D554CDA28414C4B29AC\n:10F8F0003D414F34CB28414C295E3D414FCC203A0D\n:10F900002841424C45293D4559344255CC28414275\n:10F910004C45293D41584255CC284129564F3D453B\n:10F9200059B428414E47292B3D4559344ECA2841E8\n:10F9300054415249293D4148544141345249D92802\n:10F940004129544F4D3D41C52841295454493D4119\n:10F95000C52028415429203D4145D420284129541F\n:10F960003D41C82841293D41C55DC220284229208A\n:10F970003D424959B420284245295E233D4249C8A9\n:10F98000284245494E47293D4249593449484ED8B5\n:10F990002028424F544829203D424F573454C82014\n:10F9A0002842555329233D42494834DA28425245DA\n:10F9B000414B293D4252455935CB284255494C29A6\n:10F9C0003D42494834CC2842293DC25DC3202843EA\n:10F9D00029203D534959B420284348295E3DCB5E38\n:10F9E00045284348293DCB284348412952233D4BD4\n:10F9F0004548B5284348293D43C820532843492951\n:10FA0000233D534159B428434929413D53C8284314\n:10FA100049294F3D53C828434929454E3D53C828DD\n:10FA200043495459293D5349485449D92843292B1E\n:10FA30003DD328434B293DCB28434F4D4D4F444F99\n:10FA40005245293D4B4141344D4148444F48D2280D\n:10FA5000434F4D293D4B4148CD2843554954293DFD\n:10FA60004B4948D42843524541293D4B52495945B9\n:10FA7000D92843293DCB5DC420284429203D444951\n:10FA800059B4202844522E29203D444141344B543E\n:10FA900045D2233A2844454429203D444948C42EB0\n:10FAA00045284429203DC4233A5E45284429203D69\n:10FAB000D420284445295E233D4449C82028444F8A\n:10FAC00029203D4455D72028444F4553293D4441E2\n:10FAD00048DA28444F4E4529203D44414835CE2838\n:10FAE000444F494E47293D4455573449484ED82044\n:10FAF00028444F57293D4441D72328445529413DA7\n:10FB00004A55D723284455295E233D4A41D82844E5\n:10FB1000293DC45DC520284529203D49594959B48E\n:10FB2000233A28452920BD273A5E28452920BD20B3\n:10FB30003A284529203D49D92328454429203DC458\n:10FB4000233A2845294420BD2845562945523D459C\n:10FB50004834D62845295E253D4959B4284552499F\n:10FB600029233D4959345249D928455249293D450F\n:10FB700048345249C8233A28455229233D45D228C2\n:10FB80004552524F52293D454834524F48D228459C\n:10FB900052415345293D494852455935D32845528C\n:10FBA00029233D4548D2284552293D45D2202845A4\n:10FBB00056454E293D4959564548CE233A284529B0\n:10FBC00057BD40284557293D55D7284557293D5908\n:10FBD00055D72845294F3D49D9233A262845532949\n:10FBE000203D4948DA233A2845295320BD233A28A5\n:10FBF000454C5929203D4C49D9233A28454D454E7D\n:10FC000054293D4D45484ED4284546554C293D463E\n:10FC10005548CC284545293D4959B4284541524EBF\n:10FC2000293D455235CE2028454152295E3D455259\n:10FC3000B528454144293D4548C4233A2845412932\n:10FC4000203D495941D82845412953553D4548B59E\n:10FC5000284541293D4959B52845494748293D4549\n:10FC600059B4284549293D4959B4202845594529C1\n:10FC70003D4159B4284559293D49D9284555293D83\n:10FC8000595557B528455155414C293D4959344B93\n:10FC90005755CC2845293D45C85DC6202846292012\n:10FCA0003D454834C62846554C293D465548CC2844\n:10FCB000465249454E44293D46524548354EC42892\n:10FCC000464154484552293D46414134444845D275\n:10FCD00028462946BD2846293DC65DC72028472914\n:10FCE000203D4A4959B428474956293D4749483596\n:10FCF000D620284729495E3DC728474529543D4716\n:10FD00004548B553552847474553293D474A454837\n:10FD100034D3284747293DC72042232847293DC7D8\n:10FD20002847292B3DCA284752454154293D47526F\n:10FD3000455934D428474F4E29453D47414F35CE8C\n:10FD40002328474829BD2028474E293DCE2847294A\n:10FD50003DC75DC820284829203D45593443C82067\n:10FD600028484156293D2F48414536D62028484548\n:10FD70005245293D2F484959D22028484F555229EC\n:10FD80003D41573545D228484F57293D2F4841D747\n:10FD9000284829233D2FC8284829BD5DC920284966\n:10FDA0004E293D4948CE20284929203D4159B428B3\n:10FDB0004929203D41D928494E29443D415935CE54\n:10FDC00053454D2849293D49D920414E54284929B8\n:10FDD0003D41D928494552293D495945D2233A52F6\n:10FDE0002849454429203D4959C4284945442920EA\n:10FDF0003D415935C42849454E293D49594548CECC\n:10FE000028494529543D41593445C8284927293DA9\n:10FE10004159B5203A2849295E253D4159B5203A36\n:10FE200028494529203D4159B4284929253D49D92A\n:10FE3000284945293D4959B4202849444541293D8F\n:10FE400041594449593541C82849295E2B3A233D37\n:10FE500049C828495229233D4159D228495A2925C0\n:10FE60003D4159DA28495329253D4159DA495E284F\n:10FE700049295E233D49C82B5E2849295E2B3D4117\n:10FE8000D9233A5E2849295E2B3D49C82849295E75\n:10FE90002B3D41D9284952293D45D2284947482977\n:10FEA0003D4159B428494C44293D4159354CC42061\n:10FEB0002849474E293D494847CE2849474E2920E1\n:10FEC0003D415934CE2849474E295E3D415934CEF3\n:10FED0002849474E29253D415934CE284943524FA0\n:10FEE000293D4159344B524FC82849515545293D68\n:10FEF000495934CB2849293D49C85DCA20284A2997\n:10FF0000203D4A4559B4284A293DCA5DCB20284B9B\n:10FF100029203D4B4559B420284B294EBD284B295B\n:10FF20003DCB5DCC20284C29203D454834CC284C85\n:10FF30004F2943233D4C4FD74C284C29BD233A5ED3\n:10FF4000284C29253D55CC284C454144293D4C4958\n:10FF500059C420284C41554748293D4C414534C699\n:10FF6000284C293DCC5DCD20284D29203D454834E5\n:10FF7000CD20284D522E29203D4D4948345354451B\n:10FF8000D220284D532E293D4D494835DA20284DA1\n:10FF900052532E29203D4D494834534958DA284DB3\n:10FFA0004F56293D4D555734D6284D414348494E6B\n:10FFB000293D4D41485348495935CE4D284D29BD1D\n:10FFC000284D293DCD5DCE20284E29203D45483481\n:10FFD000CE45284E47292B3D4ECA284E4729523D33\n:10FFE0004E58C7284E4729233D4E58C7284E474CE8\n:10FFF00029253D4E584755CC284E47293D4ED828F7\n:020000040003F7\n:100000004E4B293D4E58CB20284E4F5729203D4E70\n:100010004157B44E284E29BD284E4F4E29453D4EDE\n:10002000414834CE284E293DCE5DCF20284F29208F\n:100030003D4F4834D7284F4629203D4148D62028F7\n:100040004F4829203D4F57B5284F524F5547482913\n:100050003D4552344FD7233A284F5229203D45D2AF\n:10006000233A284F525329203D4552DA284F52292E\n:100070003D414FD220284F4E45293D574148CE2380\n:10008000284F4E4529203D574148CE284F57293DFE\n:100090004FD720284F564552293D4F57355645D208\n:1000A0005052284F29563D5557B4284F56293D41A7\n:1000B0004834D6284F295E253D4F57B5284F295E35\n:1000C000454E3D4FD7284F295E49233D4F57B52810\n:1000D0004F4C29443D4F5734CC284F55474854295D\n:1000E0003D414F35D4284F554748293D414835C6F5\n:1000F00020284F55293D41D748284F552953233DA6\n:100100004157B4284F5553293D4158D3284F555294\n:10011000293D4F48D2284F554C44293D554835C4B8\n:10012000284F55295E4C3D4148B5284F5550293D33\n:10013000555735D0284F55293D41D7284F59293D8E\n:100140004FD9284F494E47293D4F573449484ED83B\n:10015000284F49293D4F59B5284F4F52293D4F4807\n:1001600035D2284F4F4B293D554835CB46284F4F68\n:1001700044293D555735C44C284F4F44293D4148EB\n:1001800035C44D284F4F44293D555735C4284F4F4E\n:1001900044293D554835C446284F4F54293D5548BC\n:1001A00035D4284F4F293D5557B5284F27293D4F66\n:1001B000C8284F29453D4FD7284F29203D4FD728E4\n:1001C0004F41293D4F57B420284F4E4C59293D4FA0\n:1001D00057344E4C49D920284F4E4345293D57416D\n:1001E00048344ED3284F4E2754293D4F57344ED4D0\n:1001F00043284F294E3D41C1284F294E473D41CF0D\n:10020000203A5E284F294E3D41C849284F4E293D8E\n:1002100055CE233A284F4E293D55CE235E284F4ECA\n:10022000293D55CE284F2953543D4FD7284F4629B5\n:100230005E3D414F34C6284F54484552293D414800\n:1002400035444845D252284F29423D5241C15E5261\n:10025000284F293A233D4F57B5284F535329203D66\n:10026000414F35D3233A5E284F4D293D4148CD2893\n:100270004F293D41C15DD020285029203D5049598A\n:10028000B4285048293DC62850454F504C293D5070\n:100290004959355055CC28504F57293D504157B4F6\n:1002A0002850555429203D505548D428502950BD38\n:1002B00028502953BD2850294EBD2850524F462E54\n:1002C000293D50524F48464548345345D22850297D\n:1002D0003DD05DD120285129203D4B595557B42898\n:1002E00051554152293D4B574F4835D22851552938\n:1002F0003D4BD72851293DCB5DD220285229203DA6\n:10030000414135D220285245295E233D5249D92802\n:10031000522952BD2852293DD25DD320285329208D\n:100320003D454834D3285348293D53C823285349D1\n:100330004F4E293D5A4855CE28534F4D45293D53E0\n:100340004148CD232853555229233D5A4845D228A8\n:1003500053555229233D534845D223285355292329\n:100360003D5A4855D7232853535529233D534855C3\n:10037000D72328534544293D5AC423285329233DD4\n:10038000DA2853414944293D534548C45E2853491E\n:100390004F4E293D534855CE28532953BD2E28533F\n:1003A00029203DDA233A2E45285329203DDA233AE5\n:1003B0005E23285329203DD355285329203DD3209F\n:1003C0003A23285329203DDA2323285329203DDAD4\n:1003D0002028534348293D53CB285329432BBD2381\n:1003E00028534D293D5A55CD2328534E29273D5A90\n:1003F00055CD2853544C45293D5355CC2853293DC0\n:10040000D35DD420285429203D544959B420285480\n:1004100048452920233D444849D9202854484529A6\n:10042000203D444841D828544F29203D5455D820D8\n:100430002854484154293D44484145D42028544833\n:10044000495329203D44484948D320285448455918\n:10045000293D444845D920285448455245293D4422\n:10046000484548D22854484552293D444845D22859\n:100470005448454952293D44484548D220285448CB\n:10048000414E29203D44484145CE20285448454D01\n:1004900029203D44484145CE28544845534529200C\n:1004A0003D44484959DA20285448454E293D44489E\n:1004B0004548CE285448524F554748293D54485244\n:1004C0005557B42854484F5345293D44484F48DABE\n:1004D0002854484F55474829203D44484FD7285471\n:1004E0004F444159293D5455584445D928544F4DFE\n:1004F0004F2952524F573D54554D4141B528544F05\n:100500002954414C3D544F57B52028544855532940\n:100510003D4448414834D3285448293D54C8233ADF\n:1005200028544544293D544958C453285449292343\n:100530004E3D43C8285449294F3D53C828544929A2\n:10054000413D53C8285449454E293D534855CE286E\n:1005500054555229233D434845D228545529413DFD\n:10056000434855D7202854574F293D5455D726285E\n:100570005429454E20BD2854293DD45DD520285509\n:1005800029203D595557B42028554E29493D5955E4\n:1005900057CE2028554E293D4148CE202855504F52\n:1005A0004E293D415850414FCE4028555229233DB8\n:1005B000554834D228555229233D59554834D2281C\n:1005C0005552293D45D22855295E203D41C8285520\n:1005D000295E5E3D4148B5285559293D4159B52010\n:1005E0004728552923BD4728552925BD4728552982\n:1005F000233DD7234E2855293D5955D74028552905\n:100600003D55D72855293D5955D75DD6202856291F\n:10061000203D564959B42856494557293D56595504\n:1006200057B52856293DD65DD720285729203D4467\n:1006300041483442554C5955D720285745524529F1\n:100640003D5745D22857412953483D5741C1285766\n:10065000412953543D5745D928574129533D5741C6\n:10066000C828574129543D5741C12857484552454C\n:10067000293D57484548D22857484154293D5748B5\n:100680004148D42857484F4C293D2F484F57CC2834\n:1006900057484F293D2F4855D7285748293D57C817\n:1006A0002857415229233D574548D22857415229BE\n:1006B0003D57414FD228574F52295E3D5745D228CA\n:1006C0005752293DD228574F4D29413D575548CDC6\n:1006D00028574F4D29453D574948CD285745412971\n:1006E000523D5745C82857414E54293D5741413541\n:1006F0004ED4414E5328574552293D45D2285729BB\n:100700003DD75DD820285829203D4548344BD2207C\n:100710002858293DDA2858293D4BD35DD92028593E\n:1007200029203D574159B428594F554E47293D5925\n:1007300041484ED82028594F5552293D594F48D24B\n:100740002028594F55293D5955D720285945532917\n:100750003D594548D3202859293DD9462859293D96\n:1007600041D9505328594348293D4159CB233A5E3A\n:100770002859293D49D9233A5E285929493D49D963\n:10078000203A285929203D41D9203A285929233D8A\n:1007900041D9203A2859295E2B3A233D49C8203AAD\n:1007A0002859295E233D41D92859293D49C85DDA98\n:1007B00020285A29203D5A4959B4285A293DDAEAB5\n:1007C000284129BD2821293DAE282229203D2D413F\n:1007D00048354E4B574F5754AD2822293D4B574F64\n:1007E000573454AD2823293D204E4148344D4245CD\n:1007F000D22824293D20444141344C45D228252982\n:100800003D20504552534548344ED42826293D209A\n:1008100041454EC4282729BD282A293D2041453479\n:1008200053544552494853CB282B293D20504C4125\n:100830004834D3282C293DAC20282D29203DAD2833\n:100840002D29BD282E293D20504F594ED4282F291F\n:100850003D20534C41453453C82830293D205A4946\n:100860005934524FD72028315354293D46455234EC\n:1008700053D4202831305448293D544548344E54EF\n:10088000C82831293D2057414834CE2028324E44D3\n:10089000293D534548344B554EC42832293D2054F8\n:1008A0005557B42028335244293D5448455234C446\n:1008B0002833293D205448524959B42834293D2031\n:1008C000464F4834D22028355448293D46494834BB\n:1008D0004654C82835293D2046415934D62028366B\n:1008E0003429203D534948344B5354495920464FED\n:1008F00048D22836293D20534948344BD32837293C\n:100900003D20534548345655CE2028385448293D7B\n:1009100045593454C82838293D20455934D42839FC\n:10092000293D204E415934CE283A293DAE283B2955\n:100930003DAE283C293D204C454834532044484195\n:1009400045CE283D293D204959344B57554CDA288E\n:100950003E293D2047524559345445522044484190\n:1009600045CE283F293DBF2840293D20414536D46A\n:10097000285E293D204B414534524958D45DC10081\n:100980000000000000000000000000000000000067\n:100990000000000000000000000000000000000057\n:1009A00002020202020282000002020202020203AA\n:1009B000030303030303030303020202020202020E\n:1009C000C0A8B0ACC0A0B8A0C0BCA0ACA8ACC0A02F\n:1009D000A0ACB4A4C0A8A8B0C0BC00000002002015\n:1009E000209B20C0B920CDA34C8A8E0095F7A23958\n:1009F000C5067EC726374E91F155A1FE24452DA789\n:100A000036532E47DA7D7E7E7F8081828282848487\n:100A10008484848587878888898A8B8B8C8C8C6377\n:100A20006F6D706C65782076616C756573206E6F84\n:100A30007420737570706F7274656400696E76618E\n:100A40006C69642073796E74617820666F72206EB1\n:100A5000756D62657200696E742829206172672065\n:100A600032206D757374206265203E3D2032206116\n:100A70006E64203C3D20333600696E76616C69649B\n:100A80002073796E74617820666F7220696E746568\n:100A900067657220776974682062617365202564D8\n:100AA0000000000402020402000002040404000228\n:100AB000020004040301000001030303000101021A\n:100AC0000303040201010301040301000300000405\n:100AD000010102000003024D656D6F72794572726B\n:100AE0006F723A206C6578657220636F756C642054\n:100AF0006E6F7420616C6C6F63617465206D656DE1\n:100B00006F7279006C696E65202575200025712053\n:100B1000006D61696E2E707900736F667420726566\n:100B2000626F6F740D0A00696C6C6567616C206D93\n:100B30006F64650066696C65206E6F7420666F7502\n:100B40006E6400657870656374696E6720612070FB\n:100B5000696E00696E76616C696420706572696F98\n:100B60006400696E76616C69642070756C6C0076E7\n:100B7000616C7565206D75737420626520626574A3\n:100B80007765656E203020616E642031303233002D\n:100B900076616C7565206D757374206265203020F8\n:100BA0006F722031000001010202020203030303FD\n:100BB000030303030463616E277420636F6E76651D\n:100BC000727420696E6620746F20696E74006361B0\n:100BD0006E277420636F6E76657274204E614E20AE\n:100BE000746F20696E7400706F702066726F6D2074\n:100BF000656D707479206C6973740004004D6963CD\n:100C0000726F507974686F6E2076312E392E322DC6\n:100C100033342D67643634313534633733206F6EA7\n:100C200020323031372D30392D30313B206D696322\n:100C3000726F3A6269742076312E302E302D7263D5\n:100C40002E352077697468206E524635313832323D\n:100C50000D0A0054797065202268656C702829227D\n:100C600020666F72206D6F726520696E666F726D9F\n:100C70006174696F6E2E0D0A003E3E3E20000D0A23\n:100C80007061737465206D6F64653B204374726C92\n:100C90002D4320746F2063616E63656C2C20437458\n:100CA000726C2D4420746F2066696E6973680D0A3A\n:100CB0003D3D3D20002E2E2E2000726177205245B2\n:100CC000504C3B204354524C2D4220746F20657889\n:100CD00069740D0A004F4B0066756E6374696F6E20\n:100CE000206D697373696E672072657175697265CD\n:100CF0006420706F736974696F6E616C20617267D4\n:100D0000756D656E74202325640066756E63746965\n:100D10006F6E206D697373696E6720726571756996\n:100D2000726564206B6579776F7264206172677594\n:100D30006D656E7420272571270066756E63746972\n:100D40006F6E206D697373696E67206B6579776F5D\n:100D500072642D6F6E6C7920617267756D656E744B\n:100D600000416C6C6F636174696F6E20696E2069FD\n:100D70006E746572727570742068616E646C6572F1\n:100D8000006E6F7420616E20417564696F467261F8\n:100D90006D6500696E646578206F7574206F6620DC\n:100DA000626F756E64730063616E6E6F742064654C\n:100DB0006C65746520656C656D656E7473206F6617\n:100DC00020417564696F4672616D650063616E6E86\n:100DD0006F74207365742072657475726E5F7069CC\n:100DE0006E20776974686F75742070696E0067652E\n:100DF0006E657261746F722069676E6F72656420D0\n:100E000047656E657261746F7245786974003C67FE\n:100E1000656E657261746F72206F626A65637420BB\n:100E2000272571272061742025703E0063616E279D\n:100E3000742073656E64206E6F6E2D4E6F6E65202C\n:100E400076616C756520746F2061206A7573742DEE\n:100E5000737461727465642067656E657261746F26\n:100E60007200312E302E302D72632E35006D696385\n:100E7000726F3A6269742076312E302E302D726393\n:100E80002E352B33306463383034206F6E2032308F\n:100E900031382D30392D31343B204D6963726F501C\n:100EA0007974686F6E2076312E392E322D33342DC1\n:100EB00067643634313534633733206F6E20323017\n:100EC00031372D30392D3031006D6963726F3A62E0\n:100ED00069742077697468206E5246353138323231\n:100EE0000025713D002C006F6E6C7920736C696376\n:100EF0006573207769746820737465703D312028AC\n:100F0000616B61204E6F6E6529206172652073757B\n:100F100070706F72746564006C6F63616C207661D1\n:100F2000726961626C65207265666572656E636583\n:100F300064206265666F72652061737369676E6DA8\n:100F4000656E74006279746520636F6465206E6FEE\n:100F50007420696D706C656D656E746564004E6FAC\n:100F60002061637469766520657863657074696F64\n:100F70006E20746F207265726169736500526561DD\n:100F800064206572726F72004F75742D6F662D62EA\n:100F90007566666572207265616400577269746572\n:100FA000206572726F720000000000000D0D0E0FC0\n:100FB0000F0F0F0F0C0D0C0F0F0D0D0D0E0D0C0D57\n:100FC0000D0D0C090900000000000000000B0B0BC8\n:100FD0000B0000010B00020E0F0F0F0F0D0204009B\n:100FE00002040001040001040000000000000000F1\n:100FF0000C000000000F0F00000000000A0B0D0E97\n:101000000D0C0C0B090B0B0C0C0C08080C080A0837\n:10101000080A0309060000000000000000030503A1\n:1010200004000000050A020E0D0C0D0C0800010062\n:1010300000010000010000010000000000000000AD\n:101040000A00000A0000000000000000080708086D\n:10105000010100010007050100060100070005016C\n:101060000008000003000000000000000000010074\n:1010700000000000010E0109010001000000000055\n:101080000000000000000000000000000000000060\n:10109000070000050013100001020202030304040C\n:1010A000050608090B0D0F00001F1F1F1F0202027B\n:1010B0000202020202020505020A020805050B0AE5\n:1010C000090808A00808171F121212121E1E141475\n:1010D000141417171A1A1D1D0202020202021A1D09\n:1010E0001B1A1D1B1A1D1B1A1D1B171D17171D1759\n:1010F000171D17171D17171700131313130A0E12B6\n:10110000181A161410140E120E1212100C0E0A12C7\n:101110000E0A080606060611060606060E10090A3D\n:10112000080A060606050600121A141A120C06060C\n:10113000060606060606060606060606060606064F\n:10114000060A0A0606062C1300434343435448424A\n:101150003E282C1E242C4830241E32241C441832D5\n:101160001E18522E36563643494F1A4249253342ED\n:10117000282F4F4F424F6E0048261E2A1E221A1A51\n:101180001A4242426E6E6E5454541A1A1A42424225\n:101190006D566D5454547F7F005B5B5B5B6E5D5B93\n:1011A0005859575852595D3E52583E6E505D5A3C00\n:1011B0006E5A6E517965795B636A51795D525D67EC\n:1011C0004C5D6565796579005A58585858525151A7\n:1011D00051797979706E6E5E5E5E5151517979798F\n:1011E0006565705E5E5E080100020202020404048E\n:1011F00004040404040404040404030304040303B3\n:1012000003030301020302010303030301010303B8\n:1012100003020203020300000505050504040200A1\n:1012200002020003020004020003020002020002A4\n:10123000030003030003B0A000000000000A0E1327\n:10124000181B171510140E120E1212100D0F0B1280\n:101250000E0B09060606000000000000000000005A\n:101260000000000000000000131B151B120D000001\n:10127000000000000000000000000000000000006E\n:101280000001010202030304040505060607070026\n:101290000102030405060708090A0B0C0D0E0F00D6\n:1012A0000103040607090A0C0D0F1012131516008E\n:1012B000020406080A0C0E10121416181A1C1E003E\n:1012C0000205070A0C0F111416191B1E20232500F6\n:1012D0000306090C0F1215181B1E2124272A2D00A6\n:1012E00003070A0E1115181C1F23262A2D3134005E\n:1012F000FCF8F4F0ECE8E4E0DCD8D4D0CCC8C400CE\n:10130000FCF9F5F2EEEBE7E4E0DDD9D6D2CFCB0085\n:10131000FDFAF7F4F1EEEBE8E5E2DFDCD9D6D30035\n:10132000FDFBF8F6F3F1EEECE9E7E4E2DFDDDA00ED\n:10133000FEFCFAF8F6F4F2F0EEECEAE8E6E4E2009D\n:10134000FEFDFBFAF8F7F5F4F2F1EFEEECEBE90055\n:10135000FFFEFDFCFBFAF9F8F7F6F5F4F3F2F10005\n:10136000FFFFFEFEFDFDFCFCFBFBFAFAF9F9F800BD\n:101370000202020204040404040404040404040435\n:10138000040302040402020202020101010101013C\n:101390000101010101020202010001000100050535\n:1013A000050505040402000102000102000102001B\n:1013B00001020002020001030002030002A0A000DB\n:1013C0000000000001010101010101010101010111\n:1013D0000101010101010101010101010100000000\n:1013E00000000000000000000000000000000001FC\n:1013F00001010101000000000000000000000000E9\n:1014000000000000000000000000000000000000DC\n:10141000000000909090909090909090909090907C\n:1014200090909090909090909090909090909090BC\n:1014300090909090909090909090909090909090AC\n:10144000909090909090909090909090909090909C\n:10145000909090909090909090909090909090908C\n:10146000909090909090909090909090909090907C\n:10147000909090909090909090909090909090906C\n:10148000909090909090909090909090909090905C\n:1014900090909070707070707070707070707070EC\n:1014A000707070707070707070707070707070703C\n:1014B000707070707070707070707070707070702C\n:1014C000707070707070707070707070707070701C\n:1014D000707070707070707070707070707070700C\n:1014E00070707070707070707070707070707070FC\n:1014F00070707070707070707070707070707070EC\n:1015000070707070707070707070707070707070DB\n:1015100070707038846B19C66318867398C6B11CD6\n:10152000CA318CC73188C23098463118C6350CCACA\n:10153000310CC62110246912C23114C471084A2228\n:1015400049AB6AA8AC495132D55288936C942215A4\n:1015500054D22596D450A5462108856B18C4631033\n:10156000CE6B188C71198C63350CC63399CC6CB565\n:101570004EA29946212882952EE3309CC5309CA22C\n:10158000B19C67318866592C5318846750CAE30AA6\n:10159000ACAB30AC62308C63109462B18C82289614\n:1015A0003398D6B54C6229A54AB59CC63114D638B5\n:1015B0009C4BB4866518AE671CA6631996231984E4\n:1015C0001308A652ACCA22896EAB198C6234C4626D\n:1015D00019866318C42358D6A35042544AAD4A25ED\n:1015E000116B64894A63398A23312AEAA2A944C566\n:1015F00012CD42348C62188C63114866319D44339D\n:101600001D46319CC6B10CCD3288C4731886730850\n:10161000D663580781E0F03C0787903C7C0FC7C039\n:10162000C0F07C1E078080001C7870F1C71FC00CC2\n:10163000FE1C1F1F0E0A7AC071F2838F030F0F0C5E\n:101640000079F861E0430F83E718F9C113DAE96321\n:101650008F0F838387C31F3C70F0E1E1E387B8718C\n:101660000E20E38D48781C938730E1C1C1E47821D6\n:101670008383C3870639E5C387070E1C1C70F4718A\n:101680009C603632C31E3CF38F0E3C70E3C78F0F55\n:101690000F0E3C78F0E38706F0E307C199870F1837\n:1016A000787070FCF310B18C8C317C70E1863C64F6\n:1016B0006CB0E1E30F238F0F1E3E383C387B8F0761\n:1016C0000E3CF4171E3C78F29E7249E325363858DA\n:1016D00039E2DE3C7878E1C761E1E1B0F0F0C3C700\n:1016E0000E38C0F0CE73731834B0E1C78E1C3CF8CE\n:1016F00038F0E1C18B868F1C7870F078ACB18F39EF\n:1017000031DB3861C30E0E387873171E391E38640A\n:10171000E1F1C14E0F40A202C58F81A1FC12086405\n:10172000E03C22E045078E0C3290F01F2049E0F8A3\n:101730000C60F0171A41AAA4D08D12821E1E03F865\n:101740003E030C73807044260324E13E044E041CC7\n:10175000C109CC9E902107904364C00FC6909CC1E4\n:101760005B03E21D81E05E1D0384B82C0F80B18312\n:10177000E030411E43898350FC242E1383F17C4CBE\n:101780002CC90D83B0B582E4E8069C07A0991D071B\n:101790003E828F70307440CA10E4E80F92143F0606\n:1017A000F8848843810A343941C6E31C4703B0B842\n:1017B000130AC264F818F960B3C0652060A68CC330\n:1017C000812030261E1C38D301B02640F40BC342C2\n:1017D0001F8532266040C9CB01EC112840FA043441\n:1017E000E0704C8C1D07690316C80423E8C69A0BE9\n:1017F0001A03E0760605CF1EBC5831716600F83F2B\n:1018000004FC0C74278A8071C23A2606C01F050F9B\n:101810009840AE017FC007FF000EFE0003DF80038B\n:10182000EF801BF1C200E7E018FCE021FC803CFCEB\n:10183000400E7E003F3E000FFE001FFF003EF007FF\n:10184000FC007E103FFF003F380E7C01870CFCC778\n:10185000003E040F3E1F0F0F1F0F028387CF038729\n:101860000F3FC0079E603FC003FE003FE077E1C02E\n:10187000FEE0C3E001DFF80307007E70007C38184B\n:10188000FE0C1E781C7C3E0E1F1E1E3E007F830732\n:10189000DB878307C7071071FF003FE201E0C1C388\n:1018A000E1007FC005F020F8F070FE7879F8023F83\n:1018B0000C8F030F9FE0C1C78703C3C3B0E1E1C131\n:1018C000E3E071F000FC707C0C3E380E1C70C3C766\n:1018D0000381C1C7E7000FC7871909EFC433E0C10F\n:1018E000FCF870F078F8F061C7001FF8017CF8F0A0\n:1018F00078703C7CCE0E2183CF08078F08C1878F7C\n:1019000080C7E30007F8E0EF0039F7800EF8E1E365\n:10191000F8219FC0FF03F807C01FF8C404FCC4C12E\n:10192000BC87F00FC07F05E025ECC03E8447F08EF9\n:1019300003F803FBC019F8079C0C17F807E01FA178\n:10194000FC0FFC01F03F00FE03F01F00FD00FF88CC\n:101950000DF901FF007007C03E42F30DC47F80FC0B\n:1019600007F05EC03F00783F81FF01F801C3E80C3B\n:10197000E4648FE40FF007F0C21F007FC06F807E29\n:1019800003F807F03FC0780F8207FE2277700276D7\n:1019900003FE00FE67007CC7F18EC63BE03F84F388\n:1019A00019D80399FC09B80FF8009D2461F90D00BE\n:1019B000FD03F01F903F01F81FD00FF83701F80723\n:1019C000F00FC03F00FE03F80FC03F00FA03F00F16\n:1019D00080FF01B807F001FC01BC80131E007FE10D\n:1019E000407FA07FB0003FC01FC0380FF01F80FFB6\n:1019F00001FC03F17E01FE01F0FF007FC01D07F036\n:101A00000FC07E06E007E00FF806C1FE01FC03E010\n:101A10000F00FC00000000000000000000000000BB\n:101A200000000000000000000000000000000000B6\n:101A3000000000F1E2D3BB7C9501020303007200B9\n:101A40000200000000000000000000000000000094\n:101A50000000000000001B00001900000000000052\n:101A60000000000000001010101010102020202096\n:101A70002020303030303030304040404040404016\n:101A800050505050505050506060606060606060D6\n:101A90006060606070707070707070707070707086\n:101AA0007070707070707070707070707070707036\n:101AB0007070706060606060606060606060605006\n:101AC00050505050505050404040404040403030C6\n:101AD0003030303030202020202020101010101006\n:101AE000100000000000F0F0F0F0F0F0E0E0E0E0C6\n:101AF000E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C036\n:101B0000B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A055\n:101B1000A0A0A0A090909090909090909090909085\n:101B200090909090909090909090909090909090B5\n:101B3000909090A0A0A0A0A0A0A0A0A0A0A0A0B0C5\n:101B4000B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0E5\n:101B5000D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F085\n:101B6000F000000000E0E6ECF3F900060C06181A9D\n:101B700017171700000000005449433F282C1F2569\n:101B80002D4931241E33251D4518321E18532E367B\n:101B900056000000000000000000000000000000EF\n:101BA00000000048271F2B1E220001000100E2EC6C\n:101BB000F0F4F8FC0004617267756D656E74732053\n:101BC0006D757374206265206B6579776F726473CD\n:101BD00000756E6B6E6F776E20617267756D656EE6\n:101BE0007420272571270076616C7565206F7574E8\n:101BF000206F662072616E676520666F7220617269\n:101C000067756D656E7420272571270072656365A1\n:101C100069766564207061636B6574206973206EFA\n:101C20006F74206120737472696E670072616469F9\n:101C30006F206973206E6F7420656E61626C6564DD\n:101C400000696D6167652063616E6E6F7420626507\n:101C5000206D6F64696669656420287472792063F9\n:101C60006F7079696E672066697273742900657890\n:101C700070656374696E6720616E20696D61676568\n:101C8000006D757374207370656369667920626F87\n:101C90007468206F6666736574730073697A652073\n:101CA00063616E6E6F74206265206E656761746932\n:101CB0007665006272696768746E657373206D750E\n:101CC0006C7469706C696572206D757374206E6FC9\n:101CD00074206265206E6567617469766500627262\n:101CE000696768746E657373206F7574206F662002\n:101CF000626F756E647300696E6465782063616EEF\n:101D00006E6F74206265206E656761746976650028\n:101D1000696E64657820746F6F206C61726765000E\n:101D2000756E65787065637465642063686172615F\n:101D30006374657220696E20496D61676520646512\n:101D400066696E6974696F6E00496D6167652873B5\n:101D5000292074616B6573206120737472696E67EA\n:101D600000696D6167652064617461206973206931\n:101D70006E636F72726563742073697A6500496D72\n:101D800061676528292074616B6573203020746F4A\n:101D9000203320617267756D656E747300496D61E3\n:101DA000676528000A2020202000270A2020202004\n:101DB00027003031323334353637383900696D61B8\n:101DC000676573206D757374206265207468652083\n:101DD00073616D652073697A6500202020202020C2\n:101DE0002020000808080808080808006F626A65D3\n:101DF0006374207769746820627566666572207006\n:101E0000726F746F636F6C2072657175697265644F\n:101E100000257120696E6469636573206D75737444\n:101E200020626520696E7465676572732C206E6F21\n:101E30007420257300257120696E646578206F75A4\n:101E400074206F662072616E6765006F626A6563F9\n:101E5000742027257327206973206E6F74206120FA\n:101E60007475706C65206F72206C69737400726594\n:101E700071756573746564206C656E677468202580\n:101E80006420627574206F626A6563742068617390\n:101E9000206C656E6774682025640063616E27742A\n:101EA00020636F6E7665727420257320746F2066D0\n:101EB0006C6F61740063616E277420636F6E76656A\n:101EC000727420257320746F20696E74006F626ACB\n:101ED000656374206F6620747970652027257327E9\n:101EE00020686173206E6F206C656E282900547223\n:101EF0006163656261636B20286D6F737420726526\n:101F000063656E742063616C6C206C617374293A34\n:101F10000A00202046696C6520222571222C206C45\n:101F2000696E65202564002C20696E2025710A00E9\n:101F30003C25713E0027257327206F626A65637414\n:101F400020646F6573206E6F7420737570706F728C\n:101F500074206974656D2064656C6574696F6E00CA\n:101F600027257327206F626A656374206973206E6A\n:101F70006F742073756273637269707461626C65EB\n:101F80000027257327206F626A65637420646F657C\n:101F900073206E6F7420737570706F727420697423\n:101FA000656D2061737369676E6D656E74000A00FC\n:101FB0000B0C0D0E0F63616E6E6F74207065726690\n:101FC0006F726D2072656C617469766520696D70E1\n:101FD0006F7274006E6F206D6F64756C65206E613A\n:101FE0006D65642027257127005F5F696E69745FE6\n:101FF0005F2E7079006261642074797065636F642C\n:10200000650073747265616D206F706572617469CB\n:102010006F6E206E6F7420737570706F727465646C\n:10202000006F7574206F66206D656D6F7279004763\n:102030006C6974636865733A2025640D0A007465E1\n:10204000787420746F6F206C6F6E6700636F756CAF\n:1020500064206E6F7420706172736520696E707594\n:102060007400506C757320616E79206D6F64756CAF\n:102070006573206F6E207468652066696C6573797E\n:102080007374656D0A006F626A656374200020696D\n:1020900073206F6620747970652025730A00202DE7\n:1020A0002D200063616E277420636F6E76657274F5\n:1020B0002027257127206F626A65637420746F2062\n:1020C000257120696D706C696369746C790062793F\n:1020D0007465732076616C7565206F7574206F660A\n:1020E0002072616E67650077726F6E67206E756D26\n:1020F000626572206F6620617267756D656E7473BC\n:1021000000696E636F6D706C65746520666F726DCB\n:10211000617400666F726D617420726571756972A9\n:1021200065732061206469637400696E636F6D700C\n:102130006C65746520666F726D6174206B657900E3\n:102140006E6F7420656E6F75676820617267756D5C\n:10215000656E747320666F7220666F726D61742095\n:10216000737472696E6700252563207265717569E5\n:1021700072657320696E74206F72206368617200EB\n:10218000696E7465676572207265717569726564E0\n:1021900000756E737570706F7274656420666F720F\n:1021A0006D617420636861726163746572202725B4\n:1021B00063272028307825782920617420696E648F\n:1021C0006578202564006E6F7420616C6C206172EC\n:1021D00067756D656E747320636F6E766572746576\n:1021E0006420647572696E6720737472696E67200B\n:1021F000666F726D617474696E670073696E676C87\n:102200006520277D2720656E636F756E7465726526\n:102210006420696E20666F726D61742073747269D8\n:102220006E670062616420636F6E76657273696FBA\n:102230006E2073706563696669657200756E6D61A5\n:10224000746368656420277B2720696E20666F723F\n:102250006D617400657870656374656420273A2742\n:1022600020616674657220666F726D617420737090\n:10227000656369666965720063616E2774207377B0\n:10228000697463682066726F6D206175746F6D612B\n:10229000746963206669656C64206E756D62657231\n:1022A000696E6720746F206D616E75616C20666960\n:1022B000656C642073706563696669636174696FD6\n:1022C0006E007475706C6520696E646578206F753A\n:1022D00074206F662072616E676500617474726944\n:1022E0006275746573206E6F7420737570706F7291\n:1022F000746564207965740063616E277420737758\n:10230000697463682066726F6D206D616E75616CB3\n:10231000206669656C6420737065636966696361D2\n:1023200074696F6E20746F206175746F6D6174696C\n:1023300063206669656C64206E756D626572696E96\n:1023400067003C3E3D5E00626364654566466747E4\n:102350006E6F7378582500696E76616C69642066CB\n:102360006F726D6174207370656369666965720070\n:102370007369676E206E6F7420616C6C6F77656433\n:1023800020696E20737472696E6720666F726D616A\n:102390007420737065636966696572007369676E3E\n:1023A000206E6F7420616C6C6F7765642077697440\n:1023B0006820696E746567657220666F726D6174FE\n:1023C00020737065636966696572202763270075ED\n:1023D0006E6B6E6F776E20666F726D617420636FC7\n:1023E0006465202725632720666F72206F626A6507\n:1023F0006374206F66207479706520272573270029\n:10240000756E6B6E6F776E20666F726D6174206390\n:102410006F6465202725632720666F72206F626ACC\n:10242000656374206F6620747970652027666C6F11\n:1024300061742700273D2720616C69676E6D656EAA\n:1024400074206E6F7420616C6C6F77656420696EA8\n:1024500020737472696E6720666F726D6174207389\n:10246000706563696669657200756E6B6E6F776E15\n:1024700020666F726D617420636F64652027256329\n:102480002720666F72206F626A656374206F662012\n:102490007479706520277374722700656D70747984\n:1024A00020736570617261746F72005C2563005CFB\n:1024B0005C005C6E005C72005C74005C78253032FD\n:1024C000780073746172742F656E6420696E64693C\n:1024D00063657300737562737472696E67206E6FE3\n:1024E0007420666F756E64006A6F696E206578701F\n:1024F000656374732061206C697374206F66207348\n:1025000074722F6279746573206F626A6563747385\n:1025100020636F6E73697374656E74207769746875\n:102520002073656C66206F626A65637400252E2ACD\n:1025300073007273706C6974284E6F6E652C6E290F\n:102540000020090A0D0B0C006469766973696F6ECF\n:10255000206279207A65726F006E656761746976B2\n:102560006520736869667420636F756E74006F769A\n:102570006572666C6F7720636F6E76657274696ED4\n:1025800067206C6F6E6720696E7420746F206D61B8\n:102590006368696E6520776F726400000000050053\n:1025A0000051282573290A008F012A00FA015F00D3\n:1025B0008A012F006C0325236F007B0325237800FD\n:1025C00058057B3A23627D00AF010A0073206D61DC\n:1025D00078696D756D20726563757273696F6E20B1\n:1025E000646570746820657863656564656400BDC2\n:1025F000083C6D6F64756C653E0080083C6C616DD5\n:102600006264613E00D40A3C6C697374636F6D70E0\n:102610003E00CC0A3C64696374636F6D703E005485\n:10262000093C736574636F6D703E0034093C6765E7\n:102630006E657870723E0052083C737472696E6702\n:102640003E00E3073C737464696E3E00B705757421\n:10265000662D3800940468656C70007305696E70AF\n:10266000757400E00B636F6C6C656374696F6E73F7\n:1026700000120673747275637400C0086D6963722A\n:102680006F626974001005726573657400EA057302\n:102690006C65657000C80C72756E6E696E675F74EC\n:1026A000696D6500D00570616E696300E90B746542\n:1026B0006D706572617475726500A30474686973E6\n:1026C000006307617574686F727300F10B616E745B\n:1026D00069677261766974790055046C6F7665007C\n:1026E0002C0862616461626F6F6D00CD124D696389\n:1026F000726F4269744469676974616C50696E00F5\n:1027000007184D6963726F426974416E616C6F673F\n:102710004469676974616C50696E0052104D696359\n:10272000726F426974546F75636850696E00920CE1\n:10273000726561645F6469676974616C00FD0D773F\n:10274000726974655F6469676974616C00620B72B9\n:102750006561645F616E616C6F67002D0C777269F3\n:1027600074655F616E616C6F670008117365745FFB\n:10277000616E616C6F675F706572696F6400EE1EF9\n:102780007365745F616E616C6F675F706572696FAE\n:10279000645F6D6963726F7365636F6E6473007AF3\n:1027A0001E6765745F616E616C6F675F70657269EB\n:1027B0006F645F6D6963726F7365636F6E647300DE\n:1027C000040A69735F746F756368656400790675E0\n:1027D0006E7573656400C80A617564696F5F706CBB\n:1027E000617900F306627574746F6E008005746F12\n:1027F000756368002002337600AF086765745F6D0B\n:102800006F646500E60A4D6963726F426974494FEF\n:1028100000020470696E3000030470696E310001BB\n:102820000470696E3200010470696E330006047032\n:10283000696E3400070470696E3500040470696EB7\n:102840003600050470696E37000A0470696E38003E\n:102850000B0470696E3900530570696E3130005297\n:102860000570696E313100510570696E313200506A\n:102870000570696E313300570570696E313400564A\n:102880000570696E313500550570696E3136005A34\n:102890000570696E313900300570696E323000495B\n:1028A000086765745F70756C6C00DD087365745F34\n:1028B00070756C6C00BA0750554C4C5F555000ADAC\n:1028C0000950554C4C5F444F574E001E074E4F5F0A\n:1028D00050554C4C00870D4D6963726F42697449C5\n:1028E0006D616765006205496D6167650042056954\n:1028F0006D616765002305776964746800FA06688E\n:10290000656967687400B706696E7665727400CA97\n:102910000466696C6C00B0097365745F70697865F2\n:102920006C00A4096765745F706978656C00A10A22\n:1029300073686966745F6C65667400BA0B73686966\n:1029400066745F726967687400DF0873686966742B\n:102950005F757000480A73686966745F646F776EAC\n:1029600000E2096D6F6E6F737061636500F604625B\n:102970006C6974000F05484541525400CF0B48451F\n:102980004152545F534D414C4C0015054841505045\n:1029900059009303534144009B05534D494C450056\n:1029A000A608434F4E4655534544002605414E4721\n:1029B0005259000B0641534C454550008809535568\n:1029C0005250524953454400C60553494C4C590096\n:1029D0003008464142554C4F55530005034D45487C\n:1029E000000A035945530004024E4F006E07434C42\n:1029F0004F434B313200DC06434C4F434B3100DF39\n:102A000006434C4F434B3200DE06434C4F434B339F\n:102A100000D906434C4F434B3400D806434C4F4338\n:102A20004B3500DB06434C4F434B3600DA06434C34\n:102A30004F434B3700D506434C4F434B3800D40629\n:102A4000434C4F434B39006C07434C4F434B3130A1\n:102A5000006D07434C4F434B313100ED074152525B\n:102A60004F575F4E00C8084152524F575F4E4500C6\n:102A7000E6074152524F575F4500B5084152524F49\n:102A8000575F534500F0074152524F575F5300A71D\n:102A9000084152524F575F535700F4074152524F6B\n:102AA000575F5700DA084152524F575F4E5700EBBD\n:102AB00008545249414E474C45008F0D54524941EC\n:102AC0004E474C455F4C45465400510A43484553D8\n:102AD00053424F41524400A1074449414D4F4E4497\n:102AE00000610D4449414D4F4E445F534D414C4CA4\n:102AF00000840653515541524500840C53515541B1\n:102B000052455F534D414C4C00EB06524142424905\n:102B100054005E03434F5700AB0E4D555349435F7E\n:102B200043524F5443484554005F0C4D555349435D\n:102B30005F515541564552006C0D4D555349435F09\n:102B40005155415645525300330950495443484664\n:102B50004F524B00E204584D41530055065041433B\n:102B60004D414E00B4065441524745540045065469\n:102B7000534849525400270B524F4C4C4552534B2B\n:102B8000415445003C044455434B00A105484F5572\n:102B9000534500C808544F52544F495345005609F5\n:102BA000425554544552464C5900E90B535449433D\n:102BB0004B46494755524500C20547484F535400BC\n:102BC000980553574F5244007D07474952414646A6\n:102BD00045004805534B554C4C00C908554D4252D1\n:102BE000454C4C41009705534E414B4500F10A417D\n:102BF0004C4C5F4152524F575300C00A414C4C5FFE\n:102C0000434C4F434B53005A0F4D6963726F4269F7\n:102C100074446973706C617900910E7365745F62BE\n:102C200072696768746E657373009E107365745F74\n:102C3000646973706C61795F6D6F6465001F076410\n:102C40006973706C617900860473686F7700280679\n:102C50007363726F6C6C00500564656C617900B8C9\n:102C6000067374726964650085057374617274001B\n:102C70008E04776169740039046C6F6F7000E00432\n:102C8000636F7079000B0463726F7000B505736C2D\n:102C90006963650098047465787400F60B536C6979\n:102CA000636564496D61676500BD0F5363726F6C46\n:102CB0006C696E67537472696E670064026F6E00B0\n:102CC0008A036F666600610569735F6F6E00C106F7\n:102CD00046616361646500160E4D6963726F4269F7\n:102CE00074427574746F6E00ED08627574746F6E63\n:102CF0005F6100EE08627574746F6E5F6200E60AD1\n:102D000069735F7072657373656400F90B77617343\n:102D10005F7072657373656400FD0B6765745F7047\n:102D2000726573736573005B154D6963726F4269F9\n:102D300074416363656C65726F6D65746572001EC6\n:102D40000D616363656C65726F6D657465720034E7\n:102D5000056765745F780035056765745F790036CF\n:102D6000056765745F7A00F40A6765745F76616C65\n:102D700075657300D40F63757272656E745F6765F5\n:102D8000737475726500070A69735F67657374759C\n:102D9000726500D80B7761735F67657374757265D0\n:102DA00000180C6765745F676573747572657300EE\n:102DB000A0027570003704646F776E00DE046C65E6\n:102DC000667400E5057269676874002107666163CF\n:102DD000652075700036096661636520646F776EE3\n:102DE00000B6086672656566616C6C003102336717\n:102DF0000094023667005A02386700310573686133\n:102E00006B6500100F4D6963726F426974436F6D9B\n:102E100070617373005507636F6D70617373002D7C\n:102E20000768656164696E6700230D69735F63619C\n:102E30006C6962726174656400020963616C696245\n:102E400072617465004911636C6561725F63616CE6\n:102E50006962726174696F6E00F4126765745F660F\n:102E600069656C645F737472656E67746800B80B33\n:102E70004D6963726F426974493243005D03693280\n:102E80006300B704726561640098057772697465C0\n:102E900000B6046164647200CB016E007403627555\n:102EA0006600F20672657065617400E5046672651D\n:102EB0007100530373646100F90373636C000405CC\n:102EC0006D7573696300A1096672657175656E63DE\n:102ED00079007B086475726174696F6E0083057098\n:102EE0006974636800F20370696E002104706C619C\n:102EF00079009B097365745F74656D706F008F094D\n:102F00006765745F74656D706F00DA0362706D00E1\n:102F100043057469636B73009F0542414444590043\n:102F20009D0742415F44494E4700FC0842495254C4\n:102F30004844415900C805424C5545530059054382\n:102F40004841534500FC0944414441444144554DE6\n:102F500000480B454E5445525441494E455200429B\n:102F60000746554E4552414C00D30446554E4B0042\n:102F7000AA094A554D505F444F574E00FD074A5528\n:102F80004D505F5550003D044E59414E006B034F6C\n:102F9000444500970A504F5745525F444F574E00E3\n:102FA0000108504F5745525F5550003A075052455F\n:102FB0004C55444500EB0950554E43484C494E454D\n:102FC00000B106505954484F4E00C70852494E4769\n:102FD000544F4E45006409574157415741574141AD\n:102FE00000170757454444494E4700C40161006734\n:102FF000026123002C0461233A31002E0461233A3C\n:10300000330076026132007002613400BB04613427\n:103010003A3100B90461343A33000F03613A3100A8\n:103020000C03613A32000A03613A34000B03613A3F\n:103030003500C7016200DE0462323A310094026258\n:1030400033009302623400D80462343A3100DB0466\n:1030500062343A32009202623500D90462353A3164\n:10306000000C03623A31000F03623A3200C601637A\n:1030700000A502632300700363233500BB056323AF\n:10308000353A3100B8056323353A32006E046323C4\n:103090003A3100670463233A3800FC0463323A3261\n:1030A00000B5026333007C0463333A33007B04636E\n:1030B000333A3400B202633400F90463343A310025\n:1030C000FB0463343A3300FC0463343A3400B30243\n:1030D000633500780463353A31007B0463353A3256\n:1030E000007A0463353A33007D0463353A34000DC9\n:1030F00003633A31000E03633A32000F03633A333D\n:10310000000803633A34000403633A3800C10164E1\n:1031100000C202642300FF056423353A32000A042A\n:1031200064233A32000B0464233A3300D20264333E\n:1031300000D5026434001E0464343A3100D40264C1\n:1031400035001F0464353A31001C0464353A3200FE\n:103150000A03643A31000903643A32000803643A0E\n:1031600033000F03643A34000E03643A35000D0354\n:10317000643A36000303643A3800C0016500BA04BB\n:1031800065333A3300F4026534003F0465343A3164\n:1031900000F5026535003F0465363A33000B0365E0\n:1031A0003A31000803653A32000903653A33000EEC\n:1031B00003653A34000F03653A35000C03653A366F\n:1031C000000203653A3800E00465623A3800C30142\n:1031D00066000102662300350366233500FD05669F\n:1031E00023353A32004B0466233A31004804662303\n:1031F0003A3200420466233A38001102663200086F\n:1032000003663A31000B03663A32000A03663A332A\n:10321000000D03663A34000103663A3800C20167C4\n:10322000002102672300EA0467233A3100E80467BB\n:10323000233A3300FA0467333A3100360267340028\n:103240007D0467343A31007E0467343A3200370235\n:10325000673500FC0467353A31000903673A3100ED\n:103260000A03673A32000B03673A33000103673AF7\n:103270003800D7017200CB0472343A32001C03725A\n:103280003A31001F03723A32001E03723A330032A1\n:103290000C4D6963726F4269745541525400770452\n:1032A00075617274001F04696E697400F5086261CB\n:1032B0007564726174650049046269747300420642\n:1032C000706172697479009D0473746F70004104B9\n:1032D00070696E73008902747800CF0272780013EF\n:1032E00003616E7900760772656164616C6C00F948\n:1032F00008726561646C696E65004B087265616493\n:10330000696E746F006A034F444400DD04455645FE\n:103310004E004A0B4D6963726F4269745350490005\n:10332000CF037370690026046D6F646500720473C7\n:10333000636C6B001D046D6F7369009D046D697390\n:103340006F00890E77726974655F72656164696E7A\n:10335000746F0069086E656F706978656C00690844\n:103360004E656F506978656C007C05636C656172B1\n:1033700000BE0672616E646F6D00660B67657472E5\n:10338000616E64626974730092047365656400A37E\n:103390000972616E6472616E676500AF0772616E7B\n:1033A00064696E74002E0663686F696365000107C7\n:1033B000756E69666F726D005305617564696F00A3\n:1033C000AE0A417564696F4672616D6500270A72C5\n:1033D000657475726E5F70696E00B806736F757292\n:1033E0006365005608636F707966726F6D00A204A2\n:1033F0006E616D650079026F7300B705756E616D62\n:1034000065000B0B6D6963726F707974686F6E0085\n:103410009B077379736E616D650062086E6F6465FA\n:103420006E616D6500EC0772656C6561736500BF68\n:103430000776657273696F6E001A07427974657357\n:10344000494F001E0654657874494F00F70877729B\n:10345000697461626C650098076C69737464697261\n:103460000060076D616368696E6500200473697AA6\n:103470006500040A69735F706C6179696E67006D3D\n:103480000673706565636800AE0373617900940923\n:1034900070726F6E6F756E636500B60473696E67E8\n:1034A0000031067468726F6174006E056D6F75741B\n:1034B00068006205737065656400D40564656275B3\n:1034C000670043097472616E736C61746500D405A2\n:1034D000726164696F004F06636F6E66696700BF53\n:1034E0000A73656E645F627974657300880D726536\n:1034F00063656976655F627974657300B9047365A5\n:103500006E64004E0772656365697665006B1272C2\n:103510006563656976655F62797465735F696E740A\n:103520006F00020C726563656976655F66756C6C29\n:103530000059066C656E6774680094057175657551\n:10354000650026076368616E6E656C00DA05706F52\n:1035500077657200A809646174615F7261746500C7\n:1035600073076164647265737300BA0567726F757F\n:1035700070007B0C524154455F3235304B42495408\n:1035800000DB0A524154455F314D42495400580A0C\n:10359000524154455F324D424954002D0F417269EA\n:1035A00074686D657469634572726F7200970E413D\n:1035B0007373657274696F6E4572726F7200210E5B\n:1035C0004174747269627574654572726F72000736\n:1035D0000D42617365457863657074696F6E009123\n:1035E00008454F464572726F7200F008456C6C6971\n:1035F0007073697300F209457863657074696F6E62\n:1036000000160D47656E657261746F724578697456\n:1036100000200B496D706F72744572726F72005C9E\n:1036200010496E64656E746174696F6E4572726F75\n:103630007200830A496E6465784572726F7200EA9F\n:10364000084B65794572726F7200AF114B657962F4\n:103650006F617264496E7465727275707400FF0BED\n:103660004C6F6F6B75704572726F7200DC0B4D653D\n:103670006D6F72794572726F7200BA094E616D6535\n:103680004572726F720017084E6F6E6554797065DF\n:1036900000C6134E6F74496D706C656D656E746510\n:1036A000644572726F7200A1074F534572726F7258\n:1036B00000F00B4F72646572656444696374008145\n:1036C0000D4F766572666C6F774572726F7200612E\n:1036D0000C52756E74696D654572726F7200EA0DF9\n:1036E00053746F70497465726174696F6E00940BE6\n:1036F00053796E7461784572726F7200200A537943\n:103700007374656D45786974002509547970654551\n:1037100072726F7200220C556E69636F6465457238\n:10372000726F7200960A56616C75654572726F729F\n:1037300000B6115A65726F4469766973696F6E4598\n:1037400072726F7200C4075F5F6164645F5F002B19\n:10375000085F5F626F6F6C5F5F00420F5F5F627553\n:10376000696C645F636C6173735F5F00A7085F5F80\n:1037700063616C6C5F5F002B095F5F636C617373E7\n:103780005F5F00C60C5F5F636F6E7461696E735F2D\n:103790005F00FD0B5F5F64656C6974656D5F5F0062\n:1037A0006D095F5F656E7465725F5F0071065F5FD4\n:1037B00065715F5F0045085F5F657869745F5F00F2\n:1037C000A7065F5F67655F5F00400B5F5F676574BB\n:1037D000617474725F5F00260B5F5F676574697464\n:1037E000656D5F5F00B6065F5F67745F5F00F70837\n:1037F0005F5F686173685F5F00380A5F5F696D7063\n:103800006F72745F5F005F085F5F696E69745F5F0E\n:1038100000CF085F5F697465725F5F00CC065F5F11\n:103820006C655F5F00E2075F5F6C656E5F5F005D08\n:10383000065F5F6C745F5F008E085F5F6D61696E2D\n:103840005F5F00FF0A5F5F6D6F64756C655F5F00AF\n:10385000E2085F5F6E616D655F5F0079075F5F6EB5\n:1038600065775F5F0002085F5F6E6578745F5F0079\n:10387000C8085F5F706174685F5F006B0C5F5F71A9\n:1038800075616C6E616D655F5F00010E5F5F7265F3\n:10389000706C5F7072696E745F5F0010085F5F72BA\n:1038A0006570725F5F00610C5F5F72657665727351\n:1038B00065645F5F00320B5F5F7365746974656D8B\n:1038C0005F5F00D0075F5F7374725F5F0021075F07\n:1038D0005F7375625F5F004F0D5F5F747261636558\n:1038E0006261636B5F5F009503616273001B04613B\n:1038F000636F7300440361646400A805616C6967C9\n:103900006E004403616C6C009104616E645F006B37\n:1039100006617070656E6400C20461726773007C3A\n:103920000561727261790050046173696E00430928\n:1039300061736D5F7468756D620065036173720019\n:103940001F046174616E00CD056174616E3200E028\n:103950000362696E00CB02626C00EB04626F6F6CF5\n:1039600000970C626F756E645F6D6574686F6400BC\n:10397000F7086275696C74696E7300DF0262780023\n:1039800076096279746561727261790022086279E0\n:103990007465636F6465006109627974656F726450\n:1039A0006572005C056279746573004D0863616C33\n:1039B0006373697A65000D0863616C6C61626C65A4\n:1039C0000006046365696C00DC0363687200B40B75\n:1039D000636C6173736D6574686F64003305636C49\n:1039E0006F7365007407636C6F73757265005003C5\n:1039F000636C7A003B03636D70009B07636F6C6CB4\n:103A000065637400C005636F6E7374003308636F81\n:103A100070797369676E007A03636F7300A605633C\n:103A20006F756E7400E805637073696400E905637F\n:103A3000707369650015046461746100CE07646584\n:103A40006661756C74000207646567726565730072\n:103A50003F0464696374002D09646963745F766967\n:103A6000657700720A646966666572656E636500F3\n:103A70009C11646966666572656E63655F757064E6\n:103A800061746500FA036469720091076469736187\n:103A9000626C6500040B64697361626C655F6972D6\n:103AA00071000F076469736361726400B80664692A\n:103AB000766D6F64000406656E61626C6500910A44\n:103AC000656E61626C655F697271000A03656E64A0\n:103AD000001B08656E647377697468007109656E10\n:103AE000756D6572617465009B046576616C001E7E\n:103AF00004657865630085046578697400C80365AA\n:103B00007870006306657874656E6400930466617E\n:103B1000627300250666696C74657200010466694B\n:103B20006E64003505666C6F6174007D05666C6FB0\n:103B30006F7200E504666D6F64002606666F726D35\n:103B40006174001C05667265787000350A66726FD4\n:103B50006D5F627974657300370866726F6D6B65AF\n:103B6000797300ED0966726F7A656E73657400276C\n:103B70000866756E6374696F6E0061026763009614\n:103B80000967656E657261746F72003303676574EF\n:103B900000C00767657461747472009D07676C6F7D\n:103BA00062616C73008C076861736174747200B732\n:103BB000046861736800AD09686561705F6C6F636C\n:103BC0006B00560B686561705F756E6C6F636B00A0\n:103BD0007003686578002802696400170E696D70CB\n:103BE0006C656D656E746174696F6E007B05696EDE\n:103BF000646578001206696E736572740016036955\n:103C00006E7400280C696E74657273656374696FF5\n:103C10006E000613696E74657273656374696F6E06\n:103C20005F75706461746500EB076973616C70683F\n:103C30006100A8076973646967697400F70A6973AA\n:103C40006469736A6F696E74009A096973656E615D\n:103C5000626C656400A608697366696E69746500C4\n:103C60003E056973696E6600B60A6973696E73749E\n:103C7000616E636500FC0769736C6F776572009E07\n:103C80000569736E616E005B0769737370616365CC\n:103C900000B50A6973737562636C61737300B90868\n:103CA000697373756273657400FC0A697373757068\n:103CB000657273657400DD076973757070657200F5\n:103CC000E3056974656D73008F046974657200475C\n:103CD000086974657261746F7200A7046A6F696E17\n:103CE00000F6086B62645F696E74720032036B6584\n:103CF000790001046B6579730043056C6162656C42\n:103D00000040056C64657870005F036C6472005D50\n:103D1000046C64726200E2056C647265780057049A\n:103D20006C6472680062036C656E0027046C6973D2\n:103D3000740089066C6974746C65003B066C6F6373\n:103D4000616C730021036C6F6700C6056C6F77654B\n:103D50007200B6036C736C00A8036C737200E50606\n:103D60006C737472697000B9036D61700035046D15\n:103D700061746800B1036D61780020036D656D00AA\n:103D800007056D656D31360041056D656D33320097\n:103D900018046D656D380052096D656D5F616C6C5E\n:103DA0006F6300CB086D656D5F6672656500D10855\n:103DB0006D656D5F696E666F00AF036D696E00259E\n:103DC000046D6F646600BF066D6F64756C6500EC12\n:103DD000076D6F64756C657300F1036D6F76006538\n:103DE000046D6F76740066046D6F76770052056D12\n:103DF0006F7677740089036D7273001E0A6E616DB1\n:103E000065647475706C650042046E65787400B406\n:103E1000036E6F700090066F626A65637400FD0345\n:103E20006F637400D1046F70656E0087096F7074E2\n:103E30005F6C6576656C001C036F726400BC047077\n:103E400061636B001F097061636B5F696E746F0063\n:103E50001C027069003A08706C6174666F726D00C4\n:103E60002A03706F7000BF07706F706974656D0012\n:103E70002D03706F770054057072696E74001C0F0B\n:103E80007072696E745F657863657074696F6E00D7\n:103E9000BB047075736800B009717374725F696EEA\n:103EA000666F00870772616469616E73001A05723C\n:103EB000616E676500E80472626974005F10726584\n:103EC00061645F6C696768745F6C6576656C0063DC\n:103ED0000672656D6F76650049077265706C616387\n:103EE0006500D00472657072002507726576657290\n:103EF000736500A108726576657273656400D2050A\n:103F00007266696E6400E90672696E64657800E73E\n:103F100005726F756E6400A5067273706C6974002B\n:103F20003B06727374726970001A047363616E00E9\n:103F3000CD047364697600230373657000270373EF\n:103F4000657400D40773657461747472006C0A73CD\n:103F5000657464656661756C7400B10373696E00A5\n:103F60000B08736C6565705F6D73001308736C6587\n:103F700065705F757300BF04736F7274005E0673C3\n:103F80006F7274656400B70573706C697400210406\n:103F900073717274009709737461636B5F757365F5\n:103FA00000740A7374617274737769746800620CC8\n:103FB0007374617469636D6574686F64005704732A\n:103FC000746570005003737472003204737472620B\n:103FD00000AD0573747265780038047374726800FC\n:103FE00029057374726970002103737562002E03D2\n:103FF00073756D00C405737570657200CE147379A6\n:104000006D6D65747269635F646966666572656E1D\n:10401000636500601B73796D6D65747269635F64BD\n:104020006966666572656E63655F75706461746507\n:1040300000BC0373797300FE0374616E00F20974AF\n:1040400068726573686F6C6400B3057468726F772B\n:10405000009D097469636B735F61646400B10A74E5\n:1040600069636B735F646966660042087469636BB9\n:10407000735F6D73005A087469636B735F757300C7\n:10408000F00474696D6500890D74696D655F707504\n:104090006C73655F757300D808746F5F62797465BF\n:1040A00073005B057472756E6300FD057475706C4A\n:1040B00065009D047479706500150C75636F6C6CF8\n:1040C000656374696F6E73008B047564697600E3D1\n:1040D0000475696E7400F605756E696F6E000409EB\n:1040E000756E697175655F6964000706756E70614C\n:1040F000636B000E0B756E7061636B5F66726F6D44\n:1041000000B406757064617465002705757070658C\n:10411000720047077573747275637400E5057574F2\n:10412000696D65004E0576616C7565007D0676618A\n:104130006C756573006E0C76657273696F6E5F697E\n:104140006E666F009D0377666900E6037A6970000A\n:10415000636872282920617267206E6F7420696E0F\n:104160002072616E67652830783131303030302907\n:104170000061726720697320616E20656D707479CB\n:104180002073657175656E6365006F726428292000\n:10419000657870656374656420612063686172612D\n:1041A000637465722C2062757420737472696E6713\n:1041B000206F66206C656E67746820256420666FCA\n:1041C000756E6400332D61726720706F7728292027\n:1041D0006E6F7420737570706F72746564006D75A6\n:1041E000737420757365206B6579776F72642061D5\n:1041F0007267756D656E7420666F72206B657920CD\n:1042000066756E6374696F6E0050696E2025642058\n:10421000696E202571206D6F6465004D6963726F52\n:10422000426974416363656C65726F6D6574657234\n:1042300020747970650A0055736566756C20737417\n:1042400075666620746F20636F6E74726F6C207475\n:104250006865206D6963726F3A6269742068617283\n:1042600064776172652E0A00507574206D696372FF\n:104270006F3A62697420696E2070616E69632829E3\n:10428000206D6F646520616E6420646973706C6179\n:104290007920616E20756E68617070792066616347\n:1042A000652E0A507265737320726573657420629F\n:1042B0007574746F6E20746F2065786974207061F6\n:1042C0006E69632829206D6F64652E0A005075742D\n:1042D000206D6963726F3A62697420746F20736C29\n:1042E0006565702874696D652920666F7220736F2B\n:1042F0006D65206D696C6C697365636F6E647320A6\n:104300002831207365636F6E64203D20313030307A\n:10431000206D7329206F662074696D652E0A736C99\n:1043200065657028323030302920676976657320E2\n:104330006D6963726F3A626974206120322073651F\n:10434000636F6E64206E61702E0A00526574757220\n:104350006E2072756E6E696E675F74696D6528296F\n:1043600020696E206D696C6C697365636F6E647330\n:104370002073696E6365206D6963726F3A62697458\n:104380002773206C6173742072657365742E0A0044\n:1043900052657475726E206D6963726F3A626974EA\n:1043A00027732074656D706572617475726520691C\n:1043B0006E20646567726565732043656C6369751B\n:1043C000732E0A00446574656374206D6963726FAF\n:1043D0003A6269742773206D6F76656D656E74201F\n:1043E000696E2033442E0A4974206D6561737572BD\n:1043F00065732074696C7420285820616E6420599C\n:104400002920616E642075702D646F776E20285AA4\n:1044100029206D6F74696F6E2E0A00526574757273\n:104420006E206D6963726F3A6269742773207469D4\n:104430006C7420285820616363656C6572617469CF\n:104440006F6E2920696E206D696C6C692D6727730A\n:104450002E0A0052657475726E206D6963726F3A30\n:1044600062697427732074696C7420285920616311\n:1044700063656C65726174696F6E2920696E206D69\n:10448000696C6C692D6727732E0A0052657475720A\n:104490006E206D6963726F3A62697427732075705C\n:1044A0002D646F776E206D6F74696F6E20285A20AF\n:1044B000616363656C65726174696F6E2920696EF2\n:1044C000206D696C6C692D6727732E0A5A206973F9\n:1044D000206120706F736974697665206E756D62F6\n:1044E0006572207768656E206D6F76696E672075DE\n:1044F000702E204D6F76696E6720646F776E2C206A\n:104500005A2069732061206E656761746976652041\n:104510006E756D6265722E0A006D6963726F3A6224\n:10452000697427732027412720627574746F6E2E7B\n:10453000205768656E20627574746F6E20697320F1\n:104540007072657373656420646F776E2C20697375\n:104550005F707265737365642829206973205472D3\n:1045600075652E0A006D6963726F3A62697427730C\n:104570002027422720627574746F6E2E205768655D\n:104580006E20627574746F6E20697320707265732B\n:1045900073656420646F776E2C2069735F70726539\n:1045A00073736564282920697320547275652E0A17\n:1045B0000049662074686520627574746F6E2069A6\n:1045C00073207072657373656420646F776E2C203E\n:1045D00069735F707265737365642829206973203D\n:1045E000547275652C20656C73652046616C73652B\n:1045F0002E0A00557365207761735F70726573735F\n:104600006564282920746F206C6561726E2069666C\n:104610002074686520627574746F6E2077617320F2\n:10462000707265737365642073696E636520746866\n:1046300065206C6173742074696D650A7761735FBE\n:1046400070726573736564282920776173206361D4\n:104650006C6C65642E2052657475726E7320547292\n:104660007565206F722046616C73652E0A00557364\n:1046700065206765745F70726573736573282920A0\n:10468000746F20676574207468652072756E6E693A\n:104690006E6720746F74616C206F6620627574742D\n:1046A0006F6E20707265737365732C20616E642069\n:1046B000616C736F0A726573657420746869732026\n:1046C000636F756E74657220746F207A65726F2ED9\n:1046D0000A004769766573206120636F6D706173AE\n:1046E000732068656164696E6720626574776565CB\n:1046F0006E20302D33363020776974682030206189\n:1047000073206E6F7274682E0A00557365206D6990\n:1047100063726F3A626974277320636F6D7061739F\n:104720007320746F206465746563742074686520F9\n:10473000646972656374696F6E206974206973209F\n:1047400068656164696E6720696E2E0A5468652029\n:10475000636F6D706173732063616E20646574654F\n:104760006374206D61676E65746963206669656C4A\n:1047700064732E0A4974207573657320746865200C\n:1047800045617274682773206D61676E6574696333\n:10479000206669656C6420746F2064657465637459\n:1047A00020646972656374696F6E2E0A0049662021\n:1047B0006D6963726F3A626974277320636F6D70FD\n:1047C0006173732069735F63616C696272617465A0\n:1047D00064282920616E642061646A75737465645D\n:1047E00020666F722061636375726163792C207239\n:1047F000657475726E20547275652E0A4966206361\n:104800006F6D70617373206861736E2774206265C9\n:10481000656E2061646A757374656420666F7220CA\n:1048200061636375726163792C2072657475726E51\n:104830002046616C73652E0A004966206D696372BB\n:104840006F3A62697420697320636F6E6675736571\n:10485000642C2063616C696272617465282920741C\n:10486000686520636F6D7061737320746F2061647D\n:104870006A7573742074686520697473206163635A\n:1048800075726163792E0A49742077696C6C2061B6\n:10489000736B20796F7520746F20726F746174650B\n:1048A000207468652064657669636520746F206490\n:1048B000726177206120636972636C65206F6E207E\n:1048C00074686520646973706C61792E0A005265A2\n:1048D000736574206D6963726F3A6269742773201F\n:1048E000636F6D70617373207573696E6720636C9D\n:1048F0006561725F63616C6962726174696F6E2871\n:104900002920636F6D6D616E642E0A52756E20638F\n:10491000616C696272617465282920746F20696D09\n:1049200070726F76652061636375726163792E0AB8\n:104930000052657475726E206D61676E657469638F\n:10494000206669656C6420646574656374656420C1\n:10495000616C6F6E67206D6963726F3A626974276C\n:1049600073205820617869732E0A557375616C6CD9\n:10497000792C2074686520636F6D70617373207289\n:10498000657475726E7320746865206561727468F1\n:104990002773206D61676E65746963206669656C55\n:1049A0006420696E206D6963726F2D5465736C614C\n:1049B00020756E6974732E0A556E6C6573732E2E96\n:1049C0002E61207374726F6E67206D61676E6574FF\n:1049D000206973206E6561726279210A00526574E4\n:1049E00075726E206D61676E6574696320666965B6\n:1049F0006C6420646574656374656420616C6F6EBB\n:104A000067206D6963726F3A626974277320592059\n:104A1000617869732E0A557375616C6C792C2074FA\n:104A2000686520636F6D7061737320726574757251\n:104A30006E73207468652065617274682773206DD9\n:104A400061676E65746963206669656C6420696E70\n:104A5000206D6963726F2D5465736C6120756E698A\n:104A600074732E0A556E6C6573732E2E2E6120732F\n:104A700074726F6E67206D61676E65742069732054\n:104A80006E6561726279210A0052657475726E20DA\n:104A90006D61676E65746963206669656C64206426\n:104AA0006574656374656420616C6F6E67206D6901\n:104AB00063726F3A6269742773205A206178697350\n:104AC0002E0A557375616C6C792C207468652063AF\n:104AD0006F6D706173732072657475726E7320747C\n:104AE00068652065617274682773206D61676E6503\n:104AF000746963206669656C6420696E206D696302\n:104B0000726F2D5465736C6120756E6974732E0A13\n:104B1000556E6C6573732E2E2E61207374726F6EDA\n:104B200067206D61676E6574206973206E656172C0\n:104B30006279210A0052657475726E207374726511\n:104B40006E677468206F66206D61676E6574696357\n:104B5000206669656C642061726F756E64206D6992\n:104B600063726F3A6269742E0A006D6963726F3AFC\n:104B7000626974277320357835204C454420646978\n:104B800073706C61792E0A005573652073686F77B6\n:104B900028782920746F207072696E74207468659B\n:104BA00020737472696E67206F7220696D6167652A\n:104BB000732027782720746F2074686520646973D8\n:104BC000706C61792E205472792073686F77282772\n:104BD00048692127292E0A5573652073686F772845\n:104BE000732C20692920746F2073686F7720737489\n:104BF00072696E67202773272C206F6E65206368AB\n:104C00006172616374657220617420612074696DE2\n:104C100065207769746820612064656C6179206F14\n:104C2000660A276927206D696C6C697365636F6E0E\n:104C300064732E0A00557365207363726F6C6C2861\n:104C4000732920746F207363726F6C6C20746865B5\n:104C500020737472696E6720277327206163726FF7\n:104C600073732074686520646973706C61792E0AAF\n:104C7000557365207363726F6C6C28732C206929DF\n:104C800020746F207363726F6C6C20737472696E22\n:104C90006720277327207769746820612064656C1A\n:104CA0006179206F6620276927206D696C6C6973B4\n:104CB00065636F6E64732061667465720A65616313\n:104CC00068206368617261637465722E0A005573AF\n:104CD0006520636C656172282920746F20636C65A0\n:104CE0006172206D6963726F3A6269742773206420\n:104CF0006973706C61792E0A00557365206765745D\n:104D00005F706978656C28782C20792920746F2071\n:104D100072657475726E2074686520646973706C56\n:104D200061792773206272696768746E6573732096\n:104D30006174204C454420706978656C2028782C7B\n:104D400079292E0A4272696768746E6573732063ED\n:104D5000616E2062652066726F6D203020284C45A0\n:104D600044206973206F66662920746F20392028DB\n:104D70006D6178696D756D204C454420627269677C\n:104D800068746E657373292E0A0055736520736508\n:104D9000745F706978656C28782C20792C206229E2\n:104DA00020746F2073657420746865206469737063\n:104DB0006C6179206174204C454420706978656C81\n:104DC0002028782C792920746F20627269676874B2\n:104DD0006E657373202762270A77686963682063AA\n:104DE000616E206265207365742062657477656505\n:104DF0006E203020286F66662920746F20392028A5\n:104E000066756C6C206272696768746E657373296D\n:104E10002E0A00557365206F6E282920746F207448\n:104E200075726E206F6E2074686520646973706C93\n:104E300061792E0A00557365206F666628292074F3\n:104E40006F207475726E206F6666207468652064CA\n:104E50006973706C61792E0A005573652069735F00\n:104E60006F6E282920746F207175657279206966CC\n:104E700020746865206D6963726F3A626974277384\n:104E800020646973706C6179206973206F6E2028CB\n:104E90005472756529206F72206F666620284661FE\n:104EA0006C7365292E0A0055736520726561645F15\n:104EB0006C696768745F6C6576656C282920746F0F\n:104EC000206765742074686520616D6269656E7421\n:104ED000206C69676874206C6576656C2C2062654F\n:104EE000747765656E203020286461726B292061BB\n:104EF0006E64203235352028627269676874292E05\n:104F00000A006D6963726F3A626974277320706971\n:104F10006E2030206F6E2074686520676F6C64208F\n:104F20006564676520636F6E6E6563746F722E0AC9\n:104F3000006D6963726F3A62697427732070696EDD\n:104F40002031206F6E2074686520676F6C64206567\n:104F500064676520636F6E6E6563746F722E0A00FE\n:104F60006D6963726F3A62697427732070696E208D\n:104F700032206F6E2074686520676F6C64206564F2\n:104F8000676520636F6E6E6563746F722E0A006DC5\n:104F90006963726F3A62697427732070696E203397\n:104FA000206F6E2074686520676F6C64206564678D\n:104FB0006520636F6E6E6563746F722E0A006D6993\n:104FC00063726F3A62697427732070696E203420AF\n:104FD0006F6E2074686520676F6C64206564676518\n:104FE00020636F6E6E6563746F722E0A006D696365\n:104FF000726F3A62697427732070696E2035206F72\n:105000006E2074686520676F6C6420656467652036\n:10501000636F6E6E6563746F722E0A006D696372E2\n:105020006F3A62697427732070696E2036206F6E44\n:105030002074686520676F6C642065646765206311\n:105040006F6E6E6563746F722E0A006D6963726FA6\n:105050003A62697427732070696E2037206F6E2062\n:1050600074686520676F6C64206564676520636F92\n:105070006E6E6563746F722E0A006D6963726F3AAB\n:1050800062697427732070696E2038206F6E2074F7\n:10509000686520676F6C64206564676520636F6E68\n:1050A0006E6563746F722E0A006D6963726F3A6287\n:1050B000697427732070696E2039206F6E207468C0\n:1050C0006520676F6C64206564676520636F6E6E32\n:1050D0006563746F722E0A006D6963726F3A62695C\n:1050E0007427732070696E203130206F6E207468D1\n:1050F0006520676F6C64206564676520636F6E6E02\n:105100006563746F722E0A006D6963726F3A62692B\n:105110007427732070696E203131206F6E2074689F\n:105120006520676F6C64206564676520636F6E6ED1\n:105130006563746F722E0A006D6963726F3A6269FB\n:105140007427732070696E203132206F6E2074686E\n:105150006520676F6C64206564676520636F6E6EA1\n:105160006563746F722E0A006D6963726F3A6269CB\n:105170007427732070696E203133206F6E2074683D\n:105180006520676F6C64206564676520636F6E6E71\n:105190006563746F722E0A006D6963726F3A62699B\n:1051A0007427732070696E203134206F6E2074680C\n:1051B0006520676F6C64206564676520636F6E6E41\n:1051C0006563746F722E0A006D6963726F3A62696B\n:1051D0007427732070696E203135206F6E207468DB\n:1051E0006520676F6C64206564676520636F6E6E11\n:1051F0006563746F722E0A006D6963726F3A62693B\n:105200007427732070696E203136206F6E207468A9\n:105210006520676F6C64206564676520636F6E6EE0\n:105220006563746F722E0A006D6963726F3A62690A\n:105230007427732070696E203139206F6E20746876\n:105240006520676F6C64206564676520636F6E6EB0\n:105250006563746F722E0A006D6963726F3A6269DA\n:105260007427732070696E203230206F6E2074684E\n:105270006520676F6C64206564676520636F6E6E80\n:105280006563746F722E0A006D6963726F3A6269AA\n:10529000742C2077726974655F6469676974616CE6\n:1052A0002863686F6963652920746F2074686520BE\n:1052B00070696E2E20596F7520686176652074774D\n:1052C0006F202763686F696365272076616C756559\n:1052D000732C0A3020286C6F29206F72203120280F\n:1052E0006869292E0A006D6963726F3A6269742CCD\n:1052F00020726561645F6469676974616C28292044\n:1053000076616C75652066726F6D207468652070BB\n:10531000696E206173206569746865722030202889\n:105320006C6F29206F72203120286869292E0A00AD\n:105330006D6963726F3A6269742C20777269746563\n:105340005F616E616C6F672876616C75652920748A\n:105350006F207468652070696E2E20596F75206308\n:10536000616E2075736520616E792076616C75655C\n:10537000206265747765656E0A3020616E64203145\n:105380003032332E0A006D6963726F3A6269742C91\n:1053900020726561645F616E616C6F672829207699\n:1053A000616C75652066726F6D2074686520706928\n:1053B0006E2E20576F772C20616E616C6F672068AE\n:1053C0006173206C6F7473206F662076616C7565F5\n:1053D000730A2830202D203635353335292E2044C8\n:1053E00069676974616C20686173206F6E6C7920E5\n:1053F0003020616E6420312E0A0049662070696E8B\n:105400002069735F746F75636865642829206F6E07\n:10541000206D6963726F3A6269742C2072657475CD\n:10542000726E20547275652E204966206E6F746806\n:10543000696E6720697320746F756368696E672091\n:105440007468652070696E2C0A72657475726E20BE\n:1054500046616C73652E0A00436F6D6D756E6963EE\n:105460006174652077697468206F6E65206F7220A3\n:105470006D6F7265206E616D656420646576696329\n:10548000657320636F6E6E656374656420746F204E\n:105490006D6963726F3A6269742E2045616368209A\n:1054A0006E616D65640A6465766963652068617321\n:1054B00020616E202761646472657373272C2063FA\n:1054C0006F6D6D756E696361746573207573696E58\n:1054D00067204932432C20616E6420636F6E6E65D5\n:1054E00063747320746F2074686520492F4F207097\n:1054F000696E732E0A0055736520726561642861B8\n:105500006464726573732C206E2920746F20726539\n:10551000616420276E272062797465732066726F3C\n:105520006D207468652064657669636520776974A9\n:1055300068207468697320616464726573732E0AED\n:1055400000557365207772697465286164647265BB\n:1055500073732C206275666665722920746F2077DC\n:105560007269746520746F2074686520276275669F\n:1055700066657227206F66207468652064657669A9\n:1055800063652061742074686973202761646472A4\n:10559000657373272E0A0055736520696E69742838\n:1055A0006672657175656E63792C2073636C2C204F\n:1055B0007364612920746F2073657420746865209A\n:1055C000627573206672657175656E637920616EB0\n:1055D000642070696E732E0A0043726561746520E1\n:1055E000616E6420757365206275696C742D696ED7\n:1055F00020494D4147455320746F2073686F7720D1\n:105600006F6E2074686520646973706C61792E20F8\n:105610005573653A0A496D616765280A202027306D\n:10562000393039303A270A20202739393939393A7F\n:10563000270A20202739393939393A270A202027E3\n:1056400030393939303A270A202027303039303084\n:105650003A27290A2E2E2E746F206D616B6520610A\n:10566000206E657720357835206865617274206911\n:105670006D6167652E204E756D6265727320676F70\n:105680002066726F6D203020286F66662920746F47\n:1056900020392028627269676874657374292E2026\n:1056A0004E6F74650A74686520636F6C6F6E202797\n:1056B0003A2720746F207365742074686520656EC6\n:1056C00064206F66206120726F772E0A0052657425\n:1056D00075726E20746865207769647468206F66DF\n:1056E0002074686520696D61676520696E20706946\n:1056F00078656C732E0A0052657475726E2074683A\n:105700006520686569676874206F66207468652025\n:10571000696D61676520696E20706978656C732EAC\n:105720000A00557365206765745F706978656C2839\n:10573000782C20792920746F2072657475726E2020\n:1057400074686520696D6167652773206272696797\n:1057500068746E657373206174204C4544207069D1\n:1057600078656C2028782C79292E0A42726967683E\n:10577000746E6573732063616E2062652066726F5C\n:105780006D203020284C4544206973206F666629BF\n:1057900020746F203920286D6178696D756D204CFB\n:1057A0004544206272696768746E657373292E0AB6\n:1057B00000557365207365745F706978656C28782F\n:1057C0002C20792C20622920746F2073657420743A\n:1057D0006865204C454420706978656C2028782CD9\n:1057E000792920696E2074686520696D616765207C\n:1057F000746F206272696768746E6573730A2762DA\n:10580000272077686963682063616E206265207372\n:105810006574206265747765656E203020286F6638\n:10582000662920746F2039202866756C6C2062729E\n:10583000696768746E657373292E0A005573652055\n:1058400073686966745F6C65667428692920746F73\n:10585000206D616B65206120636F7079206F662019\n:1058600074686520696D61676520627574206D6F6D\n:105870007665642027692720706978656C732074C9\n:105880006F20746865206C6566742E0A0055736518\n:105890002073686966745F72696768742869292073\n:1058A000746F206D616B65206120636F7079206F6C\n:1058B000662074686520696D616765206275742073\n:1058C0006D6F7665642027692720706978656C7331\n:1058D00020746F0A7468652072696768742E0A0004\n:1058E0005573652073686966745F7570286929202F\n:1058F000746F206D616B65206120636F7079206F1C\n:10590000662074686520696D616765206275742022\n:105910006D6F7665642027692720706978656C73E0\n:105920002075702E0A005573652073686966745F70\n:10593000646F776E28692920746F206D616B652014\n:105940006120636F7079206F662074686520696DCF\n:1059500061676520627574206D6F766564202769C4\n:105960002720706978656C7320646F776E2E0A004B\n:1059700055736520636F7079282920746F206D61DD\n:105980006B652061206E65772065786163742063A4\n:105990006F7079206F662074686520696D61676536\n:1059A0002E0A005573652063726F702878312C20A1\n:1059B00079312C2078322C2079322920746F206D97\n:1059C000616B652061206375742D6F757420636F42\n:1059D0007079206F662074686520696D6167652045\n:1059E000776865726520636F6F7264696E61746554\n:1059F0000A2878312C793129206973207468652050\n:105A0000746F70206C65667420636F726E657220AF\n:105A10006F6620746865206375742D6F75742061DE\n:105A200072656120616E6420636F6F7264696E617C\n:105A30007465202878322C793229206973207468A3\n:105A4000650A626F74746F6D207269676874206391\n:105A50006F726E65722E0A0055736520696E7665E9\n:105A60007274282920746F206D616B652061206E2F\n:105A70006567617469766520636F7079206F662051\n:105A800074686520696D6167652E20576865726569\n:105A9000206120706978656C20776173206272697B\n:105AA000676874206F720A6F6E20696E2074686573\n:105AB000206F726967696E616C2C2069742069734C\n:105AC0002064696D206F72206F666620696E207495\n:105AD0006865206E6567617469766520636F7079AB\n:105AE0002E0A00436F6D6D756E6963617465207772\n:105AF00069746820612073657269616C20646576E1\n:105B000069636520636F6E6E656374656420746F8E\n:105B1000206D6963726F3A626974277320492F4F51\n:105B20002070696E732E0A0055736520696E697462\n:105B3000282920746F2073657420757020636F6D41\n:105B40006D756E69636174696F6E2E205573652083\n:105B500070696E732030202854582920616E6420AB\n:105B600031202852582920776974682061206261A9\n:105B700075640A72617465206F6620393630302E84\n:105B80000A4F766572726964652074686520646581\n:105B90006661756C747320666F722027626175642C\n:105BA00072617465272C20277061726974792720CF\n:105BB000616E64202770696E73272E0A0049662083\n:105BC00074686572652061726520696E636F6D69C6\n:105BD0006E672063686172616374657273207761B8\n:105BE0006974696E6720746F2062652072656164F4\n:105BF0002C20616E7928292077696C6C207265747D\n:105C000075726E20547275652E0A4F7468657277CE\n:105C10006973652C2072657475726E732046616CB1\n:105C200073652E0A0055736520726561642829200A\n:105C3000746F20726561642063686172616374656A\n:105C400072732E0A5573652072656164286E29206F\n:105C5000746F20726561642C206174206D6F7374A1\n:105C60002C20276E27206279746573206F6620646C\n:105C70006174612E0A0055736520726561646C69F8\n:105C80006E65282920746F20726561642061206C24\n:105C9000696E65207468617420656E64732077692D\n:105CA00074682061206E65776C696E652063686139\n:105CB0007261637465722E0A0055736520726561A6\n:105CC00064696E746F286275662920746F2072652E\n:105CD000616420627974657320696E746F207468E2\n:105CE00065206275666665722027627566272E0AD2\n:105CF0005573652072656164696E746F286275669C\n:105D0000662C206E2920746F20726561642C2061DE\n:105D100074206D6F73742C20276E27206E756D6252\n:105D20006572206F6620627974657320696E746F86\n:105D30002027627566272E0A0055736520777269E1\n:105D40007465286275662920746F2077726974659E\n:105D50002074686520627974657320696E206275AD\n:105D60006666657220276275662720746F207468E6\n:105D70006520636F6E6E6563746564206465766923\n:105D800063652E0A00436F6D6D756E69636174659E\n:105D9000207573696E6720612073657269616C207C\n:105DA0007065726970686572616C20696E74657285\n:105DB00066616365202853504929206465766963CC\n:105DC0006520636F6E6E656374656420746F0A6D21\n:105DD0006963726F3A626974277320492F4F20708C\n:105DE000696E732E0A0055736520696E69742829DF\n:105DF00020746F2073657420757020636F6D6D75EE\n:105E00006E69636174696F6E2E204F766572726978\n:105E10006465207468652064656661756C747320C0\n:105E2000666F722062617564726174652C206D6F9B\n:105E300064652C0A53434C4B2C204D4F5349206131\n:105E40006E64204D49534F2E20546865206465666A\n:105E500061756C7420636F6E6E656374696F6E73C9\n:105E6000206172652070696E313320666F72205335\n:105E7000434C4B2C2070696E313520666F720A4D91\n:105E80004F534920616E642070696E313420666F13\n:105E900072204D49534F2E0A005573652077726961\n:105EA0007465286275662920746F2077726974653D\n:105EB00020627974657320696E206275666665720A\n:105EC00020276275662720746F2074686520636FD1\n:105ED0006E6E6563746564206465766963652E0A19\n:105EE000005573652072656164286E2920746F20E7\n:105EF0007265616420276E27206279746573206F54\n:105F00006620646174612E0A00557365207772699A\n:105F100074655F72656164696E746F286F75742C47\n:105F200020696E2920746F20777269746520746807\n:105F30006520276F75742720627566666572207408\n:105F40006F2074686520636F6E6E6563746564208E\n:105F50006465766963650A616E64207265616420B8\n:105F6000616E7920726573706F6E736520696E74EF\n:105F70006F207468652027696E27206275666665E4\n:105F8000722E20546865206C656E677468206F6699\n:105F90002074686520627566666572732073686F29\n:105FA000756C640A6265207468652073616D652E86\n:105FB0002054686520627566666572732063616E41\n:105FC000206265207468652073616D65206F626A68\n:105FD0006563742E0A00506C756720696E2061201D\n:105FE000737065616B657220776974682063726F86\n:105FF000636F64696C6520636C69707320616E64A3\n:10600000206D616B65206D6963726F3A62697420FF\n:10601000676F20626C65657020616E6420626C6FD2\n:106020006F702E0A00557365207365745F74656D1B\n:10603000706F286E756D6265722C2062706D2920FC\n:10604000746F206D616B6520612062656174206CE6\n:10605000617374206120276E756D62657227206FF1\n:1060600066207469636B73206C6F6E6720616E6469\n:106070000A706C61796564206174202762706D27F5\n:1060800020626561747320706572206D696E75742D\n:10609000652E0A00557365207069746368286672FE\n:1060A00065712C206C656E6774682920746F206D93\n:1060B000616B65206D6963726F3A62697420706C00\n:1060C00061792061206E6F7465206174202766728B\n:1060D000657127206672657175656E637920666FDC\n:1060E000720A276C656E67746827206D696C6C692D\n:1060F0007365636F6E64732E20452E672E20706962\n:10610000746368283434302C2031303030292077C3\n:10611000696C6C20706C617920636F6E636572745A\n:106120002027412720666F722031207365636F6ED0\n:10613000642E0A0055736520706C6179286D757343\n:1061400069632920746F206D616B65206D696372CE\n:106150006F3A62697420706C617920276D7573697C\n:106160006327206C697374206F66206E6F7465738B\n:106170002E20547279206F7574207468650A6275D8\n:10618000696C7420696E206D7573696320746F206B\n:1061900073656520686F7720697420776F726B7301\n:1061A0002E20452E672E206D757369632E706C61ED\n:1061B00079286D757369632E50554E43484C494E8E\n:1061C00045292E0A00557365206765745F74656DF7\n:1061D000706F282920746F2072657475726E207438\n:1061E0006865206E756D626572206F6620746963E4\n:1061F0006B7320696E2061206265617420616E643A\n:10620000206E756D626572206F66206265617473C1\n:106210000A706572206D696E7574652E0A0055737B\n:106220006520746F2073746F70282920746865204E\n:106230006D75736963207468617420697320706C74\n:106240006179696E672E0A004966207468696E6715\n:106250007320676F2077726F6E672C20726573658D\n:1062600074282920746865206D7573696320746FC4\n:10627000206974732064656661756C74207365743D\n:1062800074696E67732E0A005365653A20687474EA\n:10629000703A2F2F786B63642E636F6D2F33353315\n:1062A0002F0A00546865205A656E206F6620507969\n:1062B00074686F6E20646566696E657320776861C7\n:1062C0007420697420697320746F2062652050798E\n:1062D00074686F6E69632E20497420776F756C64E3\n:1062E0006E277420666974206F6E20746869730A63\n:1062F00064657669636520736F207765277665200E\n:106300007772697474656E2061205A656E206F66BD\n:10631000204D6963726F507974686F6E20696E7377\n:10632000746561642E0A0055736520617574686F29\n:106330007273282920746F2072657665616C2074F1\n:106340006865206E616D6573206F662074686520D6\n:1063500070656F706C652077686F2063726561741B\n:106360006564207468697320736F66747761726501\n:106370002E0A00416C6C20796F75206E6565642E65\n:1063800020557365206C6F76652E62616461626F63\n:106390006F6D282920746F20726570656174207498\n:1063A0006865206566666563742E0A0048656172DB\n:1063B000206D7920736F756C20737065616B3A0A7C\n:1063C000546865207665727920696E7374616E74A5\n:1063D000207468617420492073617720796F752C6F\n:1063E000206469640A4D7920686561727420666C66\n:1063F0007920746F20796F75722073657276696386\n:10640000652E0A0057656C636F6D6520746F204DB3\n:106410006963726F507974686F6E206F6E20746854\n:1064200065206D6963726F3A626974210A0A547259\n:106430007920746865736520636F6D6D616E647338\n:106440003A0A2020646973706C61792E7363726FED\n:106450006C6C282748656C6C6F27290A20207275A0\n:106460006E6E696E675F74696D6528290A202073F6\n:106470006C6565702831303030290A2020627574CF\n:10648000746F6E5F612E69735F707265737365649C\n:1064900028290A5768617420646F207468657365E1\n:1064A00020636F6D6D616E647320646F3F20436184\n:1064B0006E20796F7520696D70726F7665207468D3\n:1064C000656D3F2048494E543A20757365207468C5\n:1064D0006520757020616E6420646F776E0A61724A\n:1064E000726F77206B65797320746F2067657420F5\n:1064F000796F757220636F6D6D616E64206869736A\n:10650000746F72792E2050726573732074686520E1\n:10651000544142206B657920746F206175746F2D32\n:10652000636F6D706C6574650A756E66696E69730C\n:1065300068656420776F7264732028736F20276406\n:106540006927206265636F6D6573202764697370C6\n:106550006C61792720616674657220796F7520708F\n:106560007265737320544142292E20546865736507\n:106570000A747269636B7320736176652061206CA5\n:106580006F74206F6620747970696E6720616E6425\n:10659000206C6F6F6B20636F6F6C210A0A457870F7\n:1065A0006C6F72653A0A54797065202768656C7063\n:1065B00028736F6D657468696E67292720746F2072\n:1065C00066696E64206F75742061626F75742069EE\n:1065D000742E2054797065202764697228736F6D5A\n:1065E000657468696E67292720746F20736565205C\n:1065F000776861740A69742063616E20646F2E206D\n:1066000054797065202764697228292720746F20C7\n:106610007365652077686174207374756666206998\n:106620007320617661696C61626C652E20466F72C1\n:1066300020676F6F646E6573732073616B652C0ADE\n:10664000646F6E277420747970652027696D706F90\n:1066500072742074686973272E0A0A436F6E74720D\n:106660006F6C20636F6D6D616E64733A0A20204316\n:1066700054524C2D4320202020202020202D2D203E\n:1066800073746F7020612072756E6E696E67207012\n:10669000726F6772616D0A20204354524C2D442062\n:1066A000202020202020202D2D206F6E20612062B0\n:1066B0006C616E6B206C696E652C20646F206120AC\n:1066C000736F6674207265736574206F66207468DA\n:1066D00065206D6963726F3A6269740A20204354C1\n:1066E000524C2D4520202020202020202D2D2065BB\n:1066F0006E746572207061737465206D6F64652CB3\n:10670000207475726E696E67206F6666206175749D\n:106710006F2D696E64656E740A0A466F722061207F\n:106720006C697374206F6620617661696C61626C5C\n:1067300065206D6F64756C65732C207479706520AD\n:1067400068656C7028276D6F64756C657327290AFE\n:106750000A466F72206D6F726520696E666F726D8A\n:106760006174696F6E2061626F757420507974680E\n:106770006F6E2C2076697369743A20687474703A6D\n:106780002F2F707974686F6E2E6F72672F0A546F97\n:106790002066696E64206F75742061626F75742065\n:1067A0004D6963726F507974686F6E2C20766973CF\n:1067B00069743A20687474703A2F2F6D6963726F30\n:1067C000707974686F6E2E6F72672F0A50797468D3\n:1067D0006F6E2F6D6963726F3A62697420646F63C4\n:1067E000756D656E746174696F6E2069732068657C\n:1067F00072653A2068747470733A2F2F6D696372F2\n:106800006F6269742D6D6963726F707974686F6EF1\n:106810002E72656164746865646F63732E696F2F8F\n:106820000A000506070409080A04031213141615C2\n:10683000170F0D0E111063616E2774206173736959\n:10684000676E20746F206C69746572616C0063619F\n:106850006E27742061737369676E20746F2065788A\n:106860007072657373696F6E00696C6C6567616CDB\n:106870002065787072657373696F6E20666F722021\n:106880006175676D656E7465642061737369676EA9\n:106890006D656E74006D756C7469706C65202A7816\n:1068A00020696E2061737369676E6D656E74006335\n:1068B000616E27742064656C6574652065787072FC\n:1068C000657373696F6E00657870656374696E6770\n:1068D000206B65793A76616C756520666F7220640D\n:1068E000696374696F6E617279006578706563744D\n:1068F000696E67206A75737420612076616C7565B6\n:1069000020666F7220736574007375706572282934\n:106910002063616E27742066696E642073656C66FF\n:106920000027627265616B27206F757473696465F7\n:10693000206C6F6F700027636F6E74696E756527CA\n:10694000206F757473696465206C6F6F7000696E79\n:1069500076616C6964206D6963726F707974686FB9\n:106960006E206465636F7261746F72006E6F6E2D5E\n:1069700064656661756C7420617267756D656E74AF\n:1069800020666F6C6C6F77732064656661756C74DC\n:1069900020617267756D656E74006964656E7469F7\n:1069A00066696572207265646566696E65642061FA\n:1069B0007320676C6F62616C0063616E2774206482\n:1069C00065636C617265206E6F6E6C6F63616C20C5\n:1069D000696E206F7574657220636F6465006E6FF9\n:1069E0002062696E64696E6720666F72206E6F6EDA\n:1069F0006C6F63616C20666F756E64006964656EB0\n:106A0000746966696572207265646566696E65643D\n:106A1000206173206E6F6E6C6F63616C002772650E\n:106A20007475726E27206F7574736964652066755E\n:106A30006E6374696F6E00696E76616C6964207351\n:106A4000796E746178006E616D652072657573652D\n:106A50006420666F7220617267756D656E7400697F\n:106A60006E6C696E6520617373656D626C65722012\n:106A70006D75737420626520612066756E6374693C\n:106A80006F6E00756E6B6E6F776E20747970650037\n:106A900072657475726E20616E6E6F746174696F69\n:106AA0006E206D75737420626520616E2069646567\n:106AB0006E74696669657200657870656374696E85\n:106AC0006720616E20617373656D626C6572206909\n:106AD0006E737472756374696F6E00276C616265A2\n:106AE0006C2720726571756972657320312061723F\n:106AF00067756D656E74006C6162656C20726564AB\n:106B00006566696E65640027616C69676E2720722F\n:106B100065717569726573203120617267756D6585\n:106B20006E740027646174612720726571756972E3\n:106B30006573206174206C6561737420322061720A\n:106B400067756D656E7473002764617461272072C8\n:106B50006571756972657320696E74656765722009\n:106B6000617267756D656E7473002A78206D757338\n:106B7000742062652061737369676E6D656E742041\n:106B80007461726765740063616E27742068617652\n:106B900065206D756C7469706C65202A780063617E\n:106BA0006E27742068617665206D756C7469706CF1\n:106BB00065202A2A78004C4853206F66206B65793F\n:106BC000776F726420617267206D757374206265DF\n:106BD00020616E206964006E6F6E2D6B6579776F32\n:106BE000726420617267206166746572202A2F2AA0\n:106BF0002A006E6F6E2D6B6579776F7264206172FB\n:106C000067206166746572206B6579776F726420A6\n:106C10006172670064656661756C742027657863CE\n:106C20006570743A27206D757374206265206C61FD\n:106C3000737400277969656C6427206F75747369B4\n:106C400064652066756E6374696F6E0000000402EF\n:106C5000020402000002040404000202000404030F\n:106C60000100000103030300010102030304020108\n:106C700001030104030100030000040101020000FC\n:106C800003020000040202040200000204040400E3\n:106C900002020004040301000001030303000101D8\n:106CA00002030304020101030104030100030000C5\n:106CB00004010102000003026E6F7420616E2069FE\n:106CC0006D61676500000000000000000000030324\n:106CD00003030300000000000000000000000000AB\n:106CE0000000000000030101010101010101010197\n:106CF00001010101014545454545454545454501DC\n:106D00000101010101015959595959591919191903\n:106D100019191919191919191919191919191919E3\n:106D20000101010101016969696969692929292943\n:106D300029292929292929292929292929292929C3\n:106D40000101010100737472696E6720696E6469E4\n:106D5000636573206D75737420626520696E746558\n:106D6000676572732C206E6F7420257300737472C4\n:106D7000696E6720696E646578206F7574206F6630\n:106D80002072616E6765005C7525303478005C5553\n:106D90002530387800006571016E65026373036306\n:106DA00063046D6905706C0676730776630868691D\n:106DB000096C730A67650B6C740C67740D6C656302\n:106DC000616E206F6E6C7920686176652075702029\n:106DD000746F203420706172616D65746572732008\n:106DE000746F205468756D6220617373656D626C99\n:106DF0007900706172616D6574657273206D757371\n:106E000074206265207265676973746572732069A6\n:106E10006E2073657175656E636520723020746FC6\n:106E2000207233002725732720657870656374739B\n:106E300020616E2061646472657373206F662074D4\n:106E4000686520666F726D205B612C20625D007545\n:106E50006E737570706F72746564205468756D62BE\n:106E600020696E737472756374696F6E2027257361\n:106E700027207769746820256420617267756D65C5\n:106E80006E7473006272616E6368206E6F74206945\n:106E90006E2072616E67650004656F72086C736CBA\n:106EA0000C6C7372106173721461646318736263A3\n:106EB0001C726F7220747374246E656728636D7022\n:106EC0002C636D6E306F7272346D756C38626963ED\n:106ED0003C6D766E27257327206578706563747323\n:106EE00020616E20696E74656765720027257327BF\n:106EF00020696E7465676572203078257820646F2C\n:106F00006573206E6F742066697420696E206D61F0\n:106F1000736B2030782578002725732720657870DB\n:106F2000656374732061206C6162656C006C6162E2\n:106F3000656C2027257127206E6F74206465666953\n:106F40006E65640027257327206578706563747308\n:106F5000206174206D6F737420722564002725737F\n:106F60002720657870656374732061207265676996\n:106F700073746572002725732720657870656374C4\n:106F800073207B72302C2072312C202E2E2E7D000F\n:106F9000007230000172310002723200037233005D\n:106FA000047234000572350006723600077237002D\n:106FB00008723800097239000A7231300B723131AF\n:106FC0000C7231320D7231330E7231340F72313531\n:106FD0000A736C000B6670000D7370000E6C72000B\n:106FE0000F70630028295B5D7B7D2C3A3B407E3C23\n:106FF000653D633C653D3E653D633E653D2A653DBF\n:10700000632A653D2B653D2D653D653E26653D7CCE\n:10701000653D2F653D632F653D25653D5E653D3DC5\n:10702000653D212E00756E69636F6465206E616D2C\n:107030006520657363617065730046616C736500FC\n:1070400054727565005F5F64656275675F5F0061BC\n:107050006E640061730061737365727400627265BF\n:10706000616B00636F6E74696E75650064656C00BA\n:10707000656C696600656C7365006578636570743E\n:107080000066696E616C6C7900666F72006C616D90\n:10709000626461006E6F740072657475726E007464\n:1070A0007279007768696C65007969656C64004283\n:1070B000434445464748494B4C3D363E3758383F98\n:1070C0003957315032592F4E304F5A3A543B55337D\n:1070D00051345235533C564D40493243207265611C\n:1070E00064206572726F72202564004932432077F4\n:1070F00072697465206572726F7220256400696E12\n:1071000076616C6964206E756D626572206F6620B1\n:10711000706978656C7300696E76616C6964206370\n:107120006F6C6F757200706F706974656D28293AA5\n:107130002064696374696F6E617279206973206578\n:107140006D7074790025712800646963742075700E\n:10715000646174652073657175656E63652068612F\n:10716000732077726F6E67206C656E677468002895\n:107170005B005D2900646963745F6974656D730009\n:10718000646963745F6B65797300646963745F76C7\n:10719000616C7565730046696E616C206461746131\n:1071A00020666F7220737065656368206F757470F8\n:1071B00075742E202569206672616D65733A0D0A1B\n:1071C0000D0A0020666C61677320616D706C312060\n:1071D000667265713120616D706C32206672657106\n:1071E0003220616D706C3320667265713320706976\n:1071F0007463680D002D2D2D2D2D2D2D2D2D2D2D54\n:107200002D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2DAE\n:107210002D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D9E\n:107220002D2D2D2D2D0D0025356920253569202585\n:1072300035692025356920253569202535692025C2\n:107240003569202535690D0A003D3D3D3D3D3D3DFB\n:107250003D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D5E\n:107260003D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D4E\n:107270003D3D3D3D0D0025733A0D0A0D0A00206984\n:1072800064782020202070686F6E656D6520206C0A\n:10729000656E67746820207374726573730D0020C7\n:1072A00025336920202020202025632563202020ED\n:1072B0002020202533692020202020202025690D32\n:1072C0000A00202533692020202020203F3F202055\n:1072D00020202020253369202020202020202569FF\n:1072E0000D0A006E6F206D6F72652073746F72618E\n:1072F000676520737061636500492F4F206F70656B\n:10730000726174696F6E206F6E20636C6F73656459\n:107310002066696C6500696D706F727420000A25C3\n:1073200073006279746561727261792862006172BA\n:107330007261792827256327002C205B00696E760F\n:10734000616C6964207069746368003C2573206F08\n:10735000626A6563742061742025703E00697373EE\n:107360007562636C61737328292061726720312014\n:107370006D757374206265206120636C61737300A6\n:1073800027257327206F626A656374206973206EF6\n:107390006F742063616C6C61626C65005F5F696E25\n:1073A00069745F5F28292073686F756C642072654B\n:1073B0007475726E204E6F6E652C206E6F74202770\n:1073C000257327006973737562636C617373282971\n:1073D000206172672032206D7573742062652061B0\n:1073E00020636C617373206F722061207475706C00\n:1073F00065206F6620636C617373657300747970C8\n:10740000652027257127206973206E6F7420616EB7\n:107410002061636365707461626C6520626173658D\n:107420002074797065006D756C7469706C6520628C\n:1074300061736573206861766520696E7374616E2F\n:107440006365206C61792D6F757420636F6E666C57\n:10745000696374003C73757065723A200063616EF5\n:107460006E6F742063726561746520272571272013\n:10747000696E7374616E63657300747970652074EE\n:10748000616B65732031206F7220332061726775E4\n:107490006D656E7473003C636C6173732027257196\n:1074A000273E0062756666657220746F6F20736D8B\n:1074B000616C6C0066756E6374696F6E20646F65D5\n:1074C00073206E6F742074616B65206B6579776FC4\n:1074D000726420617267756D656E74730066756E97\n:1074E0006374696F6E206D697373696E67202564BC\n:1074F00020726571756972656420706F7369746953\n:107500006F6E616C20617267756D656E7473006675\n:10751000756E6374696F6E206578706563746564F9\n:10752000206174206D6F737420256420617267750B\n:107530006D656E74732C20676F7420256400272599\n:10754000712720617267756D656E74207265717543\n:107550006972656400657874726120706F73697414\n:10756000696F6E616C20617267756D656E747320F2\n:10757000676976656E006578747261206B657977EE\n:107580006F726420617267756D656E7473206769D0\n:1075900076656E00617267756D656E7420686173E3\n:1075A0002077726F6E672074797065006D656D6FFE\n:1075B000727920616C6C6F636174696F6E206661B3\n:1075C000696C65642C2068656170206973206C6F3C\n:1075D000636B6564006D656D6F727920616C6C6FB3\n:1075E000636174696F6E206661696C65642C2061EB\n:1075F0006C6C6F636174696E6720257520627974A5\n:10760000657300756E737570706F72746564207445\n:107610007970657320666F722025713A2027257373\n:10762000272C20272573270027257327206F626AC0\n:10763000656374206973206E6F742069746572616C\n:10764000626C650063616E6E6F7420696D706F723D\n:1076500074206E616D652025710027257327206FCA\n:10766000626A656374206973206E6F7420616E2096\n:107670006974657261746F72006E616D6520272593\n:107680007127206973206E6F7420646566696E656A\n:10769000640074797065206F626A656374202725C1\n:1076A000712720686173206E6F2061747472696243\n:1076B00075746520272571270027257327206F62A1\n:1076C0006A65637420686173206E6F2061747472E0\n:1076D0006962757465202725712700657863657078\n:1076E00074696F6E73206D7573742064657269764A\n:1076F000652066726F6D20426173654578636570C1\n:1077000074696F6E00756E737570706F72746564F6\n:10771000207479706520666F722025713A202725C4\n:107720007327006E656564206D6F726520746861F3\n:107730006E2025642076616C75657320746F2075EA\n:107740006E7061636B00746F6F206D616E7920766F\n:10775000616C75657320746F20756E7061636B204A\n:107760002865787065637465642025642900474343\n:10777000206D656D6F7279206C61796F75743B2037\n:1077800066726F6D2025703A000A2020202020208C\n:1077900020282575206C696E657320616C6C2066ED\n:1077A00072656529000A253035783A200047433A4A\n:1077B00020746F74616C3A2025752C207573656494\n:1077C0003A2025752C20667265653A2025750A00D9\n:1077D000204E6F2E206F6620312D626C6F636B73AD\n:1077E0003A2025752C20322D626C6F636B733A2022\n:1077F00025752C206D617820626C6B20737A3A209D\n:1078000025752C206D6178206672656520737A3A43\n:107810002025750A00546865205A656E206F662021\n:107820004D6963726F507974686F6E2C2062792095\n:107830004E6963686F6C617320482E20546F6C6CC6\n:1078400065727665790A0A436F64652C0A4861633C\n:107850006B2069742C0A4C657373206973206D6FFB\n:1078600072652C0A4B6565702069742073696D70B0\n:107870006C652C0A536D616C6C20697320626561C4\n:1078800075746966756C2C0A0A42652062726176AD\n:10789000652120427265616B207468696E6773218F\n:1078A000204C6561726E20616E642068617665208F\n:1078B00066756E210A4578707265737320796F75ED\n:1078C0007273656C662077697468204D6963726FA6\n:1078D000507974686F6E2E0A0A486170707920685A\n:1078E00061636B696E6721203A2D290A004D696337\n:1078F000726F507974686F6E206F6E2074686520A7\n:107900006D6963726F3A6269742069732062726F85\n:107910007567687420746F20796F752062793A0AF0\n:1079200044616D69656E20502E2047656F726765F2\n:107930002C204D61726B205368616E6E6F6E2C202F\n:107940005261646F6D697220446F70696572616C19\n:10795000736B692C204D61747468657720456C7376\n:10796000652C0A4361726F6C2057696C6C696E6795\n:107970002C20546F6D2056696E65722C20416C610D\n:107980006E204A61636B736F6E2C204E69636B20AF\n:10799000436F67686C616E2C204A6F736570682056\n:1079A000486169672C0A416C6578204368616E2CD8\n:1079B00020416E64726561204772616E64692C209B\n:1079C0005061756C204567616E2C2050696F747230\n:1079D000204B617370727A796B2C20416E647265F2\n:1079E00077204D756C686F6C6C616E642C0A4D610C\n:1079F000747420576865656C65722C204A6F652029\n:107A0000476C616E63792C20416262696520427225\n:107A10006F6F6B7320616E64204E6963686F6C6179\n:107A20007320482E20546F6C6C65727665792E0A2F\n:107A3000003C6D6F64756C6520272573273E006DD3\n:107A400061746820646F6D61696E206572726F7217\n:107A500000736C69636528007061727365722063DE\n:107A60006F756C64206E6F7420616C6C6F636174F1\n:107A70006520656E6F756768206D656D6F72790042\n:107A8000756E657870656374656420696E64656E93\n:107A90007400756E696E64656E7420646F65732022\n:107AA0006E6F74206D6174636820616E79206F75EC\n:107AB00074657220696E64656E746174696F6E209E\n:107AC0006C6576656C0063616E6E6F74206D6978AD\n:107AD00020627974657320616E64206E6F6E6279C6\n:107AE000746573206C69746572616C7300030000C7\n:107AF000000000000000737461636B3A202575205C\n:107B00006F7574206F662025750A0071737472207A\n:107B1000706F6F6C3A206E5F706F6F6C3D25752CC7\n:107B2000206E5F717374723D25752C206E5F7374C7\n:107B3000725F646174615F62797465733D25752C51\n:107B4000206E5F746F74616C5F62797465733D253C\n:107B5000750A00332E342E3000535049206E6F7456\n:107B600020696E697469616C697365640050686F3F\n:107B70006E656D657320746F6F206C6F6E67004962\n:107B80006C6C6567616C2070697463680050686F25\n:107B90006E656D65206E6F7420756E6465727374AA\n:107BA0006F6F6400496E7075742070686F6E656DDC\n:107BB000657300494E5445524E414C204552524F38\n:107BC000523A20496C6C6567616C2070686F6E6515\n:107BD0006D6520696E64657800496E736572742006\n:107BE000427265616474680D0050726F63657373EF\n:107BF00065642070686F6E656D657300000000003D\n:107C000000A4A4A4A4A4A48484A4A48484848484B8\n:107C1000848444444444444C4C4C484C4040404090\n:107C200040404444444448404C440000B4B4B494FC\n:107C300094944E4E4E4E4E4E4E4E4E4E4E4E4B4BDE\n:107C40004B4B4B4B4B4B4B4B4B4B80C1C180C1C142\n:107C5000C1C10000000000000000000000000000A2\n:107C60000000000010101010080C08044024202010\n:107C700024000024202024202000200000000000F8\n:107C800000000000000004040400000000000000E8\n:107C9000000004040400000000000000121212089A\n:107CA000080808080B060C0A05050B0A0A0A090849\n:107CB0000709070608060707070205020202020273\n:107CC000020606070606020803011E0D0C0C0C0E28\n:107CD000090601020501010601020601020802026D\n:107CE000040202060104060104C7FF001212120872\n:107CF0000B090B0E0F0B100C06060E0C0E0C0B08CE\n:107D0000080B0A0908080808080305020202020213\n:107D100002060608060602090402010E0F0F0F0EE6\n:107D20000E0802020702010702020702020802020D\n:107D30000602020702040701040505202E3F2C2D30\n:107D40004949454141414155414945554F524C579B\n:107D50005957524C57594D4E4E4451535346542F38\n:107D60002F5A5A5644432A4A2A2A2A45414F414FFC\n:107D700055422A2A442A2A472A2A472A2A502A2AA6\n:107D8000542A2A4B2A2A4B2A2A5555552A2A2A2A66\n:107D90002A5948484541484F485858525848585819\n:107DA0005858482A2A2A2A2A2A58582A2A482A4821\n:107DB00048582A482A48482A2A2A2A2A59595957C3\n:107DC00057572A2A2A2A2A2A2A2A2A582A2A2A2A8B\n:107DD0002A2A2A2A2A2A2A582A2A4C4D4E2A31325D\n:107DE0003334353637387A65726F207374657000B6\n:107DF00072616E67652825642C202564002C20257F\n:107E000064290000000402020402000002040404C9\n:107E10000002020004040301000001030303000147\n:107E20000102030304020101030104030100030032\n:107E30000004010102000003021B1B000E110000E0\n:107E400000000008080800080A4A4000000A5FEA2B\n:107E50005FEA0ED92ED36E19324489330C924C92BC\n:107E60004D08080000000488080804080484848879\n:107E7000000A448A4000048EC48000000004880088\n:107E8000000EC000000000080001224488100C927F\n:107E900052524C048C84848E1C824C901E1EC24410\n:107EA000924C06CA525FE21FF01EC13E02448ED1C0\n:107EB0002E1FE24488100ED12ED12E0ED12EC48852\n:107EC000000800080000048004880244880482003E\n:107ED0000EC00EC008048244880ED126C0040ED104\n:107EE00035B36C0C925ED2521C925C925C0ED01038\n:107EF000100E1C9252525C1ED01C901E1ED01C9064\n:107F0000100ED013712E12525ED2521C8808081C1B\n:107F10001FE242524C1254981492101010101E116D\n:107F20003B75B131113935B3710C9252524C1C92E0\n:107F30005C90100C92524C861C925C92510ED00CAC\n:107F4000825C1FE4848484125252524C1131312AD3\n:107F500044113135BB7112524C9252112A4484841F\n:107F60001EC488101E0EC808080E10080482410E98\n:107F7000C242424E048A400000000000001F080474\n:107F8000800000000ED2524F10101C925C000ED0E8\n:107F9000100E02424ED24E0C925C900E06C81C8807\n:107FA000080ED24EC24C10101C925208000808084D\n:107FB000024002424C101498149208080808060067\n:107FC0001B75B131001C925252000C92524C001C95\n:107FD000925C90000ED24EC2000ED010100006C867\n:107FE000049808080EC807001252524F0011312A97\n:107FF0004400113135BB00124C8C9200112A449878\n:10800000001EC4881E06C48C848608080808081848\n:10801000080C881800000C8360302C3235352C3069\n:108020002C3235352C300A302C3235352C302C3270\n:1080300035352C300A302C302C302C302C300A3294\n:1080400035352C302C302C302C3235350A302C3252\n:1080500035352C3235352C3235352C300A00544923\n:108060004C5420544F2046494C4C205343524545D4\n:108070004E2000636F6D7061737343616C0000008C\n:1080800001000200030004000001010102010301DC\n:1080900004010002010202020302040200030103C0\n:1080A00002030303040300040104020403040404A0\n:1080B0004F6E6C7920386269747320535049207375\n:1080C0007570706F727465640053504920666F72EA\n:1080D0006D6174206572726F72004E6F20617661FF\n:1080E000696C61626C6520535049004E6F20617667\n:1080F00061696C61626C65204932430070696E6D24\n:108100006170206E6F7420666F756E6420666F728A\n:10811000207065726970686572616C00232D302B68\n:108120002000686C4C006566674546470030313278\n:1081300033343536373839414243444546003031CF\n:10814000323334353637383961626364656600002E\n:1081500000000000B47FFC7F010000000000000070\n:10816000C10A0200C10A0200C10A0200046403003D\n:10817000E803000064C502000000000000000000E9\n:1081800000000000000000000000000000000000EF\n:1081900000000100000000000000000000000000DE\n:1081A00000000000000000000000000040D30200BA\n:1081B00064E3020000000000000000000000000076\n:1081C000D50C03003E7E030070000020000000007C\n:1081D000FCEF02001CF00200DCEF020000000000D7\n:1081E000000000000000000000000000000000008F\n:1081F000000000000000000000000000000000007F\n:10820000000000000000000000000000000000006E\n:10821000000000000000000000000000000000005E\n:10822000000000000000000000000000204EFFFFE2\n:10823000000000000101010101010101010101052E\n:1082400005050505050505FF00000401E90000001E\n:10825000852B000051340000257800006D6101007D\n:108260004563010095630100C9880100C100000059\n:020000040003F7\n:::::::::::::::::::::::::::::::::::::::::::\n:020000041000EA\n:1010C0007CB0EE17FFFFFFFF0A0000000000E10008\n:0C10D000FFFFFFFF6D0E0300000000009A\n:0400000500019C0951\n:00000001FF";
function hexlifyLine(ar) {
    var result = '';
    for (var i = 0; i < ar.length; ++i) {
        if (ar[i] < 16) {
            result += '0';
        }
        result += ar[i].toString(16);
    }
    return result;
}
function hexlify(script) {
    // add header, pad to multiple of 16 bytes
    var data = new Uint8Array(4 + script.length + (16 - (4 + script.length) % 16));
    data[0] = 77; // 'M'
    data[1] = 80; // 'P'
    data[2] = script.length & 0xff;
    data[3] = (script.length >> 8) & 0xff;
    for (var i = 0; i < script.length; ++i) {
        data[4 + i] = script.charCodeAt(i);
    }
    // check data.length < 0x2000
    if (data.length > 8192) {
        throw new RangeError('Too long');
    }
    // convert to .hex format
    var addr = 0x3e000; // magic start address in flash
    var chunk = new Uint8Array(5 + 16);
    var output = [];
    for (var i = 0; i < data.length; i += 16, addr += 16) {
        chunk[0] = 16; // length of data section
        chunk[1] = (addr >> 8) & 0xff; // high byte of 16-bit addr
        chunk[2] = addr & 0xff; // low byte of 16-bit addr
        chunk[3] = 0; // type (data)
        for (var j = 0; j < 16; ++j) {
            chunk[4 + j] = data[i + j];
        }
        var checksum = 0;
        for (var j = 0; j < 4 + 16; ++j) {
            checksum += chunk[j];
        }
        chunk[4 + 16] = (-checksum) & 0xff;
        output.push(':' + hexlifyLine(chunk).toUpperCase());
    }
    return output.join('\n');
}
// Generates a hex file containing the user's Python from the firmware.
function getHexFile(python) {
    var hexlified_python = hexlify(python);
    var insertion_point = ':::::::::::::::::::::::::::::::::::::::::::';
    return firmware.replace(insertion_point, hexlified_python);
}
exports.getHexFile = getHexFile;

},{"path":182}],116:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sleep(ms) {
    return new Promise(function (resolve) {
        setTimeout(resolve, ms);
    });
}
exports.sleep = sleep;

},{}],117:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("firebase/analytics");
var firebase = __importStar(require("firebase/app"));
require("firebase/storage");
var React = __importStar(require("preact"));
var app_1 = require("./app");
var util_1 = require("./lib/util");
var Page_1 = __importDefault(require("./views/Page"));
function main() {
    return __awaiter(this, void 0, void 0, function () {
        function getElementByIdSafe(id) {
            var element = document.getElementById(id);
            if (!element) {
                throw new Error("Could not find element with \"" + id + "\"");
            }
            return element;
        }
        var app, pageDiv, firebaseConfig;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    Blockly.HSV_VALUE = 0.9;
                    app = app_1.newApp();
                    pageDiv = getElementByIdSafe('page');
                    if (!pageDiv.parentElement) {
                        return [2 /*return*/];
                    }
                    firebaseConfig = {
                        apiKey: 'AIzaSyDsJfMGnGrAWKAGKm-sowLs1q_JfEGvF1Q',
                        authDomain: 'auth.edublocks.org',
                        databaseURL: 'https://edublocks-38d74.firebaseio.com',
                        projectId: 'edublocks-38d74',
                        storageBucket: 'edublocks-38d74.appspot.com',
                        messagingSenderId: '1073955966212',
                        appId: '1:1073955966212:web:b828491fbc775a2130d451',
                        measurementId: 'G-ELDZXSL916',
                    };
                    firebase.initializeApp(firebaseConfig);
                    firebase.analytics();
                    return [4 /*yield*/, util_1.sleep(1000)];
                case 1:
                    _a.sent();
                    React.render(React.createElement(Page_1.default, { app: app }), pageDiv.parentElement, pageDiv);
                    return [2 /*return*/];
            }
        });
    });
}
main();

},{"./app":1,"./lib/util":116,"./views/Page":138,"firebase/analytics":162,"firebase/app":163,"firebase/storage":165,"preact":184}],118:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function newCalliopePlatform() {
    return {
        key: 'Calliope',
        name: 'Calliope Mini',
        image: '/images/calliope.png',
        capabilities: ['HexDownload'],
        defaultExtensions: [
            'Calliope General',
        ],
        extensions: [],
    };
}
exports.newCalliopePlatform = newCalliopePlatform;

},{}],119:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function newCircuitPythonPlatform() {
    return {
        key: 'CircuitPython',
        name: 'CircuitPython',
        image: '/images/circuitplayground.png',
        capabilities: ['PythonDownload'],
        defaultExtensions: [
            'CircuitPython General',
        ],
        extensions: [],
    };
}
exports.newCircuitPythonPlatform = newCircuitPythonPlatform;

},{}],120:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var calliope_1 = require("./calliope");
var circuitpython_1 = require("./circuitpython");
var microbit_1 = require("./microbit");
var raspberrypi_1 = require("./raspberrypi");
var python_1 = require("./python");
function getPlatformList() {
    return [
        { platform: 'Python', title: 'Python 3', image: '/images/webpy.png', help: 'https://edublocks.org/python.html' },
        // { title: 'Advanced Python', image: '/images/advpy.png', help: 'https://edublocks.org' },
        { platform: 'RaspberryPi', title: 'Raspberry Pi', image: '/images/pi.png', help: 'https://edublocks.org/pi.html' },
        { platform: 'MicroBit', title: 'micro:bit', image: '/images/microbit.png', help: 'https://edublocks.org/microbit.html' },
        { platform: 'CircuitPython', title: 'CircuitPython', image: '/images/circuitplayground.png', help: 'https://edublocks.org/circuitpy.html' },
    ];
}
exports.getPlatformList = getPlatformList;
function getPlatform(platform) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (platform) {
                case 'Python':
                    return [2 /*return*/, python_1.newWebPlatform()];
                case 'MicroBit':
                    return [2 /*return*/, microbit_1.newMicrobitPlatform()];
                case 'RaspberryPi':
                    return [2 /*return*/, raspberrypi_1.newRaspberryPiPlatform()];
                case 'CircuitPython':
                    return [2 /*return*/, circuitpython_1.newCircuitPythonPlatform()];
                case 'Calliope':
                    return [2 /*return*/, calliope_1.newCalliopePlatform()];
                default:
                    throw new Error('Invalid platform: ' + platform);
            }
            return [2 /*return*/];
        });
    });
}
exports.getPlatform = getPlatform;

},{"./calliope":118,"./circuitpython":119,"./microbit":122,"./python":123,"./raspberrypi":124}],121:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DAPjs = __importStar(require("../../lib/dapjs"));
var hexlify_1 = require("../../lib/hexlify");
function flashMicroBit(python, onProgress) {
    return __awaiter(this, void 0, void 0, function () {
        var device, output, enc, image, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    console.log('Select your micro:bit');
                    return [4 /*yield*/, navigator.usb.requestDevice({
                            filters: [{ vendorId: 0x0d28, productId: 0x0204 }],
                        })];
                case 1:
                    device = _a.sent();
                    // Connect to device
                    window.transport = new DAPjs.WebUSB(device);
                    window.daplink = new DAPjs.DAPLink(window.transport);
                    // Ensure disconnected
                    window.daplink.disconnect();
                    // Event to monitor flashing progress
                    window.daplink.on(DAPjs.DAPLink.EVENT_PROGRESS, function (progress) {
                        console.log('progress', progress);
                        onProgress(progress);
                    });
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 6, , 7]);
                    // Push binary to board
                    return [4 /*yield*/, window.daplink.connect()];
                case 3:
                    // Push binary to board
                    _a.sent();
                    output = void 0;
                    try {
                        output = hexlify_1.getHexFile(python);
                    }
                    catch (e) {
                        alert(e.message);
                        return [2 /*return*/];
                    }
                    enc = new TextEncoder();
                    image = enc.encode(output).buffer;
                    console.log('Flashing');
                    return [4 /*yield*/, window.daplink.flash(image)];
                case 4:
                    _a.sent();
                    console.log('Finished flashing!');
                    return [4 /*yield*/, window.daplink.disconnect()];
                case 5:
                    _a.sent();
                    return [3 /*break*/, 7];
                case 6:
                    e_1 = _a.sent();
                    console.log('Error flashing: ' + e_1);
                    // If micro:bit does not support dapjs
                    if (e_1.message === 'No valid interfaces found.') {
                        return [2 /*return*/];
                    }
                    else if (e_1.message === 'Unable to claim interface.') {
                        return [2 /*return*/];
                    }
                    return [3 /*break*/, 7];
                case 7: return [2 /*return*/];
            }
        });
    });
}
exports.flashMicroBit = flashMicroBit;

},{"../../lib/dapjs":109,"../../lib/hexlify":115}],122:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function newMicrobitPlatform() {
    return {
        key: 'MicroBit',
        name: 'micro:bit',
        image: '/images/microbit.png',
        capabilities: ['HexDownload', 'HexFlash'],
        defaultExtensions: [
            'micro:bit General',
        ],
        extensions: [
            'scrollbit',
            'GiggleBot',
            //Automated Extensions under here
            'DriveBit',
            'BitBotXL',
            'MoveMini',
            'Minibit',
        ],
    };
}
exports.newMicrobitPlatform = newMicrobitPlatform;

},{}],123:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function newWebPlatform() {
    return {
        key: 'Python',
        name: 'Python 3',
        image: '/images/webpy.png',
        capabilities: ['TrinketShell'],
        defaultExtensions: [
            'Web General',
        ],
        extensions: [],
    };
}
exports.newWebPlatform = newWebPlatform;

},{}],124:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function newRaspberryPiPlatform() {
    return {
        key: 'RaspberryPi',
        name: 'Raspberry Pi',
        image: '/images/pi.png',
        capabilities: ['RemoteShell'],
        defaultExtensions: [
            'Pi General',
        ],
        extensions: [],
    };
}
exports.newRaspberryPiPlatform = newRaspberryPiPlatform;

},{}],125:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var changeCase = require("change-case");
var includeFolder = undefined;
var Samples = {};
var microbitSamples = (function(){var self={},fs = require("fs");
self["Accelerometer"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"import_microbit\" id=\"FMb[g7WuZsg4(O2g$U=M\" x=\"37\" y=\"46\">\n    <next>\n      <block type=\"whileout\" id=\"(MsY-V,cXKWMEOL8=xK7\">\n        <value name=\"cond\">\n          <shadow type=\"textinline\" id=\"=Ivc0_?P+fx{T85TC!jC\">\n            <field name=\"text\">True</field>\n          </shadow>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"ifinline\" id=\"25dd%(AD4!,Fj8RY1$Ae\">\n            <value name=\"iftext\">\n              <shadow type=\"textinline\" id=\"shCqs[y/nl#WKxxR+omC\">\n                <field name=\"text\">True</field>\n              </shadow>\n              <block type=\"accwasgesturenew\" id=\"-o!WX;qO4*4:=2V/^7ks\">\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"/kCFN=I8=`Iv]q9((~jk\">\n                    <field name=\"text\">'shake'</field>\n                  </shadow>\n                </value>\n              </block>\n            </value>\n            <statement name=\"ifstate\">\n              <block type=\"scrollnew\" id=\"-R]O~k0oWKXj#O;[6j~M\">\n                <value name=\"displaytext\">\n                  <shadow type=\"textinline\" id=\"8`/G*p:TGa!xJg6~P!F]\">\n                    <field name=\"text\">Shake Detected!</field>\n                  </shadow>\n                </value>\n              </block>\n            </statement>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>";
self["Buttons"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"import_microbit\" id=\"*aVp9vGo{c;+xkHe;#0i\" x=\"-3\" y=\"-14\">\n    <next>\n      <block type=\"whileout\" id=\"79,o5.GvzG-`n:t]@/EF\">\n        <value name=\"cond\">\n          <shadow type=\"textinline\" id=\"-b2~{fp%DLdS.efP/l(|\">\n            <field name=\"text\">True</field>\n          </shadow>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"ifinline\" id=\"+Tk.}`IqlZFvhlyN#~Oj\">\n            <value name=\"iftext\">\n              <shadow type=\"textinline\" id=\"Sjx@wH-`aNiU@S^O77TE\">\n                <field name=\"text\">True</field>\n              </shadow>\n              <block type=\"buttonispressed\" id=\"nI.eU1vD,}fj225*,`tP\">\n                <field name=\"NAME\">a</field>\n              </block>\n            </value>\n            <statement name=\"ifstate\">\n              <block type=\"scrollnew\" id=\"28TR{?}vd@7CBotJ+tCA\">\n                <value name=\"displaytext\">\n                  <shadow type=\"textinline\" id=\"Y[W2{7~,t^GIpt0K1M-=\">\n                    <field name=\"text\">Button A Pressed</field>\n                  </shadow>\n                </value>\n              </block>\n            </statement>\n            <next>\n              <block type=\"ifinline\" id=\"!,^%1Q!W]xBQaJr@A0Eo\">\n                <value name=\"iftext\">\n                  <shadow type=\"textinline\" id=\"Sjx@wH-`aNiU@S^O77TE\">\n                    <field name=\"text\">True</field>\n                  </shadow>\n                  <block type=\"buttonispressed\" id=\"5BNP?$(4L2`r.kqhj0ZW\">\n                    <field name=\"NAME\">b</field>\n                  </block>\n                </value>\n                <statement name=\"ifstate\">\n                  <block type=\"scrollnew\" id=\"?Wf.RW2ln0f9x(R-6[s2\">\n                    <value name=\"displaytext\">\n                      <shadow type=\"textinline\" id=\"eJzMIy%[Y?Z`%.$bs$4-\">\n                        <field name=\"text\">Button B Pressed</field>\n                      </shadow>\n                    </value>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>";
self["LightSensing"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"=1^dL32n-xZ_SpU){x9(\">image</variable>\n    <variable type=\"\" id=\"wtm6*Bp?b.Es,/OOmMn:\">var</variable>\n  </variables>\n  <block type=\"import_microbit\" id=\"u@a+eCZpHn3+/xTBkG^v\" x=\"103\" y=\"27\">\n    <next>\n      <block type=\"imagecreate\" id=\"HE$WSrZtOq1U5l=X?,(0\">\n        <field name=\"image\" id=\"=1^dL32n-xZ_SpU){x9(\" variabletype=\"\">image</field>\n        <field name=\"1\">9</field>\n        <field name=\"2\">9</field>\n        <field name=\"3\">9</field>\n        <field name=\"4\">9</field>\n        <field name=\"5\">9</field>\n        <field name=\"6\">9</field>\n        <field name=\"7\">9</field>\n        <field name=\"8\">9</field>\n        <field name=\"9\">9</field>\n        <field name=\"10\">9</field>\n        <field name=\"11\">9</field>\n        <field name=\"12\">9</field>\n        <field name=\"13\">9</field>\n        <field name=\"14\">9</field>\n        <field name=\"15\">9</field>\n        <field name=\"16\">9</field>\n        <field name=\"17\">9</field>\n        <field name=\"18\">9</field>\n        <field name=\"19\">9</field>\n        <field name=\"20\">9</field>\n        <field name=\"21\">9</field>\n        <field name=\"22\">9</field>\n        <field name=\"23\">9</field>\n        <field name=\"24\">9</field>\n        <field name=\"25\">9</field>\n        <next>\n          <block type=\"whileout\" id=\"D~#1!6rwzT|AkG|Z7Qw7\">\n            <value name=\"cond\">\n              <shadow type=\"textinline\" id=\"kPbS.9t,JF[J5xy6je.W\">\n                <field name=\"text\">True</field>\n              </shadow>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"ifinline\" id=\"lnvP$lWUU]:g1QC}6n]D\">\n                <value name=\"iftext\">\n                  <shadow type=\"textinline\" id=\"%i=GGa5^4Uv+9mAZmxjK\">\n                    <field name=\"text\">True</field>\n                  </shadow>\n                  <block type=\"internal\" id=\"HF|:j;#b(SyU^l-[eaFX\">\n                    <field name=\"choose\">&lt;</field>\n                    <value name=\"first\">\n                      <shadow type=\"textinline\" id=\"/N+iyMd=;6*H%hfYN7oB\">\n                        <field name=\"text\">display.read_light_level()</field>\n                      </shadow>\n                    </value>\n                    <value name=\"last\">\n                      <shadow type=\"textinline\" id=\"39r|2Dk`qp,B!*Hz8?=U\">\n                        <field name=\"text\">100</field>\n                      </shadow>\n                    </value>\n                  </block>\n                </value>\n                <statement name=\"ifstate\">\n                  <block type=\"imagenew\" id=\"VzcnhZLS7!Op})GpbG=E\">\n                    <value name=\"imagevar\">\n                      <shadow type=\"textinline\" id=\"=q(*pVdeyCWR]9G5`]f1\">\n                        <field name=\"text\">Image.HAPPY</field>\n                      </shadow>\n                      <block type=\"variables_get\" id=\"xl!Qh#q1J{vGSKVGvxqd\">\n                        <field name=\"VAR\" id=\"=1^dL32n-xZ_SpU){x9(\" variabletype=\"\">image</field>\n                      </block>\n                    </value>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"else\" id=\"OT`5cJ,l!6seQg8_6sRI\">\n                    <statement name=\"DO\">\n                      <block type=\"disclear\" id=\"(D=PK53$o*R}DzK|5I~R\"></block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["Pins"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"import_microbit\" id=\"R{IQXB(@}.HeS,lU?RIc\" x=\"79\" y=\"41\">\n    <next>\n      <block type=\"whileout\" id=\"~K=qQFg`!/v[Kf!.6#rn\">\n        <value name=\"cond\">\n          <shadow type=\"textinline\" id=\"j_T3_A(P/?GP[9HGm#Q`\">\n            <field name=\"text\">True</field>\n          </shadow>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"ifinline\" id=\"4g*-p8;Ps}OhP9Ih]WDe\">\n            <value name=\"iftext\">\n              <shadow type=\"textinline\" id=\"I5V#6+H[d:T;xgP|9~F]\">\n                <field name=\"text\">True</field>\n              </shadow>\n              <block type=\"pintouchednew\" id=\"62,irR*2p3v267DVe1^/\">\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"RBPb($X_,-*Yb6kwppmm\">\n                    <field name=\"text\">0</field>\n                  </shadow>\n                </value>\n              </block>\n            </value>\n            <statement name=\"ifstate\">\n              <block type=\"scrollnew\" id=\"!FR80mPmN9P981LbMcCd\">\n                <value name=\"displaytext\">\n                  <shadow type=\"textinline\" id=\"K*37*t8|x=_FS-pC`(C@\">\n                    <field name=\"text\">Hello World</field>\n                  </shadow>\n                </value>\n              </block>\n            </statement>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>";
self["Radio"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"_eQ)`le1Ovb8GBGK7W]w\">incoming</variable>\n  </variables>\n  <block type=\"import_microbit\" id=\"#,3:^@zeL9N!g??6,%O/\" x=\"104\" y=\"43\">\n    <next>\n      <block type=\"imradio\" id=\"hz[tvGN:N.j1,uUX#D[c\">\n        <next>\n          <block type=\"radioon\" id=\",Q_etNtBPAa!70{5)X?|\">\n            <next>\n              <block type=\"radioconfnew\" id=\"0:TyaBJXNw8X|wYt5M99\">\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"|EH6;(E`NLfZEHBemkE#\">\n                    <field name=\"text\">channel=1</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"whileout\" id=\":+]-|1c{n+9AoT[I~g3k\">\n                    <value name=\"cond\">\n                      <shadow type=\"textinline\" id=\"nWQ=S=(rAef-!,DgbNO+\">\n                        <field name=\"text\">True</field>\n                      </shadow>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"disclear\" id=\";BHZNBFNI|qN$N|wfaLB\">\n                        <next>\n                          <block type=\"ifinline\" id=\"vPG=~OmO@RKB-JiA[#}A\">\n                            <value name=\"iftext\">\n                              <shadow type=\"textinline\" id=\"xM(ykdOzwGP!ptYVf%Kg\">\n                                <field name=\"text\">True</field>\n                              </shadow>\n                              <block type=\"buttonispressed\" id=\"Xu9HzMx!g5*nMUM8pV[A\">\n                                <field name=\"NAME\">a</field>\n                              </block>\n                            </value>\n                            <statement name=\"ifstate\">\n                              <block type=\"radiosendnew\" id=\"?#wks_wr*D|$GGxuZ3]#\">\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"JCh48yzi1,eUuO{J@:3U\">\n                                    <field name=\"text\">\"hello\"</field>\n                                  </shadow>\n                                </value>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"incoming\" id=\"pp7S8=|,VR-)y:q%!?Q_\">\n                                <field name=\"incoming\" id=\"_eQ)`le1Ovb8GBGK7W]w\" variabletype=\"\">incoming</field>\n                                <next>\n                                  <block type=\"ifradio\" id=\"37;iL:cO.uZlVNwLEOY#\">\n                                    <field name=\"incoming\" id=\"_eQ)`le1Ovb8GBGK7W]w\" variabletype=\"\">incoming</field>\n                                    <field name=\"sentitem\">\"hello\"</field>\n                                    <statement name=\"DO\">\n                                      <block type=\"scrollnew\" id=\"3rO7gcL6mFH9ZD~~,jLb\">\n                                        <value name=\"displaytext\">\n                                          <shadow type=\"textinline\" id=\"|0o_Zy$;L.{se)j{`1!(\">\n                                            <field name=\"text\">Hello World</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </statement>\n                                    <next>\n                                      <block type=\"sleepnew\" id=\"YYl:e5/|(Gx*Hx9VRf?I\">\n                                        <value name=\"sleep\">\n                                          <shadow type=\"textinline\" id=\"B(}#4d$J4,^OI?l!o[`Q\">\n                                            <field name=\"text\">1000</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["TemperatureSensing"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"import_microbit\" id=\"o-75WeEtW7nJUO-Kd{]c\" x=\"303\" y=\"68\">\n    <next>\n      <block type=\"whileout\" id=\"9W+)k_=gO65Lm3[~nu*3\">\n        <value name=\"cond\">\n          <shadow type=\"textinline\" id=\"LCeX~0pKC+riT9-xv-PS\">\n            <field name=\"text\">True</field>\n          </shadow>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"scrollvarnew\" id=\"J:wWK`63X5FL6eMdHDZ1\">\n            <value name=\"displaytextvar\">\n              <shadow type=\"textinline\" id=\"qQ^UwaUogT|F1m}|PMcs\">\n                <field name=\"text\">temperature()</field>\n              </shadow>\n            </value>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>";
return self})();
registerSamples('MicroBit', microbitSamples);
var webSamples = (function(){var self={},fs = require("fs");
self["askAQuestion"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"V-956PMSu(JQ3+8BJhU0\">name</variable>\n    <variable type=\"\" id=\"mH{BXYv{qhkgUL%q;gIO\">i</variable>\n    <variable type=\"\" id=\"pyq]CJ6!%@|#fYE[089c\">var</variable>\n  </variables>\n  <block type=\"variables_set\" id=\"6x0Uw*LS~Tm3Df_T%sCV\" x=\"14\" y=\"17\">\n    <field name=\"VAR\" id=\"V-956PMSu(JQ3+8BJhU0\" variabletype=\"\">name</field>\n    <field name=\"NAME\">=</field>\n    <value name=\"varset\">\n      <shadow type=\"textinline\" id=\"D13mVS0Li/f4*;4h5?D_\">\n        <field name=\"text\">input(\"What is your name?\")</field>\n      </shadow>\n    </value>\n    <next>\n      <block type=\"webvarprint\" id=\"N}J|5]%#3Z:Np]ZC55Sq\">\n        <value name=\"var\">\n          <shadow type=\"textinline\" id=\"Pi,mVmBPv7~PAF%Hra~B\">\n            <field name=\"text\">Variable</field>\n          </shadow>\n          <block type=\"operators2\" id=\"olEl]mkgX~H`kZxhPjp1\">\n            <field name=\"operators\">+</field>\n            <value name=\"first\">\n              <shadow type=\"textinline\" id=\"e~?7YuV[2[k!z1[x1Z+?\">\n                <field name=\"text\">\"Hello, \"</field>\n              </shadow>\n            </value>\n            <value name=\"last\">\n              <shadow type=\"textinline\" id=\"EUALr-o7Ds,dGrcVkuNt\">\n                <field name=\"text\">True</field>\n              </shadow>\n              <block type=\"variables_get\" id=\"8e?Tr{TGXS_;[agmulsE\">\n                <field name=\"VAR\" id=\"V-956PMSu(JQ3+8BJhU0\" variabletype=\"\">name</field>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>";
self["graphs"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"@AcBIc*uRTPwVqqg~@m=\">bar_chart</variable>\n    <variable type=\"\" id=\"wu(GJLAZoiS@Do`O#]%f\">name</variable>\n  </variables>\n  <block type=\"import_pygal\" id=\"{NO^fC2sVt[_)mekhctg\" x=\"41\" y=\"11\">\n    <next>\n      <block type=\"chart_type\" id=\"y@F%nK6?fTkJV]@~2]T)\">\n        <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n        <field name=\"chartTypes\">Bar</field>\n        <value name=\"text\">\n          <shadow type=\"textinline\" id=\"u.!o3~0`2$4O6Y5Tr5[s\">\n            <field name=\"text\"></field>\n          </shadow>\n        </value>\n        <next>\n          <block type=\"chart_title\" id=\"K]S(a8Hgc8en9}Sv;kT^\">\n            <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n            <value name=\"text\">\n              <shadow type=\"stringinline\" id=\"%9*zOx0X/dyek0lZjVq=\">\n                <field name=\"text\">Browser Usage Evolution (in %)</field>\n              </shadow>\n            </value>\n            <next>\n              <block type=\"chart_xlabels\" id=\"E{:cTN}/r9V!c=m:]~ek\">\n                <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\".zI9I9Fm`ewDd{N5/]MX\">\n                    <field name=\"text\">map(str, range(2002, 2013))</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"chart_add\" id=\"iqR(Q_DZ8_AU|wxVw[WQ\">\n                    <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n                    <value name=\"text\">\n                      <shadow type=\"stringinline\" id=\"(s#pN75r#8FQDUR4%Boh\">\n                        <field name=\"text\">Firefox</field>\n                      </shadow>\n                    </value>\n                    <value name=\"text1\">\n                      <shadow type=\"textinline\" id=\"!.GDI]mz}Dll(hX#_waK\">\n                        <field name=\"text\">None, None, 0, 16.6,   25,   31, 36.4, 45.5, 46.3, 42.8, 37.1</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"chart_add\" id=\"j`]B5C4Wu}ES;.WRu.Ke\">\n                        <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n                        <value name=\"text\">\n                          <shadow type=\"stringinline\" id=\"ke=+/6Fyc[[@;NnLec*;\">\n                            <field name=\"text\">Chrome</field>\n                          </shadow>\n                        </value>\n                        <value name=\"text1\">\n                          <shadow type=\"textinline\" id=\"L,dB?:caqBnmdUM`0reu\">\n                            <field name=\"text\">None, None, None, None, None, None,    0,  3.9, 10.8, 23.8, 35.3</field>\n                          </shadow>\n                        </value>\n                        <next>\n                          <block type=\"chart_add\" id=\"wC[xBqSV?EA.b2[SK{!Z\">\n                            <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n                            <value name=\"text\">\n                              <shadow type=\"stringinline\" id=\"b4[z+6DLW|M!Awe|~8h.\">\n                                <field name=\"text\">IE</field>\n                              </shadow>\n                            </value>\n                            <value name=\"text1\">\n                              <shadow type=\"textinline\" id=\"JWZdum{Qx{1nf).W~m2*\">\n                                <field name=\"text\">85.8, 84.6, 84.7, 74.5,   66, 58.6, 54.7, 44.8, 36.2, 26.6, 20.1</field>\n                              </shadow>\n                            </value>\n                            <next>\n                              <block type=\"chart_add\" id=\"o8qr}{5b`#4D]gYeit;G\">\n                                <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n                                <value name=\"text\">\n                                  <shadow type=\"stringinline\" id=\"_@0xt_11Youn-4~kAfx`\">\n                                    <field name=\"text\">Others</field>\n                                  </shadow>\n                                </value>\n                                <value name=\"text1\">\n                                  <shadow type=\"textinline\" id=\"a3scA(mcI3hJ3L^ubpa?\">\n                                    <field name=\"text\">14.2, 15.4, 15.3,  8.9,    9, 10.4,  8.9,  5.8,  6.7,  6.8,  7.5</field>\n                                  </shadow>\n                                </value>\n                                <next>\n                                  <block type=\"chart_render\" id=\"OVBbCkEa,c9s+Ii_;+1I\">\n                                    <field name=\"name\" id=\"@AcBIc*uRTPwVqqg~@m=\" variabletype=\"\">bar_chart</field>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["happyBirthdaySong"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8,1{=OaEr%5,*~*US^SU\">name</variable>\n    <variable type=\"\" id=\"dQ}|R^l|M6Wa]8Oerlp%\">i</variable>\n    <variable type=\"\" id=\"L6iv)P]r?%MWuvItC{v3\">j</variable>\n  </variables>\n  <block type=\"import_time\" id=\"g1mYY8Uu|R|b.~`Wethw\" x=\"41\" y=\"28\">\n    <next>\n      <block type=\"variables_set\" id=\"BjQ$@2~a-k}Z(WbE!;~4\">\n        <field name=\"VAR\" id=\"8,1{=OaEr%5,*~*US^SU\" variabletype=\"\">name</field>\n        <field name=\"NAME\">=</field>\n        <value name=\"varset\">\n          <shadow type=\"textinline\" id=\"RVel5(J?P$gu3#8,{j^A\">\n            <field name=\"text\">input(\"What is your name?\")</field>\n          </shadow>\n        </value>\n        <next>\n          <block type=\"webfor\" id=\"q#!bh1xu_ltDz)J6KD|W\">\n            <value name=\"letter\">\n              <shadow type=\"textinline\" id=\";z!5xG,Ic9KV_$@xC4:b\">\n                <field name=\"text\">i</field>\n              </shadow>\n            </value>\n            <value name=\"no\">\n              <shadow type=\"textinline\" id=\"Fa(1awdiP^eA{;tq9%ZU\">\n                <field name=\"text\">2</field>\n              </shadow>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"webprintnew\" id=\"G_]ms`]u=]a!bS5i^Hou\">\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"E:9[_qjiG!Q`o:7%Q3eA\">\n                    <field name=\"text\">Happy Birthday to you</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"websleepnew\" id=\"~_=T4V~A_jc]RjfRZ6)+\">\n                    <value name=\"sleep\">\n                      <shadow type=\"textinline\" id=\"J5lV(n)EGgKSCJSx|4BH\">\n                        <field name=\"text\">1</field>\n                      </shadow>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"webvarprint\" id=\"sL8wRS4Ygp:snkuEyf}U\">\n                <value name=\"var\">\n                  <shadow type=\"textinline\" id=\"?SW8/-l,703E7?Zxfk6b\">\n                    <field name=\"text\">Variable</field>\n                  </shadow>\n                  <block type=\"operators2\" id=\"T{K%cRA[1nZgZGdHx02b\">\n                    <field name=\"operators\">+</field>\n                    <value name=\"first\">\n                      <shadow type=\"textinline\" id=\"C~J%BB+{`+v5--ki1O#F\">\n                        <field name=\"text\">\"Happy Birthday dear \"</field>\n                      </shadow>\n                    </value>\n                    <value name=\"last\">\n                      <shadow type=\"textinline\" id=\"3fst#nyPu|@B~_J/GbMs\">\n                        <field name=\"text\">True</field>\n                      </shadow>\n                      <block type=\"variables_get\" id=\"7Q:6i$P9]m8~Wnx:isw_\">\n                        <field name=\"VAR\" id=\"8,1{=OaEr%5,*~*US^SU\" variabletype=\"\">name</field>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"websleepnew\" id=\"KvPF$a{$vq_kYsF1-6#!\">\n                    <value name=\"sleep\">\n                      <shadow type=\"textinline\" id=\"TM;^9aXhOBl2xvu~btN0\">\n                        <field name=\"text\">1</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"webprintnew\" id=\"-Tlk~@n6SlH+Bc{pfbSN\">\n                        <value name=\"text\">\n                          <shadow type=\"textinline\" id=\":m^g*,j.Nzcm.hpR?BPY\">\n                            <field name=\"text\">Happy Birthday to you</field>\n                          </shadow>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["processing"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"_,Ff.u`L:JRBZY_G/|M1\">X</variable>\n    <variable type=\"\" id=\"JL*e;0x%!rMOkLwkhz+x\">draw</variable>\n    <variable type=\"\" id=\"^fz?3M*)UM+1ZL29;5{z\">Y</variable>\n    <variable type=\"\" id=\"3nyGN9sMVt@P(CdpOy^?\">j</variable>\n    <variable type=\"\" id=\"2p(c!60s),R4T}k@r6|O\">delay</variable>\n    <variable type=\"\" id=\"*/1wF(xC$]9/!93Ne%)0\">radius</variable>\n    <variable type=\"\" id=\"t|q]D*u0lGYeSR.3eio!\">m</variable>\n    <variable type=\"\" id=\"sAnXgo?iThNNUcjklN:K\">fc</variable>\n    <variable type=\"\" id=\"47?]r${mWTXh|,f`)ukf\">k</variable>\n    <variable type=\"\" id=\"!;-=4p5]g;=T!3yV]]~+\">n</variable>\n    <variable type=\"\" id=\"4,g%@lp.^}fuO3?El#P2\">var</variable>\n    <variable type=\"\" id=\"D+z%*U2{nI4R9CtQcTCF\">o</variable>\n  </variables>\n  <block type=\"import_math\" id=\"sYBVrBS)j,@q+6#G`2-*\" x=\"33\" y=\"26\">\n    <next>\n      <block type=\"import_processing\" id=\"7:PRy?~etiB}c3])Mh0q\">\n        <next>\n          <block type=\"variables_set\" id=\"/Fa6w*?H6CbR.(J}+yTR\">\n            <field name=\"VAR\" id=\"_,Ff.u`L:JRBZY_G/|M1\" variabletype=\"\">X</field>\n            <field name=\"NAME\">=</field>\n            <value name=\"varset\">\n              <shadow type=\"textinline\" id=\"*J50NP,K@-RdC$aHDbz-\">\n                <field name=\"text\">30</field>\n              </shadow>\n            </value>\n            <next>\n              <block type=\"variables_set\" id=\"?dI3*S?TQutJ;V2-.K{`\">\n                <field name=\"VAR\" id=\"^fz?3M*)UM+1ZL29;5{z\" variabletype=\"\">Y</field>\n                <field name=\"NAME\">=</field>\n                <value name=\"varset\">\n                  <shadow type=\"textinline\" id=\"G^]X^M=]!Bs6;nuTd6LZ\">\n                    <field name=\"text\">30</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"variables_set\" id=\":2I2O`jBSd7[R{XP:N^h\">\n                    <field name=\"VAR\" id=\"2p(c!60s),R4T}k@r6|O\" variabletype=\"\">delay</field>\n                    <field name=\"NAME\">=</field>\n                    <value name=\"varset\">\n                      <shadow type=\"textinline\" id=\"!Nuv63jyOr8iAkjNJty@\">\n                        <field name=\"text\">16</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"variables_set\" id=\"OWxIOkMhdiFhw*;nQlQ1\">\n                        <field name=\"VAR\" id=\"*/1wF(xC$]9/!93Ne%)0\" variabletype=\"\">radius</field>\n                        <field name=\"NAME\">=</field>\n                        <value name=\"varset\">\n                          <shadow type=\"textinline\" id=\"C;S9_#IM=u:9K)nX_V{x\">\n                            <field name=\"text\">30</field>\n                          </shadow>\n                        </value>\n                        <next>\n                          <block type=\"webdefine\" id=\"u^Xl^$-MwAX^fc3Jf}aX\">\n                            <value name=\"1\">\n                              <shadow type=\"textinline\" id=\"tdy!1-Eb?+3^)ujZjAX*\">\n                                <field name=\"text\">setup</field>\n                              </shadow>\n                            </value>\n                            <value name=\"2\">\n                              <shadow type=\"textinline\" id=\"ZLj?6vK/P#VW)?WK6Oo@\">\n                                <field name=\"text\"></field>\n                              </shadow>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"p_stroke3\" id=\"aGOQzxmL%tQ1F];q!$pQ\">\n                                <field name=\"NAME\">Weight</field>\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"rwy/*glYcqSpSI`;$xaB\">\n                                    <field name=\"text\">10</field>\n                                  </shadow>\n                                </value>\n                                <next>\n                                  <block type=\"p_framerate_set\" id=\"o!L-qDfCd_^i%!9GUK|n\">\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"qJnQ=1?coqx0W+J`p;d~\">\n                                        <field name=\"text\">20</field>\n                                      </shadow>\n                                    </value>\n                                    <next>\n                                      <block type=\"p_size\" id=\"ql8#xH/YqG/7cR#KE2o/\">\n                                        <value name=\"text\">\n                                          <shadow type=\"textinline\" id=\",y2-vnQ^h3f?t^Qjf*q~\">\n                                            <field name=\"text\">800,800</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"webdefine\" id=\"eJ,0T8;OLCxR~-@N2V*K\">\n                                <value name=\"1\">\n                                  <shadow type=\"textinline\" id=\"n[u3DQRzUizmAD*mWacM\">\n                                    <field name=\"text\">ellipseFun</field>\n                                  </shadow>\n                                </value>\n                                <value name=\"2\">\n                                  <shadow type=\"textinline\" id=\"]%S`qR*h){(TSvq0hZ5o\">\n                                    <field name=\"text\"></field>\n                                  </shadow>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"global\" id=\"E(jbT/#E:BoFYDbs`](O\">\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"SbCBpV=D1hCVDCg{$DKF\">\n                                        <field name=\"text\">X, Y, radius</field>\n                                      </shadow>\n                                    </value>\n                                    <next>\n                                      <block type=\"p_background\" id=\"#qi*ZLcUch/AQ{Br]=A*\">\n                                        <value name=\"text\">\n                                          <shadow type=\"textinline\" id=\"/?p);td[(lvq32;E7:Hm\">\n                                            <field name=\"text\">255, 204, 0</field>\n                                          </shadow>\n                                        </value>\n                                        <next>\n                                          <block type=\"p_fill\" id=\"H8]RS-lGy3Q`OA_qkD[G\">\n                                            <value name=\"text\">\n                                              <shadow type=\"textinline\" id=\")6,9Lb1q7vxs/qIl=*Vk\">\n                                                <field name=\"text\">0,121,184</field>\n                                              </shadow>\n                                            </value>\n                                            <next>\n                                              <block type=\"p_stroke\" id=\"^dN}bZBv:WhS|X3l74gu\">\n                                                <value name=\"text\">\n                                                  <shadow type=\"textinline\" id=\"^guw@+rX|_KSy`XvBQ,*\">\n                                                    <field name=\"text\">255</field>\n                                                  </shadow>\n                                                </value>\n                                                <next>\n                                                  <block type=\"variables_set\" id=\"#RkV2^40;||+Y5`o(!ns\">\n                                                    <field name=\"VAR\" id=\"sAnXgo?iThNNUcjklN:K\" variabletype=\"\">fc</field>\n                                                    <field name=\"NAME\">=</field>\n                                                    <value name=\"varset\">\n                                                      <shadow type=\"textinline\" id=\")SeBbp@GIz1K-b:38~~k\">\n                                                        <field name=\"text\">environment.frameCount</field>\n                                                      </shadow>\n                                                    </value>\n                                                    <next>\n                                                      <block type=\"variables_set\" id=\"vPrbzZZq{4v-o9vRUfoR\">\n                                                        <field name=\"VAR\" id=\"_,Ff.u`L:JRBZY_G/|M1\" variabletype=\"\">X</field>\n                                                        <field name=\"NAME\">+=</field>\n                                                        <value name=\"varset\">\n                                                          <shadow type=\"textinline\" id=\"3Q@vWPEDLQQmRb~MYvZ$\">\n                                                            <field name=\"text\">(mouse.x-X)/delay;</field>\n                                                          </shadow>\n                                                        </value>\n                                                        <next>\n                                                          <block type=\"variables_set\" id=\"Jo8!PrtsL]kX3@O[EkF?\">\n                                                            <field name=\"VAR\" id=\"^fz?3M*)UM+1ZL29;5{z\" variabletype=\"\">Y</field>\n                                                            <field name=\"NAME\">+=</field>\n                                                            <value name=\"varset\">\n                                                              <shadow type=\"textinline\" id=\"iB8feGnmRyrA*)m.NE{g\">\n                                                                <field name=\"text\">(mouse.y-Y)/delay;</field>\n                                                              </shadow>\n                                                            </value>\n                                                            <next>\n                                                              <block type=\"variables_set\" id=\"CN?rsup2#BVio5t]83@v\">\n                                                                <field name=\"VAR\" id=\"*/1wF(xC$]9/!93Ne%)0\" variabletype=\"\">radius</field>\n                                                                <field name=\"NAME\">=</field>\n                                                                <value name=\"varset\">\n                                                                  <shadow type=\"textinline\" id=\"(^~g2j}P.saVF5s1vt$U\">\n                                                                    <field name=\"text\">0</field>\n                                                                  </shadow>\n                                                                  <block type=\"operators2\" id=\"O(s2T?2,Bq7]v+3`p0[%\">\n                                                                    <field name=\"operators\">+</field>\n                                                                    <value name=\"first\">\n                                                                      <shadow type=\"textinline\" id=\"R608`]t6e6I~XB3XkgJ7\">\n                                                                        <field name=\"text\">True</field>\n                                                                      </shadow>\n                                                                      <block type=\"variables_get\" id=\"o%c=8GUC^|uM51p1L,Ox\">\n                                                                        <field name=\"VAR\" id=\"*/1wF(xC$]9/!93Ne%)0\" variabletype=\"\">radius</field>\n                                                                      </block>\n                                                                    </value>\n                                                                    <value name=\"last\">\n                                                                      <shadow type=\"textinline\" id=\"1X@g1Lg4ygyGO^C70?Oo\">\n                                                                        <field name=\"text\">True</field>\n                                                                      </shadow>\n                                                                      <block type=\"math_sin\" id=\"4G`uJVRH^3n](@FUFC,$\">\n                                                                        <value name=\"text\">\n                                                                          <shadow type=\"textinline\" id=\"+|vg)q@B)|fZ,!i{0=/5\">\n                                                                            <field name=\"text\"></field>\n                                                                          </shadow>\n                                                                          <block type=\"operators2\" id=\"9oQ_w(/HhAJ^r*S3]mcp\">\n                                                                            <field name=\"operators\">/</field>\n                                                                            <value name=\"first\">\n                                                                              <shadow type=\"textinline\" id=\"-sBcqTi:Gt9MdJ-^lJ2)\">\n                                                                                <field name=\"text\">True</field>\n                                                                              </shadow>\n                                                                              <block type=\"variables_get\" id=\"p1vNm66.HJY-_Dt3jLgg\">\n                                                                                <field name=\"VAR\" id=\"sAnXgo?iThNNUcjklN:K\" variabletype=\"\">fc</field>\n                                                                              </block>\n                                                                            </value>\n                                                                            <value name=\"last\">\n                                                                              <shadow type=\"textinline\" id=\".vdVUvIi$%sp~{:Qcuqx\">\n                                                                                <field name=\"text\">4</field>\n                                                                              </shadow>\n                                                                            </value>\n                                                                          </block>\n                                                                        </value>\n                                                                      </block>\n                                                                    </value>\n                                                                  </block>\n                                                                </value>\n                                                                <next>\n                                                                  <block type=\"p_ellipse\" id=\"pLOY_]xyYh|fpxGR]`Jd\">\n                                                                    <value name=\"text\">\n                                                                      <shadow type=\"textinline\" id=\"8Kl7as[:B(`GTwhqN]f5\">\n                                                                        <field name=\"text\">X, Y, radius, radius</field>\n                                                                      </shadow>\n                                                                    </value>\n                                                                  </block>\n                                                                </next>\n                                                              </block>\n                                                            </next>\n                                                          </block>\n                                                        </next>\n                                                      </block>\n                                                    </next>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                                <next>\n                                  <block type=\"variables_set\" id=\"Bv6S$}yQEw8GiMS,!$I2\">\n                                    <field name=\"VAR\" id=\"JL*e;0x%!rMOkLwkhz+x\" variabletype=\"\">draw</field>\n                                    <field name=\"NAME\">=</field>\n                                    <value name=\"varset\">\n                                      <shadow type=\"textinline\" id=\"CGk$jeZLlw,H`lt!nl`1\">\n                                        <field name=\"text\">ellipseFun</field>\n                                      </shadow>\n                                    </value>\n                                    <next>\n                                      <block type=\"p_run\" id=\"~]Sir*d~~9x[?Y2h.}Qr\"></block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["rainbowSpiral"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"a%f;e^2n.-ycDYZjlYu`\">screen</variable>\n    <variable type=\"\" id=\"mFYjUmzj/V-Z-;}eheOy\">colours</variable>\n    <variable type=\"\" id=\"A]kkSyL$=1D5i?q5}NA,\">turtle</variable>\n    <variable type=\"\" id=\"W,i0*k[h2d`yO[VE4W[H\">list</variable>\n    <variable type=\"\" id=\"(+r)4#|;|0VGeiV.V6#x\">i</variable>\n  </variables>\n  <block type=\"import_turtle\" id=\"(lt5]Rt`,_0l!(f7BmCS\" x=\"14\" y=\"9\">\n    <next>\n      <block type=\"turtle\" id=\"rkhY}ljV/RJHNKR:]8|J\">\n        <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n        <next>\n          <block type=\"screeninit\" id=\"{8?w:pE](,KKwfDvTzG9\">\n            <field name=\"wn\" id=\"a%f;e^2n.-ycDYZjlYu`\" variabletype=\"\">screen</field>\n            <next>\n              <block type=\"background\" id=\"_GfAJ~*O%n$=-N)^dv$~\">\n                <field name=\"wn\" id=\"a%f;e^2n.-ycDYZjlYu`\" variabletype=\"\">screen</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"2qV05z(iA8}YQ_hu*q[Y\">\n                    <field name=\"text\">\"black\"</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"create_list\" id=\"ZSE9{vSjUEWY}-wc@`:q\">\n                    <field name=\"list\" id=\"mFYjUmzj/V-Z-;}eheOy\" variabletype=\"\">colours</field>\n                    <value name=\"text\">\n                      <shadow type=\"textinline\" id=\"-rNq^gBf[5_nz,b:Qth?\">\n                        <field name=\"text\">\"red\", \"purple\", \"blue\", \"green\", \"orange\", \"yellow\"</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"webfor\" id=\".l(q|t+nkbOYTb,K0ndQ\">\n                        <value name=\"letter\">\n                          <shadow type=\"textinline\" id=\"D]D.Uu$4zPrXsP=01XJ|\">\n                            <field name=\"text\">i</field>\n                          </shadow>\n                        </value>\n                        <value name=\"no\">\n                          <shadow type=\"textinline\" id=\"wSl0}H7=#u-xKqw?=m;6\">\n                            <field name=\"text\">360</field>\n                          </shadow>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"colour\" id=\"b*)Lqy7/es4XF*=KxLH7\">\n                            <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                            <value name=\"text\">\n                              <shadow type=\"textinline\" id=\"T|g)[?@2^G;tB?u/I!Z9\">\n                                <field name=\"text\">255, 0, 0</field>\n                              </shadow>\n                              <block type=\"selectlist2\" id=\"jOX+Lc;isSO!qW3U+P/L\">\n                                <field name=\"list\" id=\"mFYjUmzj/V-Z-;}eheOy\" variabletype=\"\">colours</field>\n                                <value name=\"NAME\">\n                                  <shadow type=\"textinline\" id=\"ZlAV|AHp}}l}XYE/FG-Z\">\n                                    <field name=\"text\">3</field>\n                                  </shadow>\n                                  <block type=\"operators2\" id=\"g^JuR;^5zugHWY*xZ/~P\">\n                                    <field name=\"operators\">%</field>\n                                    <value name=\"first\">\n                                      <shadow type=\"textinline\" id=\"RKkMV.Ud|,Pj~LyOcaMX\">\n                                        <field name=\"text\">x</field>\n                                      </shadow>\n                                      <block type=\"loop_get\" id=\"S3B}u54(Eix*]@nc5GHG\">\n                                        <field name=\"VAR\" id=\"(+r)4#|;|0VGeiV.V6#x\" variabletype=\"\">i</field>\n                                      </block>\n                                    </value>\n                                    <value name=\"last\">\n                                      <shadow type=\"textinline\" id=\"8fz}3!7Cv,qj!NpCQv{*\">\n                                        <field name=\"text\">6</field>\n                                      </shadow>\n                                    </value>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"penwidth\" id=\"/Y.QHLDnFibM@K]Vcr/z\">\n                                <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"S?8IQ`fqB/NS[pv[18*T\">\n                                    <field name=\"text\">20</field>\n                                  </shadow>\n                                  <block type=\"operators2\" id=\"[wpn2#.}Sn-wMoDizP-u\">\n                                    <field name=\"operators\">/</field>\n                                    <value name=\"first\">\n                                      <shadow type=\"textinline\" id=\".`T5ak/y*U)`tBbwt_k4\">\n                                        <field name=\"text\">True</field>\n                                      </shadow>\n                                      <block type=\"loop_get\" id=\"SEU.lpWCp{!1G4yNC%ps\">\n                                        <field name=\"VAR\" id=\"(+r)4#|;|0VGeiV.V6#x\" variabletype=\"\">i</field>\n                                      </block>\n                                    </value>\n                                    <value name=\"last\">\n                                      <shadow type=\"textinline\" id=\"SD+CamXtvzV[/CkSI;w6\">\n                                        <field name=\"text\"></field>\n                                      </shadow>\n                                      <block type=\"operators2\" id=\"i+a/n27I3^32)lq*_V:K\">\n                                        <field name=\"operators\">+</field>\n                                        <value name=\"first\">\n                                          <shadow type=\"textinline\" id=\"FuKb%]e-gcgPDthinqi^\">\n                                            <field name=\"text\">100</field>\n                                          </shadow>\n                                        </value>\n                                        <value name=\"last\">\n                                          <shadow type=\"textinline\" id=\"wTV]fH1s]Y8H;F(D5pN=\">\n                                            <field name=\"text\">1</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"directions\" id=\"Br;=9;,O1M.kT8wvf}_T\">\n                                    <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                                    <field name=\"options\">forward</field>\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"O-z{d6x|0+U!y*BJ*``^\">\n                                        <field name=\"text\">90</field>\n                                      </shadow>\n                                      <block type=\"loop_get\" id=\"(q#9g5e:6a4#F/EvMDLy\">\n                                        <field name=\"VAR\" id=\"(+r)4#|;|0VGeiV.V6#x\" variabletype=\"\">i</field>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"directions\" id=\"xdf)^wcASy^PfCewbL2W\">\n                                        <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                                        <field name=\"options\">left</field>\n                                        <value name=\"text\">\n                                          <shadow type=\"textinline\" id=\"aw3O6Rpej3*A1u?l_+0O\">\n                                            <field name=\"text\">59</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
return self})();
registerSamples('Python', webSamples);
var circuitpySamples = (function(){var self={},fs = require("fs");
self["AnalogDemo"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"cJ#ae7[|(*6*wV(E8;Z@\">analogin</variable>\n  </variables>\n  <block type=\"import_time\" id=\"-uoZO:L$!K;6LFj921;=\" x=\"-582\" y=\"-59\">\n    <next>\n      <block type=\"import_board\" id=\"%Q{.OEA{G1J60+BBe:;7\">\n        <next>\n          <block type=\"import_analogio\" id=\"jc}8^=/X?v60my}hXsxf\">\n            <next>\n              <block type=\"analog_in\" id=\"Z~Zg~FzSROKo|9aH_G.C\">\n                <field name=\"pin\" id=\"cJ#ae7[|(*6*wV(E8;Z@\" variabletype=\"\">analogin</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"C:T()a-`(U_gBu/W4CS1\">\n                    <field name=\"text\">Board.A1</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"define\" id=\"{.9f.wLuLtr_X{U$}kQ2\">\n                    <value name=\"1\">\n                      <shadow type=\"textinline\" id=\"o2@GOZPY1X)OS$#ltOdx\">\n                        <field name=\"text\">getVoltage</field>\n                      </shadow>\n                    </value>\n                    <value name=\"2\">\n                      <shadow type=\"textinline\" id=\"OuO)Q^Uv+tO}#kdc/E+=\">\n                        <field name=\"text\">pin</field>\n                      </shadow>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"return2\" id=\"0Z!FkrbAJF)jNUNADlZ~\">\n                        <value name=\"return\">\n                          <shadow type=\"textinline\" id=\"oGoJV-177Gu*}ZT0JSdn\">\n                            <field name=\"text\">(pin.value * 3.3) / 65536</field>\n                          </shadow>\n                        </value>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"whileout\" id=\",?LFLLgB(=NMn[8xv}Xw\">\n                        <value name=\"cond\">\n                          <shadow type=\"textinline\" id=\"uneTrWpIk2]]B)l.1lKU\">\n                            <field name=\"text\">True</field>\n                          </shadow>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"varprint\" id=\"imE?c!DQvm]2FUSn{hJ,\">\n                            <value name=\"var\">\n                              <shadow type=\"textinline\" id=\"-h6SpP3GjGzP~qUo*8mQ\">\n                                <field name=\"text\">\"Analog Voltage: %f\" % getVoltage(analogin)</field>\n                              </shadow>\n                            </value>\n                            <next>\n                              <block type=\"sleepnew\" id=\"mfeSwTy9+ba9Vqd`X%py\">\n                                <value name=\"sleep\">\n                                  <shadow type=\"textinline\" id=\"bIg16:lZPbxj*Z!eH$}J\">\n                                    <field name=\"text\">0.1</field>\n                                  </shadow>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["AudioDemo"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"ZK2/@y#ZVL4_2vYyox[D\">speaker_enable</variable>\n    <variable type=\"\" id=\"_kLSwR.SN@^lJIIKK7Qi\">pin</variable>\n    <variable type=\"\" id=\"XN)UebXl2IL%BCcBf$ha\">wav</variable>\n    <variable type=\"\" id=\"`~PNof%9yc?6w~*xl^3(\">data</variable>\n    <variable type=\"\" id=\"LSSLD3EN]Kw2J%#k](a~\">audio</variable>\n    <variable type=\"\" id=\"m*$)Bc;/AUEmZT1qU%DC\">var</variable>\n  </variables>\n  <block type=\"import_board\" id=\"xkIw!~s}+$c5eoSc|l5=\" x=\"2\" y=\"22\">\n    <next>\n      <block type=\"import_audio\" id=\"O,7{Og]-wo[c.xfuL%z!\">\n        <next>\n          <block type=\"import_digitalio\" id=\"Nr50Xd;F.him_tPbt]Bi\">\n            <next>\n              <block type=\"pinconfig\" id=\"a+i8etmW1QJyft(XeyyM\">\n                <field name=\"pin\" id=\"ZK2/@y#ZVL4_2vYyox[D\" variabletype=\"\">speaker_enable</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"[nguqfg=XS;Lk}-Oiu~k\">\n                    <field name=\"text\">board.SPEAKER_ENABLE</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"audio_enable\" id=\"*vdt7sSylw[4up;(|oHu\">\n                    <field name=\"pin\" id=\"ZK2/@y#ZVL4_2vYyox[D\" variabletype=\"\">speaker_enable</field>\n                    <value name=\"text\">\n                      <shadow type=\"textinline\" id=\"tV|@l{32C[Y|G9Zc9L6i\">\n                        <field name=\"text\">value = True</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"audio_open\" id=\"y2gaL8zT**-9Sj=7?_I=\">\n                        <field name=\"data\" id=\"`~PNof%9yc?6w~*xl^3(\" variabletype=\"\">data</field>\n                        <value name=\"text\">\n                          <shadow type=\"textinline\" id=\"2xSag=wxA,W-4oH^Tu+L\">\n                            <field name=\"text\">\"rimshot.wav\", \"rb\"</field>\n                          </shadow>\n                        </value>\n                        <next>\n                          <block type=\"audio_wav\" id=\"q0%Z.^ogh*`,t+mh67TC\">\n                            <field name=\"pin\" id=\"XN)UebXl2IL%BCcBf$ha\" variabletype=\"\">wav</field>\n                            <value name=\"text\">\n                              <shadow type=\"textinline\" id=\"[f|~bE}6~;!oGhA,6jXb\">\n                                <field name=\"text\">data</field>\n                              </shadow>\n                            </value>\n                            <next>\n                              <block type=\"audio_conf\" id=\"H6ibo@LX~wz33JM*[Qq4\">\n                                <field name=\"pin\" id=\"LSSLD3EN]Kw2J%#k](a~\" variabletype=\"\">audio</field>\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"1nD%[]2H/{=mTM4v`chX\">\n                                    <field name=\"text\">Board.A0</field>\n                                  </shadow>\n                                </value>\n                                <next>\n                                  <block type=\"audio_play\" id=\"hxs{fksx,HrNi-MV2Oof\">\n                                    <field name=\"pin\" id=\"LSSLD3EN]Kw2J%#k](a~\" variabletype=\"\">audio</field>\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"@CBugQ4J3}vAA~$`y/hZ\">\n                                        <field name=\"text\"></field>\n                                      </shadow>\n                                      <block type=\"variables_get\" id=\"[pJ_$C5y^,UfOH=[9a,M\">\n                                        <field name=\"VAR\" id=\"XN)UebXl2IL%BCcBf$ha\" variabletype=\"\">wav</field>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"whileout\" id=\"a7m*/PNJ*n8,|AEfP/`7\">\n                                        <value name=\"cond\">\n                                          <shadow type=\"textinline\" id=\"@sriA*HK4AA+W+Mtt4;~\">\n                                            <field name=\"text\">True</field>\n                                          </shadow>\n                                          <block type=\"audio_playing\" id=\"1*IIfxN-prx59c`2@+3j\">\n                                            <field name=\"pin\" id=\"LSSLD3EN]Kw2J%#k](a~\" variabletype=\"\">audio</field>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"pass\" id=\")#yi2(b$Gat8Eu}Z8`[A\"></block>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["DigitalDemo"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"f)d)RvFB)?JhcZ?cp57x\">led</variable>\n    <variable type=\"\" id=\"jMa({1uf.g%V!N8wsEQ[\">button</variable>\n    <variable type=\"\" id=\"nDs40..(nu;MzRMip2Q/\">pin</variable>\n  </variables>\n  <block type=\"import_time\" id=\"KK`kxk7[ATC$.#.:XBik\" x=\"-214\" y=\"-130\"></block>\n  <block type=\"import_board\" id=\"y}O4if)!uVk%2BR#1p+.\" x=\"-579\" y=\"-57\">\n    <next>\n      <block type=\"import_digitalio\" id=\"9m^([S@g2yW%*VE`Q3q4\">\n        <next>\n          <block type=\"pinconfig\" id=\";x+RB:vz?sTyaGOnZ%h1\">\n            <field name=\"pin\" id=\"f)d)RvFB)?JhcZ?cp57x\" variabletype=\"\">led</field>\n            <value name=\"text\">\n              <shadow type=\"textinline\" id=\"Q`);MXUicAa,Y%R$[,[o\">\n                <field name=\"text\">board.D13</field>\n              </shadow>\n            </value>\n            <next>\n              <block type=\"pindirection\" id=\"ohX}#-4w]?F3nkIk~4^j\">\n                <field name=\"pin\" id=\"f)d)RvFB)?JhcZ?cp57x\" variabletype=\"\">led</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"2?IFJAdVKoJYE.=*EBk1\">\n                    <field name=\"text\">Direction.OUTPUT</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"pinconfig\" id=\"N3yo:3s;LlFdW#Fq$(M;\">\n                    <field name=\"pin\" id=\"jMa({1uf.g%V!N8wsEQ[\" variabletype=\"\">button</field>\n                    <value name=\"text\">\n                      <shadow type=\"textinline\" id=\"%O.R;/)GECNzls(8,XG=\">\n                        <field name=\"text\">board.BUTTON_A</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"pindirection\" id=\"xIwv}/P=D9rdurN{_})O\">\n                        <field name=\"pin\" id=\"jMa({1uf.g%V!N8wsEQ[\" variabletype=\"\">button</field>\n                        <value name=\"text\">\n                          <shadow type=\"textinline\" id=\"u@%|{yp3qP~8`V(,96)1\">\n                            <field name=\"text\">Direction.INPUT</field>\n                          </shadow>\n                        </value>\n                        <next>\n                          <block type=\"pull\" id=\"o|ZtG$`Gx-+Pf:pdR7!}\">\n                            <field name=\"pin\" id=\"jMa({1uf.g%V!N8wsEQ[\" variabletype=\"\">button</field>\n                            <value name=\"text\">\n                              <shadow type=\"textinline\" id=\"?/KCMyAjg~o7e$FLP1*G\">\n                                <field name=\"text\">Pull.DOWN</field>\n                              </shadow>\n                            </value>\n                            <next>\n                              <block type=\"whileout\" id=\"49+;3G0{e7B5rk%*KTcU\">\n                                <value name=\"cond\">\n                                  <shadow type=\"textinline\" id=\"uGIkpw8(79_Ds,xJz%1K\">\n                                    <field name=\"text\">True</field>\n                                  </shadow>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"ifinline\" id=\"EX^J5k9%(jqUh][;xNOO\">\n                                    <value name=\"iftext\">\n                                      <shadow type=\"textinline\" id=\"z=KN@bW[xTgPH6=m/*?X\">\n                                        <field name=\"text\">True</field>\n                                      </shadow>\n                                      <block type=\"valuein\" id=\"^Gj.)4g?74[QA/cMXO=7\">\n                                        <field name=\"pin\" id=\"jMa({1uf.g%V!N8wsEQ[\" variabletype=\"\">button</field>\n                                      </block>\n                                    </value>\n                                    <statement name=\"ifstate\">\n                                      <block type=\"pinvalue\" id=\"FE?@IwVPD7qBekWZ1|xZ\">\n                                        <field name=\"pin\" id=\"f)d)RvFB)?JhcZ?cp57x\" variabletype=\"\">led</field>\n                                        <value name=\"text\">\n                                          <shadow type=\"textinline\" id=\"2BHlowl9oiuMVg[M;xZa\">\n                                            <field name=\"text\">True</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </statement>\n                                    <next>\n                                      <block type=\"else\" id=\"7WD*k]:?HQKw)~V#|#47\">\n                                        <statement name=\"DO\">\n                                          <block type=\"pinvalue\" id=\"*2n9ap1~od[v$_i6b(|8\">\n                                            <field name=\"pin\" id=\"f)d)RvFB)?JhcZ?cp57x\" variabletype=\"\">led</field>\n                                            <value name=\"text\">\n                                              <shadow type=\"textinline\" id=\"+7B4n{vT=O]~W(t~0W,g\">\n                                                <field name=\"text\">True</field>\n                                              </shadow>\n                                            </value>\n                                          </block>\n                                        </statement>\n                                        <next>\n                                          <block type=\"sleepnew\" id=\"NQ@`R9Ds;lcdv.dv2dOm\">\n                                            <value name=\"sleep\">\n                                              <shadow type=\"textinline\" id=\"_YCH25Q7_AN@y#`yVzUb\">\n                                                <field name=\"text\">0.01</field>\n                                              </shadow>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["NeopixelDemo"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"5[.[kw:dTKk*,}$TCIKa\">np</variable>\n  </variables>\n  <block type=\"import_board\" id=\"G[p}MhV_-d5c?Z-A2M_D\" x=\"8\" y=\"-46\">\n    <next>\n      <block type=\"import_time\" id=\"tQ./ZZbO2OwLq:B1?RtY\">\n        <next>\n          <block type=\"importneo\" id=\"4hiOTZ63@0X!t;8-tW~d\">\n            <next>\n              <block type=\"setneo\" id=\"|^ywxUCpkSk-/BC2kc@V\">\n                <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"];AvMUcNT9Op9O7k]GE+\">\n                    <field name=\"text\">board.NEOPIXEL, 10, brightness=.2</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"whileout\" id=\"R$s1(bNLCiZw$!gT4+I@\">\n                    <value name=\"cond\">\n                      <shadow type=\"textinline\" id=\"ELO)BW@2p_F*dcvdLSsT\">\n                        <field name=\"text\">True</field>\n                      </shadow>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"for\" id=\"b.|Sl@gg~#!_;o9i;w!P\">\n                        <value name=\"letter\">\n                          <shadow type=\"textinline\" id=\"6@BU1U-bS[e[(lD5G_XS\">\n                            <field name=\"text\">r</field>\n                          </shadow>\n                        </value>\n                        <value name=\"no\">\n                          <shadow type=\"textinline\" id=\"=[)lDvh%[G2cA_2my0%T\">\n                            <field name=\"text\">10</field>\n                          </shadow>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"neovarnew\" id=\"He34xmo86BW{sAn.*)1F\">\n                            <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                            <value name=\"text\">\n                              <shadow type=\"textinline\" id=\".l]1pv%I]w*dO;xND](!\">\n                                <field name=\"text\">r</field>\n                              </shadow>\n                            </value>\n                            <value name=\"text1\">\n                              <shadow type=\"textinline\" id=\"O,!m}@RDeuf#h,ZO.dhe\">\n                                <field name=\"text\">255, 0, 0</field>\n                              </shadow>\n                            </value>\n                            <next>\n                              <block type=\"neoshow\" id=\"UtZ?nQcQE%3Z/v%:o.-%\">\n                                <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                                <next>\n                                  <block type=\"sleepnew\" id=\"_2?Wl7E9;/6._*ULhq(.\">\n                                    <value name=\"sleep\">\n                                      <shadow type=\"textinline\" id=\"uv4:{02)aNBCM?#P2``;\">\n                                        <field name=\"text\">0.05</field>\n                                      </shadow>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"for\" id=\"4`~Lx`zE0V1a*BaXM_$=\">\n                            <value name=\"letter\">\n                              <shadow type=\"textinline\" id=\"`7KUJ}0(8.BY`)wD_mT@\">\n                                <field name=\"text\">g</field>\n                              </shadow>\n                            </value>\n                            <value name=\"no\">\n                              <shadow type=\"textinline\" id=\"n(H.Ab(EGnr#Vtu+Pdi^\">\n                                <field name=\"text\">10</field>\n                              </shadow>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"neovarnew\" id=\"|IOQw;}%PdiZpvai1#]?\">\n                                <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"o:BH0{d_pWq~,0rdyaAm\">\n                                    <field name=\"text\">g</field>\n                                  </shadow>\n                                </value>\n                                <value name=\"text1\">\n                                  <shadow type=\"textinline\" id=\"n3QB-4Iz:c,@l2?X7Frl\">\n                                    <field name=\"text\">0, 255, 0</field>\n                                  </shadow>\n                                </value>\n                                <next>\n                                  <block type=\"neoshow\" id=\"ez|f)1,$efj@4a9%nQuU\">\n                                    <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                                    <next>\n                                      <block type=\"sleepnew\" id=\"S`=U03^cX|wB?TK5i]$n\">\n                                        <value name=\"sleep\">\n                                          <shadow type=\"textinline\" id=\"qEgbHX1tMvs*,qVPdvp3\">\n                                            <field name=\"text\">0.05</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"for\" id=\"(fadO~fCn{K+}mh2!qp-\">\n                                <value name=\"letter\">\n                                  <shadow type=\"textinline\" id=\"]I_zRz15,u:k~;U!hdhL\">\n                                    <field name=\"text\">b</field>\n                                  </shadow>\n                                </value>\n                                <value name=\"no\">\n                                  <shadow type=\"textinline\" id=\"6l7CPPt2#~lVlW6U9-dx\">\n                                    <field name=\"text\">10</field>\n                                  </shadow>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"neovarnew\" id=\"?a6^VuPp=}$Z_NqE}=N0\">\n                                    <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"zR^!qw5`IJ}=}$-l%(dg\">\n                                        <field name=\"text\">b</field>\n                                      </shadow>\n                                    </value>\n                                    <value name=\"text1\">\n                                      <shadow type=\"textinline\" id=\"D#aO|lhG2}2floo@o~xm\">\n                                        <field name=\"text\">0, 0, 255</field>\n                                      </shadow>\n                                    </value>\n                                    <next>\n                                      <block type=\"neoshow\" id=\"bP5j3jK/*+B`=z[(dJ3P\">\n                                        <field name=\"NAME\" id=\"5[.[kw:dTKk*,}$TCIKa\" variabletype=\"\">np</field>\n                                        <next>\n                                          <block type=\"sleepnew\" id=\"Pa?gCT%6yd`Sx]+R)}[R\">\n                                            <value name=\"sleep\">\n                                              <shadow type=\"textinline\" id=\"_KoQW,YNsVjKS?g*.0P/\">\n                                                <field name=\"text\">0.05</field>\n                                              </shadow>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["TouchDemo"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"OxN9wqO7Bk]W.o+x0!ha\">touch1</variable>\n    <variable type=\"\" id=\"cO?eFqtt)OGR=Kb=-1YR\">touch2</variable>\n    <variable type=\"\" id=\"9%H-Nei]4hzM(!NG?[[B\">touch3</variable>\n  </variables>\n  <block type=\"import_board\" id=\"(`)eKzC7At``*|t$[;R(\" x=\"-576\" y=\"-117\"></block>\n  <block type=\"import_time\" id=\"E8QH15w]k9xADp;NhTOj\" x=\"-961\" y=\"-31\">\n    <next>\n      <block type=\"import_touchio\" id=\"%6B#c*dmr00vDC4eZ9sJ\">\n        <next>\n          <block type=\"touch_conf\" id=\"z;F!t+)EtB0`p]P7kbD)\">\n            <field name=\"pin\" id=\"OxN9wqO7Bk]W.o+x0!ha\" variabletype=\"\">touch1</field>\n            <value name=\"text1\">\n              <shadow type=\"textinline\" id=\"=@k8w^YN)ZEa(euRC^Q(\">\n                <field name=\"text\">board.A1</field>\n              </shadow>\n            </value>\n            <next>\n              <block type=\"touch_conf\" id=\"7C+:xinj};B:Tg;%rEB#\">\n                <field name=\"pin\" id=\"cO?eFqtt)OGR=Kb=-1YR\" variabletype=\"\">touch2</field>\n                <value name=\"text1\">\n                  <shadow type=\"textinline\" id=\"x.o5GE6uVpkKJ)r3~F;d\">\n                    <field name=\"text\">board.A2</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"touch_conf\" id=\"|i]H8?YVD7/.RIkqpAh4\">\n                    <field name=\"pin\" id=\"9%H-Nei]4hzM(!NG?[[B\" variabletype=\"\">touch3</field>\n                    <value name=\"text1\">\n                      <shadow type=\"textinline\" id=\"4{nExv~b$Ls{8sDN^%sk\">\n                        <field name=\"text\">board.A3</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"whileout\" id=\"bnl*yoOIJk-AWIzZ?eKv\">\n                        <value name=\"cond\">\n                          <shadow type=\"textinline\" id=\"YDFU9Bz9=JLi0oV{-D.e\">\n                            <field name=\"text\">True</field>\n                          </shadow>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"ifinline\" id=\"/#M;U!,-?S*3)s$c)eUS\">\n                            <value name=\"iftext\">\n                              <shadow type=\"textinline\" id=\"q}sZwmU*k.}$7Q%Uqd5R\">\n                                <field name=\"text\">True</field>\n                              </shadow>\n                              <block type=\"touch_valinline\" id=\"mAo:kDj}SM=`zxf-EU6k\">\n                                <field name=\"pin\" id=\"OxN9wqO7Bk]W.o+x0!ha\" variabletype=\"\">touch1</field>\n                              </block>\n                            </value>\n                            <statement name=\"ifstate\">\n                              <block type=\"printnew\" id=\"cpTWN=uEPN*;OSd7nFXM\">\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"!2Wdje`3u0%8`_14,~$e\">\n                                    <field name=\"text\">A1 Touched!</field>\n                                  </shadow>\n                                </value>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"ifinline\" id=\"3BUY#V:=RWoPu@cQ36}$\">\n                                <value name=\"iftext\">\n                                  <shadow type=\"textinline\" id=\"q}sZwmU*k.}$7Q%Uqd5R\">\n                                    <field name=\"text\">True</field>\n                                  </shadow>\n                                  <block type=\"touch_valinline\" id=\"gd#3R5#MhEZ3[$$^A*}{\">\n                                    <field name=\"pin\" id=\"cO?eFqtt)OGR=Kb=-1YR\" variabletype=\"\">touch2</field>\n                                  </block>\n                                </value>\n                                <statement name=\"ifstate\">\n                                  <block type=\"printnew\" id=\"+kC}*iXA8M7MY2$u-gk+\">\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"KImNcnQr2S52^;o..T2[\">\n                                        <field name=\"text\">A2 Touched!</field>\n                                      </shadow>\n                                    </value>\n                                  </block>\n                                </statement>\n                                <next>\n                                  <block type=\"ifinline\" id=\"od7vO0JJ|S$raMAbD0=Z\">\n                                    <value name=\"iftext\">\n                                      <shadow type=\"textinline\" id=\"q}sZwmU*k.}$7Q%Uqd5R\">\n                                        <field name=\"text\">True</field>\n                                      </shadow>\n                                      <block type=\"touch_valinline\" id=\"(r;{9CtcBsriKtznGY%H\">\n                                        <field name=\"pin\" id=\"9%H-Nei]4hzM(!NG?[[B\" variabletype=\"\">touch3</field>\n                                      </block>\n                                    </value>\n                                    <statement name=\"ifstate\">\n                                      <block type=\"printnew\" id=\"(aqni7w(|o7VrT~Pf;U4\">\n                                        <value name=\"text\">\n                                          <shadow type=\"textinline\" id=\"/{rDM]%(dbhH|Sg[E?^j\">\n                                            <field name=\"text\">A3 Touched!</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </statement>\n                                    <next>\n                                      <block type=\"sleepnew\" id=\"aOk9g_S63s!1,;ART|WI\">\n                                        <value name=\"sleep\">\n                                          <shadow type=\"textinline\" id=\"a^5E0Re]]|-o2@_`=R[^\">\n                                            <field name=\"text\">0.01</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
return self})();
registerSamples('CircuitPython', circuitpySamples);
var piSamples = (function(){var self={},fs = require("fs");
self["rainbowSpiral"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"a%f;e^2n.-ycDYZjlYu`\">screen</variable>\n    <variable type=\"\" id=\"mFYjUmzj/V-Z-;}eheOy\">colours</variable>\n    <variable type=\"\" id=\"A]kkSyL$=1D5i?q5}NA,\">turtle</variable>\n    <variable type=\"\" id=\"W,i0*k[h2d`yO[VE4W[H\">list</variable>\n    <variable type=\"\" id=\"(+r)4#|;|0VGeiV.V6#x\">i</variable>\n  </variables>\n  <block type=\"import_turtle\" id=\"(lt5]Rt`,_0l!(f7BmCS\" x=\"14\" y=\"9\">\n    <next>\n      <block type=\"turtle\" id=\"rkhY}ljV/RJHNKR:]8|J\">\n        <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n        <next>\n          <block type=\"screeninit\" id=\"{8?w:pE](,KKwfDvTzG9\">\n            <field name=\"wn\" id=\"a%f;e^2n.-ycDYZjlYu`\" variabletype=\"\">screen</field>\n            <next>\n              <block type=\"background\" id=\"_GfAJ~*O%n$=-N)^dv$~\">\n                <field name=\"wn\" id=\"a%f;e^2n.-ycDYZjlYu`\" variabletype=\"\">screen</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"2qV05z(iA8}YQ_hu*q[Y\">\n                    <field name=\"text\">\"black\"</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"create_list\" id=\"ZSE9{vSjUEWY}-wc@`:q\">\n                    <field name=\"list\" id=\"mFYjUmzj/V-Z-;}eheOy\" variabletype=\"\">colours</field>\n                    <value name=\"text\">\n                      <shadow type=\"textinline\" id=\"-rNq^gBf[5_nz,b:Qth?\">\n                        <field name=\"text\">\"red\", \"purple\", \"blue\", \"green\", \"orange\", \"yellow\"</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"webfor\" id=\".l(q|t+nkbOYTb,K0ndQ\">\n                        <value name=\"letter\">\n                          <shadow type=\"textinline\" id=\"D]D.Uu$4zPrXsP=01XJ|\">\n                            <field name=\"text\">i</field>\n                          </shadow>\n                        </value>\n                        <value name=\"no\">\n                          <shadow type=\"textinline\" id=\"wSl0}H7=#u-xKqw?=m;6\">\n                            <field name=\"text\">360</field>\n                          </shadow>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"colour\" id=\"b*)Lqy7/es4XF*=KxLH7\">\n                            <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                            <value name=\"text\">\n                              <shadow type=\"textinline\" id=\"T|g)[?@2^G;tB?u/I!Z9\">\n                                <field name=\"text\">255, 0, 0</field>\n                              </shadow>\n                              <block type=\"selectlist2\" id=\"jOX+Lc;isSO!qW3U+P/L\">\n                                <field name=\"list\" id=\"mFYjUmzj/V-Z-;}eheOy\" variabletype=\"\">colours</field>\n                                <value name=\"NAME\">\n                                  <shadow type=\"textinline\" id=\"ZlAV|AHp}}l}XYE/FG-Z\">\n                                    <field name=\"text\">3</field>\n                                  </shadow>\n                                  <block type=\"operators2\" id=\"g^JuR;^5zugHWY*xZ/~P\">\n                                    <field name=\"operators\">%</field>\n                                    <value name=\"first\">\n                                      <shadow type=\"textinline\" id=\"RKkMV.Ud|,Pj~LyOcaMX\">\n                                        <field name=\"text\">x</field>\n                                      </shadow>\n                                      <block type=\"loop_get\" id=\"S3B}u54(Eix*]@nc5GHG\">\n                                        <field name=\"VAR\" id=\"(+r)4#|;|0VGeiV.V6#x\" variabletype=\"\">i</field>\n                                      </block>\n                                    </value>\n                                    <value name=\"last\">\n                                      <shadow type=\"textinline\" id=\"8fz}3!7Cv,qj!NpCQv{*\">\n                                        <field name=\"text\">6</field>\n                                      </shadow>\n                                    </value>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"penwidth\" id=\"/Y.QHLDnFibM@K]Vcr/z\">\n                                <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                                <value name=\"text\">\n                                  <shadow type=\"textinline\" id=\"S?8IQ`fqB/NS[pv[18*T\">\n                                    <field name=\"text\">20</field>\n                                  </shadow>\n                                  <block type=\"operators2\" id=\"[wpn2#.}Sn-wMoDizP-u\">\n                                    <field name=\"operators\">/</field>\n                                    <value name=\"first\">\n                                      <shadow type=\"textinline\" id=\".`T5ak/y*U)`tBbwt_k4\">\n                                        <field name=\"text\">True</field>\n                                      </shadow>\n                                      <block type=\"loop_get\" id=\"SEU.lpWCp{!1G4yNC%ps\">\n                                        <field name=\"VAR\" id=\"(+r)4#|;|0VGeiV.V6#x\" variabletype=\"\">i</field>\n                                      </block>\n                                    </value>\n                                    <value name=\"last\">\n                                      <shadow type=\"textinline\" id=\"SD+CamXtvzV[/CkSI;w6\">\n                                        <field name=\"text\"></field>\n                                      </shadow>\n                                      <block type=\"operators2\" id=\"i+a/n27I3^32)lq*_V:K\">\n                                        <field name=\"operators\">+</field>\n                                        <value name=\"first\">\n                                          <shadow type=\"textinline\" id=\"FuKb%]e-gcgPDthinqi^\">\n                                            <field name=\"text\">100</field>\n                                          </shadow>\n                                        </value>\n                                        <value name=\"last\">\n                                          <shadow type=\"textinline\" id=\"wTV]fH1s]Y8H;F(D5pN=\">\n                                            <field name=\"text\">1</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"directions\" id=\"Br;=9;,O1M.kT8wvf}_T\">\n                                    <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                                    <field name=\"options\">forward</field>\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"O-z{d6x|0+U!y*BJ*``^\">\n                                        <field name=\"text\">90</field>\n                                      </shadow>\n                                      <block type=\"loop_get\" id=\"(q#9g5e:6a4#F/EvMDLy\">\n                                        <field name=\"VAR\" id=\"(+r)4#|;|0VGeiV.V6#x\" variabletype=\"\">i</field>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"directions\" id=\"xdf)^wcASy^PfCewbL2W\">\n                                        <field name=\"turtle\" id=\"A]kkSyL$=1D5i?q5}NA,\" variabletype=\"\">turtle</field>\n                                        <field name=\"options\">left</field>\n                                        <value name=\"text\">\n                                          <shadow type=\"textinline\" id=\"aw3O6Rpej3*A1u?l_+0O\">\n                                            <field name=\"text\">59</field>\n                                          </shadow>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
self["trafficLights"] = "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"].X`n)^b#Q=XxUdN$B2Z\">red</variable>\n    <variable type=\"\" id=\"[w~/mur!*W~//v)/KdK*\">yellow</variable>\n    <variable type=\"\" id=\"}n7Ey;$,Y5oy9Ql2x2)m\">green</variable>\n    <variable type=\"\" id=\"pe@m|unqCr`2@2a5UPk8\">i</variable>\n    <variable type=\"\" id=\"-RhKrVW4};%aroW%uM=k\">j</variable>\n    <variable type=\"\" id=\":GA~j^EmThTo39BzBl[#\">led</variable>\n  </variables>\n  <block type=\"importgpiozero\" id=\"X5zgFE7^v4S]i8~(_qrj\" x=\"115\" y=\"42\">\n    <next>\n      <block type=\"import_time\" id=\"ORkj[1!A~NQOgGxv-fuU\">\n        <next>\n          <block type=\"ledset\" id=\"7,g~a$--TLoUcGtTAsr;\">\n            <field name=\"led\" id=\"].X`n)^b#Q=XxUdN$B2Z\" variabletype=\"\">red</field>\n            <value name=\"text\">\n              <shadow type=\"textinline\" id=\"Sh[M-koXe)zxoyC}V5St\">\n                <field name=\"text\">18</field>\n              </shadow>\n            </value>\n            <next>\n              <block type=\"ledset\" id=\"Wri60sj4M7Sn9C:emcr.\">\n                <field name=\"led\" id=\"[w~/mur!*W~//v)/KdK*\" variabletype=\"\">yellow</field>\n                <value name=\"text\">\n                  <shadow type=\"textinline\" id=\"VKJnk0b?I1rc40R]$PvL\">\n                    <field name=\"text\">24</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"ledset\" id=\"0Yz[5/:^/W1op2t?TZ9#\">\n                    <field name=\"led\" id=\"}n7Ey;$,Y5oy9Ql2x2)m\" variabletype=\"\">green</field>\n                    <value name=\"text\">\n                      <shadow type=\"textinline\" id=\"/,KK1uWt22R#fjzLyaOZ\">\n                        <field name=\"text\">12</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"whileout\" id=\"9zy1lk,%!6HV+BlL:42@\">\n                        <value name=\"cond\">\n                          <shadow type=\"textinline\" id=\"0UUCQ{BIzNWtbioGaiOC\">\n                            <field name=\"text\">True</field>\n                          </shadow>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"ledaction\" id=\"Z3ZxOi=gO@ES*l/1;zH8\">\n                            <field name=\"led\" id=\"].X`n)^b#Q=XxUdN$B2Z\" variabletype=\"\">red</field>\n                            <field name=\"action\">on</field>\n                            <value name=\"text\">\n                              <shadow type=\"textinline\" id=\"@eQ@ZA8wKz-O2a]tHx]n\">\n                                <field name=\"text\"></field>\n                              </shadow>\n                            </value>\n                            <next>\n                              <block type=\"sleepnew\" id=\"Joc#^t-b{P+.JGz3f.}W\">\n                                <value name=\"sleep\">\n                                  <shadow type=\"textinline\" id=\"!6/Gc#iJa#*}=0zTCtG2\">\n                                    <field name=\"text\">3</field>\n                                  </shadow>\n                                </value>\n                                <next>\n                                  <block type=\"ledaction\" id=\"]a;db^0kojiWJZ[9dKYw\">\n                                    <field name=\"led\" id=\"[w~/mur!*W~//v)/KdK*\" variabletype=\"\">yellow</field>\n                                    <field name=\"action\">on</field>\n                                    <value name=\"text\">\n                                      <shadow type=\"textinline\" id=\"U*5Y,UgICGY$]+FXgegb\">\n                                        <field name=\"text\"></field>\n                                      </shadow>\n                                    </value>\n                                    <next>\n                                      <block type=\"sleepnew\" id=\"WEML-kqS!WG,)~]()F9Y\">\n                                        <value name=\"sleep\">\n                                          <shadow type=\"textinline\" id=\"-VP,DX.Mi{Vryz/*q;DN\">\n                                            <field name=\"text\">1</field>\n                                          </shadow>\n                                        </value>\n                                        <next>\n                                          <block type=\"ledaction\" id=\"]gtn)sUjTGajX?8F{nNZ\">\n                                            <field name=\"led\" id=\"].X`n)^b#Q=XxUdN$B2Z\" variabletype=\"\">red</field>\n                                            <field name=\"action\">off</field>\n                                            <value name=\"text\">\n                                              <shadow type=\"textinline\" id=\"*v!WUnSVU@Bs^r@P}?ph\">\n                                                <field name=\"text\"></field>\n                                              </shadow>\n                                            </value>\n                                            <next>\n                                              <block type=\"ledaction\" id=\"X4l7kRX%`)%(b#$_+YyC\">\n                                                <field name=\"led\" id=\"[w~/mur!*W~//v)/KdK*\" variabletype=\"\">yellow</field>\n                                                <field name=\"action\">off</field>\n                                                <value name=\"text\">\n                                                  <shadow type=\"textinline\" id=\")SOoQ,?7N|TRH{KCyyO)\">\n                                                    <field name=\"text\"></field>\n                                                  </shadow>\n                                                </value>\n                                                <next>\n                                                  <block type=\"ledaction\" id=\"#pFJe2Ix=|Vn8E-9szUe\">\n                                                    <field name=\"led\" id=\"}n7Ey;$,Y5oy9Ql2x2)m\" variabletype=\"\">green</field>\n                                                    <field name=\"action\">on</field>\n                                                    <value name=\"text\">\n                                                      <shadow type=\"textinline\" id=\"evpP8D~j|JQXz[4/RB)e\">\n                                                        <field name=\"text\"></field>\n                                                      </shadow>\n                                                    </value>\n                                                    <next>\n                                                      <block type=\"sleepnew\" id=\"5FG?wEGyjhB2?K*R!!x{\">\n                                                        <value name=\"sleep\">\n                                                          <shadow type=\"textinline\" id=\"us)9,0oKoXnqwMobBW1B\">\n                                                            <field name=\"text\">3</field>\n                                                          </shadow>\n                                                        </value>\n                                                        <next>\n                                                          <block type=\"ledaction\" id=\"@a{~bw6WzrEQ|JwZG3qx\">\n                                                            <field name=\"led\" id=\"}n7Ey;$,Y5oy9Ql2x2)m\" variabletype=\"\">green</field>\n                                                            <field name=\"action\">off</field>\n                                                            <value name=\"text\">\n                                                              <shadow type=\"textinline\" id=\"vN9Y^~~efBFV@j%ws]G|\">\n                                                                <field name=\"text\"></field>\n                                                              </shadow>\n                                                            </value>\n                                                            <next>\n                                                              <block type=\"ledaction\" id=\"2u}0a*Rqeio#Uf6?n5sZ\">\n                                                                <field name=\"led\" id=\"[w~/mur!*W~//v)/KdK*\" variabletype=\"\">yellow</field>\n                                                                <field name=\"action\">on</field>\n                                                                <value name=\"text\">\n                                                                  <shadow type=\"textinline\" id=\"O{ULXd7^Eaav.94404?q\">\n                                                                    <field name=\"text\"></field>\n                                                                  </shadow>\n                                                                </value>\n                                                                <next>\n                                                                  <block type=\"sleepnew\" id=\"2x#s5cwfksw%)]YZI@u2\">\n                                                                    <value name=\"sleep\">\n                                                                      <shadow type=\"textinline\" id=\"%dR05Aaw=rg5!rlT60rK\">\n                                                                        <field name=\"text\">1</field>\n                                                                      </shadow>\n                                                                    </value>\n                                                                    <next>\n                                                                      <block type=\"ledaction\" id=\"J8mr-KLb4v{mL%_%_lc!\">\n                                                                        <field name=\"led\" id=\"[w~/mur!*W~//v)/KdK*\" variabletype=\"\">yellow</field>\n                                                                        <field name=\"action\">off</field>\n                                                                        <value name=\"text\">\n                                                                          <shadow type=\"textinline\" id=\",}+c#EbN7Kh(R%2tlT|+\">\n                                                                            <field name=\"text\"></field>\n                                                                          </shadow>\n                                                                        </value>\n                                                                      </block>\n                                                                    </next>\n                                                                  </block>\n                                                                </next>\n                                                              </block>\n                                                            </next>\n                                                          </block>\n                                                        </next>\n                                                      </block>\n                                                    </next>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>";
return self})();
registerSamples('RaspberryPi', piSamples);
// ... other platforms (like above) ...
function registerSamples(platform, foundSamples) {
    Samples[platform] = {};
    Object.keys(foundSamples).forEach(function (file) {
        Samples[platform][changeCase.titleCase(file)] = foundSamples[file];
    });
}
function newSamples() {
    function getSamples(platform) {
        var platformSamples = Samples[platform];
        if (!platformSamples) {
            // throw new Error('No samples found');
            return [];
        }
        return Object.keys(platformSamples);
    }
    function getSample(platform, file) {
        var platformSamples = Samples[platform];
        if (!platformSamples) {
            throw new Error('No samples found');
        }
        return platformSamples[file];
    }
    return {
        getSamples: getSamples,
        getSample: getSample,
    };
}
exports.newSamples = newSamples;

},{"change-case":155,"fs":152,"path":182}],126:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var socket_1 = require("./socket");
var stub = function () { return void 0; };
function newServerConnection(ip) {
    return __awaiter(this, void 0, void 0, function () {
        function runCode(python) {
            var url = "http://" + getHost() + "/runcode";
            console.time('runCode');
            var xhr = new XMLHttpRequest();
            xhr.open('POST', url, true);
            xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
            xhr.send('code=' + encodeURIComponent(python));
            xhr.onload = function (e) {
                console.timeEnd('runCode');
            };
        }
        function getHost() {
            if (ip) {
                return ip + ":8081";
            }
            if (location.protocol === 'file:') {
                return '127.0.0.1:8081';
            }
            if (location.protocol === 'http:') {
                return location.host;
            }
            return '';
        }
        function sendData(data) {
            ws.sendPacket({
                packetType: 'data',
                payload: data,
            });
        }
        function resizeTerminal(cols, rows) {
            ws.sendPacket({
                packetType: 'resize',
                payload: { cols: cols, rows: rows },
            });
        }
        function on(eventType, handler) {
            eventHandlers[eventType] = handler;
        }
        var eventHandlers, url, ws;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    eventHandlers = {
                        open: stub,
                        data: stub,
                        reconnect: stub,
                    };
                    url = "ws://" + getHost() + "/terminal";
                    return [4 /*yield*/, socket_1.initSocket(url)];
                case 1:
                    ws = _a.sent();
                    ws.on('data', function (packet) {
                        switch (packet.packetType) {
                            case 'data':
                                eventHandlers.data(packet.payload);
                                break;
                        }
                    });
                    ws.on('reconnect', function () { return eventHandlers.reconnect(); });
                    return [2 /*return*/, {
                            runCode: runCode,
                            sendData: sendData,
                            resizeTerminal: resizeTerminal,
                            on: on,
                        }];
            }
        });
    });
}
exports.newServerConnection = newServerConnection;

},{"./socket":127}],127:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var stub = function () { return void 0; };
/**
 * Lightweight websocket abstraction
 * @param url URL of the terminal handler
 */
function initSocket(url) {
    return new Promise(function (resolve) {
        var eventHandlers = {
            data: stub,
            reconnect: stub,
        };
        var resolved = false;
        console.log('Opening Websocket', url);
        var ws;
        connect();
        function connect() {
            ws = new WebSocket(url);
            ws.onmessage = onMessage;
            ws.onopen = onOpen;
            ws.onclose = onClose;
            ws.onerror = onError;
        }
        function onMessage(evt) {
            if (typeof evt.data === 'string') {
                var packet = JSON.parse(evt.data);
                eventHandlers.data(packet);
            }
            else {
                throw new Error('Unexpected data type');
            }
        }
        function onOpen() {
            if (!resolved) {
                resolve({
                    sendPacket: sendPacket,
                    on: on,
                });
                resolved = true;
            }
            else {
                eventHandlers.reconnect();
            }
        }
        function onClose() {
            ws = null;
            console.info('CLOSED');
            attemptReconnect();
        }
        function onError(evt) {
            console.error('socket', evt);
        }
        function attemptReconnect() {
            setTimeout(function () {
                console.info('RECONNECT');
                connect();
            }, 1000);
        }
        function sendPacket(packet) {
            if (!ws) {
                console.log('sendPacket: Socket not available');
                return;
            }
            ws.send(JSON.stringify(packet));
        }
        function on(eventType, handler) {
            eventHandlers[eventType] = handler;
        }
    });
}
exports.initSocket = initSocket;

},{}],128:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var Page_1 = require("./Page");
var AlertModal = /** @class */ (function (_super) {
    __extends(AlertModal, _super);
    function AlertModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlertModal.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: "AlertModel__container" },
                React.createElement("header", { class: "SelectModal__header" },
                    React.createElement("h3", null, this.props.title),
                    React.createElement("a", { class: 'SelectModal__close close', onClick: function () { return _this.props.onButtonClick('close'); } }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content', id: "modaltext" },
                    this.props.text,
                    React.createElement("br", null),
                    React.createElement("div", { style: "text-align: center; font-weight: bolder;" }, this.props.text2)),
                React.createElement("footer", { class: "alertFooter" },
                    React.createElement("label", { for: "modal_1", class: "button dangerous", onClick: function () { return _this.props.onButtonClick('close'); } }, Page_1.generic[3])))));
    };
    return AlertModal;
}(preact_1.Component));
exports.default = AlertModal;

},{"./Page":138,"preact":184}],129:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var firebase = __importStar(require("firebase/app"));
require("firebase/auth");
var firebaseui = __importStar(require("firebaseui"));
var React = __importStar(require("preact"));
var Page_1 = require("./Page");
var Page_2 = require("./Page");
exports.hellomyname = "hello";
var Auth = /** @class */ (function (_super) {
    __extends(Auth, _super);
    function Auth() {
        var _this = _super.call(this) || this;
        var self = _this;
        _this.ui = new firebaseui.auth.AuthUI(firebase.auth());
        _this.uiConfig = {
            autoUpgradeAnonymousUsers: true,
            callbacks: {
                signInSuccessWithAuthResult: function (authResult, redirectUrl) {
                    console.log(authResult, redirectUrl);
                    self.props.closeAuth();
                    return false;
                },
            },
            // Will use popup for IDP Providers sign-in flow instead of the default, redirect.
            signInFlow: 'popup',
            signInOptions: [
                // Leave the lines as is for the providers you want to offer your users.
                firebase.auth.GoogleAuthProvider.PROVIDER_ID,
                {
                    hd: 'acme.com',
                    provider: 'microsoft.com',
                    providerName: 'Microsoft',
                    buttonColor: '#2F2F2F',
                    iconUrl: 'https://clipartart.com/images/microsoft-logo-clipart-transparent-3.png',
                    loginHintKey: 'login_hint',
                },
                {
                    hd: 'acme.com',
                    provider: 'apple.com',
                    providerName: 'Apple',
                    buttonColor: '#000000',
                    iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Apple_logo_white.svg/1200px-Apple_logo_white.svg.png',
                    loginHintKey: 'login_hint',
                },
                {
                    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,
                    requireDisplayName: true
                },
            ],
        };
        _this.state = {
            modal: false,
            user: null,
        };
        _this.openAuth = _this.openAuth.bind(_this);
        return _this;
    }
    Auth.prototype.openAuth = function () {
        this.ui.start('#firebaseui-auth-container', this.uiConfig);
        this.props.openAuth();
    };
    Auth.prototype.logOutAccount = function () {
        firebase.auth().signOut().then(function () {
            Page_2.GlobalVars.openFiles = "Open";
        }, function (error) {
            // An error happened.
        });
    };
    Auth.prototype.componentDidMount = function () {
        if (this.ui.isPendingRedirect()) {
            this.ui.start('#firebaseui-auth-container', this.uiConfig);
            this.props.openAuth();
        }
        var self = this;
        firebase.auth().onAuthStateChanged(function (user) {
            if (user) {
                console.log(user);
                self.setState({
                    user: user,
                });
            }
            else {
                self.setState({
                    user: null,
                });
            }
        });
    };
    Auth.prototype.render = function () {
        if (this.state.user) {
            Page_2.GlobalVars.openFiles = "Files";
            return React.createElement("div", { className: 'login' },
                this.state.user.photoURL ? React.createElement("img", { id: "loginimage", src: this.state.user.photoURL, alt: '' }) : React.createElement("img", { id: "loginimage", src: "images/default-profile-image.png", alt: '' }),
                React.createElement("button", { style: 'background: rgba(0, 0, 0, 0); padding: 0.1em !important;', onClick: this.logOutAccount, "data-tooltip": 'Log Out' },
                    React.createElement("span", { id: "name" }, this.state.user.displayName)));
        }
        return React.createElement("div", { className: 'login' },
            React.createElement("button", { style: 'background: rgba(0, 0, 0, 0)', onClick: this.openAuth },
                React.createElement("i", { class: 'fas fa-sign-in-alt' }),
                "  ",
                Page_1.navLabels[6]));
    };
    return Auth;
}(React.Component));
exports.default = Auth;
var AuthModal = /** @class */ (function (_super) {
    __extends(AuthModal, _super);
    function AuthModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AuthModal.prototype.render = function () {
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: 'LoginModal__container' },
                React.createElement("header", { class: 'LoginModal__header' },
                    React.createElement("h3", null, Page_1.navLabels[6]),
                    React.createElement("a", { class: 'LoginModal__close close', onClick: this.props.onClose }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content' },
                    React.createElement("div", { id: 'firebaseui-auth-container' })))));
    };
    return AuthModal;
}(React.Component));
exports.AuthModal = AuthModal;

},{"./Page":138,"firebase/app":163,"firebase/auth":164,"firebaseui":166,"preact":184}],130:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var blocks_1 = require("../blocks");
var _ = require("lodash");
var BlocklyView = /** @class */ (function (_super) {
    __extends(BlocklyView, _super);
    function BlocklyView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.xml = null;
        return _this;
    }
    BlocklyView.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.visible) {
            if (this.xml !== nextProps.xml) {
                this.setXml(nextProps.xml);
            }
            // Reload blockly if the extensions have changed
            if (!_.isEqual(this.props.extensionsActive, nextProps.extensionsActive)) {
                this.loadBlockly(nextProps.extensionsActive);
            }
        }
    };
    BlocklyView.prototype.componentDidMount = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.loadBlockly(this.props.extensionsActive);
                return [2 /*return*/];
            });
        });
    };
    BlocklyView.prototype.loadBlockly = function (extensionsActive) {
        return __awaiter(this, void 0, void 0, function () {
            var toolbox;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.blocklyDiv) return [3 /*break*/, 3];
                        // Kill the old workspace if it's already there...
                        if (this.workspace) {
                            this.workspace.dispose();
                        }
                        return [4 /*yield*/, blocks_1.getToolBoxXml(extensionsActive)];
                    case 1:
                        toolbox = _a.sent();
                        this.workspace = Blockly.inject(this.blocklyDiv, {
                            zoom: {
                                controls: true,
                                wheel: true,
                                startScale: 1.0,
                                maxScale: 3,
                                minScale: 0.3,
                                scaleSpeed: 1.2,
                            },
                            media: 'blockly/media/',
                            collapse: false,
                            toolbox: toolbox,
                        });
                        return [4 /*yield*/, this.workspace.addChangeListener(function () {
                                var xml = _this.getXml();
                                var python = _this.getPython();
                                _this.xml = xml;
                                if (!_this.workspace.isDragging()) {
                                    _this.props.onChange(xml, python);
                                }
                            })];
                    case 2:
                        _a.sent();
                        Blockly.svgResize(this.workspace);
                        Blockly.Generator.prototype.INDENT = '\t';
                        this.setXml(this.xml);
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    BlocklyView.prototype.getXml = function () {
        if (!this.workspace) {
            throw new Error('No workspace!');
        }
        var xml = Blockly.Xml.workspaceToDom(this.workspace);
        return Blockly.Xml.domToPrettyText(xml);
    };
    BlocklyView.prototype.getPython = function () {
        if (!this.workspace) {
            throw new Error('No workspace!');
        }
        return Blockly.Python.workspaceToCode(this.workspace);
    };
    BlocklyView.prototype.setXml = function (xml) {
        if (!this.workspace) {
            throw new Error('No workspace!');
        }
        this.workspace.clear();
        if (typeof xml === 'string') {
            var textToDom = Blockly.Xml.textToDom(xml);
            Blockly.Xml.domToWorkspace(textToDom, this.workspace);
        }
    };
    BlocklyView.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { style: "display: block", id: 'blockly', ref: function (div) { return _this.blocklyDiv = div; } }));
    };
    return BlocklyView;
}(preact_1.Component));
exports.default = BlocklyView;

},{"../blocks":24,"lodash":173,"preact":184}],131:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var ExtensionModal = /** @class */ (function (_super) {
    __extends(ExtensionModal, _super);
    function ExtensionModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExtensionModal.prototype.render = function () {
        var _this = this;
        var getOptions = function () { return _this.props.options.map(function (option) { return ([
            React.createElement("a", { onClick: function () { return _this.props.onSelect(option); } },
                React.createElement("div", { class: "library-item_library-item_1DcMO library-item_featured-item_3V2-t library-item_library-item-extension_3xus9", id: "ext" },
                    React.createElement("div", { class: "library-item_featured-image-container_1KIHG" },
                        React.createElement("img", { class: "library-item_featured-image_2gwZ6", src: "../../images/" + option.label + ".png" })),
                    React.createElement("div", { class: "library-item_library-item-inset-image-container_3PLJ1" },
                        React.createElement("img", { class: "library-item_library-item-inset-image_17Tmt", src: "../../images/" + option.label + "-icon.png" })),
                    React.createElement("div", { class: "library-item_featured-extension-text_22A1k library-item_featured-text_2KFel" },
                        React.createElement("span", { class: "library-item_library-item-name_2qMXu" },
                            React.createElement("span", null, option.label)),
                        React.createElement("br", null)))),
        ]); }); };
        return (React.createElement("div", { id: "extensions", class: "ReactModal__Overlay ReactModal__Overlay--after-open modal_modal-overlay_1Lcbx", style: { display: this.props.visible ? 'block' : 'none' } },
            React.createElement("div", { class: "ReactModal__Content ReactModal__Content--after-open modal_modal-content_1h3ll modal_full-screen_FA4cr", role: "dialog", "aria-label": "Choose an Extension" },
                React.createElement("div", { class: "box_box_2jjDp", dir: "ltr", style: "flex-direction: column; flex-grow: 1;" },
                    React.createElement("div", { class: "modal_header_1h7ps" },
                        React.createElement("div", { class: "modal_header-item_2zQTd modal_header-item-title_tLOU5" }, this.props.title),
                        React.createElement("div", { class: "modal_header-item_2zQTd modal_header-item-close_2XDeL" },
                            React.createElement("a", { onClick: function () { return _this.props.onButtonClick('close'); } },
                                React.createElement("span", { class: "button_outlined-button_1bS__ modal_back-button_2ej6v", role: "button" },
                                    React.createElement("img", { class: "button_icon_77d8G", src: "https://scratch.mit.edu/static/assets/aaa4a3575852fe11d04f44c4a972ae73.svg" }),
                                    React.createElement("div", { class: "button_content_3jdgj" },
                                        React.createElement("span", { style: "color: white;", id: "backbutton" }, "Back")))))),
                    React.createElement("div", { class: "library_library-scroll-grid_1jyXm" }, getOptions())))));
    };
    return ExtensionModal;
}(preact_1.Component));
exports.default = ExtensionModal;

},{"preact":184}],132:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var Page_1 = require("./Page");
var FirebaseSelectModal = /** @class */ (function (_super) {
    __extends(FirebaseSelectModal, _super);
    function FirebaseSelectModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirebaseSelectModal.prototype.getButtons = function () {
        return this.props.buttons.concat([
            { key: 'close', label: 'Close', position: 'right' },
        ]);
    };
    FirebaseSelectModal.prototype.render = function () {
        var _this = this;
        var getOptions = function () { return _this.props.options.map(function (option) { return ([
            React.createElement("div", { class: 'SelectModal__cell SelectModal__cell--text' },
                React.createElement("span", null, option.label)),
            React.createElement("div", { class: 'SelectModal__cell SelectModal__cell--action' },
                React.createElement("button", { style: "background-color: #49B04D", id: "sharebutton", class: "buttonMenu icon-share", onClick: function () { return _this.props.onShare(option); } }, Page_1.navLabels[11]),
                React.createElement("button", { class: "buttonMenu error", id: "deletebutton", onClick: function () { return _this.props.onDelete(option); } }, Page_1.generic[4]),
                React.createElement("button", { onClick: function () { return _this.props.onSelect(option); } }, Page_1.generic[0])),
        ]); }); };
        return (React.createElement("div", { class: 'SelectModal modal', style: "min-width: 60%" },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: 'SelectModel__container' },
                React.createElement("header", { class: 'SelectModal__header' },
                    React.createElement("h3", null, Page_1.generic[12]),
                    React.createElement("a", { class: 'SelectModal__close close', onClick: function () { return _this.props.onButtonClick('close'); } }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content' },
                    React.createElement("div", { class: 'SelectModal__grid' }, getOptions())),
                React.createElement("footer", { class: 'SelectModal__buttons' }, this.getButtons().map(function (button) {
                    var _a;
                    return (React.createElement("button", { style: (_a = { float: button.position }, _a["margin-" + (button.position === 'left' ? 'right' : 'left')] = '8px', _a), onClick: function () { return _this.props.onButtonClick(button.key); } }, Page_1.generic[3]));
                })))));
    };
    return FirebaseSelectModal;
}(preact_1.Component));
exports.default = FirebaseSelectModal;

},{"./Page":138,"preact":184}],133:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var IEModal = /** @class */ (function (_super) {
    __extends(IEModal, _super);
    function IEModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IEModal.prototype.render = function () {
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: "AlertModel__container" },
                React.createElement("header", { class: "SelectModal__header" },
                    React.createElement("h3", null, this.props.title)),
                React.createElement("section", { class: 'SelectModel__content', id: "modaltext" },
                    this.props.text,
                    React.createElement("br", null),
                    React.createElement("div", { style: "text-align: center; font-weight: bolder;" }, this.props.text2)))));
    };
    return IEModal;
}(preact_1.Component));
exports.default = IEModal;

},{"preact":184}],134:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var ImageModal = /** @class */ (function (_super) {
    __extends(ImageModal, _super);
    function ImageModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageModal.prototype.render = function () {
        var _this = this;
        var getOptions = function () { return (_this.props.options.map(function (option) { return (React.createElement("div", { className: 'ImageModalOption', onClick: function () { return _this.props.onSelect(option); }, style: "position: relative; cursor: pointer;" },
            React.createElement("img", { src: option.image }),
            React.createElement("div", { className: 'ImageModalOptionButtonContainer' },
                React.createElement("button", { className: "ImageSelectButton", onClick: function () { return _this.props.onSelect(option); } }, option.title),
                React.createElement("div", { className: 'ImageHelpIconContainer', style: "text-align: center;" },
                    React.createElement("a", { class: 'icon-help-circled', style: 'color: rgba(255, 255, 255, 0.8);font-size: 23px;', href: option.help }))))); })); };
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { style: "width: 57%;", id: "imagemodal" },
                React.createElement("header", { style: "text-align: center;", id: "imageheader" },
                    React.createElement("h3", { style: "margin: 0 !important;" }, this.props.title)),
                React.createElement("section", { class: 'content', id: "imagecontent" },
                    React.createElement("div", { class: 'ImageModalOptionContainer' }, getOptions())),
                React.createElement("footer", { id: "imagefooter" }))));
    };
    return ImageModal;
}(preact_1.Component));
exports.default = ImageModal;

},{"preact":184}],135:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var LoadModal = /** @class */ (function (_super) {
    __extends(LoadModal, _super);
    function LoadModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LoadModal.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: "AlertModel__container", style: "background-color: white !important;" },
                React.createElement("header", { class: "SelectModal__header" },
                    React.createElement("h3", null, this.props.title),
                    React.createElement("a", { class: 'SelectModal__close close', onClick: function () { return _this.props.onButtonClick('close'); } }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content', style: "margin-top: 5px; margin-bottom: 20px;", id: "modaltext" },
                    React.createElement("div", { class: "loader", style: "margin: 0 auto;" })))));
    };
    return LoadModal;
}(preact_1.Component));
exports.default = LoadModal;

},{"preact":184}],136:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var Auth_1 = __importDefault(require("./Auth"));
var Page_1 = require("./Page");
var Page_2 = require("./Page");
var Nav = /** @class */ (function (_super) {
    __extends(Nav, _super);
    function Nav() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Nav.prototype.render = function () {
        var _this = this;
        var _a = this.props, downloadHex = _a.downloadHex, sendCode = _a.openTerminal, downloadPython = _a.downloadPython;
        return (React.createElement("nav", null,
            React.createElement("a", { class: 'brand', onClick: function () { return _this.props.modeQuestion(); }, "data-tooltip": 'Change Mode' },
                this.props.platformImg && React.createElement("img", { src: this.props.platformImg, class: 'Nav__platformImg', height: 50 }),
                React.createElement("img", { class: 'logo', src: 'https://i.ibb.co/2Zp0pyw/weblogo.png' })),
            React.createElement(Auth_1.default, { openAuth: this.props.openAuth, closeAuth: this.props.closeAuth }),
            React.createElement("input", { id: "filename", class: 'brand', placeholder: Page_1.navLabels[7], style: 'width: 200px; color:black; margin-left: 5px; float:right;', onChange: function (e) { return _this.props.onFileChange(e.target.value); } }),
            React.createElement("input", { id: 'bmenub', type: 'checkbox', class: 'show' }),
            React.createElement("label", { for: 'bmenub', id: "burgermenu", class: 'burger pseudo button icon-menu' }),
            React.createElement("div", { class: 'menu', id: "menubar" },
                React.createElement("a", { class: 'button icon-plus', id: "new", title: 'Create new file', href: 'javascript:void(0)', onClick: function () { return _this.props.newCode(); } }, Page_1.navLabels[0]),
                React.createElement("a", { class: 'button icon-folder-open', title: 'Open a file', href: 'javascript:void(0)', onClick: function () { return _this.props.openCode(); } }, Page_2.GlobalVars.openFiles),
                React.createElement("a", { class: 'button icon-floppy', title: 'Save a file', href: 'javascript:void(0)', onClick: function () { return _this.props.saveCode(); } }, Page_1.navLabels[2]),
                React.createElement("a", { class: 'button icon-book', title: 'Samples', href: 'javascript:void(0)', onClick: function () { return _this.props.openSamples(); } }, Page_1.navLabels[3]),
                React.createElement("a", { class: 'button icon-cog', title: 'Settings', href: 'javascript:void(0)', onClick: function () { return _this.props.onFunction(); } }, Page_1.navLabels[4]),
                sendCode &&
                    React.createElement("a", { class: 'button icon-play button-green', title: 'Run your code', href: 'javascript:void(0)', onClick: function () { return sendCode(); } }, Page_1.navLabels[5]),
                downloadHex &&
                    React.createElement("a", { class: 'button icon-flash button-green', title: 'Download file to flash to micro:bit', href: 'javascript:void(0)', onClick: function () { return downloadHex(); } }, Page_1.navLabels[8]),
                downloadPython &&
                    React.createElement("a", { class: 'button icon-download button-green', title: 'Download Python Source Code', href: 'javascript:void(0)', onClick: function () { return downloadPython(); } }, Page_1.navLabels[9]))));
    };
    return Nav;
}(preact_1.Component));
exports.default = Nav;

},{"./Auth":129,"./Page":138,"preact":184}],137:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var Page_1 = require("./Page");
var OverModal = /** @class */ (function (_super) {
    __extends(OverModal, _super);
    function OverModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OverModal.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: "AlertModel__container" },
                React.createElement("header", { class: "SelectModal__header" },
                    React.createElement("h3", null, this.props.title),
                    React.createElement("a", { class: 'SelectModal__close close', onClick: function () { return _this.props.onButtonClick('close'); } }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content' }, this.props.text),
                React.createElement("footer", { class: "alertFooter" },
                    React.createElement("label", { for: "modal_1", class: "button dangerous", onClick: function () { return _this.props.onButtonClick('close'); } }, Page_1.generic[6]),
                    React.createElement("label", { for: "modal_1", class: "button buttonFloatRight buttonMarginRight", onClick: function () { return _this.props.onYes('yes'); } }, Page_1.generic[5])))));
    };
    return OverModal;
}(preact_1.Component));
exports.default = OverModal;

},{"./Page":138,"preact":184}],138:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var platforms_1 = require("../platforms");
var firebase = __importStar(require("firebase/app"));
var Auth_1 = require("./Auth");
var AlertModal_1 = __importDefault(require("./AlertModal"));
var IEModal_1 = __importDefault(require("./IEModal"));
var LoadModal_1 = __importDefault(require("./LoadModal"));
var UploadModal_1 = __importDefault(require("./UploadModal"));
var ExtensionModal_1 = __importDefault(require("./ExtensionModal"));
var BlocklyView_1 = __importDefault(require("./BlocklyView"));
var ImageModal_1 = __importDefault(require("./ImageModal"));
var copy = require('copy-text-to-clipboard');
var Nav_1 = __importDefault(require("./Nav"));
var Cookies = require("js-cookie");
var OverwriteModal_1 = __importDefault(require("./OverwriteModal"));
var PythonView_1 = __importDefault(require("./PythonView"));
var RemoteShellView_1 = __importDefault(require("./RemoteShellView"));
var SelectModal_1 = __importDefault(require("./SelectModal"));
var FirebaseSelectModal_1 = __importDefault(require("./FirebaseSelectModal"));
var TrinketView_1 = __importDefault(require("./TrinketView"));
var AdvancedFunctions = ['Export Python', 'Themes', "Switch Language", "Split View"];
var ShareOptions = ['Copy Shareable URL', 'Copy Embed Code', 'Share to Google Classroom', 'Share to Microsoft Teams'];
var Languages = ['English', 'French', 'German', 'Welsh'];
var ViewModeBlockly = 'blocks';
var ViewModePython = 'python';
var ViewModeSplit = 'python';
// Labels
var GlobalVars = /** @class */ (function () {
    function GlobalVars() {
    }
    GlobalVars.openFiles = "Open";
    return GlobalVars;
}());
exports.GlobalVars = GlobalVars;
exports.split = false;
exports.classroom = "";
exports.navLabels = new Array();
exports.navLabels = ["New", "Open", "Save", "Samples", "Extras", "Run", "Login", "Untitled", "Download Hex", "Download", "Themes", "Share"];
exports.generic = new Array();
exports.generic = ["Open",
    "Go",
    "Select",
    "Close",
    "Delete",
    "Yes",
    "No",
    "Attention!",
    "There is no code to run!",
    "Changing mode will make you lose your code, do you wish to continue?",
    "Uploading...",
    "Select your mode",
    "Files"];
var Page = /** @class */ (function (_super) {
    __extends(Page, _super);
    function Page() {
        var _this = _super.call(this) || this;
        _this.state = {
            viewMode: ViewModeBlockly,
            modal: 'platform',
            includeTurtle: false,
            prevModal: null,
            extensionsActive: [],
            progress: 0,
            shareURL: "",
            fileName: 'Untitled',
            files: [],
            doc: {
                xml: null,
                python: null,
                pythonClean: true,
            },
        };
        return _this;
    }
    Page.prototype.isIE = function () {
        var ua = navigator.userAgent;
        var is_ie = ua.indexOf("MSIE ") > -1 || ua.indexOf("Trident/") > -1;
        return is_ie;
    };
    Page.prototype.readBlocklyContents = function (xml) {
        return __awaiter(this, void 0, void 0, function () {
            var doc;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.state.doc.xml === xml) {
                            return [2 /*return*/];
                        }
                        doc = {
                            xml: xml,
                            python: null,
                            pythonClean: true,
                        };
                        this.setState({ doc: doc });
                        if (!(exports.split === true)) return [3 /*break*/, 2];
                        this.switchView(ViewModeBlockly);
                        return [4 /*yield*/, this.splitView(false)];
                    case 1:
                        _a.sent();
                        exports.split = true;
                        this.splitView(true);
                        return [3 /*break*/, 3];
                    case 2:
                        this.switchView(ViewModeBlockly);
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.updateFromBlockly = function (xml, python) {
        if (this.state.doc.xml === xml &&
            this.state.doc.python === python) {
            return;
        }
        if (this.state.doc.python !== python && !this.state.doc.pythonClean) {
            this.setState({ modal: 'pythonOverwritten' });
        }
        var doc = {
            xml: xml,
            python: python,
            pythonClean: true,
        };
        this.setState({ doc: doc });
    };
    Page.prototype.updateFromPython = function (python) {
        if (this.state.doc.python === python) {
            return;
        }
        var doc = {
            xml: this.state.doc.xml,
            python: python,
            pythonClean: false,
        };
        this.setState({ doc: doc });
    };
    Page.prototype.new = function () {
        return __awaiter(this, void 0, void 0, function () {
            var doc;
            return __generator(this, function (_a) {
                doc = {
                    xml: null,
                    python: null,
                    pythonClean: true,
                };
                this.setState({ doc: doc });
                document.getElementById("filename").value = "";
                this.setState({ fileName: "Untitled" });
                return [2 /*return*/];
            });
        });
    };
    Page.prototype.componentDidMount = function () {
        var currentTheme = Cookies.get("theme");
        if (this.isIE()) {
            this.setState({ modal: "IE" });
        }
        document.body.className = "theme-" + currentTheme;
        var locURL = window.location.href.toString();
        if (window.location.hash) {
            var platformKey = window.location.hash.slice(1);
            this.selectPlatform(platformKey);
        }
        if (locURL.indexOf('#share') >= 0) {
            if (locURL.indexOf('?Python') >= 0) {
                this.selectPlatform("Python");
            }
            if (locURL.indexOf('?MicroBit') >= 0) {
                this.selectPlatform("MicroBit");
            }
            if (locURL.indexOf('?CircuitPython') >= 0) {
                this.selectPlatform("CircuitPython");
            }
            if (locURL.indexOf('?RaspberryPi') >= 0) {
                this.selectPlatform("RaspberryPi");
            }
            var self_1 = this;
            var loadShareURL = window.location.href.substring(window.location.href.lastIndexOf("?") + 1);
            var decoded = atob(loadShareURL);
            var xhr_1 = new XMLHttpRequest();
            xhr_1.responseType = 'text';
            xhr_1.onload = function (event) {
                self_1.readBlocklyContents(xhr_1.responseText);
            };
            xhr_1.open('GET', decoded);
            xhr_1.send();
            this.setState({ modal: null });
            this.delay(400);
            history.pushState(null, "", location.href.split("#")[0]);
        }
    };
    Page.prototype.toggleView = function () {
        switch (this.state.viewMode) {
            case ViewModeBlockly:
                return this.switchView(ViewModePython);
            case ViewModePython:
                return this.switchView(ViewModeBlockly);
        }
    };
    Page.prototype.switchView = function (viewMode) {
        switch (viewMode) {
            case ViewModeBlockly:
                var blocklyEditor = document.getElementById('blockly');
                var pythonEditor = document.getElementById('editor');
                pythonEditor.style.display = "none";
                blocklyEditor.style.display = "block";
                this.setState({ viewMode: 'blocks' });
                return 0;
            case ViewModePython:
                var blockEditor = document.getElementById('blockly');
                var pyEditor = document.getElementById('editor');
                blockEditor.style.display = "none";
                pyEditor.style.display = "block";
                this.setState({ viewMode: 'python' });
                return 0;
            case ViewModeSplit:
                var blocksEditor = document.getElementById('blockly');
                this.setState({ viewMode: 'blocks' });
                this.setState({ viewMode: 'python' });
                blocksEditor.style.display = "block";
                return 0;
        }
    };
    Page.prototype.openTerminal = function () {
        var _this = this;
        if (!this.state.doc.python) {
            this.setState({ modal: 'noCode' });
            return;
        }
        this.setState({ modal: 'terminal' });
        if (this.state.doc.python.indexOf("turtle") !== -1 || this.state.doc.python.indexOf("processing") !== -1 || this.state.doc.python.indexOf("pygal") !== -1) {
            this.setState({ includeTurtle: true });
        }
        else {
            this.setState({ includeTurtle: false });
        }
        if (this.remoteShellView) {
            this.remoteShellView.focus();
            this.remoteShellView.reset();
            this.props.app.runCode(this.state.doc.python);
            setTimeout(function () { return _this.remoteShellView.focus(); }, 250);
        }
    };
    Page.prototype.onBlocklyChange = function (xml, python) {
        this.updateFromBlockly(xml, python);
    };
    Page.prototype.onPythonChange = function (python) {
        this.updateFromPython(python);
    };
    Page.prototype.openFile = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user, self_2, ref, xml;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        user = firebase.auth().currentUser;
                        if (!user) return [3 /*break*/, 1];
                        self_2 = this;
                        ref = firebase.storage().ref("blocks/" + user.uid);
                        ref.listAll().then(function (res) {
                            self_2.setState({
                                files: res.items.map(function (i) { return ({
                                    label: i.name,
                                    ref: i,
                                }); }),
                                modal: 'files',
                            });
                        }).catch(function (error) {
                            self_2.setState({
                                modal: 'error',
                            });
                            console.error(error);
                        });
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.props.app.openFile()];
                    case 2:
                        xml = _a.sent();
                        this.readBlocklyContents(xml);
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.openFirebaseFile = function (file) {
        return __awaiter(this, void 0, void 0, function () {
            var self, newFileName;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.closeModal();
                        self = this;
                        newFileName = "";
                        return [4 /*yield*/, console.log("Opening file...")];
                    case 1:
                        _a.sent();
                        if (file.name.indexOf("(Python)") !== -1 && this.state.platform.key !== "Python") {
                            this.selectPlatform("Python");
                            newFileName = file.name.replace(" (Python)", "");
                        }
                        if (file.name.indexOf("(RPi)") !== -1 && this.state.platform.key !== "RaspberryPi") {
                            this.selectPlatform("RaspberryPi");
                            newFileName = file.name.replace(" (RPi)", "");
                        }
                        if (file.name.indexOf("(microbit)") !== -1 && this.state.platform.key !== "MicroBit") {
                            this.selectPlatform("MicroBit");
                            newFileName = file.name.replace(" (microbit)", "");
                        }
                        if (file.name.indexOf("(CircuitPython)") !== -1 && this.state.platform.key !== "CircuitPython") {
                            this.selectPlatform("CircuitPython");
                            newFileName = file.name.replace(" (CircuitPython)", "");
                        }
                        if (file.name.indexOf("(Python)") !== -1 && this.state.platform.key === "Python") {
                            newFileName = file.name.replace(" (Python)", "");
                        }
                        if (file.name.indexOf("(RPi)") !== -1 && this.state.platform.key === "RaspberryPi") {
                            newFileName = file.name.replace(" (RPi)", "");
                        }
                        if (file.name.indexOf("(microbit)") !== -1 && this.state.platform.key === "MicroBit") {
                            newFileName = file.name.replace(" (microbit)", "");
                        }
                        if (file.name.indexOf("(CircuitPython)") !== -1 && this.state.platform.key === "CircuitPython") {
                            newFileName = file.name.replace(" (CircuitPython)", "");
                        }
                        document.getElementById("filename").value = newFileName;
                        this.setState({ fileName: newFileName });
                        file.getDownloadURL().then(function (url) {
                            var xhr = new XMLHttpRequest();
                            xhr.responseType = 'text';
                            xhr.onload = function (event) {
                                self.readBlocklyContents(xhr.responseText);
                            };
                            xhr.open('GET', url);
                            xhr.send();
                        }).catch(function (error) {
                            self.setState({
                                modal: 'error',
                            });
                            console.error(error);
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.deleteFirebaseFile = function (file) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                file.delete();
                this.closeModal();
                return [2 /*return*/];
            });
        });
    };
    Page.prototype.delay = function (ms) {
        return new Promise(function (resolve) { return setTimeout(resolve, ms); });
    };
    Page.prototype.shareFirebaseFile = function (file) {
        return __awaiter(this, void 0, void 0, function () {
            var filePlatform, fileURL, newFileURL, encoded, edublocksLink;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        filePlatform = "";
                        if (file.name.indexOf("(Python)") !== -1) {
                            filePlatform = "Python";
                        }
                        if (file.name.indexOf("(RPi)") !== -1) {
                            filePlatform = "RaspberryPi";
                        }
                        if (file.name.indexOf("(microbit)") !== -1) {
                            filePlatform = "MicroBit";
                        }
                        if (file.name.indexOf("(CircuitPython)") !== -1) {
                            filePlatform = "CircuitPython";
                        }
                        return [4 /*yield*/, file.getDownloadURL()];
                    case 1:
                        fileURL = _a.sent();
                        newFileURL = fileURL.substring(0, fileURL.indexOf('&token='));
                        encoded = btoa(newFileURL);
                        edublocksLink = "https://app.edublocks.org/#share?" + filePlatform + "?" + encoded;
                        return [4 /*yield*/, this.setState({ shareURL: edublocksLink })];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, console.log(this.state.shareURL)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ modal: "shareoptions", prevModal: null })];
                    case 4:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.runShareOptions = function (func) {
        return __awaiter(this, void 0, void 0, function () {
            var shareableURL, response, body, shortLink, shareableURL, response, body, shortLink, shareableURL, response, body, shortLink, shareableURL, response, body, embedLink;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(func === 'Share to Google Classroom')) return [3 /*break*/, 7];
                        shareableURL = "https://api.shrtco.de/v2/shorten?url=" + encodeURIComponent(this.state.shareURL);
                        this.setState({ modal: "generating" });
                        return [4 /*yield*/, fetch(shareableURL)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 2:
                        body = _a.sent();
                        console.log(this.state.shareURL);
                        return [4 /*yield*/, this.closeModal()];
                    case 3:
                        _a.sent();
                        if (!response.ok) return [3 /*break*/, 6];
                        shortLink = "https://share.edublocks.org/" + body.result.code;
                        return [4 /*yield*/, console.log(this.state.shareURL)];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ shareURL: shortLink })];
                    case 5:
                        _a.sent();
                        window.open("https://classroom.google.com/u/0/share?url=" + encodeURIComponent(this.state.shareURL) + "&usegapi=1&id=I0_1591303124637&parent=https%3A%2F%2Fwww.gstatic.com&pfname=%2FI0_1591303123749&rpctoken=58755424&jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.en.utl9jrRztb8.O%2Fam%3DwQE%2Fd%3D1%2Fct%3Dzgms%2Frs%3DAGLTcCOUgIiKp6EMsn7UOgLQFm23i5pjzQ%2Fm%3D__features__", '1591307119253', 'width=700,height=500,toolbar=0,menubar=0,location=0,status=1,scrollbars=1,resizable=1,left=600,top=300');
                        this.closeModal();
                        return [3 /*break*/, 7];
                    case 6:
                        console.log(console.error());
                        _a.label = 7;
                    case 7:
                        if (!(func === 'Share to Microsoft Teams')) return [3 /*break*/, 14];
                        shareableURL = "https://api.shrtco.de/v2/shorten?url=" + encodeURIComponent(this.state.shareURL);
                        this.setState({ modal: "generating" });
                        return [4 /*yield*/, fetch(shareableURL)];
                    case 8:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 9:
                        body = _a.sent();
                        console.log(this.state.shareURL);
                        return [4 /*yield*/, this.closeModal()];
                    case 10:
                        _a.sent();
                        if (!response.ok) return [3 /*break*/, 13];
                        shortLink = "https://share.edublocks.org/" + body.result.code;
                        return [4 /*yield*/, console.log(this.state.shareURL)];
                    case 11:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ shareURL: shortLink })];
                    case 12:
                        _a.sent();
                        window.open("https://teams.microsoft.com/share?href=" + encodeURIComponent(this.state.shareURL), '1591307119253', 'width=700,height=500,toolbar=0,menubar=0,location=0,status=1,scrollbars=1,resizable=1,left=600,top=300');
                        this.closeModal();
                        return [3 /*break*/, 14];
                    case 13:
                        console.log(console.error());
                        _a.label = 14;
                    case 14:
                        if (!(func === 'Copy Shareable URL')) return [3 /*break*/, 24];
                        shareableURL = "https://api.shrtco.de/v2/shorten?url=" + encodeURIComponent(this.state.shareURL);
                        this.setState({ modal: "generating" });
                        return [4 /*yield*/, fetch(shareableURL)];
                    case 15:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 16:
                        body = _a.sent();
                        console.log(this.state.shareURL);
                        return [4 /*yield*/, this.closeModal()];
                    case 17:
                        _a.sent();
                        if (!response.ok) return [3 /*break*/, 23];
                        shortLink = "https://share.edublocks.org/" + body.result.code;
                        return [4 /*yield*/, console.log(this.state.shareURL)];
                    case 18:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ shareURL: shortLink })];
                    case 19:
                        _a.sent();
                        return [4 /*yield*/, copy(this.state.shareURL)];
                    case 20:
                        _a.sent();
                        return [4 /*yield*/, this.closeModal()];
                    case 21:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ modal: "share" })];
                    case 22:
                        _a.sent();
                        return [3 /*break*/, 24];
                    case 23:
                        console.log(console.error());
                        _a.label = 24;
                    case 24:
                        if (!(func === 'Copy Embed Code')) return [3 /*break*/, 32];
                        shareableURL = "https://api.shrtco.de/v2/shorten?url=" + encodeURIComponent(this.state.shareURL);
                        this.setState({ modal: "generating" });
                        return [4 /*yield*/, fetch(shareableURL)];
                    case 25:
                        response = _a.sent();
                        return [4 /*yield*/, response.json()];
                    case 26:
                        body = _a.sent();
                        console.log(shareableURL);
                        if (!response.ok) return [3 /*break*/, 31];
                        embedLink = '<iframe src="https://share.edublocks.org/' + body.result.code + '" height="600px" width="900px"></iframe>';
                        return [4 /*yield*/, console.log(embedLink)];
                    case 27:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ shareURL: embedLink })];
                    case 28:
                        _a.sent();
                        return [4 /*yield*/, copy(this.state.shareURL)];
                    case 29:
                        _a.sent();
                        return [4 /*yield*/, this.setState({ modal: "share" })];
                    case 30:
                        _a.sent();
                        return [3 /*break*/, 32];
                    case 31:
                        console.log(console.error());
                        _a.label = 32;
                    case 32: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.saveFile = function () {
        return __awaiter(this, void 0, void 0, function () {
            var xml, user, self_3, plat, ref, task;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        xml = this.state.doc.xml;
                        if (!(this.state.extensionsActive.length > 1)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.setState({ modal: "error", "prevModal": null })];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 2:
                        if (!xml) return [3 /*break*/, 5];
                        user = firebase.auth().currentUser;
                        if (!user) return [3 /*break*/, 3];
                        self_3 = this;
                        this.setState({
                            modal: 'progress',
                        });
                        plat = "";
                        if (this.state.platform.key === "Python") {
                            plat = " (Python)";
                        }
                        if (this.state.platform.key === "MicroBit") {
                            plat = " (microbit)";
                        }
                        if (this.state.platform.key === "RaspberryPi") {
                            plat = " (RPi)";
                        }
                        if (this.state.platform.key === "CircuitPython") {
                            plat = " (CircuitPython)";
                        }
                        ref = firebase.storage().ref("blocks/" + user.uid + "/" + this.state.fileName + plat);
                        task = ref.putString(xml, undefined, {
                            contentType: 'text/xml',
                        });
                        task.on('state_changed', function (snapshot) {
                            var progress = (snapshot.bytesTransferred / snapshot.totalBytes);
                            self_3.setState({
                                progress: progress,
                            });
                        }, function (error) {
                            self_3.setState({
                                modal: 'error',
                            });
                            console.error(error);
                        }, function () {
                            self_3.closeModal();
                        });
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, this.props.app.saveFile(this.state.fileName, xml, 'xml', 'text/xml;charset=utf-8')];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.downloadPython = function () {
        return __awaiter(this, void 0, void 0, function () {
            var python;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        python = this.state.doc.python;
                        if (!python) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.props.app.exportPython(this.state.fileName, python, this.state.extensionsActive)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.downloadHex = function () {
        return __awaiter(this, void 0, void 0, function () {
            var python;
            return __generator(this, function (_a) {
                python = this.state.doc.python;
                if (python) {
                    this.props.app.saveHex(this.state.fileName, python, this.state.extensionsActive);
                }
                return [2 /*return*/];
            });
        });
    };
    Page.prototype.selectPlatform = function (platformKey) {
        return __awaiter(this, void 0, void 0, function () {
            var platform, filebox, filebox, ip, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.closeModal();
                        return [4 /*yield*/, platforms_1.getPlatform(platformKey)];
                    case 1:
                        platform = _a.sent();
                        if (platformKey === "CircuitPython") {
                            filebox = document.getElementById("filename");
                            this.setState({ "fileName": "code" });
                            filebox.style.display = "none";
                        }
                        else {
                            filebox = document.getElementById("filename");
                            filebox.style.display = "block";
                        }
                        if (!(platformKey === 'RaspberryPi')) return [3 /*break*/, 7];
                        ip = null;
                        if (window.location.protocol === 'https:') {
                            alert('Need to switch to HTTP to access Raspberry Pi mode...');
                            window.location.protocol = 'http:';
                            return [2 /*return*/];
                        }
                        if (!(navigator.platform.indexOf('arm') !== -1)) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.props.app.initConnection('localhost')];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 7];
                    case 3:
                        ip = prompt('Please enter your Raspberry Pi\'s IP address');
                        if (!ip)
                            return [2 /*return*/];
                        _a.label = 4;
                    case 4:
                        _a.trys.push([4, 6, , 7]);
                        return [4 /*yield*/, this.props.app.initConnection(ip)];
                    case 5:
                        _a.sent();
                        return [3 /*break*/, 7];
                    case 6:
                        err_1 = _a.sent();
                        console.error(err_1);
                        return [3 /*break*/, 7];
                    case 7:
                        this.setState({
                            platform: platform,
                            modal: null,
                            extensionsActive: platform.defaultExtensions,
                        });
                        if (!(exports.split === true)) return [3 /*break*/, 9];
                        this.switchView(ViewModeBlockly);
                        return [4 /*yield*/, this.splitView(false)];
                    case 8:
                        _a.sent();
                        exports.split = true;
                        this.splitView(true);
                        return [3 /*break*/, 10];
                    case 9:
                        this.switchView(ViewModeBlockly);
                        _a.label = 10;
                    case 10: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.closeModal = function () {
        this.setState({ modal: this.state.prevModal, prevModal: null });
    };
    Page.prototype.openAuth = function () {
        this.setState({ modal: 'auth', prevModal: this.state.modal });
    };
    Page.prototype.openSamples = function () {
        this.setState({ modal: 'samples' });
    };
    Page.prototype.selectSample = function (file) {
        return __awaiter(this, void 0, void 0, function () {
            var xml;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.new();
                        return [4 /*yield*/, this.setState({ modal: null })];
                    case 1:
                        _a.sent();
                        xml = this.props.app.getSample(this.state.platform.key, file);
                        return [4 /*yield*/, this.readBlocklyContents(xml)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.openThemes = function () {
        this.setState({ modal: 'themes' });
    };
    Page.prototype.selectTheme = function (theme) {
        this.closeModal();
        Cookies.set("theme", theme, { expires: 100000 });
        document.body.className = "theme-" + theme;
    };
    Page.prototype.openExtensions = function () {
        this.setState({ modal: 'extensionsnew' });
    };
    Page.prototype.selectExtension = function (extension) {
        this.closeModal();
        var extensionsActive = this.state.extensionsActive;
        this.setState({
            extensionsActive: extensionsActive.concat([extension]),
        });
    };
    Page.prototype.onTerminalClose = function () {
        this.closeModal();
    };
    Page.prototype.hasCapability = function (capability) {
        if (!this.state.platform)
            return false;
        return this.state.platform.capabilities.indexOf(capability) !== -1;
    };
    Page.prototype.getExtensions = function () {
        if (!this.state.platform)
            return [];
        return this.state.platform.extensions;
    };
    Page.prototype.initTerminal = function (terminalView) {
        if (this.remoteShellView !== terminalView) {
            this.remoteShellView = terminalView;
            this.props.app.assignTerminal(terminalView);
        }
    };
    Page.prototype.getPythonCode = function () {
        return this.state.doc.python || '';
    };
    Page.prototype.openAdvancedFunctionDialog = function () {
        this.setState({ modal: 'functions' });
    };
    Page.prototype.fileChange = function (fileName) {
        this.setState({ fileName: fileName });
    };
    Page.prototype.openPlatforms = function () {
        this.new();
        this.setState({ modal: 'platform' });
    };
    Page.prototype.modeQuestion = function () {
        this.setState({ modal: 'codeOverwrite' });
    };
    Page.prototype.getAdvancedFunctionList = function () {
        var advancedFunctions = AdvancedFunctions;
        if (this.state.platform && this.state.platform.capabilities.indexOf('HexFlash') !== -1) {
            advancedFunctions = advancedFunctions.concat(['Flash Hex']);
            advancedFunctions = advancedFunctions.concat(['Extensions']);
        }
        return advancedFunctions.map(function (func) { return ({
            label: func,
            obj: func,
        }); });
    };
    Page.prototype.getShareOptionsList = function () {
        var shareOptions = ShareOptions;
        return shareOptions.map(function (func) { return ({
            label: func,
            obj: func,
        }); });
    };
    Page.prototype.getLanguagesList = function () {
        var languages = Languages;
        return languages.map(function (func) { return ({
            label: func,
            obj: func,
        }); });
    };
    Page.prototype.runLanguages = function (func) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(func === 'English')) return [3 /*break*/, 2];
                        GlobalVars.openFiles = "Open";
                        exports.navLabels = ["New", "Open", "Save", "Samples", "Extras", "Run", "Login", "Untitled", "Download Hex", "Download", "Themes", "Share"];
                        exports.generic = ["Open",
                            "Go",
                            "Select",
                            "Close",
                            "Delete",
                            "Yes",
                            "No",
                            "Attention!",
                            "There is no code to run!",
                            "Changing mode will make you lose your code, do you wish to continue?",
                            "Uploading...",
                            "Select your mode",
                            "Files"];
                        document.getElementById("menubar").innerHTML = exports.navLabels[0];
                        document.getElementById("menubar").innerHTML = exports.generic[0];
                        return [4 /*yield*/, this.closeModal()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        if (!(func === 'French')) return [3 /*break*/, 4];
                        GlobalVars.openFiles = "Ouvrir";
                        exports.navLabels = ["Nouveau", "Ouvrir", "Sauvegarder", "Exemples", "Préférences", "Exécuter", "S'identifier", "Sans Titre", "Télécharger Hex", "Télécharger", "Thèmes", "Partager"];
                        exports.generic = ["Ouvert",
                            "Aller",
                            "Sélectionner",
                            "Fermer",
                            "Effacer",
                            "Oui",
                            "Non",
                            "Attention!",
                            "Il n’y a pas de code à exécuter!",
                            "Changer le mode te fera perdre ton code, souhaites-tu continuer?",
                            "Téléchargement...",
                            "Sélectionnez votre mode",
                            "Des dossiers"];
                        document.getElementById("menubar").innerHTML = exports.generic[0];
                        document.getElementById("menubar").innerHTML = exports.navLabels[0];
                        return [4 /*yield*/, this.closeModal()];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        if (!(func === 'German')) return [3 /*break*/, 6];
                        GlobalVars.openFiles = "Öffnen";
                        exports.navLabels = ["Neu", "Öffnen", "Speichern", "Proben", "Extras", "Ausführen", "Login", "Unbetitelt", "Herunterladen Hex", "Herunterladen", "Themen", "Teilen"];
                        exports.generic = ["Öffnen",
                            "Los",
                            "Markieren",
                            "Schließen",
                            "Löschen",
                            "Ja",
                            "Nein",
                            "Achtung!",
                            "Es ist kein Code zum Ausführen!",
                            "Wenn sie den Modus ändern, wird ihr Code gelöscht. Möchten sie fortfahren?",
                            "Wird hochgeladen...",
                            "Wählen sie ihren Modus aus",
                            "Dateien"];
                        document.getElementById("menubar").innerHTML = exports.generic[0];
                        document.getElementById("menubar").innerHTML = exports.navLabels[0];
                        return [4 /*yield*/, this.closeModal()];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6:
                        if (!(func === 'Welsh')) return [3 /*break*/, 8];
                        GlobalVars.openFiles = "Agor";
                        exports.navLabels = ["Newydd", "Agor", "Cadw", "Samplau", "Yn ychwanegol", "Rhedeg", "Mewngofnodi", "Heb enw", "Lawrlwython Hex", "Lawrlwython", "Themâu", "Rhannu"];
                        exports.generic = ["Agor",
                            "Mynd",
                            "Dewis",
                            "Cau",
                            "Dileu",
                            "Ie",
                            "Na",
                            "Eich sylw!",
                            "Nid oes cod i'w redeg!",
                            "Fe fydd newid modd yn achosi colled cod, ydych chi esiau parhau?",
                            "Yn lanlwytho...",
                            "Dewiswch eith modd",
                            "Ffeiliau"];
                        document.getElementById("menubar").innerHTML = exports.generic[0];
                        document.getElementById("menubar").innerHTML = exports.navLabels[0];
                        return [4 /*yield*/, this.closeModal()];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.splitView = function (toggle) {
        return __awaiter(this, void 0, void 0, function () {
            var blocklyEditor, pythonEditor, editorElement, toggleElement, exitElement, editorElement, blocklyEditor, exitElement, toggleElement;
            return __generator(this, function (_a) {
                if (toggle === true) {
                    exports.split = true;
                    blocklyEditor = document.getElementById('blockly');
                    pythonEditor = document.getElementById('python');
                    editorElement = document.getElementById('editor');
                    toggleElement = document.getElementById('toggleViewButton');
                    exitElement = document.getElementById('ExitSplit');
                    blocklyEditor.style.width = "60%";
                    editorElement.style.width = "40%";
                    toggleElement.style.display = "none";
                    exitElement.style.display = "block";
                    window.dispatchEvent(new Event('resize'));
                    pythonEditor.classList.add("show-editor");
                    this.switchView(ViewModeSplit);
                    blocklyEditor.style.display = "block";
                    this.closeModal();
                }
                if (toggle === false) {
                    exports.split = false;
                    editorElement = document.getElementById('editor');
                    blocklyEditor = document.getElementById('blockly');
                    exitElement = document.getElementById('ExitSplit');
                    toggleElement = document.getElementById('toggleViewButton');
                    toggleElement.style.display = "block";
                    exitElement.style.display = "none";
                    window.dispatchEvent(new Event('resize'));
                    blocklyEditor.style.width = "100%";
                    editorElement.style.width = "100%";
                    window.dispatchEvent(new Event('resize'));
                    this.switchView(ViewModeBlockly);
                }
                return [2 /*return*/];
            });
        });
    };
    Page.prototype.runAdvancedFunction = function (func) {
        return __awaiter(this, void 0, void 0, function () {
            var python;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(func === 'Export Python')) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.downloadPython()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.closeModal()];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        if (!(func === 'Themes')) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.openThemes()];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        if (func === 'Split View') {
                            this.splitView(true);
                        }
                        if (func === 'Switch Language') {
                            this.setState({ modal: 'languages' });
                        }
                        if (!(func === 'Extensions')) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.openExtensions()];
                    case 6:
                        _a.sent();
                        _a.label = 7;
                    case 7:
                        if (!(func === 'Flash Hex')) return [3 /*break*/, 11];
                        python = this.state.doc.python;
                        if (!python) return [3 /*break*/, 11];
                        this.setState({ modal: 'progress', progress: 0 });
                        _a.label = 8;
                    case 8:
                        _a.trys.push([8, , 10, 11]);
                        return [4 /*yield*/, this.props.app.flashHex(python, this.state.extensionsActive, function (progress) {
                                _this.setState({ progress: progress });
                            })];
                    case 9:
                        _a.sent();
                        return [3 /*break*/, 11];
                    case 10:
                        this.setState({ modal: null });
                        return [7 /*endfinally*/];
                    case 11: return [2 /*return*/];
                }
            });
        });
    };
    Page.prototype.render = function () {
        var _this = this;
        var availablePlatforms = platforms_1.getPlatformList();
        return (React.createElement("div", { id: 'page' },
            React.createElement(ImageModal_1.default, { title: exports.generic[11], options: availablePlatforms, visible: this.state.modal === 'platform', onSelect: function (platform) { return _this.selectPlatform(platform.platform) && _this.new(); }, onCancel: function () {
                } }),
            React.createElement(Auth_1.AuthModal, { visible: this.state.modal === 'auth', onClose: function () { return _this.closeModal(); } }),
            React.createElement(AlertModal_1.default, { title: exports.generic[7], visible: this.state.modal === 'pythonOverwritten', text: exports.generic[8], onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(OverwriteModal_1.default, { title: exports.generic[7], visible: this.state.modal === 'codeOverwrite', text: exports.generic[9], onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); }, onYes: function (key1) { return key1 === 'yes' && _this.openPlatforms(); } }),
            React.createElement(AlertModal_1.default, { title: exports.generic[7], visible: this.state.modal === 'https', text: 'Need to switch to HTTPS...', onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(IEModal_1.default, { title: "We're Sorry", visible: this.state.modal === 'IE', text: 'EduBlocks no longer supports Internet Explorer. Please use Chrome or Firefox instead.', onCancel: function () {
                } }),
            React.createElement(AlertModal_1.default, { title: exports.generic[7], visible: this.state.modal === 'noCode', text: exports.generic[8], onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(LoadModal_1.default, { title: "Generating shareable URL", visible: this.state.modal === 'generating', onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(AlertModal_1.default, { title: 'Uh oh!', visible: this.state.modal === 'error', text: 'Something went wrong', onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            this.getExtensions().length > 0 &&
                React.createElement(ExtensionModal_1.default, { title: 'Extensions', options: this.getExtensions().map(function (label) { return ({ label: label }); }), selectLabel: exports.generic[2], buttons: [], visible: this.state.modal === 'extensionsnew', onSelect: function (extension) { return _this.selectExtension(extension.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(AlertModal_1.default, { title: exports.navLabels[11], visible: this.state.modal === 'share', text: this.state.shareURL, text2: "Copied to clipboard", onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(UploadModal_1.default, { title: exports.generic[10], visible: this.state.modal === 'progress', text: ((this.state.progress * 100) | 0) + "%", progress: this.state.progress * 100, onCancel: function () {
                }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(Nav_1.default, { platformImg: this.state.platform && this.state.platform.image, sync: this.state.doc.pythonClean, openPlatforms: function () { return _this.openPlatforms(); }, modeQuestion: function () { return _this.modeQuestion(); }, openTerminal: this.hasCapability('RemoteShell') || this.hasCapability('TrinketShell') ? function () { return _this.openTerminal(); } : undefined, downloadPython: this.hasCapability('PythonDownload') ? function () { return _this.downloadPython(); } : undefined, downloadHex: this.hasCapability('HexDownload') ? function () { return _this.downloadHex(); } : undefined, openCode: function () { return _this.openFile(); }, saveCode: function () { return _this.saveFile(); }, newCode: function () { return _this.new(); }, openSamples: function () { return _this.openSamples(); }, openThemes: function () { return _this.openThemes(); }, onFunction: function () { return _this.openAdvancedFunctionDialog(); }, onFileChange: function (fileName) { return _this.fileChange(fileName); }, openAuth: function () { return _this.openAuth(); }, closeAuth: function () { return _this.closeModal(); } }),
            React.createElement("section", { id: 'workspace' },
                React.createElement("button", { id: 'toggleViewButton', class: 'toggleViewButton', onClick: function () { return _this.toggleView(); } }, this.state.viewMode),
                React.createElement("button", { id: 'ExitSplit', class: "toggleViewButton", style: "display: none;", onClick: function () { return _this.splitView(false); } }, "Exit Split View"),
                React.createElement(BlocklyView_1.default, { visible: this.state.viewMode === 'blocks', xml: this.state.doc.xml, extensionsActive: this.state.extensionsActive, onChange: function (xml, python) { return _this.onBlocklyChange(xml, python); } }),
                React.createElement(PythonView_1.default, { visible: this.state.viewMode === 'python', python: this.state.doc.python, onChange: function (python) { return _this.onPythonChange(python); } })),
            this.hasCapability('RemoteShell') &&
                React.createElement(RemoteShellView_1.default, { ref: function (c) { return _this.initTerminal(c); }, visible: this.state.modal === 'terminal', onClose: function () { return _this.onTerminalClose(); } }),
            this.hasCapability('TrinketShell') &&
                React.createElement(TrinketView_1.default, { pythonCode: this.getPythonCode(), visible: this.state.modal === 'terminal', turtle: this.state.includeTurtle === true, onClose: function () { return _this.onTerminalClose(); } }),
            React.createElement(FirebaseSelectModal_1.default, { title: exports.generic[12], options: this.state.files, selectLabel: 'Open', buttons: [], visible: this.state.modal === 'files', onSelect: function (file) { return _this.openFirebaseFile(file.ref); }, onDelete: function (file) { return _this.deleteFirebaseFile(file.ref); }, onShare: function (file) { return _this.shareFirebaseFile(file.ref); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(SelectModal_1.default, { title: exports.navLabels[3], options: this.state.platform ? this.props.app.getSamples(this.state.platform.key).map(function (label) { return ({ label: label }); }) : [], selectLabel: exports.generic[0], buttons: [], visible: this.state.modal === 'samples', onSelect: function (file) { return _this.selectSample(file.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(SelectModal_1.default, { title: exports.navLabels[10], options: this.props.app.getThemes().map(function (label) { return ({ label: label }); }), selectLabel: exports.generic[2], buttons: [], visible: this.state.modal === 'themes', onSelect: function (theme) { return _this.selectTheme(theme.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(SelectModal_1.default, { title: exports.navLabels[4], selectLabel: exports.generic[1], buttons: [], visible: this.state.modal === 'functions', options: this.getAdvancedFunctionList(), onSelect: function (func) { return _this.runAdvancedFunction(func.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(SelectModal_1.default, { title: exports.navLabels[11], selectLabel: exports.generic[1], buttons: [], visible: this.state.modal === 'shareoptions', options: this.getShareOptionsList(), onSelect: function (func) { return _this.runShareOptions(func.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            React.createElement(SelectModal_1.default, { title: 'Switch Language', selectLabel: exports.generic[2], buttons: [], visible: this.state.modal === 'languages', options: this.getLanguagesList(), onSelect: function (func) { return _this.runLanguages(func.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } }),
            this.getExtensions().length > 0 &&
                React.createElement(SelectModal_1.default, { title: 'Extensions', options: this.getExtensions().map(function (label) { return ({ label: label }); }), selectLabel: exports.generic[2], buttons: [], visible: this.state.modal === 'extensions', onSelect: function (extension) { return _this.selectExtension(extension.label); }, onButtonClick: function (key) { return key === 'close' && _this.closeModal(); } })));
    };
    return Page;
}(preact_1.Component));
exports.default = Page;

},{"../platforms":120,"./AlertModal":128,"./Auth":129,"./BlocklyView":130,"./ExtensionModal":131,"./FirebaseSelectModal":132,"./IEModal":133,"./ImageModal":134,"./LoadModal":135,"./Nav":136,"./OverwriteModal":137,"./PythonView":139,"./RemoteShellView":140,"./SelectModal":141,"./TrinketView":142,"./UploadModal":143,"copy-text-to-clipboard":157,"firebase/app":163,"js-cookie":172,"preact":184}],139:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var _ = require("lodash");
var ace = self.ace;
var PythonView = /** @class */ (function (_super) {
    __extends(PythonView, _super);
    function PythonView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PythonView.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.visible) {
            // Need to check visible change as well to force refresh
            if (this.getCode() !== nextProps.python || this.props.visible !== nextProps.visible) {
                this.setCode(nextProps.python);
            }
        }
    };
    PythonView.prototype.componentDidMount = function () {
        var _this = this;
        if (!this.editorDiv) {
            throw new Error('No editor div');
        }
        this.editor = ace.edit(this.editorDiv);
        this.editor.setTheme('ace/theme/monokai');
        this.editor.getSession().setMode('ace/mode/python');
        this.editor.setOptions({
            fontSize: "16pt"
        });
        this.editor.on('change', _.debounce(function () {
            var code = _this.getCode();
            _this.props.onChange(code);
        }, 100));
    };
    PythonView.prototype.getCode = function () {
        return this.editor.getValue();
    };
    PythonView.prototype.setCode = function (code) {
        this.editor.setValue(code || '');
    };
    PythonView.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { style: { display: this.props.visible ? 'block' : 'none' }, id: 'python' },
            React.createElement("div", { id: 'editor', ref: function (div) { return _this.editorDiv = div; } })));
    };
    return PythonView;
}(preact_1.Component));
exports.default = PythonView;

},{"lodash":173,"preact":184}],140:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var stub = function () { return void 0; };
var RemoteShellView = /** @class */ (function (_super) {
    __extends(RemoteShellView, _super);
    function RemoteShellView(props) {
        var _this = _super.call(this, props) || this;
        _this.cols = 0;
        _this.rows = 0;
        _this.eventHandlers = {
            data: stub,
            resize: stub,
        };
        _this.term = new Terminal();
        return _this;
    }
    RemoteShellView.prototype.fit = function () {
        this.term.fit();
        if (this.cols !== this.term.cols || this.rows !== this.term.rows) {
            this.cols = this.term.cols;
            this.rows = this.term.rows;
            this.eventHandlers.resize(this.cols, this.rows);
        }
    };
    RemoteShellView.prototype.componentDidMount = function () {
        var _this = this;
        if (!this.termDiv)
            throw new Error('No term');
        this.term.open(this.termDiv, true);
        this.term.on('data', function (data) {
            _this.eventHandlers.data(data);
            if (data.length === 1 && data.charCodeAt(0) === 27) {
                _this.props.onClose();
            }
        });
        this.term.write('\x1b[31mWelcome to EduBlocks!\x1b[m\r\n');
        this.term.write('Press [ESC] to exit the terminal\r\n');
        this.fit();
        window.addEventListener('resize', function () { return _this.fit(); });
    };
    RemoteShellView.prototype.componentDidUpdate = function () {
        this.fit();
    };
    RemoteShellView.prototype.focus = function () {
        if (!this.term)
            return;
        this.term.focus();
    };
    RemoteShellView.prototype.reset = function () {
        console.info('RESET TERM');
        this.term.reset();
    };
    RemoteShellView.prototype.write = function (s) {
        this.term.write(s);
    };
    RemoteShellView.prototype.on = function (eventType, handler) {
        this.eventHandlers[eventType] = handler;
    };
    RemoteShellView.prototype.onCloseClick = function () {
        this.props.onClose();
    };
    RemoteShellView.prototype.onStopClick = function () {
        // Send Ctrl+C
        this.eventHandlers.data('\x03');
    };
    RemoteShellView.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { style: { display: this.props.visible ? 'block' : 'none' }, id: 'terminal-dialog' },
            React.createElement("div", { class: 'terminal-help' },
                React.createElement("span", { class: 'help-item', onClick: function () { return _this.onCloseClick(); } },
                    React.createElement("span", { class: 'key' }, "ESC"),
                    " = Close terminal"),
                React.createElement("span", { class: 'help-item', onClick: function () { return _this.onStopClick(); } },
                    React.createElement("span", { class: 'key' }, "Ctrl"),
                    " + ",
                    React.createElement("span", { class: 'key' }, "C"),
                    " = Stop program")),
            React.createElement("div", { id: 'term', ref: function (div) { return _this.termDiv = div; } })));
    };
    return RemoteShellView;
}(preact_1.Component));
exports.default = RemoteShellView;

},{"preact":184}],141:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var Page_1 = require("./Page");
var SelectModal = /** @class */ (function (_super) {
    __extends(SelectModal, _super);
    function SelectModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectModal.prototype.getButtons = function () {
        return this.props.buttons.concat([
            { key: 'close', label: 'Close', position: 'right' },
        ]);
    };
    SelectModal.prototype.render = function () {
        var _this = this;
        var getOptions = function () { return _this.props.options.map(function (option) { return ([
            React.createElement("div", { class: 'SelectModal__cell SelectModal__cell--text' },
                React.createElement("span", null, option.label)),
            React.createElement("div", { class: 'SelectModal__cell SelectModal__cell--action' },
                React.createElement("button", { onClick: function () { return _this.props.onSelect(option); } }, _this.props.selectLabel)),
        ]); }); };
        return (React.createElement("div", { class: 'SelectModal modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: 'SelectModel__container' },
                React.createElement("header", { class: 'SelectModal__header' },
                    React.createElement("h3", null, this.props.title),
                    React.createElement("a", { class: 'SelectModal__close close', onClick: function () { return _this.props.onButtonClick('close'); } }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content' },
                    React.createElement("div", { class: 'SelectModal__grid' }, getOptions())),
                React.createElement("footer", { class: 'SelectModal__buttons' }, this.getButtons().map(function (button) {
                    var _a;
                    return (React.createElement("button", { style: (_a = { float: button.position }, _a["margin-" + (button.position === 'left' ? 'right' : 'left')] = '8px', _a), onClick: function () { return _this.props.onButtonClick(button.key); } }, Page_1.generic[3]));
                })))));
    };
    return SelectModal;
}(preact_1.Component));
exports.default = SelectModal;

},{"./Page":138,"preact":184}],142:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
exports.josh = "hi";
var TrinketView = /** @class */ (function (_super) {
    __extends(TrinketView, _super);
    function TrinketView(props) {
        var _this = _super.call(this, props) || this;
        _this.escapeListener = function (e) {
            if (e.keyCode === 27) {
                _this.close();
            }
        };
        return _this;
    }
    TrinketView.prototype.componentDidMount = function () {
        window.addEventListener('keydown', this.escapeListener);
    };
    TrinketView.prototype.componentDidUpdate = function () {
    };
    TrinketView.prototype.componentWillUnmount = function () {
        window.removeEventListener('keydown', this.escapeListener);
    };
    TrinketView.prototype.getEscapedCode = function () {
        console.log(this.props.pythonCode);
        return encodeURIComponent(this.props.pythonCode);
    };
    TrinketView.prototype.close = function () {
        this.props.onClose();
    };
    TrinketView.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { class: 'TrinketView', style: { display: this.props.visible ? 'block' : 'none' }, id: 'terminal-dialog' },
            React.createElement("div", { class: 'terminal-help' },
                React.createElement("a", { class: 'icon-cancel-circled', title: "Create new file", href: 'javascript:void(0)', onClick: function () { return _this.close(); } }, "Exit")),
            React.createElement("div", { class: 'TrinketView__Container' },
                React.createElement("div", { class: 'TrinketView__ContainerLoading' }),
                this.props.visible &&
                    React.createElement("iframe", { frameBorder: 0, src: "https://trinket.io/tools/1.0/jekyll/embed/python3?runOption=run&outputOnly=true&start=result#code=" + this.getEscapedCode() }),
                this.props.turtle &&
                    React.createElement("iframe", { frameBorder: 0, src: "https://trinket.io/tools/1.0/jekyll/embed/python?runOption=run&outputOnly=true&start=result#code=" + this.getEscapedCode() }))));
    };
    return TrinketView;
}(preact_1.Component));
exports.default = TrinketView;

},{"preact":184}],143:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("preact");
var preact_1 = require("preact");
var UploadModal = /** @class */ (function (_super) {
    __extends(UploadModal, _super);
    function UploadModal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UploadModal.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { class: 'modal' },
            React.createElement("input", { id: 'modal_1', type: 'checkbox', disabled: true, checked: this.props.visible }),
            React.createElement("label", { for: 'modal_1', class: 'overlay' }),
            React.createElement("article", { class: "AlertModel__container" },
                React.createElement("header", { class: "SelectModal__header" },
                    React.createElement("h3", null, this.props.title),
                    React.createElement("a", { class: 'SelectModal__close close', onClick: function () { return _this.props.onButtonClick('close'); } }, "\u00D7")),
                React.createElement("section", { class: 'SelectModel__content', style: "text-align: center;" },
                    React.createElement("progress", { id: "file", value: this.props.progress, max: "100" }),
                    React.createElement("br", null),
                    this.props.text))));
    };
    return UploadModal;
}(preact_1.Component));
exports.default = UploadModal;

},{"preact":184}],144:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var firebase = _interopDefault(require('@firebase/app'));
var tslib = require('tslib');
require('@firebase/installations');
var util = require('@firebase/util');

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ANALYTICS_ID_FIELD = 'measurementId';
// Key to attach FID to in gtag params.
var GA_FID_KEY = 'firebase_id';
var ORIGIN_KEY = 'origin';
var GtagCommand;
(function (GtagCommand) {
    GtagCommand["EVENT"] = "event";
    GtagCommand["SET"] = "set";
    GtagCommand["CONFIG"] = "config";
})(GtagCommand || (GtagCommand = {}));
/*
 * Officially recommended event names for gtag.js
 * Any other string is also allowed.
 */
var EventName;
(function (EventName) {
    EventName["ADD_PAYMENT_INFO"] = "add_payment_info";
    EventName["ADD_TO_CART"] = "add_to_cart";
    EventName["ADD_TO_WISHLIST"] = "add_to_wishlist";
    EventName["BEGIN_CHECKOUT"] = "begin_checkout";
    EventName["CHECKOUT_PROGRESS"] = "checkout_progress";
    EventName["EXCEPTION"] = "exception";
    EventName["GENERATE_LEAD"] = "generate_lead";
    EventName["LOGIN"] = "login";
    EventName["PAGE_VIEW"] = "page_view";
    EventName["PURCHASE"] = "purchase";
    EventName["REFUND"] = "refund";
    EventName["REMOVE_FROM_CART"] = "remove_from_cart";
    EventName["SCREEN_VIEW"] = "screen_view";
    EventName["SEARCH"] = "search";
    EventName["SELECT_CONTENT"] = "select_content";
    EventName["SET_CHECKOUT_OPTION"] = "set_checkout_option";
    EventName["SHARE"] = "share";
    EventName["SIGN_UP"] = "sign_up";
    EventName["TIMING_COMPLETE"] = "timing_complete";
    EventName["VIEW_ITEM"] = "view_item";
    EventName["VIEW_ITEM_LIST"] = "view_item_list";
    EventName["VIEW_PROMOTION"] = "view_promotion";
    EventName["VIEW_SEARCH_RESULTS"] = "view_search_results";
})(EventName || (EventName = {}));

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Logs an analytics event through the Firebase SDK.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param eventName Google Analytics event name, choose from standard list or use a custom string.
 * @param eventParams Analytics event parameters.
 */
function logEvent(gtagFunction, analyticsId, eventName, eventParams, options) {
    var params = eventParams || {};
    if (!options || !options.global) {
        params = tslib.__assign(tslib.__assign({}, eventParams), { 'send_to': analyticsId });
    }
    // Workaround for http://b/141370449 - third argument cannot be undefined.
    gtagFunction(GtagCommand.EVENT, eventName, params || {});
}
// TODO: Brad is going to add `screen_name` to GA Gold config parameter schema
/**
 * Set screen_name parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param screenName Screen name string to set.
 */
function setCurrentScreen(gtagFunction, analyticsId, screenName, options) {
    if (options && options.global) {
        gtagFunction(GtagCommand.SET, { 'screen_name': screenName });
    }
    else {
        gtagFunction(GtagCommand.CONFIG, analyticsId, {
            update: true,
            'screen_name': screenName
        });
    }
}
/**
 * Set user_id parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param id User ID string to set
 */
function setUserId(gtagFunction, analyticsId, id, options) {
    if (options && options.global) {
        gtagFunction(GtagCommand.SET, { 'user_id': id });
    }
    else {
        gtagFunction(GtagCommand.CONFIG, analyticsId, {
            update: true,
            'user_id': id
        });
    }
}
/**
 * Set all other user properties other than user_id and screen_name.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param properties Map of user properties to set
 */
function setUserProperties(gtagFunction, analyticsId, properties, options) {
    if (options && options.global) {
        var flatProperties = {};
        for (var _i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {
            var key = _a[_i];
            // use dot notation for merge behavior in gtag.js
            flatProperties["user_properties." + key] = properties[key];
        }
        gtagFunction(GtagCommand.SET, flatProperties);
    }
    else {
        gtagFunction(GtagCommand.CONFIG, analyticsId, {
            update: true,
            'user_properties': properties
        });
    }
}
/**
 * Set whether collection is enabled for this ID.
 *
 * @param enabled If true, collection is enabled for this ID.
 */
function setAnalyticsCollectionEnabled(analyticsId, enabled) {
    window["ga-disable-" + analyticsId] = !enabled;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Initialize the analytics instance in gtag.js by calling config command with fid.
 *
 * NOTE: We combine analytics initialization and setting fid together because we want fid to be
 * part of the `page_view` event that's sent during the initialization
 * @param app Firebase app
 * @param gtagCore The gtag function that's not wrapped.
 */
function initializeGAId(app, gtagCore) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var fid;
        var _a;
        return tslib.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, app.installations().getId()];
                case 1:
                    fid = _b.sent();
                    // This command initializes gtag.js and only needs to be called once for the entire web app,
                    // but since it is idempotent, we can call it multiple times.
                    // We keep it together with other initialization logic for better code structure.
                    // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    gtagCore('js', new Date());
                    // It should be the first config command called on this GA-ID
                    // Initialize this GA-ID and set FID on it using the gtag config API.
                    gtagCore(GtagCommand.CONFIG, app.options[ANALYTICS_ID_FIELD], (_a = {},
                        _a[GA_FID_KEY] = fid,
                        // guard against developers accidentally setting properties with prefix `firebase_`
                        _a[ORIGIN_KEY] = 'firebase',
                        _a.update = true,
                        _a));
                    return [2 /*return*/];
            }
        });
    });
}
function hasDataLayer(dataLayerName) {
    return Array.isArray(window[dataLayerName]);
}
function insertScriptTag(dataLayerName) {
    var script = document.createElement('script');
    // We are not providing an analyticsId in the URL because it would trigger a `page_view`
    // without fid. We will initialize ga-id using gtag (config) command together with fid.
    script.src = "https://www.googletagmanager.com/gtag/js?l=" + dataLayerName;
    script.async = true;
    document.head.appendChild(script);
}
/** Get reference to, or create, global datalayer.
 * @param dataLayerName Name of datalayer (most often the default, "_dataLayer")
 */
function getOrCreateDataLayer(dataLayerName) {
    // Check for existing dataLayer and create if needed.
    var dataLayer = [];
    if (hasDataLayer(dataLayerName)) {
        dataLayer = window[dataLayerName];
    }
    else {
        dataLayer = window[dataLayerName] = [];
    }
    return dataLayer;
}
/**
 * Wraps a standard gtag function with extra code to wait for completion of
 * relevant initialization promises before sending requests.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer
 * @param initializedIdPromisesMap Map of gaIds to their initialization promises
 */
function wrapGtag(gtagCore, initializedIdPromisesMap) {
    return function (command, idOrNameOrParams, gtagParams) {
        // If event, check that relevant initialization promises have completed.
        if (command === GtagCommand.EVENT) {
            var initializationPromisesToWaitFor = [];
            // If there's a 'send_to' param, check if any ID specified matches
            // a FID we have begun a fetch on.
            if (gtagParams && gtagParams['send_to']) {
                var gaSendToList = gtagParams['send_to'];
                // Make it an array if is isn't, so it can be dealt with the same way.
                if (!Array.isArray(gaSendToList)) {
                    gaSendToList = [gaSendToList];
                }
                for (var _i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {
                    var sendToId = gaSendToList_1[_i];
                    var initializationPromise = initializedIdPromisesMap[sendToId];
                    // Groups will not be in the map.
                    if (initializationPromise) {
                        initializationPromisesToWaitFor.push(initializationPromise);
                    }
                    else {
                        // There is an item in 'send_to' that is not associated
                        // directly with an FID, possibly a group.  Empty this array
                        // and let it get populated below.
                        initializationPromisesToWaitFor = [];
                        break;
                    }
                }
            }
            // This will be unpopulated if there was no 'send_to' field , or
            // if not all entries in the 'send_to' field could be mapped to
            // a FID. In these cases, wait on all pending initialization promises.
            if (initializationPromisesToWaitFor.length === 0) {
                for (var _a = 0, _b = Object.values(initializedIdPromisesMap); _a < _b.length; _a++) {
                    var idPromise = _b[_a];
                    initializationPromisesToWaitFor.push(idPromise);
                }
            }
            // Run core gtag function with args after all relevant initialization
            // promises have been resolved.
            Promise.all(initializationPromisesToWaitFor)
                // Workaround for http://b/141370449 - third argument cannot be undefined.
                .then(function () {
                return gtagCore(GtagCommand.EVENT, idOrNameOrParams, gtagParams || {});
            })
                .catch(function (e) { return console.error(e); });
        }
        else if (command === GtagCommand.CONFIG) {
            var initializationPromiseToWait = initializedIdPromisesMap[idOrNameOrParams] ||
                Promise.resolve();
            initializationPromiseToWait
                .then(function () {
                gtagCore(GtagCommand.CONFIG, idOrNameOrParams, gtagParams);
            })
                .catch(function (e) { return console.error(e); });
        }
        else {
            // SET command.
            // Splitting calls for CONFIG and SET to make it clear which signature
            // Typescript is checking.
            gtagCore(GtagCommand.SET, idOrNameOrParams);
        }
    };
}
/**
 * Creates global gtag function or wraps existing one if found.
 * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and
 * 'event' calls that belong to the GAID associated with this Firebase instance.
 *
 * @param initializedIdPromisesMap Map of gaId to initialization promises.
 * @param dataLayerName Name of global GA datalayer array.
 * @param gtagFunctionName Name of global gtag function ("gtag" if not user-specified)
 */
function wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagFunctionName) {
    // Create a basic core gtag function
    var gtagCore = function () {
        var _args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            _args[_i] = arguments[_i];
        }
        // Must push IArguments object, not an array.
        window[dataLayerName].push(arguments);
    };
    // Replace it with existing one if found
    if (window[gtagFunctionName] &&
        typeof window[gtagFunctionName] === 'function') {
        // @ts-ignore
        gtagCore = window[gtagFunctionName];
    }
    window[gtagFunctionName] = wrapGtag(gtagCore, initializedIdPromisesMap);
    return {
        gtagCore: gtagCore,
        wrappedGtag: window[gtagFunctionName]
    };
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-ga-id" /* NO_GA_ID */] = "\"" + ANALYTICS_ID_FIELD + "\" field is empty in " +
        'Firebase config. Firebase Analytics ' +
        'requires this field to contain a valid measurement ID.',
    _a["already-exists" /* ALREADY_EXISTS */] = 'A Firebase Analytics instance with the measurement ID ${id} ' +
        ' already exists. ' +
        'Only one Firebase Analytics instance can be created for each measurement ID.',
    _a["already-initialized" /* ALREADY_INITIALIZED */] = 'Firebase Analytics has already been initialized.' +
        'settings() must be called before initializing any Analytics instance' +
        'or it will have no effect.',
    _a);
var ERROR_FACTORY = new util.ErrorFactory('analytics', 'Analytics', ERRORS);

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Maps gaId to FID fetch promises.
 */
var initializedIdPromisesMap = {};
/**
 * Name for window global data layer array used by GA: defaults to 'dataLayer'.
 */
var dataLayerName = 'dataLayer';
/**
 * Name for window global gtag function used by GA: defaults to 'gtag'.
 */
var gtagName = 'gtag';
/**
 * Reproduction of standard gtag function or reference to existing
 * gtag function on window object.
 */
var gtagCoreFunction;
/**
 * Wrapper around gtag function that ensures FID is sent with all
 * relevant event and config calls.
 */
var wrappedGtagFunction;
/**
 * Flag to ensure page initialization steps (creation or wrapping of
 * dataLayer and gtag script) are only run once per page load.
 */
var globalInitDone = false;
/**
 * For testing
 */
function resetGlobalVars(newGlobalInitDone, newGaInitializedPromise) {
    if (newGlobalInitDone === void 0) { newGlobalInitDone = false; }
    if (newGaInitializedPromise === void 0) { newGaInitializedPromise = {}; }
    globalInitDone = newGlobalInitDone;
    initializedIdPromisesMap = newGaInitializedPromise;
    dataLayerName = 'dataLayer';
    gtagName = 'gtag';
}
/**
 * This must be run before calling firebase.analytics() or it won't
 * have any effect.
 * @param options Custom gtag and dataLayer names.
 */
function settings(options) {
    if (globalInitDone) {
        throw ERROR_FACTORY.create("already-initialized" /* ALREADY_INITIALIZED */);
    }
    if (options.dataLayerName) {
        dataLayerName = options.dataLayerName;
    }
    if (options.gtagName) {
        gtagName = options.gtagName;
    }
}
function factory(app, 
// eslint-disable-next-line @typescript-eslint/no-explicit-any
extendApp) {
    if (!app.options[ANALYTICS_ID_FIELD]) {
        throw ERROR_FACTORY.create("no-ga-id" /* NO_GA_ID */);
    }
    var analyticsId = app.options[ANALYTICS_ID_FIELD];
    if (initializedIdPromisesMap[analyticsId] != null) {
        throw ERROR_FACTORY.create("already-exists" /* ALREADY_EXISTS */, {
            id: analyticsId
        });
    }
    if (!globalInitDone) {
        // Steps here should only be done once per page: creation or wrapping
        // of dataLayer and global gtag function.
        // Presence of previously existing dataLayer used to detect if user has
        // already put the gtag snippet on this page.
        if (!hasDataLayer(dataLayerName)) {
            insertScriptTag(dataLayerName);
        }
        getOrCreateDataLayer(dataLayerName);
        var _a = wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagName), wrappedGtag = _a.wrappedGtag, gtagCore = _a.gtagCore;
        wrappedGtagFunction = wrappedGtag;
        gtagCoreFunction = gtagCore;
        globalInitDone = true;
    }
    // Async but non-blocking.
    initializedIdPromisesMap[analyticsId] = initializeGAId(app, gtagCoreFunction);
    var analyticsInstance = {
        app: app,
        logEvent: function (eventName, eventParams, options) {
            return logEvent(wrappedGtagFunction, analyticsId, eventName, eventParams, options);
        },
        setCurrentScreen: function (screenName, options) {
            return setCurrentScreen(wrappedGtagFunction, analyticsId, screenName, options);
        },
        setUserId: function (id, options) {
            return setUserId(wrappedGtagFunction, analyticsId, id, options);
        },
        setUserProperties: function (properties, options) {
            return setUserProperties(wrappedGtagFunction, analyticsId, properties, options);
        },
        setAnalyticsCollectionEnabled: function (enabled) {
            return setAnalyticsCollectionEnabled(app.options[ANALYTICS_ID_FIELD], enabled);
        }
    };
    extendApp({
        INTERNAL: {
            analytics: {
                logEvent: analyticsInstance.logEvent
            }
        }
    });
    return analyticsInstance;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Type constant for Firebase Analytics.
 */
var ANALYTICS_TYPE = 'analytics';
function registerAnalytics(instance) {
    instance.INTERNAL.registerService(ANALYTICS_TYPE, factory, {
        settings: settings,
        EventName: EventName
    }, 
    // We don't need to wait on any AppHooks.
    undefined, 
    // Allow multiple analytics instances per app.
    false);
}
registerAnalytics(firebase);

exports.factory = factory;
exports.registerAnalytics = registerAnalytics;
exports.resetGlobalVars = resetGlobalVars;
exports.settings = settings;


},{"@firebase/app":145,"@firebase/installations":147,"@firebase/util":150,"tslib":190}],145:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var util = require('@firebase/util');
var logger$1 = require('@firebase/logger');

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " +
        'call Firebase App.initializeApp()',
    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}",
    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists",
    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted",
    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +
        'Firebase App instance.',
    _a);
var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, config, firebase_) {
        var _this = this;
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.services_ = {};
        // An array to capture listeners before the true auth functions exist
        this.tokenListeners_ = [];
        // An array to capture requests to send events before analytics component loads. Use type any to make using function.apply easier
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.analyticsEventRequests_ = [];
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ =
            config.automaticDataCollectionEnabled || false;
        this.options_ = util.deepCopy(options);
        var self = this;
        this.INTERNAL = {
            getUid: function () { return null; },
            getToken: function () { return Promise.resolve(null); },
            addAuthTokenListener: function (callback) {
                _this.tokenListeners_.push(callback);
                // Make sure callback is called, asynchronously, in the absence of the auth module
                setTimeout(function () { return callback(null); }, 0);
            },
            removeAuthTokenListener: function (callback) {
                _this.tokenListeners_ = _this.tokenListeners_.filter(function (listener) { return listener !== callback; });
            },
            analytics: {
                logEvent: function () {
                    self.analyticsEventRequests_.push(arguments);
                }
            }
        };
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function () {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function (val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: true,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            var services = [];
            for (var _i = 0, _a = Object.keys(_this.services_); _i < _a.length; _i++) {
                var serviceKey = _a[_i];
                for (var _b = 0, _c = Object.keys(_this.services_[serviceKey]); _b < _c.length; _b++) {
                    var instanceKey = _c[_b];
                    services.push(_this.services_[serviceKey][instanceKey]);
                }
            }
            return Promise.all(services
                .filter(function (service) { return 'INTERNAL' in service; })
                .map(function (service) { return service.INTERNAL.delete(); }));
        })
            .then(function () {
            _this.isDeleted_ = true;
            _this.services_ = {};
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        if (!this.services_[name]) {
            this.services_[name] = {};
        }
        if (!this.services_[name][instanceIdentifier]) {
            /**
             * If a custom instance has been defined (i.e. not '[DEFAULT]')
             * then we will pass that instance on, otherwise we pass `null`
             */
            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME
                ? instanceIdentifier
                : undefined;
            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);
            this.services_[name][instanceIdentifier] = service;
        }
        return this.services_[name][instanceIdentifier];
    };
    /**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */
    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        if (this.services_[name] && this.services_[name][instanceIdentifier]) {
            delete this.services_[name][instanceIdentifier];
        }
    };
    /**
     * Callback function used to extend an App instance at the time
     * of service instance creation.
     */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    FirebaseAppImpl.prototype.extendApp = function (props) {
        // Copy the object onto the FirebaseAppImpl prototype
        util.deepExtend(this, props);
        if (props.INTERNAL) {
            /**
             * If the app has overwritten the addAuthTokenListener stub, forward
             * the active token listeners on to the true fxn.
             *
             * TODO: This function is required due to our current module
             * structure. Once we are able to rely strictly upon a single module
             * implementation, this code should be refactored and Auth should
             * provide these stubs and the upgrade logic
             */
            if (props.INTERNAL.addAuthTokenListener) {
                for (var _i = 0, _a = this.tokenListeners_; _i < _a.length; _i++) {
                    var listener = _a[_i];
                    this.INTERNAL.addAuthTokenListener(listener);
                }
                this.tokenListeners_ = [];
            }
            if (props.INTERNAL.analytics) {
                for (var _b = 0, _c = this.analyticsEventRequests_; _b < _c.length; _b++) {
                    var request = _c[_b];
                    // logEvent is the actual implementation at this point.
                    // We forward the queued events to it.
                    this.INTERNAL.analytics.logEvent.apply(undefined, request);
                }
                this.analyticsEventRequests_ = [];
            }
        }
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
    FirebaseAppImpl.prototype.delete ||
    console.log('dc');

var version = "7.2.2";

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new logger$1.Logger('@firebase/app');

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    var factories = {};
    var appHooks = {};
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version,
        INTERNAL: {
            registerService: registerService,
            removeApp: removeApp,
            factories: factories,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        var app = apps[name];
        callAppHooks(app, 'delete');
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!util.contains(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) { rawConfig = {}; }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
                appName: String(name)
            });
        }
        if (util.contains(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        callAppHooks(app, 'create');
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) { return apps[name]; });
    }
    /*
     * Register a Firebase Service.
     *
     * firebase.INTERNAL.registerService()
     *
     * TODO: Implement serviceProperties.
     */
    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {
        if (allowMultipleInstances === void 0) { allowMultipleInstances = false; }
        // If re-registering a service that already exists, return existing service
        if (factories[name]) {
            logger.debug("There were multiple attempts to register service " + name + ".");
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            return namespace[name];
        }
        // Capture the service factory for later service instantiation
        factories[name] = createService;
        // Capture the appHook, if passed
        if (appHook) {
            appHooks[name] = appHook;
            // Run the **new** app hook on all existing apps
            getApps().forEach(function (app) {
                appHook('create', app);
            });
        }
        // The Service namespace is an accessor function ...
        function serviceNamespace(appArg) {
            if (appArg === void 0) { appArg = app(); }
            // @ts-ignore
            if (typeof appArg[name] !== 'function') {
                // Invalid argument.
                // This happens in the following case: firebase.storage('gs:/')
                throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                    appName: name
                });
            }
            // Forward service instance lookup to the FirebaseApp.
            // @ts-ignore
            return appArg[name]();
        }
        // ... and a container for service-level properties.
        if (serviceProperties !== undefined) {
            util.deepExtend(serviceNamespace, serviceProperties);
        }
        // Monkey-patch the serviceNamespace onto the firebase namespace
        // @ts-ignore
        namespace[name] = serviceNamespace;
        // Patch the FirebaseAppImpl prototype
        // @ts-ignore
        firebaseAppImpl.prototype[name] =
            // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
            // option added to the no-explicit-any rule when ESlint releases it.
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var serviceFxn = this._getService.bind(this, name);
                return serviceFxn.apply(this, allowMultipleInstances ? args : []);
            };
        return serviceNamespace;
    }
    function callAppHooks(app, eventName) {
        for (var _i = 0, _a = Object.keys(factories); _i < _a.length; _i++) {
            var serviceName = _a[_i];
            // Ignore virtual services
            var factoryName = useAsService(app, serviceName);
            if (factoryName === null) {
                return;
            }
            if (appHooks[factoryName]) {
                appHooks[factoryName](eventName, app);
            }
        }
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: util.createSubscribe,
        ErrorFactory: util.ErrorFactory,
        deepExtend: util.deepExtend });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        util.deepExtend(namespace, props);
    }
    return namespace;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if (util.isBrowser() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var firebaseNamespace = createFirebaseNamespace();
var initializeApp = firebaseNamespace.initializeApp;
// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
firebaseNamespace.initializeApp = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if (util.isNode()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, args);
};
var firebase = firebaseNamespace;

exports.default = firebase;
exports.firebase = firebase;


},{"@firebase/logger":148,"@firebase/util":150,"tslib":190}],146:[function(require,module,exports){
(function (global){
(function() {var firebase = require('@firebase/app').default;var k,aa="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},ba="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this;function ca(a,b){if(b){var c=ba;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}
function da(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function ea(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:da(a)}}
ca("Promise",function(a){function b(g){this.b=0;this.c=void 0;this.a=[];var h=this.f();try{g(h.resolve,h.reject)}catch(m){h.reject(m)}}function c(){this.a=null}function d(g){return g instanceof b?g:new b(function(h){h(g)})}if(a)return a;c.prototype.b=function(g){if(null==this.a){this.a=[];var h=this;this.c(function(){h.g()})}this.a.push(g)};var e=ba.setTimeout;c.prototype.c=function(g){e(g,0)};c.prototype.g=function(){for(;this.a&&this.a.length;){var g=this.a;this.a=[];for(var h=0;h<g.length;++h){var m=
g[h];g[h]=null;try{m()}catch(p){this.f(p)}}}this.a=null};c.prototype.f=function(g){this.c(function(){throw g;})};b.prototype.f=function(){function g(p){return function(u){m||(m=!0,p.call(h,u))}}var h=this,m=!1;return{resolve:g(this.m),reject:g(this.g)}};b.prototype.m=function(g){if(g===this)this.g(new TypeError("A Promise cannot resolve to itself"));else if(g instanceof b)this.o(g);else{a:switch(typeof g){case "object":var h=null!=g;break a;case "function":h=!0;break a;default:h=!1}h?this.u(g):this.h(g)}};
b.prototype.u=function(g){var h=void 0;try{h=g.then}catch(m){this.g(m);return}"function"==typeof h?this.v(h,g):this.h(g)};b.prototype.g=function(g){this.i(2,g)};b.prototype.h=function(g){this.i(1,g)};b.prototype.i=function(g,h){if(0!=this.b)throw Error("Cannot settle("+g+", "+h+"): Promise already settled in state"+this.b);this.b=g;this.c=h;this.l()};b.prototype.l=function(){if(null!=this.a){for(var g=0;g<this.a.length;++g)f.b(this.a[g]);this.a=null}};var f=new c;b.prototype.o=function(g){var h=this.f();
g.Ja(h.resolve,h.reject)};b.prototype.v=function(g,h){var m=this.f();try{g.call(h,m.resolve,m.reject)}catch(p){m.reject(p)}};b.prototype.then=function(g,h){function m(C,N){return"function"==typeof C?function(wa){try{p(C(wa))}catch(ld){u(ld)}}:N}var p,u,A=new b(function(C,N){p=C;u=N});this.Ja(m(g,p),m(h,u));return A};b.prototype.catch=function(g){return this.then(void 0,g)};b.prototype.Ja=function(g,h){function m(){switch(p.b){case 1:g(p.c);break;case 2:h(p.c);break;default:throw Error("Unexpected state: "+
p.b);}}var p=this;null==this.a?f.b(m):this.a.push(m)};b.resolve=d;b.reject=function(g){return new b(function(h,m){m(g)})};b.race=function(g){return new b(function(h,m){for(var p=ea(g),u=p.next();!u.done;u=p.next())d(u.value).Ja(h,m)})};b.all=function(g){var h=ea(g),m=h.next();return m.done?d([]):new b(function(p,u){function A(wa){return function(ld){C[wa]=ld;N--;0==N&&p(C)}}var C=[],N=0;do C.push(void 0),N++,d(m.value).Ja(A(C.length-1),u),m=h.next();while(!m.done)})};return b});
var fa=fa||{},l=this||self;function n(a){return"string"==typeof a}function ha(a){return"boolean"==typeof a}var ia=/^[\w+/_-]+[=]{0,2}$/,ja=null;function ka(){}
function la(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b}function ma(a){return null===a}function na(a){return"array"==la(a)}function oa(a){var b=la(a);return"array"==b||"object"==b&&"number"==typeof a.length}function q(a){return"function"==la(a)}function r(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}var pa="closure_uid_"+(1E9*Math.random()>>>0),qa=0;function ra(a,b,c){return a.call.apply(a.bind,arguments)}
function sa(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function t(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?t=ra:t=sa;return t.apply(null,arguments)}
function ta(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}var ua=Date.now||function(){return+new Date};function v(a,b){function c(){}c.prototype=b.prototype;a.qb=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.fd=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};function va(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};function w(a){if(Error.captureStackTrace)Error.captureStackTrace(this,w);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}v(w,Error);w.prototype.name="CustomError";function xa(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");w.call(this,c+a[d])}v(xa,w);xa.prototype.name="AssertionError";function ya(a,b){throw new xa("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1));};function za(a,b){this.c=a;this.f=b;this.b=0;this.a=null}za.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function Aa(a,b){a.f(b);100>a.b&&(a.b++,b.next=a.a,a.a=b)};function Ba(){this.b=this.a=null}var Da=new za(function(){return new Ca},function(a){a.reset()});Ba.prototype.add=function(a,b){var c=Da.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function Ea(){var a=Fa,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function Ca(){this.next=this.b=this.a=null}Ca.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};Ca.prototype.reset=function(){this.next=this.b=this.a=null};function Ga(a,b){a:{try{var c=a&&a.ownerDocument,d=c&&(c.defaultView||c.parentWindow);d=d||l;if(d.Element&&d.Location){var e=d;break a}}catch(g){}e=null}if(e&&"undefined"!=typeof e[b]&&(!a||!(a instanceof e[b])&&(a instanceof e.Location||a instanceof e.Element))){if(r(a))try{var f=a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(g){f="<object could not be stringified>"}else f=void 0===a?"undefined":null===a?"null":typeof a;ya("Argument is not a %s (or a non-Element, non-Location mock); got: %s",
b,f)}};var Ha=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(n(a))return n(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},x=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=n(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};function Ia(a,b){for(var c=n(a)?a.split(""):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)}
var Ja=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=n(a)?a.split(""):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Ka=Array.prototype.some?function(a,b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=n(a)?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};
function La(a){a:{var b=Ma;for(var c=a.length,d=n(a)?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:n(a)?a.charAt(b):a[b]}function Na(a,b){return 0<=Ha(a,b)}function Oa(a,b){b=Ha(a,b);var c;(c=0<=b)&&Array.prototype.splice.call(a,b,1);return c}function Pa(a,b){var c=0;Ia(a,function(d,e){b.call(void 0,d,e,a)&&1==Array.prototype.splice.call(a,e,1).length&&c++})}function Qa(a){return Array.prototype.concat.apply([],arguments)}
function Ra(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};function Sa(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function Ta(a){for(var b in a)return!1;return!0}function Ua(a){var b={},c;for(c in a)b[c]=a[c];return b}var Va="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function Wa(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<Va.length;f++)c=Va[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function Xa(a,b){this.a=a===Ya&&b||"";this.b=Za}Xa.prototype.qa=!0;Xa.prototype.pa=function(){return this.a};Xa.prototype.toString=function(){return"Const{"+this.a+"}"};function $a(a){if(a instanceof Xa&&a.constructor===Xa&&a.b===Za)return a.a;ya("expected object of type Const, got '"+a+"'");return"type_error:Const"}var Za={},Ya={},ab=new Xa(Ya,"");function bb(){this.a="";this.b=cb}bb.prototype.qa=!0;bb.prototype.pa=function(){return this.a.toString()};bb.prototype.toString=function(){return"TrustedResourceUrl{"+this.a+"}"};function db(a){if(a instanceof bb&&a.constructor===bb&&a.b===cb)return a.a;ya("expected object of type TrustedResourceUrl, got '"+a+"' of type "+la(a));return"type_error:TrustedResourceUrl"}
function eb(a,b){var c=$a(a);if(!fb.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(gb,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof Xa?$a(d):encodeURIComponent(String(d))});return hb(a)}var gb=/%{(\w+)}/g,fb=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,cb={};
function hb(a){var b=new bb;b.a=a;return b};var ib=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]},jb=/&/g,kb=/</g,lb=/>/g,mb=/"/g,nb=/'/g,ob=/\x00/g,pb=/[\x00&<>"']/;function y(a,b){return-1!=a.indexOf(b)}function qb(a,b){return a<b?-1:a>b?1:0};function rb(){this.a="";this.b=sb}rb.prototype.qa=!0;rb.prototype.pa=function(){return this.a.toString()};rb.prototype.toString=function(){return"SafeUrl{"+this.a+"}"};function tb(a){if(a instanceof rb&&a.constructor===rb&&a.b===sb)return a.a;ya("expected object of type SafeUrl, got '"+a+"' of type "+la(a));return"type_error:SafeUrl"}var ub=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
function vb(a){if(a instanceof rb)return a;a="object"==typeof a&&a.qa?a.pa():String(a);ub.test(a)||(a="about:invalid#zClosurez");return wb(a)}var sb={};function wb(a){var b=new rb;b.a=a;return b}wb("about:blank");var xb;a:{var yb=l.navigator;if(yb){var zb=yb.userAgent;if(zb){xb=zb;break a}}xb=""}function z(a){return y(xb,a)};function Ab(){this.a="";this.b=Bb}Ab.prototype.qa=!0;Ab.prototype.pa=function(){return this.a.toString()};Ab.prototype.toString=function(){return"SafeHtml{"+this.a+"}"};function Cb(a){if(a instanceof Ab&&a.constructor===Ab&&a.b===Bb)return a.a;ya("expected object of type SafeHtml, got '"+a+"' of type "+la(a));return"type_error:SafeHtml"}var Bb={};function Db(a){var b=new Ab;b.a=a;return b}Db("<!DOCTYPE html>");var Eb=Db("");Db("<br>");function Fb(a){var b=hb($a(ab));Ga(a,"HTMLIFrameElement");a.src=db(b).toString()}function Gb(a,b){Ga(a,"HTMLScriptElement");a.src=db(b);if(null===ja)b:{b=l.document;if((b=b.querySelector&&b.querySelector("script[nonce]"))&&(b=b.nonce||b.getAttribute("nonce"))&&ia.test(b)){ja=b;break b}ja=""}b=ja;b&&a.setAttribute("nonce",b)};function Hb(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")}function Ib(a){pb.test(a)&&(-1!=a.indexOf("&")&&(a=a.replace(jb,"&amp;")),-1!=a.indexOf("<")&&(a=a.replace(kb,"&lt;")),-1!=a.indexOf(">")&&(a=a.replace(lb,"&gt;")),-1!=a.indexOf('"')&&(a=a.replace(mb,"&quot;")),-1!=a.indexOf("'")&&(a=a.replace(nb,"&#39;")),-1!=a.indexOf("\x00")&&(a=a.replace(ob,"&#0;")));return a};function Jb(a){l.setTimeout(function(){throw a;},0)}var Kb;
function Lb(){var a=l.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!z("Presto")&&(a=function(){var e=document.createElement("IFRAME");e.style.display="none";Fb(e);document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.write(Cb(Eb));e.close();var g="callImmediate"+Math.random(),h="file:"==f.location.protocol?"*":f.location.protocol+"//"+f.location.host;e=t(function(m){if(("*"==h||m.origin==h)&&m.data==
g)this.port1.onmessage()},this);f.addEventListener("message",e,!1);this.port1={};this.port2={postMessage:function(){f.postMessage(g,h)}}});if("undefined"!==typeof a&&!z("Trident")&&!z("MSIE")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var e=c.yb;c.yb=null;e()}};return function(e){d.next={yb:e};d=d.next;b.port2.postMessage(0)}}return"undefined"!==typeof document&&"onreadystatechange"in document.createElement("SCRIPT")?function(e){var f=document.createElement("SCRIPT");
f.onreadystatechange=function(){f.onreadystatechange=null;f.parentNode.removeChild(f);f=null;e();e=null};document.documentElement.appendChild(f)}:function(e){l.setTimeout(e,0)}};function Mb(a,b){Nb||Ob();Pb||(Nb(),Pb=!0);Fa.add(a,b)}var Nb;function Ob(){if(l.Promise&&l.Promise.resolve){var a=l.Promise.resolve(void 0);Nb=function(){a.then(Qb)}}else Nb=function(){var b=Qb;!q(l.setImmediate)||l.Window&&l.Window.prototype&&!z("Edge")&&l.Window.prototype.setImmediate==l.setImmediate?(Kb||(Kb=Lb()),Kb(b)):l.setImmediate(b)}}var Pb=!1,Fa=new Ba;function Qb(){for(var a;a=Ea();){try{a.a.call(a.b)}catch(b){Jb(b)}Aa(Da,a)}Pb=!1};function B(a,b){this.a=Rb;this.i=void 0;this.f=this.b=this.c=null;this.g=this.h=!1;if(a!=ka)try{var c=this;a.call(b,function(d){Sb(c,Tb,d)},function(d){if(!(d instanceof Ub))try{if(d instanceof Error)throw d;throw Error("Promise rejected.");}catch(e){}Sb(c,Vb,d)})}catch(d){Sb(this,Vb,d)}}var Rb=0,Tb=2,Vb=3;function Wb(){this.next=this.f=this.b=this.g=this.a=null;this.c=!1}Wb.prototype.reset=function(){this.f=this.b=this.g=this.a=null;this.c=!1};var Xb=new za(function(){return new Wb},function(a){a.reset()});
function Yb(a,b,c){var d=Xb.get();d.g=a;d.b=b;d.f=c;return d}function D(a){if(a instanceof B)return a;var b=new B(ka);Sb(b,Tb,a);return b}function E(a){return new B(function(b,c){c(a)})}function Zb(a,b,c){$b(a,b,c,null)||Mb(ta(b,a))}function ac(a){return new B(function(b,c){var d=a.length,e=[];if(d)for(var f=function(p,u){d--;e[p]=u;0==d&&b(e)},g=function(p){c(p)},h=0,m;h<a.length;h++)m=a[h],Zb(m,ta(f,h),g);else b(e)})}
function bc(a){return new B(function(b){var c=a.length,d=[];if(c)for(var e=function(h,m,p){c--;d[h]=m?{Gb:!0,value:p}:{Gb:!1,reason:p};0==c&&b(d)},f=0,g;f<a.length;f++)g=a[f],Zb(g,ta(e,f,!0),ta(e,f,!1));else b(d)})}B.prototype.then=function(a,b,c){return cc(this,q(a)?a:null,q(b)?b:null,c)};B.prototype.$goog_Thenable=!0;k=B.prototype;k.ka=function(a,b){a=Yb(a,a,b);a.c=!0;dc(this,a);return this};k.s=function(a,b){return cc(this,null,a,b)};
k.cancel=function(a){this.a==Rb&&Mb(function(){var b=new Ub(a);ec(this,b)},this)};function ec(a,b){if(a.a==Rb)if(a.c){var c=a.c;if(c.b){for(var d=0,e=null,f=null,g=c.b;g&&(g.c||(d++,g.a==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(c.a==Rb&&1==d?ec(c,b):(f?(d=f,d.next==c.f&&(c.f=d),d.next=d.next.next):fc(c),gc(c,e,Vb,b)))}a.c=null}else Sb(a,Vb,b)}function dc(a,b){a.b||a.a!=Tb&&a.a!=Vb||hc(a);a.f?a.f.next=b:a.b=b;a.f=b}
function cc(a,b,c,d){var e=Yb(null,null,null);e.a=new B(function(f,g){e.g=b?function(h){try{var m=b.call(d,h);f(m)}catch(p){g(p)}}:f;e.b=c?function(h){try{var m=c.call(d,h);void 0===m&&h instanceof Ub?g(h):f(m)}catch(p){g(p)}}:g});e.a.c=a;dc(a,e);return e.a}k.Oc=function(a){this.a=Rb;Sb(this,Tb,a)};k.Pc=function(a){this.a=Rb;Sb(this,Vb,a)};
function Sb(a,b,c){a.a==Rb&&(a===c&&(b=Vb,c=new TypeError("Promise cannot resolve to itself")),a.a=1,$b(c,a.Oc,a.Pc,a)||(a.i=c,a.a=b,a.c=null,hc(a),b!=Vb||c instanceof Ub||ic(a,c)))}function $b(a,b,c,d){if(a instanceof B)return dc(a,Yb(b||ka,c||null,d)),!0;if(va(a))return a.then(b,c,d),!0;if(r(a))try{var e=a.then;if(q(e))return jc(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1}
function jc(a,b,c,d,e){function f(m){h||(h=!0,d.call(e,m))}function g(m){h||(h=!0,c.call(e,m))}var h=!1;try{b.call(a,g,f)}catch(m){f(m)}}function hc(a){a.h||(a.h=!0,Mb(a.Zb,a))}function fc(a){var b=null;a.b&&(b=a.b,a.b=b.next,b.next=null);a.b||(a.f=null);return b}k.Zb=function(){for(var a;a=fc(this);)gc(this,a,this.a,this.i);this.h=!1};
function gc(a,b,c,d){if(c==Vb&&b.b&&!b.c)for(;a&&a.g;a=a.c)a.g=!1;if(b.a)b.a.c=null,kc(b,c,d);else try{b.c?b.g.call(b.f):kc(b,c,d)}catch(e){lc.call(null,e)}Aa(Xb,b)}function kc(a,b,c){b==Tb?a.g.call(a.f,c):a.b&&a.b.call(a.f,c)}function ic(a,b){a.g=!0;Mb(function(){a.g&&lc.call(null,b)})}var lc=Jb;function Ub(a){w.call(this,a)}v(Ub,w);Ub.prototype.name="cancel";function mc(){0!=nc&&(oc[this[pa]||(this[pa]=++qa)]=this);this.ta=this.ta;this.la=this.la}var nc=0,oc={};mc.prototype.ta=!1;function pc(a){if(!a.ta&&(a.ta=!0,a.xa(),0!=nc)){var b=a[pa]||(a[pa]=++qa);if(0!=nc&&a.la&&0<a.la.length)throw Error(a+" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete oc[b]}}mc.prototype.xa=function(){if(this.la)for(;this.la.length;)this.la.shift()()};function qc(a){qc[" "](a);return a}qc[" "]=ka;function rc(a,b){var c=sc;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var tc=z("Opera"),uc=z("Trident")||z("MSIE"),vc=z("Edge"),wc=vc||uc,xc=z("Gecko")&&!(y(xb.toLowerCase(),"webkit")&&!z("Edge"))&&!(z("Trident")||z("MSIE"))&&!z("Edge"),yc=y(xb.toLowerCase(),"webkit")&&!z("Edge");function zc(){var a=l.document;return a?a.documentMode:void 0}var Ac;
a:{var Bc="",Cc=function(){var a=xb;if(xc)return/rv:([^\);]+)(\)|;)/.exec(a);if(vc)return/Edge\/([\d\.]+)/.exec(a);if(uc)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(yc)return/WebKit\/(\S+)/.exec(a);if(tc)return/(?:Version)[ \/]?(\S+)/.exec(a)}();Cc&&(Bc=Cc?Cc[1]:"");if(uc){var Dc=zc();if(null!=Dc&&Dc>parseFloat(Bc)){Ac=String(Dc);break a}}Ac=Bc}var sc={};
function Ec(a){return rc(a,function(){for(var b=0,c=ib(String(Ac)).split("."),d=ib(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||"",h=d[f]||"";do{g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];h=/(\d*)(\D*)(.*)/.exec(h)||["","","",""];if(0==g[0].length&&0==h[0].length)break;b=qb(0==g[1].length?0:parseInt(g[1],10),0==h[1].length?0:parseInt(h[1],10))||qb(0==g[2].length,0==h[2].length)||qb(g[2],h[2]);g=g[3];h=h[3]}while(0==b)}return 0<=b})}var Fc;
Fc=l.document&&uc?zc():void 0;var Gc=Object.freeze||function(a){return a};var Hc=!uc||9<=Number(Fc),Ic=uc&&!Ec("9"),Jc=function(){if(!l.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{l.addEventListener("test",ka,b),l.removeEventListener("test",ka,b)}catch(c){}return a}();function F(a,b){this.type=a;this.b=this.target=b;this.Mb=!0}F.prototype.preventDefault=function(){this.Mb=!1};function Kc(a,b){F.call(this,a?a.type:"");this.relatedTarget=this.b=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType="";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.b=b;if(b=a.relatedTarget){if(xc){a:{try{qc(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else"mouseover"==
c?b=a.fromElement:"mouseout"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||"";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=
a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=n(a.pointerType)?a.pointerType:Lc[a.pointerType]||"";this.a=a;a.defaultPrevented&&this.preventDefault()}}v(Kc,F);var Lc=Gc({2:"touch",3:"pen",4:"mouse"});Kc.prototype.preventDefault=function(){Kc.qb.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Ic)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};Kc.prototype.f=function(){return this.a};var Mc="closure_listenable_"+(1E6*Math.random()|0),Nc=0;function Oc(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.Na=e;this.key=++Nc;this.ra=this.Ia=!1}function Pc(a){a.ra=!0;a.listener=null;a.proxy=null;a.src=null;a.Na=null};function Qc(a){this.src=a;this.a={};this.b=0}Qc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var g=Rc(a,b,d,e);-1<g?(b=a[g],c||(b.Ia=!1)):(b=new Oc(b,this.src,f,!!d,e),b.Ia=c,a.push(b));return b};function Sc(a,b){var c=b.type;c in a.a&&Oa(a.a[c],b)&&(Pc(b),0==a.a[c].length&&(delete a.a[c],a.b--))}function Rc(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.ra&&f.listener==b&&f.capture==!!c&&f.Na==d)return e}return-1};var Tc="closure_lm_"+(1E6*Math.random()|0),Uc={},Vc=0;function Wc(a,b,c,d,e){if(d&&d.once)Xc(a,b,c,d,e);else if(na(b))for(var f=0;f<b.length;f++)Wc(a,b[f],c,d,e);else c=Yc(c),a&&a[Mc]?Zc(a,b,c,r(d)?!!d.capture:!!d,e):$c(a,b,c,!1,d,e)}
function $c(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=r(e)?!!e.capture:!!e,h=ad(a);h||(a[Tc]=h=new Qc(a));c=h.add(b,c,d,g,f);if(!c.proxy){d=bd();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)Jc||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(cd(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");Vc++}}
function bd(){var a=dd,b=Hc?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function Xc(a,b,c,d,e){if(na(b))for(var f=0;f<b.length;f++)Xc(a,b[f],c,d,e);else c=Yc(c),a&&a[Mc]?ed(a,b,c,r(d)?!!d.capture:!!d,e):$c(a,b,c,!0,d,e)}
function fd(a,b,c,d,e){if(na(b))for(var f=0;f<b.length;f++)fd(a,b[f],c,d,e);else(d=r(d)?!!d.capture:!!d,c=Yc(c),a&&a[Mc])?(a=a.u,b=String(b).toString(),b in a.a&&(f=a.a[b],c=Rc(f,c,d,e),-1<c&&(Pc(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=ad(a))&&(b=a.a[b.toString()],a=-1,b&&(a=Rc(b,c,d,e)),(c=-1<a?b[a]:null)&&gd(c))}
function gd(a){if("number"!=typeof a&&a&&!a.ra){var b=a.src;if(b&&b[Mc])Sc(b.u,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(cd(c),d):b.addListener&&b.removeListener&&b.removeListener(d);Vc--;(c=ad(b))?(Sc(c,a),0==c.b&&(c.src=null,b[Tc]=null)):Pc(a)}}}function cd(a){return a in Uc?Uc[a]:Uc[a]="on"+a}
function hd(a,b,c,d){var e=!0;if(a=ad(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.ra&&(f=id(f,d),e=e&&!1!==f)}return e}function id(a,b){var c=a.listener,d=a.Na||a.src;a.Ia&&gd(a);return c.call(d,b)}
function dd(a,b){if(a.ra)return!0;if(!Hc){if(!b)a:{b=["window","event"];for(var c=l,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new Kc(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.b;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.b=d[e];var f=hd(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.b=d[e],f=hd(d[e],a,!1,b),c=c&&f}return c}return id(a,
new Kc(b,this))}function ad(a){a=a[Tc];return a instanceof Qc?a:null}var jd="__closure_events_fn_"+(1E9*Math.random()>>>0);function Yc(a){if(q(a))return a;a[jd]||(a[jd]=function(b){return a.handleEvent(b)});return a[jd]};function G(){mc.call(this);this.u=new Qc(this);this.Sb=this;this.Wa=null}v(G,mc);G.prototype[Mc]=!0;G.prototype.addEventListener=function(a,b,c,d){Wc(this,a,b,c,d)};G.prototype.removeEventListener=function(a,b,c,d){fd(this,a,b,c,d)};
G.prototype.dispatchEvent=function(a){var b,c=this.Wa;if(c)for(b=[];c;c=c.Wa)b.push(c);c=this.Sb;var d=a.type||a;if(n(a))a=new F(a,c);else if(a instanceof F)a.target=a.target||c;else{var e=a;a=new F(d,c);Wa(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var g=a.b=b[f];e=kd(g,d,!0,a)&&e}g=a.b=c;e=kd(g,d,!0,a)&&e;e=kd(g,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)g=a.b=b[f],e=kd(g,d,!1,a)&&e;return e};
G.prototype.xa=function(){G.qb.xa.call(this);if(this.u){var a=this.u,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,Pc(d[e]);delete a.a[c];a.b--}}this.Wa=null};function Zc(a,b,c,d,e){a.u.add(String(b),c,!1,d,e)}function ed(a,b,c,d,e){a.u.add(String(b),c,!0,d,e)}
function kd(a,b,c,d){b=a.u.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.ra&&g.capture==c){var h=g.listener,m=g.Na||g.src;g.Ia&&Sc(a.u,g);e=!1!==h.call(m,d)&&e}}return e&&0!=d.Mb};function md(a,b,c){if(q(a))c&&(a=t(a,c));else if(a&&"function"==typeof a.handleEvent)a=t(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<Number(b)?-1:l.setTimeout(a,b||0)}function nd(a){var b=null;return(new B(function(c,d){b=md(function(){c(void 0)},a);-1==b&&d(Error("Failed to schedule timer."))})).s(function(c){l.clearTimeout(b);throw c;})};function od(a){if(a.U&&"function"==typeof a.U)return a.U();if(n(a))return a.split("");if(oa(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}function pd(a){if(a.X&&"function"==typeof a.X)return a.X();if(!a.U||"function"!=typeof a.U){if(oa(a)||n(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(var d in a)b[c++]=d;return b}}
function qd(a,b){if(a.forEach&&"function"==typeof a.forEach)a.forEach(b,void 0);else if(oa(a)||n(a))x(a,b,void 0);else for(var c=pd(a),d=od(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};function rd(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof rd)for(c=a.X(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}k=rd.prototype;k.U=function(){sd(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};k.X=function(){sd(this);return this.a.concat()};
k.clear=function(){this.b={};this.c=this.a.length=0};function sd(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];td(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],td(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}k.get=function(a,b){return td(this.b,a)?this.b[a]:b};k.set=function(a,b){td(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};
k.forEach=function(a,b){for(var c=this.X(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function td(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var ud=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function vd(a,b){if(a){a=a.split("&");for(var c=0;c<a.length;c++){var d=a[c].indexOf("="),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\+/g," ")):"")}}};function wd(a,b){this.b=this.i=this.f="";this.l=null;this.g=this.c="";this.h=!1;var c;a instanceof wd?(this.h=void 0!==b?b:a.h,xd(this,a.f),this.i=a.i,this.b=a.b,yd(this,a.l),this.c=a.c,zd(this,Ad(a.a)),this.g=a.g):a&&(c=String(a).match(ud))?(this.h=!!b,xd(this,c[1]||"",!0),this.i=Bd(c[2]||""),this.b=Bd(c[3]||"",!0),yd(this,c[4]),this.c=Bd(c[5]||"",!0),zd(this,c[6]||"",!0),this.g=Bd(c[7]||"")):(this.h=!!b,this.a=new Cd(null,this.h))}
wd.prototype.toString=function(){var a=[],b=this.f;b&&a.push(Dd(b,Ed,!0),":");var c=this.b;if(c||"file"==b)a.push("//"),(b=this.i)&&a.push(Dd(b,Ed,!0),"@"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),c=this.l,null!=c&&a.push(":",String(c));if(c=this.c)this.b&&"/"!=c.charAt(0)&&a.push("/"),a.push(Dd(c,"/"==c.charAt(0)?Fd:Gd,!0));(c=this.a.toString())&&a.push("?",c);(c=this.g)&&a.push("#",Dd(c,Hd));return a.join("")};
wd.prototype.resolve=function(a){var b=new wd(this),c=!!a.f;c?xd(b,a.f):c=!!a.i;c?b.i=a.i:c=!!a.b;c?b.b=a.b:c=null!=a.l;var d=a.c;if(c)yd(b,a.l);else if(c=!!a.c){if("/"!=d.charAt(0))if(this.b&&!this.c)d="/"+d;else{var e=b.c.lastIndexOf("/");-1!=e&&(d=b.c.substr(0,e+1)+d)}e=d;if(".."==e||"."==e)d="";else if(y(e,"./")||y(e,"/.")){d=0==e.lastIndexOf("/",0);e=e.split("/");for(var f=[],g=0;g<e.length;){var h=e[g++];"."==h?d&&g==e.length&&f.push(""):".."==h?((1<f.length||1==f.length&&""!=f[0])&&f.pop(),
d&&g==e.length&&f.push("")):(f.push(h),d=!0)}d=f.join("/")}else d=e}c?b.c=d:c=""!==a.a.toString();c?zd(b,Ad(a.a)):c=!!a.g;c&&(b.g=a.g);return b};function xd(a,b,c){a.f=c?Bd(b,!0):b;a.f&&(a.f=a.f.replace(/:$/,""))}function yd(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error("Bad port number "+b);a.l=b}else a.l=null}function zd(a,b,c){b instanceof Cd?(a.a=b,Id(a.a,a.h)):(c||(b=Dd(b,Jd)),a.a=new Cd(b,a.h))}function H(a,b,c){a.a.set(b,c)}function Kd(a,b){return a.a.get(b)}
function Ld(a){return a instanceof wd?new wd(a):new wd(a,void 0)}function Md(a,b){var c=new wd(null,void 0);xd(c,"https");a&&(c.b=a);b&&(c.c=b);return c}function Bd(a,b){return a?b?decodeURI(a.replace(/%25/g,"%2525")):decodeURIComponent(a):""}function Dd(a,b,c){return n(a)?(a=encodeURI(a).replace(b,Nd),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),a):null}function Nd(a){a=a.charCodeAt(0);return"%"+(a>>4&15).toString(16)+(a&15).toString(16)}
var Ed=/[#\/\?@]/g,Gd=/[#\?:]/g,Fd=/[#\?]/g,Jd=/[#\?@]/g,Hd=/#/g;function Cd(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}function Od(a){a.a||(a.a=new rd,a.b=0,a.c&&vd(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\+/g," ")),c)}))}function Pd(a){var b=pd(a);if("undefined"==typeof b)throw Error("Keys are undefined");var c=new Cd(null,void 0);a=od(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];na(f)?Qd(c,e,f):c.add(e,f)}return c}k=Cd.prototype;
k.add=function(a,b){Od(this);this.c=null;a=Rd(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};function Sd(a,b){Od(a);b=Rd(a,b);td(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,a=a.a,td(a.b,b)&&(delete a.b[b],a.c--,a.a.length>2*a.c&&sd(a)))}k.clear=function(){this.a=this.c=null;this.b=0};function Td(a,b){Od(a);b=Rd(a,b);return td(a.a.b,b)}k.forEach=function(a,b){Od(this);this.a.forEach(function(c,d){x(c,function(e){a.call(b,e,d,this)},this)},this)};
k.X=function(){Od(this);for(var a=this.a.U(),b=this.a.X(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};k.U=function(a){Od(this);var b=[];if(n(a))Td(this,a)&&(b=Qa(b,this.a.get(Rd(this,a))));else{a=this.a.U();for(var c=0;c<a.length;c++)b=Qa(b,a[c])}return b};k.set=function(a,b){Od(this);this.c=null;a=Rd(this,a);Td(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};
k.get=function(a,b){if(!a)return b;a=this.U(a);return 0<a.length?String(a[0]):b};function Qd(a,b,c){Sd(a,b);0<c.length&&(a.c=null,a.a.set(Rd(a,b),Ra(c)),a.b+=c.length)}k.toString=function(){if(this.c)return this.c;if(!this.a)return"";for(var a=[],b=this.a.X(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.U(d);for(var f=0;f<d.length;f++){var g=e;""!==d[f]&&(g+="="+encodeURIComponent(String(d[f])));a.push(g)}}return this.c=a.join("&")};
function Ad(a){var b=new Cd;b.c=a.c;a.a&&(b.a=new rd(a.a),b.b=a.b);return b}function Rd(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function Id(a,b){b&&!a.f&&(Od(a),a.c=null,a.a.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(Sd(this,d),Qd(this,e,c))},a));a.f=b};var Ud=!uc||9<=Number(Fc);function Vd(a){var b=document;return n(a)?b.getElementById(a):a}function Wd(a,b){Sa(b,function(c,d){c&&"object"==typeof c&&c.qa&&(c=c.pa());"style"==d?a.style.cssText=c:"class"==d?a.className=c:"for"==d?a.htmlFor=c:Xd.hasOwnProperty(d)?a.setAttribute(Xd[d],c):0==d.lastIndexOf("aria-",0)||0==d.lastIndexOf("data-",0)?a.setAttribute(d,c):a[d]=c})}
var Xd={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};
function Yd(a,b,c){var d=arguments,e=document,f=String(d[0]),g=d[1];if(!Ud&&g&&(g.name||g.type)){f=["<",f];g.name&&f.push(' name="',Ib(g.name),'"');if(g.type){f.push(' type="',Ib(g.type),'"');var h={};Wa(h,g);delete h.type;g=h}f.push(">");f=f.join("")}f=e.createElement(f);g&&(n(g)?f.className=g:na(g)?f.className=g.join(" "):Wd(f,g));2<d.length&&Zd(e,f,d);return f}
function Zd(a,b,c){function d(g){g&&b.appendChild(n(g)?a.createTextNode(g):g)}for(var e=2;e<c.length;e++){var f=c[e];!oa(f)||r(f)&&0<f.nodeType?d(f):x($d(f)?Ra(f):f,d)}}function $d(a){if(a&&"number"==typeof a.length){if(r(a))return"function"==typeof a.item||"string"==typeof a.item;if(q(a))return"function"==typeof a.item}return!1};function ae(a){var b=[];be(new ce,a,b);return b.join("")}function ce(){}
function be(a,b,c){if(null==b)c.push("null");else{if("object"==typeof b){if(na(b)){var d=b;b=d.length;c.push("[");for(var e="",f=0;f<b;f++)c.push(e),be(a,d[f],c),e=",";c.push("]");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push("{");e="";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],"function"!=typeof f&&(c.push(e),de(d,c),c.push(":"),be(a,f,c),e=","));c.push("}");return}}switch(typeof b){case "string":de(b,c);break;case "number":c.push(isFinite(b)&&
!isNaN(b)?String(b):"null");break;case "boolean":c.push(String(b));break;case "function":c.push("null");break;default:throw Error("Unknown type: "+typeof b);}}}var ee={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},fe=/\uffff/.test("\uffff")?/[\\"\x00-\x1f\x7f-\uffff]/g:/[\\"\x00-\x1f\x7f-\xff]/g;
function de(a,b){b.push('"',a.replace(fe,function(c){var d=ee[c];d||(d="\\u"+(c.charCodeAt(0)|65536).toString(16).substr(1),ee[c]=d);return d}),'"')};/*

 Copyright 2017 Google Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function ge(){var a=I();return uc&&!!Fc&&11==Fc||/Edge\/\d+/.test(a)}function he(){return l.window&&l.window.location.href||self&&self.location&&self.location.href||""}function ie(a,b){b=b||l.window;var c="about:blank";a&&(c=tb(vb(a)).toString());b.location.href=c}function je(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):"object"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<je(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c}
function ke(){var a=I();a=le(a)!=me?null:(a=a.match(/\sChrome\/(\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!uc||!Fc||9<Fc}function ne(a){a=(a||I()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1}function oe(a){a=a||l.window;try{a.close()}catch(b){}}
function pe(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=I().toLowerCase();d&&(b.target=d,y(c,"crios/")&&(b.target="_blank"));le(I())==qe&&(a=a||"http://localhost",b.scrollbars=!0);c=a||"";(a=b)||(a={});d=window;b=c instanceof rb?c:vb("undefined"!=typeof c.href?c.href:String(c));c=a.target||c.target;e=[];
for(g in a)switch(g){case "width":case "height":case "top":case "left":e.push(g+"="+a[g]);break;case "target":case "noopener":case "noreferrer":break;default:e.push(g+"="+(a[g]?1:0))}var g=e.join(",");(z("iPhone")&&!z("iPod")&&!z("iPad")||z("iPad")||z("iPod"))&&d.navigator&&d.navigator.standalone&&c&&"_self"!=c?(g=d.document.createElement("A"),Ga(g,"HTMLAnchorElement"),b instanceof rb||b instanceof rb||(b="object"==typeof b&&b.qa?b.pa():String(b),ub.test(b)||(b="about:invalid#zClosurez"),b=wb(b)),
g.href=tb(b),g.setAttribute("target",c),a.noreferrer&&g.setAttribute("rel","noreferrer"),a=document.createEvent("MouseEvent"),a.initMouseEvent("click",!0,!0,d,1),g.dispatchEvent(a),g={}):a.noreferrer?(g=d.open("",c,g),a=tb(b).toString(),g&&(wc&&y(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'"),g.opener=null,a=Db('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+Ib(a)+'">'),g.document.write(Cb(a)),g.document.close())):(g=d.open(tb(b).toString(),c,g))&&a.noopener&&
(g.opener=null);if(g)try{g.focus()}catch(h){}return g}function re(a){return new B(function(b){function c(){nd(2E3).then(function(){if(!a||a.closed)b();else return c()})}return c()})}var se=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,te=/^[^@]+@[^@]+$/;function ue(){var a=null;return(new B(function(b){"complete"==l.document.readyState?b():(a=function(){b()},Xc(window,"load",a))})).s(function(b){fd(window,"load",a);throw b;})}
function ve(){return we(void 0)?ue().then(function(){return new B(function(a,b){var c=l.document,d=setTimeout(function(){b(Error("Cordova framework is not ready."))},1E3);c.addEventListener("deviceready",function(){clearTimeout(d);a()},!1)})}):E(Error("Cordova must run in an Android or iOS file scheme."))}function we(a){a=a||I();return!("file:"!==xe()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))}function ye(){var a=l.window;try{return!(!a||a==a.top)}catch(b){return!1}}
function ze(){return"undefined"!==typeof l.WorkerGlobalScope&&"function"===typeof l.importScripts}function Ae(){return firebase.INTERNAL.hasOwnProperty("reactNative")?"ReactNative":firebase.INTERNAL.hasOwnProperty("node")?"Node":ze()?"Worker":"Browser"}function Be(){var a=Ae();return"ReactNative"===a||"Node"===a}function Ce(){for(var a=50,b=[];0<a;)b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),a--;return b.join("")}
var qe="Firefox",me="Chrome";
function le(a){var b=a.toLowerCase();if(y(b,"opera/")||y(b,"opr/")||y(b,"opios/"))return"Opera";if(y(b,"iemobile"))return"IEMobile";if(y(b,"msie")||y(b,"trident/"))return"IE";if(y(b,"edge/"))return"Edge";if(y(b,"firefox/"))return qe;if(y(b,"silk/"))return"Silk";if(y(b,"blackberry"))return"Blackberry";if(y(b,"webos"))return"Webos";if(!y(b,"safari/")||y(b,"chrome/")||y(b,"crios/")||y(b,"android"))if(!y(b,"chrome/")&&!y(b,"crios/")||y(b,"edge/")){if(y(b,"android"))return"Android";if((a=a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/))&&
2==a.length)return a[1]}else return me;else return"Safari";return"Other"}var De={Vc:"FirebaseCore-web",Xc:"FirebaseUI-web"};function Ee(a,b){b=b||[];var c=[],d={},e;for(e in De)d[De[e]]=!0;for(e=0;e<b.length;e++)"undefined"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));c.sort();b=c;b.length||(b=["FirebaseCore-web"]);c=Ae();"Browser"===c?(d=I(),c=le(d)):"Worker"===c&&(d=I(),c=le(d)+"-"+c);return c+"/JsCore/"+a+"/"+b.join(",")}function I(){return l.navigator&&l.navigator.userAgent||""}
function J(a,b){a=a.split(".");b=b||l;for(var c=0;c<a.length&&"object"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b}function Fe(){try{var a=l.localStorage,b=Ge();if(a)return a.setItem(b,"1"),a.removeItem(b),ge()?!!l.indexedDB:!0}catch(c){return ze()&&!!l.indexedDB}return!1}function He(){return(Ie()||"chrome-extension:"===xe()||we())&&!Be()&&Fe()&&!ze()}function Ie(){return"http:"===xe()||"https:"===xe()}function xe(){return l.location&&l.location.protocol||null}
function Je(a){a=a||I();return ne(a)||le(a)==qe?!1:!0}function Ke(a){return"undefined"===typeof a?null:ae(a)}function Le(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b}function Me(a){if(null!==a)return JSON.parse(a)}function Ge(a){return a?a:Math.floor(1E9*Math.random()).toString()}function Ne(a){a=a||I();return"Safari"==le(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0}
function Oe(){var a=l.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null}function Pe(a,b){if(a>b)throw Error("Short delay should be less than long delay!");this.a=a;this.c=b;a=I();b=Ae();this.b=ne(a)||"ReactNative"===b}
Pe.prototype.get=function(){var a=l.navigator;return(a&&"boolean"===typeof a.onLine&&(Ie()||"chrome-extension:"===xe()||"undefined"!==typeof a.connection)?a.onLine:1)?this.b?this.c:this.a:Math.min(5E3,this.a)};function Qe(){var a=l.document;return a&&"undefined"!==typeof a.visibilityState?"visible"==a.visibilityState:!0}
function Re(){var a=l.document,b=null;return Qe()||!a?D():(new B(function(c){b=function(){Qe()&&(a.removeEventListener("visibilitychange",b,!1),c())};a.addEventListener("visibilitychange",b,!1)})).s(function(c){a.removeEventListener("visibilitychange",b,!1);throw c;})}function Se(a){try{var b=new Date(parseInt(a,10));if(!isNaN(b.getTime())&&!/[^0-9]/.test(a))return b.toUTCString()}catch(c){}return null}function Te(){return!(!J("fireauth.oauthhelper",l)&&!J("fireauth.iframe",l))}
function Ue(){var a=l.navigator;return a&&a.serviceWorker&&a.serviceWorker.controller||null}function Ve(){var a=l.navigator;return a&&a.serviceWorker?D().then(function(){return a.serviceWorker.ready}).then(function(b){return b.active||null}).s(function(){return null}):D(null)};var We={};function Xe(a){We[a]||(We[a]=!0,"undefined"!==typeof console&&"function"===typeof console.warn&&console.warn(a))};var Ye;try{var Ze={};Object.defineProperty(Ze,"abcd",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(Ze,"abcd",{configurable:!0,enumerable:!0,value:2});Ye=2==Ze.abcd}catch(a){Ye=!1}function K(a,b,c){Ye?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c}function L(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&K(a,c,b[c])}function $e(a){var b={};L(b,a);return b}function af(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}
function bf(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||""===d)return!1}return!0}function cf(a){var b=a;if("object"==typeof a&&null!=a){b="length"in a?[]:{};for(var c in a)K(b,c,cf(a[c]))}return b};function df(a){var b={},c=a[ef],d=a[ff];a=a[gf];if(!a||a!=hf&&!c)throw Error("Invalid provider user info!");b[jf]=d||null;b[kf]=c||null;K(this,lf,a);K(this,mf,cf(b))}var hf="EMAIL_SIGNIN",ef="email",ff="newEmail",gf="requestType",kf="email",jf="fromEmail",mf="data",lf="operation";function M(a,b){this.code=nf+a;this.message=b||of[a]||""}v(M,Error);M.prototype.A=function(){return{code:this.code,message:this.message}};M.prototype.toJSON=function(){return this.A()};function pf(a){var b=a&&a.code;return b?new M(b.substring(nf.length),a.message):null}
var nf="auth/",of={"admin-restricted-operation":"This operation is restricted to administrators only.","argument-error":"","app-not-authorized":"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.","app-not-installed":"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
"captcha-check-failed":"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.","code-expired":"The SMS code has expired. Please re-send the verification code to try again.","cordova-not-ready":"Cordova framework is not ready.","cors-unsupported":"This browser is not supported.","credential-already-in-use":"This credential is already associated with a different user account.","custom-token-mismatch":"The custom token corresponds to a different audience.",
"requires-recent-login":"This operation is sensitive and requires recent authentication. Log in again before retrying this request.","dynamic-link-not-activated":"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.","email-already-in-use":"The email address is already in use by another account.","expired-action-code":"The action code has expired. ","cancelled-popup-request":"This operation has been cancelled due to another conflicting popup being opened.",
"internal-error":"An internal error has occurred.","invalid-app-credential":"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.","invalid-app-id":"The mobile app identifier is not registed for the current project.","invalid-user-token":"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.","invalid-auth-event":"An internal error has occurred.",
"invalid-verification-code":"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.","invalid-continue-uri":"The continue URL provided in the request is invalid.","invalid-cordova-configuration":"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
"invalid-custom-token":"The custom token format is incorrect. Please check the documentation.","invalid-dynamic-link-domain":"The provided dynamic link domain is not configured or authorized for the current project.","invalid-email":"The email address is badly formatted.","invalid-api-key":"Your API key is invalid, please check you have copied it correctly.","invalid-cert-hash":"The SHA-1 certificate hash provided is invalid.","invalid-credential":"The supplied auth credential is malformed or has expired.",
"invalid-message-payload":"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-oauth-provider":"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.","invalid-oauth-client-id":"The OAuth client ID provided is either invalid or does not match the specified API key.","unauthorized-domain":"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
"invalid-action-code":"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.","wrong-password":"The password is invalid or the user does not have a password.","invalid-persistence-type":"The specified persistence type is invalid. It can only be local, session or none.","invalid-phone-number":"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
"invalid-provider-id":"The specified provider ID is invalid.","invalid-recipient-email":"The email corresponding to this action failed to send as the provided recipient email address is invalid.","invalid-sender":"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-verification-id":"The verification ID used to create the phone auth credential is invalid.","invalid-tenant-id":"The Auth instance's tenant ID is invalid.",
"missing-android-pkg-name":"An Android Package Name must be provided if the Android App is required to be installed.","auth-domain-config-required":"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.","missing-app-credential":"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.","missing-verification-code":"The phone auth credential was created with an empty SMS verification code.",
"missing-continue-uri":"A continue URL must be provided in the request.","missing-iframe-start":"An internal error has occurred.","missing-ios-bundle-id":"An iOS Bundle ID must be provided if an App Store ID is provided.","missing-or-invalid-nonce":"The OIDC ID token requires a valid unhashed nonce.","missing-phone-number":"To send verification codes, provide a phone number for the recipient.","missing-verification-id":"The phone auth credential was created with an empty verification ID.","app-deleted":"This instance of FirebaseApp has been deleted.",
"account-exists-with-different-credential":"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.","network-request-failed":"A network error (such as timeout, interrupted connection or unreachable host) has occurred.","no-auth-event":"An internal error has occurred.","no-such-provider":"User was not linked to an account with the given provider.","null-user":"A null user object was provided as the argument for an operation which requires a non-null user object.",
"operation-not-allowed":"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.","operation-not-supported-in-this-environment":'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',"popup-blocked":"Unable to establish a connection with the popup. It may have been blocked by the browser.",
"popup-closed-by-user":"The popup has been closed by the user before finalizing the operation.","provider-already-linked":"User can only be linked to one identity for the given provider.","quota-exceeded":"The project's quota for this operation has been exceeded.","redirect-cancelled-by-user":"The redirect operation has been cancelled by the user before finalizing.","redirect-operation-pending":"A redirect sign-in operation is already pending.","rejected-credential":"The request contains malformed or mismatching credentials.",
"tenant-id-mismatch":"The provided tenant ID does not match the Auth instance's tenant ID",timeout:"The operation has timed out.","user-token-expired":"The user's credential is no longer valid. The user must sign in again.","too-many-requests":"We have blocked all requests from this device due to unusual activity. Try again later.","unauthorized-continue-uri":"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.","unsupported-persistence-type":"The current environment does not support the specified persistence type.",
"unsupported-tenant-operation":"This operation is not supported in a multi-tenant context.","user-cancelled":"User did not grant your application the permissions it requested.","user-not-found":"There is no user record corresponding to this identifier. The user may have been deleted.","user-disabled":"The user account has been disabled by an administrator.","user-mismatch":"The supplied credentials do not correspond to the previously signed in user.","user-signed-out":"","weak-password":"The password must be 6 characters long or more.",
"web-storage-unsupported":"This browser is not supported or 3rd party cookies and data may be disabled."};function qf(a){a=Ld(a);var b=Kd(a,rf)||null,c=Kd(a,sf)||null,d=Kd(a,tf)||null;d=d?uf[d]||null:null;if(!b||!c||!d)throw new M("argument-error",rf+", "+sf+"and "+tf+" are required in a valid action code URL.");L(this,{apiKey:b,operation:d,code:c,continueUrl:Kd(a,vf)||null,languageCode:Kd(a,wf)||null,tenantId:Kd(a,xf)||null})}var rf="apiKey",sf="oobCode",vf="continueUrl",wf="languageCode",tf="mode",xf="tenantId",uf={recoverEmail:"RECOVER_EMAIL",resetPassword:"PASSWORD_RESET",signIn:hf,verifyEmail:"VERIFY_EMAIL"};
function yf(a){try{return new qf(a)}catch(b){return null}};function zf(a){var b=a[Af];if("undefined"===typeof b)throw new M("missing-continue-uri");if("string"!==typeof b||"string"===typeof b&&!b.length)throw new M("invalid-continue-uri");this.h=b;this.b=this.a=null;this.g=!1;var c=a[Bf];if(c&&"object"===typeof c){b=c[Cf];var d=c[Df];c=c[Ef];if("string"===typeof b&&b.length){this.a=b;if("undefined"!==typeof d&&"boolean"!==typeof d)throw new M("argument-error",Df+" property must be a boolean when specified.");this.g=!!d;if("undefined"!==typeof c&&("string"!==
typeof c||"string"===typeof c&&!c.length))throw new M("argument-error",Ef+" property must be a non empty string when specified.");this.b=c||null}else{if("undefined"!==typeof b)throw new M("argument-error",Cf+" property must be a non empty string when specified.");if("undefined"!==typeof d||"undefined"!==typeof c)throw new M("missing-android-pkg-name");}}else if("undefined"!==typeof c)throw new M("argument-error",Bf+" property must be a non null object when specified.");this.f=null;if((b=a[Ff])&&"object"===
typeof b)if(b=b[Gf],"string"===typeof b&&b.length)this.f=b;else{if("undefined"!==typeof b)throw new M("argument-error",Gf+" property must be a non empty string when specified.");}else if("undefined"!==typeof b)throw new M("argument-error",Ff+" property must be a non null object when specified.");b=a[Hf];if("undefined"!==typeof b&&"boolean"!==typeof b)throw new M("argument-error",Hf+" property must be a boolean when specified.");this.c=!!b;a=a[If];if("undefined"!==typeof a&&("string"!==typeof a||"string"===
typeof a&&!a.length))throw new M("argument-error",If+" property must be a non empty string when specified.");this.i=a||null}var Bf="android",If="dynamicLinkDomain",Hf="handleCodeInApp",Ff="iOS",Af="url",Df="installApp",Ef="minimumVersion",Cf="packageName",Gf="bundleId";
function Jf(a){var b={};b.continueUrl=a.h;b.canHandleCodeInApp=a.c;if(b.androidPackageName=a.a)b.androidMinimumVersion=a.b,b.androidInstallApp=a.g;b.iOSBundleId=a.f;b.dynamicLinkDomain=a.i;for(var c in b)null===b[c]&&delete b[c];return b};function Kf(a){return Ja(a,function(b){b=b.toString(16);return 1<b.length?b:"0"+b}).join("")};var Lf=null,Mf=null;function Nf(a){var b="";Of(a,function(c){b+=String.fromCharCode(c)});return b}function Of(a,b){function c(m){for(;d<a.length;){var p=a.charAt(d++),u=Mf[p];if(null!=u)return u;if(!/^[\s\xa0]*$/.test(p))throw Error("Unknown base64 encoding at char: "+p);}return m}Pf();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}}
function Pf(){if(!Lf){Lf={};Mf={};for(var a=0;65>a;a++)Lf[a]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a),Mf[Lf[a]]=a,62<=a&&(Mf["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a)]=a)}};function Qf(a){this.f=a.sub;ua();this.a=a.provider_id||a.firebase&&a.firebase.sign_in_provider||null;this.c=a.firebase&&a.firebase.tenant||null;this.b=!!a.is_anonymous||"anonymous"==this.a}Qf.prototype.R=function(){return this.c};Qf.prototype.g=function(){return this.b};function Rf(a){return(a=Sf(a))&&a.sub&&a.iss&&a.aud&&a.exp?new Qf(a):null}
function Sf(a){if(!a)return null;a=a.split(".");if(3!=a.length)return null;a=a[1];for(var b=(4-a.length%4)%4,c=0;c<b;c++)a+=".";try{return JSON.parse(Nf(a))}catch(d){}return null};var Tf={ad:{bb:"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",ib:"https://securetoken.googleapis.com/v1/token",id:"p"},cd:{bb:"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",ib:"https://staging-securetoken.sandbox.googleapis.com/v1/token",id:"s"},dd:{bb:"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",ib:"https://test-securetoken.sandbox.googleapis.com/v1/token",id:"t"}};
function Uf(a){for(var b in Tf)if(Tf[b].id===a)return a=Tf[b],{firebaseEndpoint:a.bb,secureTokenEndpoint:a.ib};return null}var Vf;Vf=Uf("__EID__")?"__EID__":void 0;var Wf="oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),Xf=["client_id","response_type","scope","redirect_uri","state"],Yf={Wc:{Oa:"locale",Da:500,Ca:600,Pa:"facebook.com",hb:Xf},Yc:{Oa:null,Da:500,Ca:620,Pa:"github.com",hb:Xf},Zc:{Oa:"hl",Da:515,Ca:680,Pa:"google.com",hb:Xf},ed:{Oa:"lang",Da:485,Ca:705,Pa:"twitter.com",hb:Wf}};function Zf(a){for(var b in Yf)if(Yf[b].Pa==a)return Yf[b];return null};function $f(a){var b={};b["facebook.com"]=ag;b["google.com"]=bg;b["github.com"]=cg;b["twitter.com"]=dg;var c=a&&a[eg];try{if(c)return b[c]?new b[c](a):new fg(a);if("undefined"!==typeof a[gg])return new hg(a)}catch(d){}return null}var gg="idToken",eg="providerId";
function hg(a){var b=a[eg];if(!b&&a[gg]){var c=Rf(a[gg]);c&&c.a&&(b=c.a)}if(!b)throw Error("Invalid additional user info!");if("anonymous"==b||"custom"==b)b=null;c=!1;"undefined"!==typeof a.isNewUser?c=!!a.isNewUser:"identitytoolkit#SignupNewUserResponse"===a.kind&&(c=!0);K(this,"providerId",b);K(this,"isNewUser",c)}function fg(a){hg.call(this,a);a=Me(a.rawUserInfo||"{}");K(this,"profile",cf(a||{}))}v(fg,hg);
function ag(a){fg.call(this,a);if("facebook.com"!=this.providerId)throw Error("Invalid provider ID!");}v(ag,fg);function cg(a){fg.call(this,a);if("github.com"!=this.providerId)throw Error("Invalid provider ID!");K(this,"username",this.profile&&this.profile.login||null)}v(cg,fg);function bg(a){fg.call(this,a);if("google.com"!=this.providerId)throw Error("Invalid provider ID!");}v(bg,fg);
function dg(a){fg.call(this,a);if("twitter.com"!=this.providerId)throw Error("Invalid provider ID!");K(this,"username",a.screenName||null)}v(dg,fg);function ig(a){var b=Ld(a),c=Kd(b,"link"),d=Kd(Ld(c),"link");b=Kd(b,"deep_link_id");return Kd(Ld(b),"link")||b||d||c||a};function jg(){}function kg(a,b){return a.then(function(c){if(c[lg]){var d=Rf(c[lg]);if(!d||b!=d.f)throw new M("user-mismatch");return c}throw new M("user-mismatch");}).s(function(c){throw c&&c.code&&c.code==nf+"user-not-found"?new M("user-mismatch"):c;})}function mg(a,b){if(b)this.a=b;else throw new M("internal-error","failed to construct a credential");K(this,"providerId",a);K(this,"signInMethod",a)}mg.prototype.na=function(a){return ng(a,og(this))};
mg.prototype.b=function(a,b){var c=og(this);c.idToken=b;return pg(a,c)};mg.prototype.f=function(a,b){return kg(qg(a,og(this)),b)};function og(a){return{pendingToken:a.a,requestUri:"http://localhost"}}mg.prototype.A=function(){return{providerId:this.providerId,signInMethod:this.signInMethod,pendingToken:this.a}};function rg(a){if(a&&a.providerId&&a.signInMethod&&0==a.providerId.indexOf("saml.")&&a.pendingToken)try{return new mg(a.providerId,a.pendingToken)}catch(b){}return null}
function sg(a,b,c){this.a=null;if(b.idToken||b.accessToken)b.idToken&&K(this,"idToken",b.idToken),b.accessToken&&K(this,"accessToken",b.accessToken),b.nonce&&!b.pendingToken&&K(this,"nonce",b.nonce),b.pendingToken&&(this.a=b.pendingToken);else if(b.oauthToken&&b.oauthTokenSecret)K(this,"accessToken",b.oauthToken),K(this,"secret",b.oauthTokenSecret);else throw new M("internal-error","failed to construct a credential");K(this,"providerId",a);K(this,"signInMethod",c)}
sg.prototype.na=function(a){return ng(a,tg(this))};sg.prototype.b=function(a,b){var c=tg(this);c.idToken=b;return pg(a,c)};sg.prototype.f=function(a,b){var c=tg(this);return kg(qg(a,c),b)};
function tg(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;a.nonce&&!a.a&&(b.nonce=a.nonce);b={postBody:Pd(b).toString(),requestUri:"http://localhost"};a.a&&(delete b.postBody,b.pendingToken=a.a);return b}
sg.prototype.A=function(){var a={providerId:this.providerId,signInMethod:this.signInMethod};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);this.nonce&&(a.nonce=this.nonce);this.a&&(a.pendingToken=this.a);return a};
function ug(a){if(a&&a.providerId&&a.signInMethod){var b={idToken:a.oauthIdToken,accessToken:a.oauthTokenSecret?null:a.oauthAccessToken,oauthTokenSecret:a.oauthTokenSecret,oauthToken:a.oauthTokenSecret&&a.oauthAccessToken,nonce:a.nonce,pendingToken:a.pendingToken};try{return new sg(a.providerId,b,a.signInMethod)}catch(c){}}return null}function vg(a,b){this.Fc=b||[];L(this,{providerId:a,isOAuthProvider:!0});this.zb={};this.cb=(Zf(a)||{}).Oa||null;this.ab=null}
vg.prototype.Ea=function(a){this.zb=Ua(a);return this};function wg(a){if("string"!==typeof a||0!=a.indexOf("saml."))throw new M("argument-error",'SAML provider IDs must be prefixed with "saml."');vg.call(this,a,[])}v(wg,vg);function O(a){vg.call(this,a,Xf);this.a=[]}v(O,vg);O.prototype.wa=function(a){Na(this.a,a)||this.a.push(a);return this};O.prototype.Hb=function(){return Ra(this.a)};
O.prototype.credential=function(a,b){var c;r(a)?c={idToken:a.idToken||null,accessToken:a.accessToken||null,nonce:a.rawNonce||null}:c={idToken:a||null,accessToken:b||null};if(!c.idToken&&!c.accessToken)throw new M("argument-error","credential failed: must provide the ID token and/or the access token.");return new sg(this.providerId,c,this.providerId)};function xg(){O.call(this,"facebook.com")}v(xg,O);K(xg,"PROVIDER_ID","facebook.com");K(xg,"FACEBOOK_SIGN_IN_METHOD","facebook.com");
function yg(a){if(!a)throw new M("argument-error","credential failed: expected 1 argument (the OAuth access token).");var b=a;r(a)&&(b=a.accessToken);return(new xg).credential({accessToken:b})}function zg(){O.call(this,"github.com")}v(zg,O);K(zg,"PROVIDER_ID","github.com");K(zg,"GITHUB_SIGN_IN_METHOD","github.com");
function Ag(a){if(!a)throw new M("argument-error","credential failed: expected 1 argument (the OAuth access token).");var b=a;r(a)&&(b=a.accessToken);return(new zg).credential({accessToken:b})}function Bg(){O.call(this,"google.com");this.wa("profile")}v(Bg,O);K(Bg,"PROVIDER_ID","google.com");K(Bg,"GOOGLE_SIGN_IN_METHOD","google.com");function Cg(a,b){var c=a;r(a)&&(c=a.idToken,b=a.accessToken);return(new Bg).credential({idToken:c,accessToken:b})}function Dg(){vg.call(this,"twitter.com",Wf)}v(Dg,vg);
K(Dg,"PROVIDER_ID","twitter.com");K(Dg,"TWITTER_SIGN_IN_METHOD","twitter.com");function Eg(a,b){var c=a;r(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new M("argument-error","credential failed: expected 2 arguments (the OAuth access token and secret).");return new sg("twitter.com",c,"twitter.com")}
function Fg(a,b,c){this.a=a;this.c=b;K(this,"providerId","password");K(this,"signInMethod",c===Gg.EMAIL_LINK_SIGN_IN_METHOD?Gg.EMAIL_LINK_SIGN_IN_METHOD:Gg.EMAIL_PASSWORD_SIGN_IN_METHOD)}Fg.prototype.na=function(a){return this.signInMethod==Gg.EMAIL_LINK_SIGN_IN_METHOD?P(a,Hg,{email:this.a,oobCode:this.c}):P(a,Ig,{email:this.a,password:this.c})};
Fg.prototype.b=function(a,b){return this.signInMethod==Gg.EMAIL_LINK_SIGN_IN_METHOD?P(a,Jg,{idToken:b,email:this.a,oobCode:this.c}):P(a,Kg,{idToken:b,email:this.a,password:this.c})};Fg.prototype.f=function(a,b){return kg(this.na(a),b)};Fg.prototype.A=function(){return{email:this.a,password:this.c,signInMethod:this.signInMethod}};function Lg(a){return a&&a.email&&a.password?new Fg(a.email,a.password,a.signInMethod):null}function Gg(){L(this,{providerId:"password",isOAuthProvider:!1})}
function Mg(a,b){b=Ng(b);if(!b)throw new M("argument-error","Invalid email link!");return new Fg(a,b.code,Gg.EMAIL_LINK_SIGN_IN_METHOD)}function Ng(a){a=ig(a);return(a=yf(a))&&a.operation===hf?a:null}L(Gg,{PROVIDER_ID:"password"});L(Gg,{EMAIL_LINK_SIGN_IN_METHOD:"emailLink"});L(Gg,{EMAIL_PASSWORD_SIGN_IN_METHOD:"password"});function Og(a){if(!(a.Ua&&a.Ta||a.Fa&&a.ba))throw new M("internal-error");this.a=a;K(this,"providerId","phone");K(this,"signInMethod","phone")}Og.prototype.na=function(a){return a.Va(Pg(this))};
Og.prototype.b=function(a,b){var c=Pg(this);c.idToken=b;return P(a,Qg,c)};Og.prototype.f=function(a,b){var c=Pg(this);c.operation="REAUTH";a=P(a,Rg,c);return kg(a,b)};Og.prototype.A=function(){var a={providerId:"phone"};this.a.Ua&&(a.verificationId=this.a.Ua);this.a.Ta&&(a.verificationCode=this.a.Ta);this.a.Fa&&(a.temporaryProof=this.a.Fa);this.a.ba&&(a.phoneNumber=this.a.ba);return a};
function Sg(a){if(a&&"phone"===a.providerId&&(a.verificationId&&a.verificationCode||a.temporaryProof&&a.phoneNumber)){var b={};x(["verificationId","verificationCode","temporaryProof","phoneNumber"],function(c){a[c]&&(b[c]=a[c])});return new Og(b)}return null}function Pg(a){return a.a.Fa&&a.a.ba?{temporaryProof:a.a.Fa,phoneNumber:a.a.ba}:{sessionInfo:a.a.Ua,code:a.a.Ta}}
function Tg(a){try{this.a=a||firebase.auth()}catch(b){throw new M("argument-error","Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");}L(this,{providerId:"phone",isOAuthProvider:!1})}
Tg.prototype.Va=function(a,b){var c=this.a.b;return D(b.verify()).then(function(d){if(!n(d))throw new M("argument-error","An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");switch(b.type){case "recaptcha":return Ug(c,{phoneNumber:a,recaptchaToken:d}).then(function(e){"function"===typeof b.reset&&b.reset();return e},function(e){"function"===typeof b.reset&&b.reset();throw e;});default:throw new M("argument-error",
'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');}})};function Vg(a,b){if(!a)throw new M("missing-verification-id");if(!b)throw new M("missing-verification-code");return new Og({Ua:a,Ta:b})}L(Tg,{PROVIDER_ID:"phone"});L(Tg,{PHONE_SIGN_IN_METHOD:"phone"});
function Wg(a){if(a.temporaryProof&&a.phoneNumber)return new Og({Fa:a.temporaryProof,ba:a.phoneNumber});var b=a&&a.providerId;if(!b||"password"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret,e=a&&a.nonce,f=a&&a.oauthIdToken,g=a&&a.pendingToken;try{switch(b){case "google.com":return Cg(f,c);case "facebook.com":return yg(c);case "github.com":return Ag(c);case "twitter.com":return Eg(c,d);default:return c||d||f||g?g?0==b.indexOf("saml.")?new mg(b,g):new sg(b,{pendingToken:g,idToken:a.oauthIdToken,
accessToken:a.oauthAccessToken},b):(new O(b)).credential({idToken:f,accessToken:c,rawNonce:e}):null}}catch(h){return null}}function Xg(a){if(!a.isOAuthProvider)throw new M("invalid-oauth-provider");};function Yg(a,b,c,d,e,f,g){this.c=a;this.b=b||null;this.g=c||null;this.f=d||null;this.i=f||null;this.h=g||null;this.a=e||null;if(this.g||this.a){if(this.g&&this.a)throw new M("invalid-auth-event");if(this.g&&!this.f)throw new M("invalid-auth-event");}else throw new M("invalid-auth-event");}Yg.prototype.getUid=function(){var a=[];a.push(this.c);this.b&&a.push(this.b);this.f&&a.push(this.f);this.h&&a.push(this.h);return a.join("-")};Yg.prototype.R=function(){return this.h};
Yg.prototype.A=function(){return{type:this.c,eventId:this.b,urlResponse:this.g,sessionId:this.f,postBody:this.i,tenantId:this.h,error:this.a&&this.a.A()}};function Zg(a){a=a||{};return a.type?new Yg(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&pf(a.error),a.postBody,a.tenantId):null};/*

 Copyright 2018 Google Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
function $g(){this.b=null;this.a=[]}var ah=null;function bh(a){var b=ah;b.a.push(a);b.b||(b.b=function(c){for(var d=0;d<b.a.length;d++)b.a[d](c)},a=J("universalLinks.subscribe",l),"function"===typeof a&&a(null,b.b))};function ch(a){var b="unauthorized-domain",c=void 0,d=Ld(a);a=d.b;d=d.f;"chrome-extension"==d?c=Hb("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",a):"http"==d||"https"==d?c=Hb("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",a):b="operation-not-supported-in-this-environment";
M.call(this,b,c)}v(ch,M);function dh(a,b,c){M.call(this,a,c);a=b||{};a.Ab&&K(this,"email",a.Ab);a.ba&&K(this,"phoneNumber",a.ba);a.credential&&K(this,"credential",a.credential);a.Qb&&K(this,"tenantId",a.Qb)}v(dh,M);dh.prototype.A=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);this.tenantId&&(a.tenantId=this.tenantId);var b=this.credential&&this.credential.A();b&&Wa(a,b);return a};dh.prototype.toJSON=function(){return this.A()};
function eh(a){if(a.code){var b=a.code||"";0==b.indexOf(nf)&&(b=b.substring(nf.length));var c={credential:Wg(a),Qb:a.tenantId};if(a.email)c.Ab=a.email;else if(a.phoneNumber)c.ba=a.phoneNumber;else if(!c.credential)return new M(b,a.message||void 0);return new dh(b,c,a.message)}return null};function fh(){}fh.prototype.c=null;function gh(a){return a.c||(a.c=a.b())};var hh;function ih(){}v(ih,fh);ih.prototype.a=function(){var a=jh(this);return a?new ActiveXObject(a):new XMLHttpRequest};ih.prototype.b=function(){var a={};jh(this)&&(a[0]=!0,a[1]=!0);return a};
function jh(a){if(!a.f&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var b=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.f=d}catch(e){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");}return a.f}hh=new ih;function kh(){}v(kh,fh);kh.prototype.a=function(){var a=new XMLHttpRequest;if("withCredentials"in a)return a;if("undefined"!=typeof XDomainRequest)return new lh;throw Error("Unsupported browser");};kh.prototype.b=function(){return{}};
function lh(){this.a=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseType=this.responseText=this.response="";this.status=-1;this.statusText="";this.a.onload=t(this.fc,this);this.a.onerror=t(this.Ib,this);this.a.onprogress=t(this.gc,this);this.a.ontimeout=t(this.kc,this)}k=lh.prototype;k.open=function(a,b,c){if(null!=c&&!c)throw Error("Only async requests are supported.");this.a.open(a,b)};
k.send=function(a){if(a)if("string"==typeof a)this.a.send(a);else throw Error("Only string data is supported");else this.a.send()};k.abort=function(){this.a.abort()};k.setRequestHeader=function(){};k.getResponseHeader=function(a){return"content-type"==a.toLowerCase()?this.a.contentType:""};k.fc=function(){this.status=200;this.response=this.responseText=this.a.responseText;mh(this,4)};k.Ib=function(){this.status=500;this.response=this.responseText="";mh(this,4)};k.kc=function(){this.Ib()};
k.gc=function(){this.status=200;mh(this,1)};function mh(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()}k.getAllResponseHeaders=function(){return"content-type: "+this.a.contentType};function nh(a,b,c){this.reset(a,b,c,void 0,void 0)}nh.prototype.a=null;var oh=0;nh.prototype.reset=function(a,b,c,d,e){"number"==typeof e||oh++;d||ua();delete this.a};function ph(a){this.f=a;this.b=this.c=this.a=null}function qh(a,b){this.name=a;this.value=b}qh.prototype.toString=function(){return this.name};var rh=new qh("SEVERE",1E3),sh=new qh("WARNING",900),th=new qh("CONFIG",700),uh=new qh("FINE",500);function vh(a){if(a.c)return a.c;if(a.a)return vh(a.a);ya("Root logger has no level set.");return null}ph.prototype.log=function(a,b,c){if(a.value>=vh(this).value)for(q(b)&&(b=b()),a=new nh(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var wh={},xh=null;
function yh(a){xh||(xh=new ph(""),wh[""]=xh,xh.c=th);var b;if(!(b=wh[a])){b=new ph(a);var c=a.lastIndexOf("."),d=a.substr(c+1);c=yh(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;wh[a]=b}return b};function zh(a,b){a&&a.log(uh,b,void 0)};function Ah(a){this.f=a}v(Ah,fh);Ah.prototype.a=function(){return new Bh(this.f)};Ah.prototype.b=function(a){return function(){return a}}({});function Bh(a){G.call(this);this.o=a;this.readyState=Ch;this.status=0;this.responseType=this.responseText=this.response=this.statusText="";this.onreadystatechange=null;this.i=new Headers;this.b=null;this.m="GET";this.g="";this.a=!1;this.h=yh("goog.net.FetchXmlHttp");this.l=this.c=this.f=null}v(Bh,G);var Ch=0;k=Bh.prototype;
k.open=function(a,b){if(this.readyState!=Ch)throw this.abort(),Error("Error reopening a connection");this.m=a;this.g=b;this.readyState=1;Dh(this)};k.send=function(a){if(1!=this.readyState)throw this.abort(),Error("need to call open() first. ");this.a=!0;var b={headers:this.i,method:this.m,credentials:void 0,cache:void 0};a&&(b.body=a);this.o.fetch(new Request(this.g,b)).then(this.jc.bind(this),this.Ma.bind(this))};
k.abort=function(){this.response=this.responseText="";this.i=new Headers;this.status=0;this.c&&this.c.cancel("Request was aborted.");1<=this.readyState&&this.a&&4!=this.readyState&&(this.a=!1,Eh(this,!1));this.readyState=Ch};
k.jc=function(a){this.a&&(this.f=a,this.b||(this.b=a.headers,this.readyState=2,Dh(this)),this.a&&(this.readyState=3,Dh(this),this.a&&("arraybuffer"===this.responseType?a.arrayBuffer().then(this.hc.bind(this),this.Ma.bind(this)):"undefined"!==typeof l.ReadableStream&&"body"in a?(this.response=this.responseText="",this.c=a.body.getReader(),this.l=new TextDecoder,Fh(this)):a.text().then(this.ic.bind(this),this.Ma.bind(this)))))};function Fh(a){a.c.read().then(a.ec.bind(a)).catch(a.Ma.bind(a))}
k.ec=function(a){if(this.a){var b=this.l.decode(a.value?a.value:new Uint8Array(0),{stream:!a.done});b&&(this.response=this.responseText+=b);a.done?Eh(this,!0):Dh(this);3==this.readyState&&Fh(this)}};k.ic=function(a){this.a&&(this.response=this.responseText=a,Eh(this,!0))};k.hc=function(a){this.a&&(this.response=a,Eh(this,!0))};k.Ma=function(a){var b=this.h;b&&b.log(sh,"Failed to fetch url "+this.g,a instanceof Error?a:Error(a));this.a&&Eh(this,!0)};
function Eh(a,b){b&&a.f&&(a.status=a.f.status,a.statusText=a.f.statusText);a.readyState=4;a.f=null;a.c=null;a.l=null;Dh(a)}k.setRequestHeader=function(a,b){this.i.append(a,b)};k.getResponseHeader=function(a){return this.b?this.b.get(a.toLowerCase())||"":((a=this.h)&&a.log(sh,"Attempting to get response header but no headers have been received for url: "+this.g,void 0),"")};
k.getAllResponseHeaders=function(){if(!this.b){var a=this.h;a&&a.log(sh,"Attempting to get all response headers but no headers have been received for url: "+this.g,void 0);return""}a=[];for(var b=this.b.entries(),c=b.next();!c.done;)c=c.value,a.push(c[0]+": "+c[1]),c=b.next();return a.join("\r\n")};function Dh(a){a.onreadystatechange&&a.onreadystatechange.call(a)};function Gh(a){G.call(this);this.headers=new rd;this.B=a||null;this.c=!1;this.w=this.a=null;this.h=this.O=this.l="";this.f=this.J=this.i=this.I=!1;this.g=0;this.o=null;this.m=Hh;this.v=this.P=!1}v(Gh,G);var Hh="";Gh.prototype.b=yh("goog.net.XhrIo");var Ih=/^https?$/i,Jh=["POST","PUT"];
function Kh(a,b,c,d,e){if(a.a)throw Error("[goog.net.XhrIo] Object is active with another request="+a.l+"; newUri="+b);c=c?c.toUpperCase():"GET";a.l=b;a.h="";a.O=c;a.I=!1;a.c=!0;a.a=a.B?a.B.a():hh.a();a.w=a.B?gh(a.B):gh(hh);a.a.onreadystatechange=t(a.Lb,a);try{zh(a.b,Lh(a,"Opening Xhr")),a.J=!0,a.a.open(c,String(b),!0),a.J=!1}catch(g){zh(a.b,Lh(a,"Error opening Xhr: "+g.message));Mh(a,g);return}b=d||"";var f=new rd(a.headers);e&&qd(e,function(g,h){f.set(h,g)});e=La(f.X());d=l.FormData&&b instanceof
l.FormData;!Na(Jh,c)||e||d||f.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8");f.forEach(function(g,h){this.a.setRequestHeader(h,g)},a);a.m&&(a.a.responseType=a.m);"withCredentials"in a.a&&a.a.withCredentials!==a.P&&(a.a.withCredentials=a.P);try{Nh(a),0<a.g&&(a.v=Oh(a.a),zh(a.b,Lh(a,"Will abort after "+a.g+"ms if incomplete, xhr2 "+a.v)),a.v?(a.a.timeout=a.g,a.a.ontimeout=t(a.Ga,a)):a.o=md(a.Ga,a.g,a)),zh(a.b,Lh(a,"Sending request")),a.i=!0,a.a.send(b),a.i=!1}catch(g){zh(a.b,
Lh(a,"Send error: "+g.message)),Mh(a,g)}}function Oh(a){return uc&&Ec(9)&&"number"==typeof a.timeout&&void 0!==a.ontimeout}function Ma(a){return"content-type"==a.toLowerCase()}k=Gh.prototype;k.Ga=function(){"undefined"!=typeof fa&&this.a&&(this.h="Timed out after "+this.g+"ms, aborting",zh(this.b,Lh(this,this.h)),this.dispatchEvent("timeout"),this.abort(8))};function Mh(a,b){a.c=!1;a.a&&(a.f=!0,a.a.abort(),a.f=!1);a.h=b;Ph(a);Qh(a)}
function Ph(a){a.I||(a.I=!0,a.dispatchEvent("complete"),a.dispatchEvent("error"))}k.abort=function(){this.a&&this.c&&(zh(this.b,Lh(this,"Aborting")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),Qh(this))};k.xa=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),Qh(this,!0));Gh.qb.xa.call(this)};k.Lb=function(){this.ta||(this.J||this.i||this.f?Rh(this):this.yc())};k.yc=function(){Rh(this)};
function Rh(a){if(a.c&&"undefined"!=typeof fa)if(a.w[1]&&4==Sh(a)&&2==Th(a))zh(a.b,Lh(a,"Local request error detected and ignored"));else if(a.i&&4==Sh(a))md(a.Lb,0,a);else if(a.dispatchEvent("readystatechange"),4==Sh(a)){zh(a.b,Lh(a,"Request complete"));a.c=!1;try{var b=Th(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.l).match(ud)[1]||null;if(!f&&l.self&&l.self.location){var g=l.self.location.protocol;
f=g.substr(0,g.length-1)}e=!Ih.test(f?f.toLowerCase():"")}d=e}if(d)a.dispatchEvent("complete"),a.dispatchEvent("success");else{try{var h=2<Sh(a)?a.a.statusText:""}catch(m){zh(a.b,"Can not get status: "+m.message),h=""}a.h=h+" ["+Th(a)+"]";Ph(a)}}finally{Qh(a)}}}function Qh(a,b){if(a.a){Nh(a);var c=a.a,d=a.w[0]?ka:null;a.a=null;a.w=null;b||a.dispatchEvent("ready");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(rh,"Problem encountered resetting onreadystatechange: "+e.message,void 0)}}}
function Nh(a){a.a&&a.v&&(a.a.ontimeout=null);a.o&&(l.clearTimeout(a.o),a.o=null)}function Sh(a){return a.a?a.a.readyState:0}function Th(a){try{return 2<Sh(a)?a.a.status:-1}catch(b){return-1}}function Uh(a){try{return a.a?a.a.responseText:""}catch(b){return zh(a.b,"Can not get responseText: "+b.message),""}}
k.getResponse=function(){try{if(!this.a)return null;if("response"in this.a)return this.a.response;switch(this.m){case Hh:case "text":return this.a.responseText;case "arraybuffer":if("mozResponseArrayBuffer"in this.a)return this.a.mozResponseArrayBuffer}var a=this.b;a&&a.log(rh,"Response type "+this.m+" is not supported on this browser",void 0);return null}catch(b){return zh(this.b,"Can not get response: "+b.message),null}};function Lh(a,b){return b+" ["+a.O+" "+a.l+" "+Th(a)+"]"};/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
function Vh(a){var b=Wh;this.g=[];this.v=b;this.o=a||null;this.f=this.a=!1;this.c=void 0;this.u=this.w=this.i=!1;this.h=0;this.b=null;this.l=0}Vh.prototype.cancel=function(a){if(this.a)this.c instanceof Vh&&this.c.cancel();else{if(this.b){var b=this.b;delete this.b;a?b.cancel(a):(b.l--,0>=b.l&&b.cancel())}this.v?this.v.call(this.o,this):this.u=!0;this.a||(a=new Xh(this),Yh(this),Zh(this,!1,a))}};Vh.prototype.m=function(a,b){this.i=!1;Zh(this,a,b)};function Zh(a,b,c){a.a=!0;a.c=c;a.f=!b;$h(a)}
function Yh(a){if(a.a){if(!a.u)throw new ai(a);a.u=!1}}function bi(a,b){ci(a,null,b,void 0)}function ci(a,b,c,d){a.g.push([b,c,d]);a.a&&$h(a)}Vh.prototype.then=function(a,b,c){var d,e,f=new B(function(g,h){d=g;e=h});ci(this,d,function(g){g instanceof Xh?f.cancel():e(g)});return f.then(a,b,c)};Vh.prototype.$goog_Thenable=!0;function di(a){return Ka(a.g,function(b){return q(b[1])})}
function $h(a){if(a.h&&a.a&&di(a)){var b=a.h,c=ei[b];c&&(l.clearTimeout(c.a),delete ei[b]);a.h=0}a.b&&(a.b.l--,delete a.b);b=a.c;for(var d=c=!1;a.g.length&&!a.i;){var e=a.g.shift(),f=e[0],g=e[1];e=e[2];if(f=a.f?g:f)try{var h=f.call(e||a.o,b);void 0!==h&&(a.f=a.f&&(h==b||h instanceof Error),a.c=b=h);if(va(b)||"function"===typeof l.Promise&&b instanceof l.Promise)d=!0,a.i=!0}catch(m){b=m,a.f=!0,di(a)||(c=!0)}}a.c=b;d&&(h=t(a.m,a,!0),d=t(a.m,a,!1),b instanceof Vh?(ci(b,h,d),b.w=!0):b.then(h,d));c&&(b=
new fi(b),ei[b.a]=b,a.h=b.a)}function ai(){w.call(this)}v(ai,w);ai.prototype.message="Deferred has already fired";ai.prototype.name="AlreadyCalledError";function Xh(){w.call(this)}v(Xh,w);Xh.prototype.message="Deferred was canceled";Xh.prototype.name="CanceledError";function fi(a){this.a=l.setTimeout(t(this.c,this),0);this.b=a}fi.prototype.c=function(){delete ei[this.a];throw this.b;};var ei={};function gi(a){var b={},c=b.document||document,d=db(a).toString(),e=document.createElement("SCRIPT"),f={Nb:e,Ga:void 0},g=new Vh(f),h=null,m=null!=b.timeout?b.timeout:5E3;0<m&&(h=window.setTimeout(function(){hi(e,!0);var p=new ii(ji,"Timeout reached for loading script "+d);Yh(g);Zh(g,!1,p)},m),f.Ga=h);e.onload=e.onreadystatechange=function(){e.readyState&&"loaded"!=e.readyState&&"complete"!=e.readyState||(hi(e,b.gd||!1,h),Yh(g),Zh(g,!0,null))};e.onerror=function(){hi(e,!0,h);var p=new ii(ki,"Error while loading script "+
d);Yh(g);Zh(g,!1,p)};f=b.attributes||{};Wa(f,{type:"text/javascript",charset:"UTF-8"});Wd(e,f);Gb(e,a);li(c).appendChild(e);return g}function li(a){var b;return(b=(a||document).getElementsByTagName("HEAD"))&&0!=b.length?b[0]:a.documentElement}function Wh(){if(this&&this.Nb){var a=this.Nb;a&&"SCRIPT"==a.tagName&&hi(a,!0,this.Ga)}}
function hi(a,b,c){null!=c&&l.clearTimeout(c);a.onload=ka;a.onerror=ka;a.onreadystatechange=ka;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)}var ki=0,ji=1;function ii(a,b){var c="Jsloader error (code #"+a+")";b&&(c+=": "+b);w.call(this,c);this.code=a}v(ii,w);function mi(a){this.f=a}v(mi,fh);mi.prototype.a=function(){return new this.f};mi.prototype.b=function(){return{}};
function ni(a,b,c){this.c=a;a=b||{};this.l=a.secureTokenEndpoint||"https://securetoken.googleapis.com/v1/token";this.u=a.secureTokenTimeout||oi;this.g=Ua(a.secureTokenHeaders||pi);this.h=a.firebaseEndpoint||"https://www.googleapis.com/identitytoolkit/v3/relyingparty/";this.i=a.firebaseTimeout||qi;this.a=Ua(a.firebaseHeaders||ri);c&&(this.a["X-Client-Version"]=c,this.g["X-Client-Version"]=c);c="Node"==Ae();c=l.XMLHttpRequest||c&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!c&&
!ze())throw new M("internal-error","The XMLHttpRequest compatibility library was not found.");this.f=void 0;ze()?this.f=new Ah(self):Be()?this.f=new mi(c):this.f=new kh;this.b=null}var si,lg="idToken",oi=new Pe(3E4,6E4),pi={"Content-Type":"application/x-www-form-urlencoded"},qi=new Pe(3E4,6E4),ri={"Content-Type":"application/json"};function ti(a,b){b?a.a["X-Firebase-Locale"]=b:delete a.a["X-Firebase-Locale"]}
function ui(a,b){b?(a.a["X-Client-Version"]=b,a.g["X-Client-Version"]=b):(delete a.a["X-Client-Version"],delete a.g["X-Client-Version"])}ni.prototype.R=function(){return this.b};function vi(a,b,c,d,e,f,g){ke()||ze()?a=t(a.o,a):(si||(si=new B(function(h,m){wi(h,m)})),a=t(a.m,a));a(b,c,d,e,f,g)}
ni.prototype.o=function(a,b,c,d,e,f){if(ze()&&("undefined"===typeof l.fetch||"undefined"===typeof l.Headers||"undefined"===typeof l.Request))throw new M("operation-not-supported-in-this-environment","fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");var g=new Gh(this.f);if(f){g.g=Math.max(0,f);var h=setTimeout(function(){g.dispatchEvent("timeout")},f)}Zc(g,"complete",function(){h&&clearTimeout(h);var m=null;try{m=
JSON.parse(Uh(this))||null}catch(p){m=null}b&&b(m)});ed(g,"ready",function(){h&&clearTimeout(h);pc(this)});ed(g,"timeout",function(){h&&clearTimeout(h);pc(this);b&&b(null)});Kh(g,a,c,d,e)};var xi=new Xa(Ya,"https://apis.google.com/js/client.js?onload=%{onload}"),yi="__fcb"+Math.floor(1E6*Math.random()).toString();
function wi(a,b){if(((window.gapi||{}).client||{}).request)a();else{l[yi]=function(){((window.gapi||{}).client||{}).request?a():b(Error("CORS_UNSUPPORTED"))};var c=eb(xi,{onload:yi});bi(gi(c),function(){b(Error("CORS_UNSUPPORTED"))})}}
ni.prototype.m=function(a,b,c,d,e){var f=this;si.then(function(){window.gapi.client.setApiKey(f.c);var g=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:"none",callback:function(h){window.gapi.auth.setToken(g);b&&b(h)}})}).s(function(g){b&&b({error:{message:g&&g.message||"CORS_UNSUPPORTED"}})})};
function zi(a,b){return new B(function(c,d){"refresh_token"==b.grant_type&&b.refresh_token||"authorization_code"==b.grant_type&&b.code?vi(a,a.l+"?key="+encodeURIComponent(a.c),function(e){e?e.error?d(Ai(e)):e.access_token&&e.refresh_token?c(e):d(new M("internal-error")):d(new M("network-request-failed"))},"POST",Pd(b).toString(),a.g,a.u.get()):d(new M("internal-error"))})}
function Bi(a,b,c,d,e,f){var g=Ld(a.h+b);H(g,"key",a.c);f&&H(g,"cb",ua().toString());var h="GET"==c;if(h)for(var m in d)d.hasOwnProperty(m)&&H(g,m,d[m]);return new B(function(p,u){vi(a,g.toString(),function(A){A?A.error?u(Ai(A,e||{})):p(A):u(new M("network-request-failed"))},c,h?void 0:ae(Le(d)),a.a,a.i.get())})}function Ci(a){a=a.email;if(!n(a)||!te.test(a))throw new M("invalid-email");}function Di(a){"email"in a&&Ci(a)}
function Ei(a,b){return P(a,Fi,{identifier:b,continueUri:Ie()?he():"http://localhost"}).then(function(c){return c.signinMethods||[]})}function Gi(a){return P(a,Hi,{}).then(function(b){return b.authorizedDomains||[]})}function Ii(a){if(!a[lg])throw new M("internal-error");}
function Ji(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new M("internal-error");}else{if(!a.sessionInfo)throw new M("missing-verification-id");if(!a.code)throw new M("missing-verification-code");}}ni.prototype.ob=function(){return P(this,Ki,{})};ni.prototype.rb=function(a,b){return P(this,Li,{idToken:a,email:b})};ni.prototype.sb=function(a,b){return P(this,Kg,{idToken:a,password:b})};var Mi={displayName:"DISPLAY_NAME",photoUrl:"PHOTO_URL"};k=ni.prototype;
k.tb=function(a,b){var c={idToken:a},d=[];Sa(Mi,function(e,f){var g=b[f];null===g?d.push(e):f in b&&(c[f]=g)});d.length&&(c.deleteAttribute=d);return P(this,Li,c)};k.kb=function(a,b){a={requestType:"PASSWORD_RESET",email:a};Wa(a,b);return P(this,Ni,a)};k.lb=function(a,b){a={requestType:"EMAIL_SIGNIN",email:a};Wa(a,b);return P(this,Oi,a)};k.jb=function(a,b){a={requestType:"VERIFY_EMAIL",idToken:a};Wa(a,b);return P(this,Pi,a)};function Ug(a,b){return P(a,Qi,b)}k.Va=function(a){return P(this,Ri,a)};
function Si(a,b,c){return P(a,Ti,{idToken:b,deleteProvider:c})}function Ui(a){if(!a.requestUri||!a.sessionId&&!a.postBody&&!a.pendingToken)throw new M("internal-error");}function Vi(a,b){b.oauthIdToken&&b.providerId&&0==b.providerId.indexOf("oidc.")&&!b.pendingToken&&(a.sessionId?b.nonce=a.sessionId:a.postBody&&(a=new Cd(a.postBody),Td(a,"nonce")&&(b.nonce=a.get("nonce"))));return b}
function Wi(a){var b=null;a.needConfirmation?(a.code="account-exists-with-different-credential",b=eh(a)):"FEDERATED_USER_ID_ALREADY_LINKED"==a.errorMessage?(a.code="credential-already-in-use",b=eh(a)):"EMAIL_EXISTS"==a.errorMessage?(a.code="email-already-in-use",b=eh(a)):a.errorMessage&&(b=Xi(a.errorMessage));if(b)throw b;if(!a[lg])throw new M("internal-error");}function ng(a,b){b.returnIdpCredential=!0;return P(a,Yi,b)}function pg(a,b){b.returnIdpCredential=!0;return P(a,Zi,b)}
function qg(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return P(a,$i,b)}function aj(a){if(!a.oobCode)throw new M("invalid-action-code");}k.$a=function(a,b){return P(this,bj,{oobCode:a,newPassword:b})};k.Ka=function(a){return P(this,cj,{oobCode:a})};k.Xa=function(a){return P(this,dj,{oobCode:a})};
var dj={endpoint:"setAccountInfo",D:aj,fa:"email",F:!0},cj={endpoint:"resetPassword",D:aj,K:function(a){var b=a.requestType;if(!b||!a.email&&"EMAIL_SIGNIN"!=b)throw new M("internal-error");},F:!0},ej={endpoint:"signupNewUser",D:function(a){Ci(a);if(!a.password)throw new M("weak-password");},K:Ii,T:!0,F:!0},Fi={endpoint:"createAuthUri",F:!0},fj={endpoint:"deleteAccount",V:["idToken"]},Ti={endpoint:"setAccountInfo",V:["idToken","deleteProvider"],D:function(a){if(!na(a.deleteProvider))throw new M("internal-error");
}},Hg={endpoint:"emailLinkSignin",V:["email","oobCode"],D:Ci,K:Ii,T:!0,F:!0},Jg={endpoint:"emailLinkSignin",V:["idToken","email","oobCode"],D:Ci,K:Ii,T:!0},gj={endpoint:"getAccountInfo"},Oi={endpoint:"getOobConfirmationCode",V:["requestType"],D:function(a){if("EMAIL_SIGNIN"!=a.requestType)throw new M("internal-error");Ci(a)},fa:"email",F:!0},Pi={endpoint:"getOobConfirmationCode",V:["idToken","requestType"],D:function(a){if("VERIFY_EMAIL"!=a.requestType)throw new M("internal-error");},fa:"email",F:!0},
Ni={endpoint:"getOobConfirmationCode",V:["requestType"],D:function(a){if("PASSWORD_RESET"!=a.requestType)throw new M("internal-error");Ci(a)},fa:"email",F:!0},Hi={wb:!0,endpoint:"getProjectConfig",Kb:"GET"},hj={wb:!0,endpoint:"getRecaptchaParam",Kb:"GET",K:function(a){if(!a.recaptchaSiteKey)throw new M("internal-error");}},bj={endpoint:"resetPassword",D:aj,fa:"email",F:!0},Qi={endpoint:"sendVerificationCode",V:["phoneNumber","recaptchaToken"],fa:"sessionInfo",F:!0},Li={endpoint:"setAccountInfo",V:["idToken"],
D:Di,T:!0},Kg={endpoint:"setAccountInfo",V:["idToken"],D:function(a){Di(a);if(!a.password)throw new M("weak-password");},K:Ii,T:!0},Ki={endpoint:"signupNewUser",K:Ii,T:!0,F:!0},Yi={endpoint:"verifyAssertion",D:Ui,Qa:Vi,K:Wi,T:!0,F:!0},$i={endpoint:"verifyAssertion",D:Ui,Qa:Vi,K:function(a){if(a.errorMessage&&"USER_NOT_FOUND"==a.errorMessage)throw new M("user-not-found");if(a.errorMessage)throw Xi(a.errorMessage);if(!a[lg])throw new M("internal-error");},T:!0,F:!0},Zi={endpoint:"verifyAssertion",D:function(a){Ui(a);
if(!a.idToken)throw new M("internal-error");},Qa:Vi,K:Wi,T:!0},ij={endpoint:"verifyCustomToken",D:function(a){if(!a.token)throw new M("invalid-custom-token");},K:Ii,T:!0,F:!0},Ig={endpoint:"verifyPassword",D:function(a){Ci(a);if(!a.password)throw new M("wrong-password");},K:Ii,T:!0,F:!0},Ri={endpoint:"verifyPhoneNumber",D:Ji,K:Ii,F:!0},Qg={endpoint:"verifyPhoneNumber",D:function(a){if(!a.idToken)throw new M("internal-error");Ji(a)},K:function(a){if(a.temporaryProof)throw a.code="credential-already-in-use",
eh(a);Ii(a)}},Rg={Yb:{USER_NOT_FOUND:"user-not-found"},endpoint:"verifyPhoneNumber",D:Ji,K:Ii,F:!0};
function P(a,b,c){if(!bf(c,b.V))return E(new M("internal-error"));var d=b.Kb||"POST",e;return D(c).then(b.D).then(function(){b.T&&(c.returnSecureToken=!0);b.F&&a.b&&"undefined"===typeof c.tenantId&&(c.tenantId=a.b);return Bi(a,b.endpoint,d,c,b.Yb,b.wb||!1)}).then(function(f){e=f;return b.Qa?b.Qa(c,e):e}).then(b.K).then(function(){if(!b.fa)return e;if(!(b.fa in e))throw new M("internal-error");return e[b.fa]})}function Xi(a){return Ai({error:{errors:[{message:a}],code:400,message:a}})}
function Ai(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||"";var d={keyInvalid:"invalid-api-key",ipRefererBlocked:"app-not-authorized"};if(c=d[c]?new M(d[c]):null)return c;c=a.error&&a.error.message||"";d={INVALID_CUSTOM_TOKEN:"invalid-custom-token",CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_EMAIL:"invalid-email",INVALID_PASSWORD:"wrong-password",USER_DISABLED:"user-disabled",
MISSING_PASSWORD:"internal-error",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",INVALID_PENDING_TOKEN:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",MISSING_OR_INVALID_NONCE:"missing-or-invalid-nonce",INVALID_MESSAGE_PAYLOAD:"invalid-message-payload",INVALID_RECIPIENT_EMAIL:"invalid-recipient-email",INVALID_SENDER:"invalid-sender",EMAIL_NOT_FOUND:"user-not-found",RESET_PASSWORD_EXCEED_LIMIT:"too-many-requests",
EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",INVALID_PROVIDER_ID:"invalid-provider-id",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",CORS_UNSUPPORTED:"cors-unsupported",DYNAMIC_LINK_NOT_ACTIVATED:"dynamic-link-not-activated",INVALID_APP_ID:"invalid-app-id",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",WEAK_PASSWORD:"weak-password",
OPERATION_NOT_ALLOWED:"operation-not-allowed",USER_CANCELLED:"user-cancelled",CAPTCHA_CHECK_FAILED:"captcha-check-failed",INVALID_APP_CREDENTIAL:"invalid-app-credential",INVALID_CODE:"invalid-verification-code",INVALID_PHONE_NUMBER:"invalid-phone-number",INVALID_SESSION_INFO:"invalid-verification-id",INVALID_TEMPORARY_PROOF:"invalid-credential",MISSING_APP_CREDENTIAL:"missing-app-credential",MISSING_CODE:"missing-verification-code",MISSING_PHONE_NUMBER:"missing-phone-number",MISSING_SESSION_INFO:"missing-verification-id",
QUOTA_EXCEEDED:"quota-exceeded",SESSION_EXPIRED:"code-expired",REJECTED_CREDENTIAL:"rejected-credential",INVALID_CONTINUE_URI:"invalid-continue-uri",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",MISSING_IOS_BUNDLE_ID:"missing-ios-bundle-id",UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",INVALID_DYNAMIC_LINK_DOMAIN:"invalid-dynamic-link-domain",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id",INVALID_CERT_HASH:"invalid-cert-hash",UNSUPPORTED_TENANT_OPERATION:"unsupported-tenant-operation",
INVALID_TENANT_ID:"invalid-tenant-id",ADMIN_ONLY_OPERATION:"admin-restricted-operation"};Wa(d,b||{});b=(b=c.match(/^[^\s]+\s*:\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new M(d[e],b);!b&&a&&(b=Ke(a));return new M("internal-error",b)};function jj(a){this.b=a;this.a=null;this.fb=kj(this)}
function kj(a){return lj().then(function(){return new B(function(b,c){J("gapi.iframes.getContext")().open({where:document.body,url:a.b,messageHandlersFilter:J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),attributes:{style:{position:"absolute",top:"-100px",width:"1px",height:"1px"}},dontclear:!0},function(d){function e(){clearTimeout(f);b()}a.a=d;a.a.restyle({setHideOnLeave:!1});var f=setTimeout(function(){c(Error("Network Error"))},mj.get());d.ping(e).then(e,function(){c(Error("Network Error"))})})})})}
function nj(a,b){return a.fb.then(function(){return new B(function(c){a.a.send(b.type,b,c,J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})})}function oj(a,b){a.fb.then(function(){a.a.register("authEvent",b,J("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})}var pj=new Xa(Ya,"https://apis.google.com/js/api.js?onload=%{onload}"),qj=new Pe(3E4,6E4),mj=new Pe(5E3,15E3),rj=null;
function lj(){return rj?rj:rj=(new B(function(a,b){function c(){Oe();J("gapi.load")("gapi.iframes",{callback:a,ontimeout:function(){Oe();b(Error("Network Error"))},timeout:qj.get()})}if(J("gapi.iframes.Iframe"))a();else if(J("gapi.load"))c();else{var d="__iframefcb"+Math.floor(1E6*Math.random()).toString();l[d]=function(){J("gapi.load")?c():b(Error("Network Error"))};d=eb(pj,{onload:d});D(gi(d)).s(function(){b(Error("Network Error"))})}})).s(function(a){rj=null;throw a;})};function sj(a,b,c){this.i=a;this.g=b;this.h=c;this.f=null;this.a=Md(this.i,"/__/auth/iframe");H(this.a,"apiKey",this.g);H(this.a,"appName",this.h);this.b=null;this.c=[]}sj.prototype.toString=function(){this.f?H(this.a,"v",this.f):Sd(this.a.a,"v");this.b?H(this.a,"eid",this.b):Sd(this.a.a,"eid");this.c.length?H(this.a,"fw",this.c.join(",")):Sd(this.a.a,"fw");return this.a.toString()};function tj(a,b,c,d,e){this.o=a;this.m=b;this.c=c;this.u=d;this.i=this.g=this.l=null;this.a=e;this.h=this.f=null}
tj.prototype.nb=function(a){this.h=a;return this};
tj.prototype.toString=function(){var a=Md(this.o,"/__/auth/handler");H(a,"apiKey",this.m);H(a,"appName",this.c);H(a,"authType",this.u);if(this.a.isOAuthProvider){var b=this.a;try{var c=firebase.app(this.c).auth().ha()}catch(h){c=null}b.ab=c;H(a,"providerId",this.a.providerId);b=this.a;c=Le(b.zb);for(var d in c)c[d]=c[d].toString();d=b.Fc;c=Ua(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.cb&&b.ab&&!c[b.cb]&&(c[b.cb]=b.ab);Ta(c)||H(a,"customParameters",Ke(c))}"function"===typeof this.a.Hb&&
(b=this.a.Hb(),b.length&&H(a,"scopes",b.join(",")));this.l?H(a,"redirectUrl",this.l):Sd(a.a,"redirectUrl");this.g?H(a,"eventId",this.g):Sd(a.a,"eventId");this.i?H(a,"v",this.i):Sd(a.a,"v");if(this.b)for(var g in this.b)this.b.hasOwnProperty(g)&&!Kd(a,g)&&H(a,g,this.b[g]);this.h?H(a,"tid",this.h):Sd(a.a,"tid");this.f?H(a,"eid",this.f):Sd(a.a,"eid");g=uj(this.c);g.length&&H(a,"fw",g.join(","));return a.toString()};function uj(a){try{return firebase.app(a).auth().Aa()}catch(b){return[]}}
function vj(a,b,c,d,e){this.u=a;this.f=b;this.b=c;this.c=d||null;this.h=e||null;this.m=this.o=this.v=null;this.g=[];this.l=this.a=null}
function wj(a){var b=he();return Gi(a).then(function(c){a:{var d=Ld(b),e=d.f;d=d.b;for(var f=0;f<c.length;f++){var g=c[f];var h=d;var m=e;0==g.indexOf("chrome-extension://")?h=Ld(g).b==h&&"chrome-extension"==m:"http"!=m&&"https"!=m?h=!1:se.test(g)?h=h==g:(g=g.split(".").join("\\."),h=(new RegExp("^(.+\\."+g+"|"+g+")$","i")).test(h));if(h){c=!0;break a}}c=!1}if(!c)throw new ch(he());})}
function xj(a){if(a.l)return a.l;a.l=ue().then(function(){if(!a.o){var b=a.c,c=a.h,d=uj(a.b),e=new sj(a.u,a.f,a.b);e.f=b;e.b=c;e.c=Ra(d||[]);a.o=e.toString()}a.i=new jj(a.o);yj(a)});return a.l}k=vj.prototype;k.Fb=function(a,b,c){var d=new M("popup-closed-by-user"),e=new M("web-storage-unsupported"),f=this,g=!1;return this.ia().then(function(){zj(f).then(function(h){h||(a&&oe(a),b(e),g=!0)})}).s(function(){}).then(function(){if(!g)return re(a)}).then(function(){if(!g)return nd(c).then(function(){b(d)})})};
k.Ob=function(){var a=I();return!Je(a)&&!Ne(a)};k.Jb=function(){return!1};
k.Db=function(a,b,c,d,e,f,g,h){if(!a)return E(new M("popup-blocked"));if(g&&!Je())return this.ia().s(function(p){oe(a);e(p)}),d(),D();this.a||(this.a=wj(Aj(this)));var m=this;return this.a.then(function(){var p=m.ia().s(function(u){oe(a);e(u);throw u;});d();return p}).then(function(){Xg(c);if(!g){var p=Bj(m.u,m.f,m.b,b,c,null,f,m.c,void 0,m.h,h);ie(p,a)}}).s(function(p){"auth/network-request-failed"==p.code&&(m.a=null);throw p;})};
function Aj(a){a.m||(a.v=a.c?Ee(a.c,uj(a.b)):null,a.m=new ni(a.f,Uf(a.h),a.v));return a.m}k.Eb=function(a,b,c,d){this.a||(this.a=wj(Aj(this)));var e=this;return this.a.then(function(){Xg(b);var f=Bj(e.u,e.f,e.b,a,b,he(),c,e.c,void 0,e.h,d);ie(f)}).s(function(f){"auth/network-request-failed"==f.code&&(e.a=null);throw f;})};k.ia=function(){var a=this;return xj(this).then(function(){return a.i.fb}).s(function(){a.a=null;throw new M("network-request-failed");})};k.Rb=function(){return!0};
function Bj(a,b,c,d,e,f,g,h,m,p,u){a=new tj(a,b,c,d,e);a.l=f;a.g=g;a.i=h;a.b=Ua(m||null);a.f=p;return a.nb(u).toString()}function yj(a){if(!a.i)throw Error("IfcHandler must be initialized!");oj(a.i,function(b){var c={};if(b&&b.authEvent){var d=!1;b=Zg(b.authEvent);for(c=0;c<a.g.length;c++)d=a.g[c](b)||d;c={};c.status=d?"ACK":"ERROR";return D(c)}c.status="ERROR";return D(c)})}
function zj(a){var b={type:"webStorageSupport"};return xj(a).then(function(){return nj(a.i,b)}).then(function(c){if(c&&c.length&&"undefined"!==typeof c[0].webStorageSupport)return c[0].webStorageSupport;throw Error();})}k.ya=function(a){this.g.push(a)};k.La=function(a){Pa(this.g,function(b){return b==a})};function Cj(a){this.a=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.a)throw new M("internal-error","The React Native compatibility library was not found.");this.type="asyncStorage"}k=Cj.prototype;k.get=function(a){return D(this.a.getItem(a)).then(function(b){return b&&Me(b)})};k.set=function(a,b){return D(this.a.setItem(a,Ke(b)))};k.S=function(a){return D(this.a.removeItem(a))};k.$=function(){};k.ea=function(){};function Dj(a){this.b=a;this.a={};this.f=t(this.c,this)}var Ej=[];function Fj(){var a=ze()?self:null;x(Ej,function(c){c.b==a&&(b=c)});if(!b){var b=new Dj(a);Ej.push(b)}return b}
Dj.prototype.c=function(a){var b=a.data.eventType,c=a.data.eventId,d=this.a[b];if(d&&0<d.length){a.ports[0].postMessage({status:"ack",eventId:c,eventType:b,response:null});var e=[];x(d,function(f){e.push(D().then(function(){return f(a.origin,a.data.data)}))});bc(e).then(function(f){var g=[];x(f,function(h){g.push({fulfilled:h.Gb,value:h.value,reason:h.reason?h.reason.message:void 0})});x(g,function(h){for(var m in h)"undefined"===typeof h[m]&&delete h[m]});a.ports[0].postMessage({status:"done",eventId:c,
eventType:b,response:g})})}};function Gj(a,b,c){Ta(a.a)&&a.b.addEventListener("message",a.f);"undefined"===typeof a.a[b]&&(a.a[b]=[]);a.a[b].push(c)};function Hj(a){this.a=a}Hj.prototype.postMessage=function(a,b){this.a.postMessage(a,b)};function Ij(a){this.c=a;this.b=!1;this.a=[]}
function Jj(a,b,c,d){var e,f=c||{},g,h,m,p=null;if(a.b)return E(Error("connection_unavailable"));var u=d?800:50,A="undefined"!==typeof MessageChannel?new MessageChannel:null;return(new B(function(C,N){A?(e=Math.floor(Math.random()*Math.pow(10,20)).toString(),A.port1.start(),h=setTimeout(function(){N(Error("unsupported_event"))},u),g=function(wa){wa.data.eventId===e&&("ack"===wa.data.status?(clearTimeout(h),m=setTimeout(function(){N(Error("timeout"))},3E3)):"done"===wa.data.status?(clearTimeout(m),
"undefined"!==typeof wa.data.response?C(wa.data.response):N(Error("unknown_error"))):(clearTimeout(h),clearTimeout(m),N(Error("invalid_response"))))},p={messageChannel:A,onMessage:g},a.a.push(p),A.port1.addEventListener("message",g),a.c.postMessage({eventType:b,eventId:e,data:f},[A.port2])):N(Error("connection_unavailable"))})).then(function(C){Kj(a,p);return C}).s(function(C){Kj(a,p);throw C;})}
function Kj(a,b){if(b){var c=b.messageChannel,d=b.onMessage;c&&(c.port1.removeEventListener("message",d),c.port1.close());Pa(a.a,function(e){return e==b})}}Ij.prototype.close=function(){for(;0<this.a.length;)Kj(this,this.a[0]);this.b=!0};function Lj(){if(!Mj())throw new M("web-storage-unsupported");this.c={};this.a=[];this.b=0;this.u=l.indexedDB;this.type="indexedDB";this.g=this.l=this.f=this.i=null;this.o=!1;this.h=null;var a=this;ze()&&self?(this.l=Fj(),Gj(this.l,"keyChanged",function(b,c){return Nj(a).then(function(d){0<d.length&&x(a.a,function(e){e(d)});return{keyProcessed:Na(d,c.key)}})}),Gj(this.l,"ping",function(){return D(["keyChanged"])})):Ve().then(function(b){if(a.h=b)a.g=new Ij(new Hj(b)),Jj(a.g,"ping",null,!0).then(function(c){c[0].fulfilled&&
Na(c[0].value,"keyChanged")&&(a.o=!0)}).s(function(){})})}var Oj;function Pj(a){return new B(function(b,c){var d=a.u.deleteDatabase("firebaseLocalStorageDb");d.onsuccess=function(){b()};d.onerror=function(e){c(Error(e.target.error))}})}
function Qj(a){return new B(function(b,c){var d=a.u.open("firebaseLocalStorageDb",1);d.onerror=function(e){try{e.preventDefault()}catch(f){}c(Error(e.target.error))};d.onupgradeneeded=function(e){e=e.target.result;try{e.createObjectStore("firebaseLocalStorage",{keyPath:"fbase_key"})}catch(f){c(f)}};d.onsuccess=function(e){e=e.target.result;e.objectStoreNames.contains("firebaseLocalStorage")?b(e):Pj(a).then(function(){return Qj(a)}).then(function(f){b(f)}).s(function(f){c(f)})}})}
function Rj(a){a.m||(a.m=Qj(a));return a.m}function Mj(){try{return!!l.indexedDB}catch(a){return!1}}function Sj(a){return a.objectStore("firebaseLocalStorage")}function Tj(a,b){return a.transaction(["firebaseLocalStorage"],b?"readwrite":"readonly")}function Uj(a){return new B(function(b,c){a.onsuccess=function(d){d&&d.target?b(d.target.result):b()};a.onerror=function(d){c(d.target.error)}})}k=Lj.prototype;
k.set=function(a,b){var c=!1,d,e=this;return Rj(this).then(function(f){d=f;f=Sj(Tj(d,!0));return Uj(f.get(a))}).then(function(f){var g=Sj(Tj(d,!0));if(f)return f.value=b,Uj(g.put(f));e.b++;c=!0;f={};f.fbase_key=a;f.value=b;return Uj(g.add(f))}).then(function(){e.c[a]=b;return Vj(e,a)}).ka(function(){c&&e.b--})};function Vj(a,b){return a.g&&a.h&&Ue()===a.h?Jj(a.g,"keyChanged",{key:b},a.o).then(function(){}).s(function(){}):D()}
k.get=function(a){return Rj(this).then(function(b){return Uj(Sj(Tj(b,!1)).get(a))}).then(function(b){return b&&b.value})};k.S=function(a){var b=!1,c=this;return Rj(this).then(function(d){b=!0;c.b++;return Uj(Sj(Tj(d,!0))["delete"](a))}).then(function(){delete c.c[a];return Vj(c,a)}).ka(function(){b&&c.b--})};
function Nj(a){return Rj(a).then(function(b){var c=Sj(Tj(b,!1));return c.getAll?Uj(c.getAll()):new B(function(d,e){var f=[],g=c.openCursor();g.onsuccess=function(h){(h=h.target.result)?(f.push(h.value),h["continue"]()):d(f)};g.onerror=function(h){e(h.target.error)}})}).then(function(b){var c={},d=[];if(0==a.b){for(d=0;d<b.length;d++)c[b[d].fbase_key]=b[d].value;d=je(a.c,c);a.c=c}return d})}k.$=function(a){0==this.a.length&&Wj(this);this.a.push(a)};
k.ea=function(a){Pa(this.a,function(b){return b==a});0==this.a.length&&Xj(this)};function Wj(a){function b(){a.f=setTimeout(function(){a.i=Nj(a).then(function(c){0<c.length&&x(a.a,function(d){d(c)})}).then(function(){b()}).s(function(c){"STOP_EVENT"!=c.message&&b()})},800)}Xj(a);b()}function Xj(a){a.i&&a.i.cancel("STOP_EVENT");a.f&&(clearTimeout(a.f),a.f=null)};function Yj(a){var b=this,c=null;this.a=[];this.type="indexedDB";this.c=a;this.b=D().then(function(){if(Mj()){var d=Ge(),e="__sak"+d;Oj||(Oj=new Lj);c=Oj;return c.set(e,d).then(function(){return c.get(e)}).then(function(f){if(f!==d)throw Error("indexedDB not supported!");return c.S(e)}).then(function(){return c}).s(function(){return b.c})}return b.c}).then(function(d){b.type=d.type;d.$(function(e){x(b.a,function(f){f(e)})});return d})}k=Yj.prototype;k.get=function(a){return this.b.then(function(b){return b.get(a)})};
k.set=function(a,b){return this.b.then(function(c){return c.set(a,b)})};k.S=function(a){return this.b.then(function(b){return b.S(a)})};k.$=function(a){this.a.push(a)};k.ea=function(a){Pa(this.a,function(b){return b==a})};function Zj(){this.a={};this.type="inMemory"}k=Zj.prototype;k.get=function(a){return D(this.a[a])};k.set=function(a,b){this.a[a]=b;return D()};k.S=function(a){delete this.a[a];return D()};k.$=function(){};k.ea=function(){};function ak(){if(!bk()){if("Node"==Ae())throw new M("internal-error","The LocalStorage compatibility library was not found.");throw new M("web-storage-unsupported");}this.a=ck()||firebase.INTERNAL.node.localStorage;this.type="localStorage"}function ck(){try{var a=l.localStorage,b=Ge();a&&(a.setItem(b,"1"),a.removeItem(b));return a}catch(c){return null}}
function bk(){var a="Node"==Ae();a=ck()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem("__sak","1"),a.removeItem("__sak"),!0}catch(b){return!1}}k=ak.prototype;k.get=function(a){var b=this;return D().then(function(){var c=b.a.getItem(a);return Me(c)})};k.set=function(a,b){var c=this;return D().then(function(){var d=Ke(b);null===d?c.S(a):c.a.setItem(a,d)})};k.S=function(a){var b=this;return D().then(function(){b.a.removeItem(a)})};
k.$=function(a){l.window&&Wc(l.window,"storage",a)};k.ea=function(a){l.window&&fd(l.window,"storage",a)};function dk(){this.type="nullStorage"}k=dk.prototype;k.get=function(){return D(null)};k.set=function(){return D()};k.S=function(){return D()};k.$=function(){};k.ea=function(){};function ek(){if(!fk()){if("Node"==Ae())throw new M("internal-error","The SessionStorage compatibility library was not found.");throw new M("web-storage-unsupported");}this.a=gk()||firebase.INTERNAL.node.sessionStorage;this.type="sessionStorage"}function gk(){try{var a=l.sessionStorage,b=Ge();a&&(a.setItem(b,"1"),a.removeItem(b));return a}catch(c){return null}}
function fk(){var a="Node"==Ae();a=gk()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem("__sak","1"),a.removeItem("__sak"),!0}catch(b){return!1}}k=ek.prototype;k.get=function(a){var b=this;return D().then(function(){var c=b.a.getItem(a);return Me(c)})};k.set=function(a,b){var c=this;return D().then(function(){var d=Ke(b);null===d?c.S(a):c.a.setItem(a,d)})};k.S=function(a){var b=this;return D().then(function(){b.a.removeItem(a)})};k.$=function(){};
k.ea=function(){};function hk(){var a={};a.Browser=ik;a.Node=jk;a.ReactNative=kk;a.Worker=lk;this.a=a[Ae()]}var mk,ik={C:ak,Sa:ek},jk={C:ak,Sa:ek},kk={C:Cj,Sa:dk},lk={C:ak,Sa:dk};var nk={$c:"local",NONE:"none",bd:"session"};function ok(a){var b=new M("invalid-persistence-type"),c=new M("unsupported-persistence-type");a:{for(d in nk)if(nk[d]==a){var d=!0;break a}d=!1}if(!d||"string"!==typeof a)throw b;switch(Ae()){case "ReactNative":if("session"===a)throw c;break;case "Node":if("none"!==a)throw c;break;default:if(!Fe()&&"none"!==a)throw c;}}
function pk(){var a=!Ne(I())&&ye()?!0:!1,b=Je(),c=Fe();this.m=a;this.h=b;this.l=c;this.a={};mk||(mk=new hk);a=mk;try{this.g=!ge()&&Te()||!l.indexedDB?new a.a.C:new Yj(ze()?new Zj:new a.a.C)}catch(d){this.g=new Zj,this.h=!0}try{this.i=new a.a.Sa}catch(d){this.i=new Zj}this.u=new Zj;this.f=t(this.Pb,this);this.b={}}var qk;function rk(){qk||(qk=new pk);return qk}function sk(a,b){switch(b){case "session":return a.i;case "none":return a.u;default:return a.g}}
function tk(a,b){return"firebase:"+a.name+(b?":"+b:"")}function uk(a,b,c){var d=tk(b,c),e=sk(a,b.C);return a.get(b,c).then(function(f){var g=null;try{g=Me(l.localStorage.getItem(d))}catch(h){}if(g&&!f)return l.localStorage.removeItem(d),a.set(b,g,c);g&&f&&"localStorage"!=e.type&&l.localStorage.removeItem(d)})}k=pk.prototype;k.get=function(a,b){return sk(this,a.C).get(tk(a,b))};function vk(a,b,c){c=tk(b,c);"local"==b.C&&(a.b[c]=null);return sk(a,b.C).S(c)}
k.set=function(a,b,c){var d=tk(a,c),e=this,f=sk(this,a.C);return f.set(d,b).then(function(){return f.get(d)}).then(function(g){"local"==a.C&&(e.b[d]=g)})};k.addListener=function(a,b,c){a=tk(a,b);this.l&&(this.b[a]=l.localStorage.getItem(a));Ta(this.a)&&(sk(this,"local").$(this.f),this.h||(ge()||!Te())&&l.indexedDB||!this.l||wk(this));this.a[a]||(this.a[a]=[]);this.a[a].push(c)};
k.removeListener=function(a,b,c){a=tk(a,b);this.a[a]&&(Pa(this.a[a],function(d){return d==c}),0==this.a[a].length&&delete this.a[a]);Ta(this.a)&&(sk(this,"local").ea(this.f),xk(this))};function wk(a){xk(a);a.c=setInterval(function(){for(var b in a.a){var c=l.localStorage.getItem(b),d=a.b[b];c!=d&&(a.b[b]=c,c=new Kc({type:"storage",key:b,target:window,oldValue:d,newValue:c,a:!0}),a.Pb(c))}},1E3)}function xk(a){a.c&&(clearInterval(a.c),a.c=null)}
k.Pb=function(a){if(a&&a.f){var b=a.a.key;if(null==b)for(var c in this.a){var d=this.b[c];"undefined"===typeof d&&(d=null);var e=l.localStorage.getItem(c);e!==d&&(this.b[c]=e,this.Za(c))}else if(0==b.indexOf("firebase:")&&this.a[b]){"undefined"!==typeof a.a.a?sk(this,"local").ea(this.f):xk(this);if(this.m)if(c=l.localStorage.getItem(b),d=a.a.newValue,d!==c)null!==d?l.localStorage.setItem(b,d):l.localStorage.removeItem(b);else if(this.b[b]===d&&"undefined"===typeof a.a.a)return;var f=this;c=function(){if("undefined"!==
typeof a.a.a||f.b[b]!==l.localStorage.getItem(b))f.b[b]=l.localStorage.getItem(b),f.Za(b)};uc&&Fc&&10==Fc&&l.localStorage.getItem(b)!==a.a.newValue&&a.a.newValue!==a.a.oldValue?setTimeout(c,10):c()}}else x(a,t(this.Za,this))};k.Za=function(a){this.a[a]&&x(this.a[a],function(b){b()})};function yk(a){this.a=a;this.b=rk()}var zk={name:"authEvent",C:"local"};function Ak(a){return a.b.get(zk,a.a).then(function(b){return Zg(b)})};function Bk(){this.a=rk()};function Ck(){this.b=-1};function Dk(a,b){this.b=Ek;this.f=l.Uint8Array?new Uint8Array(this.b):Array(this.b);this.g=this.c=0;this.a=[];this.i=a;this.h=b;this.l=l.Int32Array?new Int32Array(64):Array(64);void 0!==Fk||(l.Int32Array?Fk=new Int32Array(Gk):Fk=Gk);this.reset()}var Fk;v(Dk,Ck);for(var Ek=64,Hk=Ek-1,Ik=[],Jk=0;Jk<Hk;Jk++)Ik[Jk]=0;var Kk=Qa(128,Ik);Dk.prototype.reset=function(){this.g=this.c=0;this.a=l.Int32Array?new Int32Array(this.h):Ra(this.h)};
function Lk(a){for(var b=a.f,c=a.l,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,g=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+g|0}d=a.a[0]|0;e=a.a[1]|0;var h=a.a[2]|0,m=a.a[3]|0,p=a.a[4]|0,u=a.a[5]|0,A=a.a[6]|0;f=a.a[7]|0;for(b=0;64>b;b++){var C=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&h^e&h)|0;g=p&u^~p&A;f=f+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<
7))|0;g=g+(Fk[b]|0)|0;g=f+(g+(c[b]|0)|0)|0;f=A;A=u;u=p;p=m+g|0;m=h;h=e;e=d;d=g+C|0}a.a[0]=a.a[0]+d|0;a.a[1]=a.a[1]+e|0;a.a[2]=a.a[2]+h|0;a.a[3]=a.a[3]+m|0;a.a[4]=a.a[4]+p|0;a.a[5]=a.a[5]+u|0;a.a[6]=a.a[6]+A|0;a.a[7]=a.a[7]+f|0}
function Mk(a,b,c){void 0===c&&(c=b.length);var d=0,e=a.c;if(n(b))for(;d<c;)a.f[e++]=b.charCodeAt(d++),e==a.b&&(Lk(a),e=0);else if(oa(b))for(;d<c;){var f=b[d++];if(!("number"==typeof f&&0<=f&&255>=f&&f==(f|0)))throw Error("message must be a byte array");a.f[e++]=f;e==a.b&&(Lk(a),e=0)}else throw Error("message must be string or array");a.c=e;a.g+=c}
var Gk=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,
4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Nk(){Dk.call(this,8,Ok)}v(Nk,Dk);var Ok=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function Pk(a,b,c,d,e){this.u=a;this.i=b;this.l=c;this.m=d||null;this.o=e||null;this.h=b+":"+c;this.v=new Bk;this.g=new yk(this.h);this.f=null;this.b=[];this.a=this.c=null}function Qk(a){return new M("invalid-cordova-configuration",a)}k=Pk.prototype;
k.ia=function(){return this.Ba?this.Ba:this.Ba=ve().then(function(){if("function"!==typeof J("universalLinks.subscribe",l))throw Qk("cordova-universal-links-plugin-fix is not installed");if("undefined"===typeof J("BuildInfo.packageName",l))throw Qk("cordova-plugin-buildinfo is not installed");if("function"!==typeof J("cordova.plugins.browsertab.openUrl",l))throw Qk("cordova-plugin-browsertab is not installed");if("function"!==typeof J("cordova.InAppBrowser.open",l))throw Qk("cordova-plugin-inappbrowser is not installed");
},function(){throw new M("cordova-not-ready");})};function Rk(){for(var a=20,b=[];0<a;)b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),a--;return b.join("")}function Sk(a){var b=new Nk;Mk(b,a);a=[];var c=8*b.g;56>b.c?Mk(b,Kk,56-b.c):Mk(b,Kk,b.b-(b.c-56));for(var d=63;56<=d;d--)b.f[d]=c&255,c/=256;Lk(b);for(d=c=0;d<b.i;d++)for(var e=24;0<=e;e-=8)a[c++]=b.a[d]>>e&255;return Kf(a)}
k.Fb=function(a,b){b(new M("operation-not-supported-in-this-environment"));return D()};k.Db=function(){return E(new M("operation-not-supported-in-this-environment"))};k.Rb=function(){return!1};k.Ob=function(){return!0};k.Jb=function(){return!0};
k.Eb=function(a,b,c,d){if(this.c)return E(new M("redirect-operation-pending"));var e=this,f=l.document,g=null,h=null,m=null,p=null;return this.c=D().then(function(){Xg(b);return Tk(e)}).then(function(){return Uk(e,a,b,c,d)}).then(function(){return(new B(function(u,A){h=function(){var C=J("cordova.plugins.browsertab.close",l);u();"function"===typeof C&&C();e.a&&"function"===typeof e.a.close&&(e.a.close(),e.a=null);return!1};e.ya(h);m=function(){g||(g=nd(2E3).then(function(){A(new M("redirect-cancelled-by-user"))}))};
p=function(){Qe()&&m()};f.addEventListener("resume",m,!1);I().toLowerCase().match(/android/)||f.addEventListener("visibilitychange",p,!1)})).s(function(u){return Vk(e).then(function(){throw u;})})}).ka(function(){m&&f.removeEventListener("resume",m,!1);p&&f.removeEventListener("visibilitychange",p,!1);g&&g.cancel();h&&e.La(h);e.c=null})};
function Uk(a,b,c,d,e){var f=Rk(),g=new Yg(b,d,null,f,new M("no-auth-event"),null,e),h=J("BuildInfo.packageName",l);if("string"!==typeof h)throw new M("invalid-cordova-configuration");var m=J("BuildInfo.displayName",l),p={};if(I().toLowerCase().match(/iphone|ipad|ipod/))p.ibi=h;else if(I().toLowerCase().match(/android/))p.apn=h;else return E(new M("operation-not-supported-in-this-environment"));m&&(p.appDisplayName=m);f=Sk(f);p.sessionId=f;var u=Bj(a.u,a.i,a.l,b,c,null,d,a.m,p,a.o,e);return a.ia().then(function(){var A=
a.h;return a.v.a.set(zk,g.A(),A)}).then(function(){var A=J("cordova.plugins.browsertab.isAvailable",l);if("function"!==typeof A)throw new M("invalid-cordova-configuration");var C=null;A(function(N){if(N){C=J("cordova.plugins.browsertab.openUrl",l);if("function"!==typeof C)throw new M("invalid-cordova-configuration");C(u)}else{C=J("cordova.InAppBrowser.open",l);if("function"!==typeof C)throw new M("invalid-cordova-configuration");N=I();a.a=C(u,N.match(/(iPad|iPhone|iPod).*OS 7_\d/i)||N.match(/(iPad|iPhone|iPod).*OS 8_\d/i)?
"_blank":"_system","location=yes")}})})}function Wk(a,b){for(var c=0;c<a.b.length;c++)try{a.b[c](b)}catch(d){}}function Tk(a){a.f||(a.f=a.ia().then(function(){return new B(function(b){function c(d){b(d);a.La(c);return!1}a.ya(c);Xk(a)})}));return a.f}function Vk(a){var b=null;return Ak(a.g).then(function(c){b=c;c=a.g;return vk(c.b,zk,c.a)}).then(function(){return b})}
function Xk(a){function b(g){d=!0;e&&e.cancel();Vk(a).then(function(h){var m=c;if(h&&g&&g.url){var p=null;m=ig(g.url);-1!=m.indexOf("/__/auth/callback")&&(p=Ld(m),p=Me(Kd(p,"firebaseError")||null),p=(p="object"===typeof p?pf(p):null)?new Yg(h.c,h.b,null,null,p,null,h.R()):new Yg(h.c,h.b,m,h.f,null,null,h.R()));m=p||c}Wk(a,m)})}var c=new Yg("unknown",null,null,null,new M("no-auth-event")),d=!1,e=nd(500).then(function(){return Vk(a).then(function(){d||Wk(a,c)})}),f=l.handleOpenURL;l.handleOpenURL=function(g){0==
g.toLowerCase().indexOf(J("BuildInfo.packageName",l).toLowerCase()+"://")&&b({url:g});if("function"===typeof f)try{f(g)}catch(h){console.error(h)}};ah||(ah=new $g);bh(b)}k.ya=function(a){this.b.push(a);Tk(this).s(function(b){"auth/invalid-cordova-configuration"===b.code&&(b=new Yg("unknown",null,null,null,new M("no-auth-event")),a(b))})};k.La=function(a){Pa(this.b,function(b){return b==a})};function Yk(a){this.a=a;this.b=rk()}var Zk={name:"pendingRedirect",C:"session"};function $k(a){return a.b.set(Zk,"pending",a.a)}function al(a){return vk(a.b,Zk,a.a)}function bl(a){return a.b.get(Zk,a.a).then(function(b){return"pending"==b})};function cl(a,b,c){this.i={};this.v=0;this.B=a;this.u=b;this.m=c;this.h=[];this.f=!1;this.l=t(this.o,this);this.b=new dl;this.w=new el;this.g=new Yk(this.u+":"+this.m);this.c={};this.c.unknown=this.b;this.c.signInViaRedirect=this.b;this.c.linkViaRedirect=this.b;this.c.reauthViaRedirect=this.b;this.c.signInViaPopup=this.w;this.c.linkViaPopup=this.w;this.c.reauthViaPopup=this.w;this.a=fl(this.B,this.u,this.m,Vf)}
function fl(a,b,c,d){var e=firebase.SDK_VERSION||null;return we()?new Pk(a,b,c,e,d):new vj(a,b,c,e,d)}cl.prototype.reset=function(){this.f=!1;this.a.La(this.l);this.a=fl(this.B,this.u,this.m);this.i={}};function gl(a){a.f||(a.f=!0,a.a.ya(a.l));var b=a.a;return a.a.ia().s(function(c){a.a==b&&a.reset();throw c;})}function hl(a){a.a.Ob()&&gl(a).s(function(b){var c=new Yg("unknown",null,null,null,new M("operation-not-supported-in-this-environment"));il(b)&&a.o(c)});a.a.Jb()||jl(a.b)}
function kl(a,b){Na(a.h,b)||a.h.push(b);a.f||bl(a.g).then(function(c){c?al(a.g).then(function(){gl(a).s(function(d){var e=new Yg("unknown",null,null,null,new M("operation-not-supported-in-this-environment"));il(d)&&a.o(e)})}):hl(a)}).s(function(){hl(a)})}function ll(a,b){Pa(a.h,function(c){return c==b})}
cl.prototype.o=function(a){if(!a)throw new M("invalid-auth-event");6E5<=ua()-this.v&&(this.i={},this.v=0);if(a&&a.getUid()&&this.i.hasOwnProperty(a.getUid()))return!1;for(var b=!1,c=0;c<this.h.length;c++){var d=this.h[c];if(d.xb(a.c,a.b)){if(b=this.c[a.c])b.h(a,d),a&&(a.f||a.b)&&(this.i[a.getUid()]=!0,this.v=ua());b=!0;break}}jl(this.b);return b};var ml=new Pe(2E3,1E4),nl=new Pe(3E4,6E4);cl.prototype.oa=function(){return this.b.oa()};
function ol(a,b,c,d,e,f,g){return a.a.Db(b,c,d,function(){a.f||(a.f=!0,a.a.ya(a.l))},function(){a.reset()},e,f,g)}function il(a){return a&&"auth/cordova-not-ready"==a.code?!0:!1}
function pl(a,b,c,d,e){var f;return $k(a.g).then(function(){return a.a.Eb(b,c,d,e).s(function(g){if(il(g))throw new M("operation-not-supported-in-this-environment");f=g;return al(a.g).then(function(){throw f;})}).then(function(){return a.a.Rb()?new B(function(){}):al(a.g).then(function(){return a.oa()}).then(function(){}).s(function(){})})})}function ql(a,b,c,d,e){return a.a.Fb(d,function(f){b.ja(c,null,f,e)},ml.get())}var rl={};
function sl(a,b,c){var d=b+":"+c;rl[d]||(rl[d]=new cl(a,b,c));return rl[d]}function dl(){this.b=null;this.f=[];this.c=[];this.a=null;this.i=this.g=!1}dl.prototype.reset=function(){this.b=null;this.a&&(this.a.cancel(),this.a=null)};
dl.prototype.h=function(a,b){if(a){this.reset();this.g=!0;var c=a.c,d=a.b,e=a.a&&"auth/web-storage-unsupported"==a.a.code,f=a.a&&"auth/operation-not-supported-in-this-environment"==a.a.code;this.i=!(!e&&!f);"unknown"!=c||e||f?a.a?(tl(this,!0,null,a.a),D()):b.za(c,d)?ul(this,a,b):E(new M("invalid-auth-event")):(tl(this,!1,null,null),D())}else E(new M("invalid-auth-event"))};function jl(a){a.g||(a.g=!0,tl(a,!1,null,null))}function vl(a){a.g&&!a.i&&tl(a,!1,null,null)}
function ul(a,b,c){c=c.za(b.c,b.b);var d=b.g,e=b.f,f=b.i,g=b.R(),h=!!b.c.match(/Redirect$/);c(d,e,g,f).then(function(m){tl(a,h,m,null)}).s(function(m){tl(a,h,null,m)})}function wl(a,b){a.b=function(){return E(b)};if(a.c.length)for(var c=0;c<a.c.length;c++)a.c[c](b)}function xl(a,b){a.b=function(){return D(b)};if(a.f.length)for(var c=0;c<a.f.length;c++)a.f[c](b)}function tl(a,b,c,d){b?d?wl(a,d):xl(a,c):xl(a,{user:null});a.f=[];a.c=[]}
dl.prototype.oa=function(){var a=this;return new B(function(b,c){a.b?a.b().then(b,c):(a.f.push(b),a.c.push(c),yl(a))})};function yl(a){var b=new M("timeout");a.a&&a.a.cancel();a.a=nd(nl.get()).then(function(){a.b||(a.g=!0,tl(a,!0,null,b))})}function el(){}el.prototype.h=function(a,b){if(a){var c=a.c,d=a.b;a.a?(b.ja(a.c,null,a.a,a.b),D()):b.za(c,d)?zl(a,b):E(new M("invalid-auth-event"))}else E(new M("invalid-auth-event"))};
function zl(a,b){var c=a.b,d=a.c;b.za(d,c)(a.g,a.f,a.R(),a.i).then(function(e){b.ja(d,e,null,c)}).s(function(e){b.ja(d,null,e,c)})};function Al(){this.vb=!1;Object.defineProperty(this,"appVerificationDisabled",{get:function(){return this.vb},set:function(a){this.vb=a},enumerable:!1})};function Bl(a,b){this.a=b;K(this,"verificationId",a)}Bl.prototype.confirm=function(a){a=Vg(this.verificationId,a);return this.a(a)};function Cl(a,b,c,d){return(new Tg(a)).Va(b,c).then(function(e){return new Bl(e,d)})};function Dl(a){var b=Sf(a);if(!(b&&b.exp&&b.auth_time&&b.iat))throw new M("internal-error","An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");L(this,{token:a,expirationTime:Se(1E3*b.exp),authTime:Se(1E3*b.auth_time),issuedAtTime:Se(1E3*b.iat),signInProvider:b.firebase&&b.firebase.sign_in_provider?b.firebase.sign_in_provider:null,claims:b})};function El(a,b,c){this.h=a;this.i=b;this.g=c;this.c=3E4;this.f=96E4;this.b=null;this.a=this.c;if(this.f<this.c)throw Error("Proactive refresh lower bound greater than upper bound!");}El.prototype.start=function(){this.a=this.c;Fl(this,!0)};function Gl(a,b){if(b)return a.a=a.c,a.g();b=a.a;a.a*=2;a.a>a.f&&(a.a=a.f);return b}function Fl(a,b){a.stop();a.b=nd(Gl(a,b)).then(function(){return Re()}).then(function(){return a.h()}).then(function(){Fl(a,!0)}).s(function(c){a.i(c)&&Fl(a,!1)})}
El.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)};function Hl(a){this.f=a;this.b=this.a=null;this.c=0}Hl.prototype.A=function(){return{apiKey:this.f.c,refreshToken:this.a,accessToken:this.b,expirationTime:this.c}};function Il(a,b){var c=b[lg],d=b.refreshToken;b=Jl(b.expiresIn);a.b=c;a.c=b;a.a=d}function Kl(a,b){a.b=b.b;a.a=b.a;a.c=b.c}function Jl(a){return ua()+1E3*parseInt(a,10)}
function Ll(a,b){return zi(a.f,b).then(function(c){a.b=c.access_token;a.c=Jl(c.expires_in);a.a=c.refresh_token;return{accessToken:a.b,expirationTime:a.c,refreshToken:a.a}}).s(function(c){"auth/user-token-expired"==c.code&&(a.a=null);throw c;})}Hl.prototype.getToken=function(a){a=!!a;return this.b&&!this.a?E(new M("user-token-expired")):a||!this.b||ua()>this.c-3E4?this.a?Ll(this,{grant_type:"refresh_token",refresh_token:this.a}):D(null):D({accessToken:this.b,expirationTime:this.c,refreshToken:this.a})};function Ml(a,b){this.a=a||null;this.b=b||null;L(this,{lastSignInTime:Se(b||null),creationTime:Se(a||null)})}function Nl(a){return new Ml(a.a,a.b)}Ml.prototype.A=function(){return{lastLoginAt:this.b,createdAt:this.a}};function Ol(a,b,c,d,e,f){L(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})}function Pl(a,b){F.call(this,a);for(var c in b)this[c]=b[c]}v(Pl,F);
function Q(a,b,c){this.I=[];this.l=a.apiKey;this.m=a.appName;this.o=a.authDomain||null;a=firebase.SDK_VERSION?Ee(firebase.SDK_VERSION):null;this.a=new ni(this.l,Uf(Vf),a);this.b=new Hl(this.a);Ql(this,b[lg]);Il(this.b,b);K(this,"refreshToken",this.b.a);Rl(this,c||{});G.call(this);this.J=!1;this.o&&He()&&(this.i=sl(this.o,this.l,this.m));this.O=[];this.h=null;this.w=Sl(this);this.W=t(this.Ha,this);var d=this;this.ga=null;this.va=function(e){d.sa(e.g)};this.Z=null;this.P=[];this.ua=function(e){Tl(d,
e.c)};this.Y=null}v(Q,G);Q.prototype.sa=function(a){this.ga=a;ti(this.a,a)};Q.prototype.ha=function(){return this.ga};function Ul(a,b){a.Z&&fd(a.Z,"languageCodeChanged",a.va);(a.Z=b)&&Wc(b,"languageCodeChanged",a.va)}function Tl(a,b){a.P=b;ui(a.a,firebase.SDK_VERSION?Ee(firebase.SDK_VERSION,a.P):null)}Q.prototype.Aa=function(){return Ra(this.P)};function Vl(a,b){a.Y&&fd(a.Y,"frameworkChanged",a.ua);(a.Y=b)&&Wc(b,"frameworkChanged",a.ua)}Q.prototype.Ha=function(){this.w.b&&(this.w.stop(),this.w.start())};
function Wl(a){try{return firebase.app(a.m).auth()}catch(b){throw new M("internal-error","No firebase.auth.Auth instance is available for the Firebase App '"+a.m+"'!");}}function Sl(a){return new El(function(){return a.G(!0)},function(b){return b&&"auth/network-request-failed"==b.code?!0:!1},function(){var b=a.b.c-ua()-3E5;return 0<b?b:0})}function Xl(a){a.B||a.w.b||(a.w.start(),fd(a,"tokenChanged",a.W),Wc(a,"tokenChanged",a.W))}function Yl(a){fd(a,"tokenChanged",a.W);a.w.stop()}
function Ql(a,b){a.ma=b;K(a,"_lat",b)}function Zl(a,b){Pa(a.O,function(c){return c==b})}function $l(a){for(var b=[],c=0;c<a.O.length;c++)b.push(a.O[c](a));return bc(b).then(function(){return a})}function am(a){a.i&&!a.J&&(a.J=!0,kl(a.i,a))}
function Rl(a,b){L(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,tenantId:b.tenantId||null,metadata:new Ml(b.createdAt,b.lastLoginAt),providerData:[]});a.a.b=a.tenantId}K(Q.prototype,"providerId","firebase");function bm(){}function cm(a){return D().then(function(){if(a.B)throw new M("app-deleted");})}
function dm(a){return Ja(a.providerData,function(b){return b.providerId})}function em(a,b){b&&(fm(a,b.providerId),a.providerData.push(b))}function fm(a,b){Pa(a.providerData,function(c){return c.providerId==b})}function gm(a,b,c){("uid"!=b||c)&&a.hasOwnProperty(b)&&K(a,b,c)}
function hm(a,b){a!=b&&(L(a,{uid:b.uid,displayName:b.displayName,photoURL:b.photoURL,email:b.email,emailVerified:b.emailVerified,phoneNumber:b.phoneNumber,isAnonymous:b.isAnonymous,tenantId:b.tenantId,providerData:[]}),b.metadata?K(a,"metadata",Nl(b.metadata)):K(a,"metadata",new Ml),x(b.providerData,function(c){em(a,c)}),Kl(a.b,b.b),K(a,"refreshToken",a.b.a))}k=Q.prototype;k.reload=function(){var a=this;return R(this,cm(this).then(function(){return im(a).then(function(){return $l(a)}).then(bm)}))};
function im(a){return a.G().then(function(b){var c=a.isAnonymous;return jm(a,b).then(function(){c||gm(a,"isAnonymous",!1);return b})})}k.dc=function(a){return this.G(a).then(function(b){return new Dl(b)})};k.G=function(a){var b=this;return R(this,cm(this).then(function(){return b.b.getToken(a)}).then(function(c){if(!c)throw new M("internal-error");c.accessToken!=b.ma&&(Ql(b,c.accessToken),b.dispatchEvent(new Pl("tokenChanged")));gm(b,"refreshToken",c.refreshToken);return c.accessToken}))};
function km(a,b){b[lg]&&a.ma!=b[lg]&&(Il(a.b,b),a.dispatchEvent(new Pl("tokenChanged")),Ql(a,b[lg]),gm(a,"refreshToken",a.b.a))}function jm(a,b){return P(a.a,gj,{idToken:b}).then(t(a.zc,a))}
k.zc=function(a){a=a.users;if(!a||!a.length)throw new M("internal-error");a=a[0];Rl(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber,lastLoginAt:a.lastLoginAt,createdAt:a.createdAt,tenantId:a.tenantId});for(var b=lm(a),c=0;c<b.length;c++)em(this,b[c]);gm(this,"isAnonymous",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};
function lm(a){return(a=a.providerUserInfo)&&a.length?Ja(a,function(b){return new Ol(b.rawId,b.providerId,b.email,b.displayName,b.photoUrl,b.phoneNumber)}):[]}k.Ac=function(a){Xe("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.");return this.gb(a)};
k.gb=function(a){var b=this,c=null;return R(this,a.f(this.a,this.uid).then(function(d){km(b,d);c=mm(b,d,"reauthenticate");b.h=null;return b.reload()}).then(function(){return c}),!0)};function nm(a,b){return im(a).then(function(){if(Na(dm(a),b))return $l(a).then(function(){throw new M("provider-already-linked");})})}k.rc=function(a){Xe("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.");return this.eb(a)};
k.eb=function(a){var b=this,c=null;return R(this,nm(this,a.providerId).then(function(){return b.G()}).then(function(d){return a.b(b.a,d)}).then(function(d){c=mm(b,d,"link");return om(b,d)}).then(function(){return c}))};k.sc=function(a,b){var c=this;return R(this,nm(this,"phone").then(function(){return Cl(Wl(c),a,b,t(c.eb,c))}))};k.Bc=function(a,b){var c=this;return R(this,D().then(function(){return Cl(Wl(c),a,b,t(c.gb,c))}),!0)};
function mm(a,b,c){var d=Wg(b);b=$f(b);return $e({user:a,credential:d,additionalUserInfo:b,operationType:c})}function om(a,b){km(a,b);return a.reload().then(function(){return a})}k.rb=function(a){var b=this;return R(this,this.G().then(function(c){return b.a.rb(c,a)}).then(function(c){km(b,c);return b.reload()}))};k.Sc=function(a){var b=this;return R(this,this.G().then(function(c){return a.b(b.a,c)}).then(function(c){km(b,c);return b.reload()}))};
k.sb=function(a){var b=this;return R(this,this.G().then(function(c){return b.a.sb(c,a)}).then(function(c){km(b,c);return b.reload()}))};
k.tb=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return cm(this);var b=this;return R(this,this.G().then(function(c){return b.a.tb(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(c){km(b,c);gm(b,"displayName",c.displayName||null);gm(b,"photoURL",c.photoUrl||null);x(b.providerData,function(d){"password"===d.providerId&&(K(d,"displayName",b.displayName),K(d,"photoURL",b.photoURL))});return $l(b)}).then(bm))};
k.Qc=function(a){var b=this;return R(this,im(this).then(function(c){return Na(dm(b),a)?Si(b.a,c,[a]).then(function(d){var e={};x(d.providerUserInfo||[],function(f){e[f.providerId]=!0});x(dm(b),function(f){e[f]||fm(b,f)});e[Tg.PROVIDER_ID]||K(b,"phoneNumber",null);return $l(b)}):$l(b).then(function(){throw new M("no-such-provider");})}))};
k.delete=function(){var a=this;return R(this,this.G().then(function(b){return P(a.a,fj,{idToken:b})}).then(function(){a.dispatchEvent(new Pl("userDeleted"))})).then(function(){for(var b=0;b<a.I.length;b++)a.I[b].cancel("app-deleted");Ul(a,null);Vl(a,null);a.I=[];a.B=!0;Yl(a);K(a,"refreshToken",null);a.i&&ll(a.i,a)})};
k.xb=function(a,b){return"linkViaPopup"==a&&(this.g||null)==b&&this.f||"reauthViaPopup"==a&&(this.g||null)==b&&this.f||"linkViaRedirect"==a&&(this.ca||null)==b||"reauthViaRedirect"==a&&(this.ca||null)==b?!0:!1};k.ja=function(a,b,c,d){"linkViaPopup"!=a&&"reauthViaPopup"!=a||d!=(this.g||null)||(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};
k.za=function(a,b){return"linkViaPopup"==a&&b==(this.g||null)?t(this.Bb,this):"reauthViaPopup"==a&&b==(this.g||null)?t(this.Cb,this):"linkViaRedirect"==a&&(this.ca||null)==b?t(this.Bb,this):"reauthViaRedirect"==a&&(this.ca||null)==b?t(this.Cb,this):null};k.tc=function(a){var b=this;return pm(this,"linkViaPopup",a,function(){return nm(b,a.providerId).then(function(){return $l(b)})},!1)};k.Cc=function(a){return pm(this,"reauthViaPopup",a,function(){return D()},!0)};
function pm(a,b,c,d,e){if(!He())return E(new M("operation-not-supported-in-this-environment"));if(a.h&&!e)return E(a.h);var f=Zf(c.providerId),g=Ge(a.uid+":::"),h=null;(!Je()||ye())&&a.o&&c.isOAuthProvider&&(h=Bj(a.o,a.l,a.m,b,c,null,g,firebase.SDK_VERSION||null,null,null,a.tenantId));var m=pe(h,f&&f.Da,f&&f.Ca);d=d().then(function(){qm(a);if(!e)return a.G().then(function(){})}).then(function(){return ol(a.i,m,b,c,g,!!h,a.tenantId)}).then(function(){return new B(function(p,u){a.ja(b,null,new M("cancelled-popup-request"),
a.g||null);a.f=p;a.v=u;a.g=g;a.c=ql(a.i,a,b,m,g)})}).then(function(p){m&&oe(m);return p?$e(p):null}).s(function(p){m&&oe(m);throw p;});return R(a,d,e)}k.uc=function(a){var b=this;return rm(this,"linkViaRedirect",a,function(){return nm(b,a.providerId)},!1)};k.Dc=function(a){return rm(this,"reauthViaRedirect",a,function(){return D()},!0)};
function rm(a,b,c,d,e){if(!He())return E(new M("operation-not-supported-in-this-environment"));if(a.h&&!e)return E(a.h);var f=null,g=Ge(a.uid+":::");d=d().then(function(){qm(a);if(!e)return a.G().then(function(){})}).then(function(){a.ca=g;return $l(a)}).then(function(h){a.da&&(h=a.da,h=h.b.set(sm,a.A(),h.a));return h}).then(function(){return pl(a.i,b,c,g,a.tenantId)}).s(function(h){f=h;if(a.da)return tm(a.da);throw f;}).then(function(){if(f)throw f;});return R(a,d,e)}
function qm(a){if(!a.i||!a.J){if(a.i&&!a.J)throw new M("internal-error");throw new M("auth-domain-config-required");}}k.Bb=function(a,b,c,d){var e=this;this.c&&(this.c.cancel(),this.c=null);var f=null;c=this.G().then(function(g){return pg(e.a,{requestUri:a,postBody:d,sessionId:b,idToken:g})}).then(function(g){f=mm(e,g,"link");return om(e,g)}).then(function(){return f});return R(this,c)};
k.Cb=function(a,b,c,d){var e=this;this.c&&(this.c.cancel(),this.c=null);var f=null,g=D().then(function(){return kg(qg(e.a,{requestUri:a,sessionId:b,postBody:d,tenantId:c}),e.uid)}).then(function(h){f=mm(e,h,"reauthenticate");km(e,h);e.h=null;return e.reload()}).then(function(){return f});return R(this,g,!0)};
k.jb=function(a){var b=this,c=null;return R(this,this.G().then(function(d){c=d;return"undefined"===typeof a||Ta(a)?{}:Jf(new zf(a))}).then(function(d){return b.a.jb(c,d)}).then(function(d){if(b.email!=d)return b.reload()}).then(function(){}))};function R(a,b,c){var d=um(a,b,c);a.I.push(d);d.ka(function(){Oa(a.I,d)});return d}
function um(a,b,c){return a.h&&!c?(b.cancel(),E(a.h)):b.s(function(d){!d||"auth/user-disabled"!=d.code&&"auth/user-token-expired"!=d.code||(a.h||a.dispatchEvent(new Pl("userInvalidated")),a.h=d);throw d;})}k.toJSON=function(){return this.A()};
k.A=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,tenantId:this.tenantId,providerData:[],apiKey:this.l,appName:this.m,authDomain:this.o,stsTokenManager:this.b.A(),redirectEventId:this.ca||null};this.metadata&&Wa(a,this.metadata.A());x(this.providerData,function(b){a.providerData.push(af(b))});return a};
function vm(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c[lg]=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-ua())/1E3;else return null;var d=new Q(b,c,a);a.providerData&&x(a.providerData,function(e){e&&em(d,$e(e))});a.redirectEventId&&(d.ca=a.redirectEventId);return d}
function wm(a,b,c,d){var e=new Q(a,b);c&&(e.da=c);d&&Tl(e,d);return e.reload().then(function(){return e})}function xm(a,b,c,d){b=b||{apiKey:a.l,authDomain:a.o,appName:a.m};var e=a.b,f={};f[lg]=e.b;f.refreshToken=e.a;f.expiresIn=(e.c-ua())/1E3;b=new Q(b,f);c&&(b.da=c);d&&Tl(b,d);hm(b,a);return b};function ym(a){this.a=a;this.b=rk()}var sm={name:"redirectUser",C:"session"};function tm(a){return vk(a.b,sm,a.a)}function zm(a,b){return a.b.get(sm,a.a).then(function(c){c&&b&&(c.authDomain=b);return vm(c||{})})};function Am(a){this.a=a;this.b=rk();this.c=null;this.f=Bm(this);this.b.addListener(Cm("local"),this.a,t(this.g,this))}Am.prototype.g=function(){var a=this,b=Cm("local");Dm(this,function(){return D().then(function(){return a.c&&"local"!=a.c.C?a.b.get(b,a.a):null}).then(function(c){if(c)return Em(a,"local").then(function(){a.c=b})})})};function Em(a,b){var c=[],d;for(d in nk)nk[d]!==b&&c.push(vk(a.b,Cm(nk[d]),a.a));c.push(vk(a.b,Fm,a.a));return ac(c)}
function Bm(a){var b=Cm("local"),c=Cm("session"),d=Cm("none");return uk(a.b,b,a.a).then(function(){return a.b.get(c,a.a)}).then(function(e){return e?c:a.b.get(d,a.a).then(function(f){return f?d:a.b.get(b,a.a).then(function(g){return g?b:a.b.get(Fm,a.a).then(function(h){return h?Cm(h):b})})})}).then(function(e){a.c=e;return Em(a,e.C)}).s(function(){a.c||(a.c=b)})}var Fm={name:"persistence",C:"session"};function Cm(a){return{name:"authUser",C:a}}
Am.prototype.mb=function(a){var b=null,c=this;ok(a);return Dm(this,function(){return a!=c.c.C?c.b.get(c.c,c.a).then(function(d){b=d;return Em(c,a)}).then(function(){c.c=Cm(a);if(b)return c.b.set(c.c,b,c.a)}):D()})};function Gm(a){return Dm(a,function(){return a.b.set(Fm,a.c.C,a.a)})}function Hm(a,b){return Dm(a,function(){return a.b.set(a.c,b.A(),a.a)})}function Im(a){return Dm(a,function(){return vk(a.b,a.c,a.a)})}
function Jm(a,b){return Dm(a,function(){return a.b.get(a.c,a.a).then(function(c){c&&b&&(c.authDomain=b);return vm(c||{})})})}function Dm(a,b){a.f=a.f.then(b,b);return a.f};function Km(a){this.l=!1;K(this,"settings",new Al);K(this,"app",a);if(S(this).options&&S(this).options.apiKey)a=firebase.SDK_VERSION?Ee(firebase.SDK_VERSION):null,this.b=new ni(S(this).options&&S(this).options.apiKey,Uf(Vf),a);else throw new M("invalid-api-key");this.O=[];this.m=[];this.J=[];this.Ub=firebase.INTERNAL.createSubscribe(t(this.oc,this));this.W=void 0;this.Vb=firebase.INTERNAL.createSubscribe(t(this.pc,this));Lm(this,null);this.h=new Am(S(this).options.apiKey+":"+S(this).name);this.w=
new ym(S(this).options.apiKey+":"+S(this).name);this.Y=T(this,Mm(this));this.i=T(this,Nm(this));this.ga=!1;this.ma=t(this.Nc,this);this.ub=t(this.aa,this);this.ua=t(this.bc,this);this.va=t(this.mc,this);this.Ha=t(this.nc,this);this.a=null;Om(this);this.INTERNAL={};this.INTERNAL["delete"]=t(this.delete,this);this.INTERNAL.logFramework=t(this.vc,this);this.o=0;G.call(this);Pm(this);this.I=[]}v(Km,G);function Qm(a){F.call(this,"languageCodeChanged");this.g=a}v(Qm,F);
function Rm(a){F.call(this,"frameworkChanged");this.c=a}v(Rm,F);k=Km.prototype;k.mb=function(a){a=this.h.mb(a);return T(this,a)};k.sa=function(a){this.Z===a||this.l||(this.Z=a,ti(this.b,this.Z),this.dispatchEvent(new Qm(this.ha())))};k.ha=function(){return this.Z};k.Tc=function(){var a=l.navigator;this.sa(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};k.vc=function(a){this.I.push(a);ui(this.b,firebase.SDK_VERSION?Ee(firebase.SDK_VERSION,this.I):null);this.dispatchEvent(new Rm(this.I))};
k.Aa=function(){return Ra(this.I)};k.nb=function(a){this.P===a||this.l||(this.P=a,this.b.b=this.P)};k.R=function(){return this.P};function Pm(a){Object.defineProperty(a,"lc",{get:function(){return this.ha()},set:function(b){this.sa(b)},enumerable:!1});a.Z=null;Object.defineProperty(a,"ti",{get:function(){return this.R()},set:function(b){this.nb(b)},enumerable:!1});a.P=null}
k.toJSON=function(){return{apiKey:S(this).options.apiKey,authDomain:S(this).options.authDomain,appName:S(this).name,currentUser:U(this)&&U(this).A()}};function Sm(a){return a.Tb||E(new M("auth-domain-config-required"))}function Om(a){var b=S(a).options.authDomain,c=S(a).options.apiKey;b&&He()&&(a.Tb=a.Y.then(function(){if(!a.l){a.a=sl(b,c,S(a).name);kl(a.a,a);U(a)&&am(U(a));if(a.B){am(a.B);var d=a.B;d.sa(a.ha());Ul(d,a);d=a.B;Tl(d,a.I);Vl(d,a);a.B=null}return a.a}}))}
k.xb=function(a,b){switch(a){case "unknown":case "signInViaRedirect":return!0;case "signInViaPopup":return this.g==b&&!!this.f;default:return!1}};k.ja=function(a,b,c,d){"signInViaPopup"==a&&this.g==d&&(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};k.za=function(a,b){return"signInViaRedirect"==a||"signInViaPopup"==a&&this.g==b&&this.f?t(this.ac,this):null};
k.ac=function(a,b,c,d){var e=this;a={requestUri:a,postBody:d,sessionId:b,tenantId:c};this.c&&(this.c.cancel(),this.c=null);var f=null,g=null,h=ng(e.b,a).then(function(m){f=Wg(m);g=$f(m);return m});a=e.Y.then(function(){return h}).then(function(m){return Tm(e,m)}).then(function(){return $e({user:U(e),credential:f,additionalUserInfo:g,operationType:"signIn"})});return T(this,a)};
k.Lc=function(a){if(!He())return E(new M("operation-not-supported-in-this-environment"));var b=this,c=Zf(a.providerId),d=Ge(),e=null;(!Je()||ye())&&S(this).options.authDomain&&a.isOAuthProvider&&(e=Bj(S(this).options.authDomain,S(this).options.apiKey,S(this).name,"signInViaPopup",a,null,d,firebase.SDK_VERSION||null,null,null,this.R()));var f=pe(e,c&&c.Da,c&&c.Ca);c=Sm(this).then(function(g){return ol(g,f,"signInViaPopup",a,d,!!e,b.R())}).then(function(){return new B(function(g,h){b.ja("signInViaPopup",
null,new M("cancelled-popup-request"),b.g);b.f=g;b.v=h;b.g=d;b.c=ql(b.a,b,"signInViaPopup",f,d)})}).then(function(g){f&&oe(f);return g?$e(g):null}).s(function(g){f&&oe(f);throw g;});return T(this,c)};k.Mc=function(a){if(!He())return E(new M("operation-not-supported-in-this-environment"));var b=this,c=Sm(this).then(function(){return Gm(b.h)}).then(function(){return pl(b.a,"signInViaRedirect",a,void 0,b.R())});return T(this,c)};
function Um(a){if(!He())return E(new M("operation-not-supported-in-this-environment"));var b=Sm(a).then(function(){return a.a.oa()}).then(function(c){return c?$e(c):null});return T(a,b)}k.oa=function(){var a=this;return Um(this).then(function(b){a.a&&vl(a.a.b);return b}).s(function(b){a.a&&vl(a.a.b);throw b;})};
k.Rc=function(a){if(!a)return E(new M("null-user"));if(this.P!=a.tenantId)return E(new M("tenant-id-mismatch"));var b=this,c={};c.apiKey=S(this).options.apiKey;c.authDomain=S(this).options.authDomain;c.appName=S(this).name;var d=xm(a,c,b.w,b.Aa());return T(this,this.i.then(function(){if(S(b).options.apiKey!=a.l)return d.reload()}).then(function(){if(U(b)&&a.uid==U(b).uid)return hm(U(b),a),b.aa(a);Lm(b,d);am(d);return b.aa(d)}).then(function(){Vm(b)}))};
function Tm(a,b){var c={};c.apiKey=S(a).options.apiKey;c.authDomain=S(a).options.authDomain;c.appName=S(a).name;return a.Y.then(function(){return wm(c,b,a.w,a.Aa())}).then(function(d){if(U(a)&&d.uid==U(a).uid)return hm(U(a),d),a.aa(d);Lm(a,d);am(d);return a.aa(d)}).then(function(){Vm(a)})}
function Lm(a,b){U(a)&&(Zl(U(a),a.ub),fd(U(a),"tokenChanged",a.ua),fd(U(a),"userDeleted",a.va),fd(U(a),"userInvalidated",a.Ha),Yl(U(a)));b&&(b.O.push(a.ub),Wc(b,"tokenChanged",a.ua),Wc(b,"userDeleted",a.va),Wc(b,"userInvalidated",a.Ha),0<a.o&&Xl(b));K(a,"currentUser",b);b&&(b.sa(a.ha()),Ul(b,a),Tl(b,a.I),Vl(b,a))}k.pb=function(){var a=this,b=this.i.then(function(){a.a&&vl(a.a.b);if(!U(a))return D();Lm(a,null);return Im(a.h).then(function(){Vm(a)})});return T(this,b)};
function Wm(a){var b=zm(a.w,S(a).options.authDomain).then(function(c){if(a.B=c)c.da=a.w;return tm(a.w)});return T(a,b)}function Mm(a){var b=S(a).options.authDomain,c=Wm(a).then(function(){return Jm(a.h,b)}).then(function(d){return d?(d.da=a.w,a.B&&(a.B.ca||null)==(d.ca||null)?d:d.reload().then(function(){return Hm(a.h,d).then(function(){return d})}).s(function(e){return"auth/network-request-failed"==e.code?d:Im(a.h)})):null}).then(function(d){Lm(a,d||null)});return T(a,c)}
function Nm(a){return a.Y.then(function(){return Um(a)}).s(function(){}).then(function(){if(!a.l)return a.ma()}).s(function(){}).then(function(){if(!a.l){a.ga=!0;var b=a.h;b.b.addListener(Cm("local"),b.a,a.ma)}})}
k.Nc=function(){var a=this;return Jm(this.h,S(this).options.authDomain).then(function(b){if(!a.l){var c;if(c=U(a)&&b){c=U(a).uid;var d=b.uid;c=void 0===c||null===c||""===c||void 0===d||null===d||""===d?!1:c==d}if(c)return hm(U(a),b),U(a).G();if(U(a)||b)Lm(a,b),b&&(am(b),b.da=a.w),a.a&&kl(a.a,a),Vm(a)}})};k.aa=function(a){return Hm(this.h,a)};k.bc=function(){Vm(this);this.aa(U(this))};k.mc=function(){this.pb()};k.nc=function(){this.pb()};
function Xm(a,b){var c=null,d=null;return T(a,b.then(function(e){c=Wg(e);d=$f(e);return Tm(a,e)}).then(function(){return $e({user:U(a),credential:c,additionalUserInfo:d,operationType:"signIn"})}))}k.oc=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};k.pc=function(a){var b=this;Ym(this,function(){a.next(U(b))})};k.xc=function(a,b,c){var d=this;this.ga&&Promise.resolve().then(function(){q(a)?a(U(d)):q(a.next)&&a.next(U(d))});return this.Ub(a,b,c)};
k.wc=function(a,b,c){var d=this;this.ga&&Promise.resolve().then(function(){d.W=d.getUid();q(a)?a(U(d)):q(a.next)&&a.next(U(d))});return this.Vb(a,b,c)};k.cc=function(a){var b=this,c=this.i.then(function(){return U(b)?U(b).G(a).then(function(d){return{accessToken:d}}):null});return T(this,c)};k.Hc=function(a){var b=this;return this.i.then(function(){return Xm(b,P(b.b,ij,{token:a}))}).then(function(c){var d=c.user;gm(d,"isAnonymous",!1);b.aa(d);return c})};
k.Ic=function(a,b){var c=this;return this.i.then(function(){return Xm(c,P(c.b,Ig,{email:a,password:b}))})};k.Xb=function(a,b){var c=this;return this.i.then(function(){return Xm(c,P(c.b,ej,{email:a,password:b}))})};k.Ra=function(a){var b=this;return this.i.then(function(){return Xm(b,a.na(b.b))})};k.Gc=function(a){Xe("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.");return this.Ra(a)};
k.ob=function(){var a=this;return this.i.then(function(){var b=U(a);if(b&&b.isAnonymous){var c=$e({providerId:null,isNewUser:!1});return $e({user:b,credential:null,additionalUserInfo:c,operationType:"signIn"})}return Xm(a,a.b.ob()).then(function(d){var e=d.user;gm(e,"isAnonymous",!0);a.aa(e);return d})})};function S(a){return a.app}function U(a){return a.currentUser}k.getUid=function(){return U(this)&&U(this).uid||null};function Zm(a){return U(a)&&U(a)._lat||null}
function Vm(a){if(a.ga){for(var b=0;b<a.m.length;b++)if(a.m[b])a.m[b](Zm(a));if(a.W!==a.getUid()&&a.J.length)for(a.W=a.getUid(),b=0;b<a.J.length;b++)if(a.J[b])a.J[b](Zm(a))}}k.Wb=function(a){this.addAuthTokenListener(a);this.o++;0<this.o&&U(this)&&Xl(U(this))};k.Ec=function(a){var b=this;x(this.m,function(c){c==a&&b.o--});0>this.o&&(this.o=0);0==this.o&&U(this)&&Yl(U(this));this.removeAuthTokenListener(a)};
k.addAuthTokenListener=function(a){var b=this;this.m.push(a);T(this,this.i.then(function(){b.l||Na(b.m,a)&&a(Zm(b))}))};k.removeAuthTokenListener=function(a){Pa(this.m,function(b){return b==a})};function Ym(a,b){a.J.push(b);T(a,a.i.then(function(){!a.l&&Na(a.J,b)&&a.W!==a.getUid()&&(a.W=a.getUid(),b(Zm(a)))}))}
k.delete=function(){this.l=!0;for(var a=0;a<this.O.length;a++)this.O[a].cancel("app-deleted");this.O=[];this.h&&(a=this.h,a.b.removeListener(Cm("local"),a.a,this.ma));this.a&&(ll(this.a,this),vl(this.a.b));return Promise.resolve()};function T(a,b){a.O.push(b);b.ka(function(){Oa(a.O,b)});return b}k.$b=function(a){return T(this,Ei(this.b,a))};k.qc=function(a){return!!Ng(a)};
k.lb=function(a,b){var c=this;return T(this,D().then(function(){var d=new zf(b);if(!d.c)throw new M("argument-error",Hf+" must be true when sending sign in link to email");return Jf(d)}).then(function(d){return c.b.lb(a,d)}).then(function(){}))};k.Uc=function(a){return this.Ka(a).then(function(b){return b.data.email})};k.$a=function(a,b){return T(this,this.b.$a(a,b).then(function(){}))};k.Ka=function(a){return T(this,this.b.Ka(a).then(function(b){return new df(b)}))};
k.Xa=function(a){return T(this,this.b.Xa(a).then(function(){}))};k.kb=function(a,b){var c=this;return T(this,D().then(function(){return"undefined"===typeof b||Ta(b)?{}:Jf(new zf(b))}).then(function(d){return c.b.kb(a,d)}).then(function(){}))};k.Kc=function(a,b){return T(this,Cl(this,a,b,t(this.Ra,this)))};
k.Jc=function(a,b){var c=this;return T(this,D().then(function(){var d=b||he(),e=Mg(a,d);d=Ng(d);if(!d)throw new M("argument-error","Invalid email link!");if(d.tenantId!==c.R())throw new M("tenant-id-mismatch");return c.Ra(e)}))};function $m(){}$m.prototype.render=function(){};$m.prototype.reset=function(){};$m.prototype.getResponse=function(){};$m.prototype.execute=function(){};function an(){this.a={};this.b=1E12}var bn=null;an.prototype.render=function(a,b){this.a[this.b.toString()]=new cn(a,b);return this.b++};an.prototype.reset=function(a){var b=dn(this,a);a=en(a);b&&a&&(b.delete(),delete this.a[a])};an.prototype.getResponse=function(a){return(a=dn(this,a))?a.getResponse():null};an.prototype.execute=function(a){(a=dn(this,a))&&a.execute()};function dn(a,b){return(b=en(b))?a.a[b]||null:null}function en(a){return(a="undefined"===typeof a?1E12:a)?a.toString():null}
function cn(a,b){this.g=!1;this.c=b;this.a=this.b=null;this.h="invisible"!==this.c.size;this.f=Vd(a);var c=this;this.i=function(){c.execute()};this.h?this.execute():Wc(this.f,"click",this.i)}cn.prototype.getResponse=function(){fn(this);return this.b};
cn.prototype.execute=function(){fn(this);var a=this;this.a||(this.a=setTimeout(function(){a.b=Ce();var b=a.c.callback,c=a.c["expired-callback"];if(b)try{b(a.b)}catch(d){}a.a=setTimeout(function(){a.a=null;a.b=null;if(c)try{c()}catch(d){}a.h&&a.execute()},6E4)},500))};cn.prototype.delete=function(){fn(this);this.g=!0;clearTimeout(this.a);this.a=null;fd(this.f,"click",this.i)};function fn(a){if(a.g)throw Error("reCAPTCHA mock was already deleted!");};function gn(){}gn.prototype.g=function(){bn||(bn=new an);return D(bn)};gn.prototype.c=function(){};var hn=null;function jn(){this.b=l.grecaptcha?Infinity:0;this.f=null;this.a="__rcb"+Math.floor(1E6*Math.random()).toString()}var kn=new Xa(Ya,"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),ln=new Pe(3E4,6E4);
jn.prototype.g=function(a){var b=this;return new B(function(c,d){var e=setTimeout(function(){d(new M("network-request-failed"))},ln.get());if(!l.grecaptcha||a!==b.f&&!b.b){l[b.a]=function(){if(l.grecaptcha){b.f=a;var g=l.grecaptcha.render;l.grecaptcha.render=function(h,m){h=g(h,m);b.b++;return h};clearTimeout(e);c(l.grecaptcha)}else clearTimeout(e),d(new M("internal-error"));delete l[b.a]};var f=eb(kn,{onload:b.a,hl:a||""});D(gi(f)).s(function(){clearTimeout(e);d(new M("internal-error","Unable to load external reCAPTCHA dependencies!"))})}else clearTimeout(e),
c(l.grecaptcha)})};jn.prototype.c=function(){this.b--};var mn=null;function nn(a,b,c,d,e,f,g){K(this,"type","recaptcha");this.c=this.f=null;this.B=!1;this.u=b;this.g=null;g?(hn||(hn=new gn),g=hn):(mn||(mn=new jn),g=mn);this.m=g;this.a=c||{theme:"light",type:"image"};this.h=[];if(this.a[on])throw new M("argument-error","sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");this.i="invisible"===this.a[pn];if(!l.document)throw new M("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");
if(!Vd(b)||!this.i&&Vd(b).hasChildNodes())throw new M("argument-error","reCAPTCHA container is either not found or already contains inner elements!");this.o=new ni(a,f||null,e||null);this.v=d||function(){return null};var h=this;this.l=[];var m=this.a[qn];this.a[qn]=function(u){rn(h,u);if("function"===typeof m)m(u);else if("string"===typeof m){var A=J(m,l);"function"===typeof A&&A(u)}};var p=this.a[sn];this.a[sn]=function(){rn(h,null);if("function"===typeof p)p();else if("string"===typeof p){var u=
J(p,l);"function"===typeof u&&u()}}}var qn="callback",sn="expired-callback",on="sitekey",pn="size";function rn(a,b){for(var c=0;c<a.l.length;c++)try{a.l[c](b)}catch(d){}}function tn(a,b){Pa(a.l,function(c){return c==b})}function un(a,b){a.h.push(b);b.ka(function(){Oa(a.h,b)});return b}k=nn.prototype;
k.Ba=function(){var a=this;return this.f?this.f:this.f=un(this,D().then(function(){if(Ie()&&!ze())return ue();throw new M("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");}).then(function(){return a.m.g(a.v())}).then(function(b){a.g=b;return P(a.o,hj,{})}).then(function(b){a.a[on]=b.recaptchaSiteKey}).s(function(b){a.f=null;throw b;}))};
k.render=function(){vn(this);var a=this;return un(this,this.Ba().then(function(){if(null===a.c){var b=a.u;if(!a.i){var c=Vd(b);b=Yd("DIV");c.appendChild(b)}a.c=a.g.render(b,a.a)}return a.c}))};k.verify=function(){vn(this);var a=this;return un(this,this.render().then(function(b){return new B(function(c){var d=a.g.getResponse(b);if(d)c(d);else{var e=function(f){f&&(tn(a,e),c(f))};a.l.push(e);a.i&&a.g.execute(a.c)}})}))};k.reset=function(){vn(this);null!==this.c&&this.g.reset(this.c)};
function vn(a){if(a.B)throw new M("internal-error","RecaptchaVerifier instance has been destroyed.");}k.clear=function(){vn(this);this.B=!0;this.m.c();for(var a=0;a<this.h.length;a++)this.h[a].cancel("RecaptchaVerifier instance has been destroyed.");if(!this.i){a=Vd(this.u);for(var b;b=a.firstChild;)a.removeChild(b)}};
function wn(a,b,c){var d=!1;try{this.b=c||firebase.app()}catch(g){throw new M("argument-error","No firebase.app.App instance is currently initialized.");}if(this.b.options&&this.b.options.apiKey)c=this.b.options.apiKey;else throw new M("invalid-api-key");var e=this,f=null;try{f=this.b.auth().Aa()}catch(g){}try{d=this.b.auth().settings.appVerificationDisabledForTesting}catch(g){}f=firebase.SDK_VERSION?Ee(firebase.SDK_VERSION,f):null;nn.call(this,c,a,b,function(){try{var g=e.b.auth().ha()}catch(h){g=
null}return g},f,Uf(Vf),d)}v(wn,nn);function xn(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,g=0;g<b.length;g++)if(b[g].optional)f=!0;else{if(f)throw new M("internal-error","Argument validator encountered a required argument after an optional argument.");e++}f=b.length;if(c.length<e||f<c.length)d="Expected "+(e==f?1==e?"1 argument":e+" arguments":e+"-"+f+" arguments")+" but got "+c.length+".";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].N(c[e])&&!f){b=b[e];if(0>e||e>=yn.length)throw new M("internal-error",
"Argument validator received an unsupported number of arguments.");c=yn[e];d=(d?"":c+" argument ")+(b.name?'"'+b.name+'" ':"")+"must be "+b.M+".";break a}d=null}}if(d)throw new M("argument-error",a+" failed: "+d);}var yn="First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");function V(a,b){return{name:a||"",M:"a valid string",optional:!!b,N:n}}function zn(a,b){return{name:a||"",M:"a boolean",optional:!!b,N:ha}}
function W(a,b){return{name:a||"",M:"a valid object",optional:!!b,N:r}}function An(a,b){return{name:a||"",M:"a function",optional:!!b,N:q}}function Bn(a,b){return{name:a||"",M:"null",optional:!!b,N:ma}}function Cn(){return{name:"",M:"an HTML element",optional:!1,N:function(a){return!!(a&&a instanceof Element)}}}function Dn(){return{name:"auth",M:"an instance of Firebase Auth",optional:!0,N:function(a){return!!(a&&a instanceof Km)}}}
function En(){return{name:"app",M:"an instance of Firebase App",optional:!0,N:function(a){return!!(a&&a instanceof firebase.app.App)}}}function Fn(a){return{name:a?a+"Credential":"credential",M:a?"a valid "+a+" credential":"a valid credential",optional:!1,N:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.na||!c)}}}
function Gn(){return{name:"authProvider",M:"a valid Auth provider",optional:!1,N:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty("isOAuthProvider"))}}}function Hn(){return{name:"applicationVerifier",M:"an implementation of firebase.auth.ApplicationVerifier",optional:!1,N:function(a){return!!(a&&n(a.type)&&q(a.verify))}}}function X(a,b,c,d){return{name:c||"",M:a.M+" or "+b.M,optional:!!d,N:function(e){return a.N(e)||b.N(e)}}};function Y(a,b){for(var c in b){var d=b[c].name;a[d]=In(d,a[c],b[c].j)}}function Jn(a,b){for(var c in b){var d=b[c].name;d!==c&&Object.defineProperty(a,d,{get:ta(function(e){return this[e]},c),set:ta(function(e,f,g,h){xn(e,[g],[h],!0);this[f]=h},d,c,b[c].Ya),enumerable:!0})}}function Z(a,b,c,d){a[b]=In(b,c,d)}
function In(a,b,c){function d(){var g=Array.prototype.slice.call(arguments);xn(e,c,g);return b.apply(this,g)}if(!c)return b;var e=Kn(a),f;for(f in b)d[f]=b[f];for(f in b.prototype)d.prototype[f]=b.prototype[f];return d}function Kn(a){a=a.split(".");return a[a.length-1]};Y(Km.prototype,{Xa:{name:"applyActionCode",j:[V("code")]},Ka:{name:"checkActionCode",j:[V("code")]},$a:{name:"confirmPasswordReset",j:[V("code"),V("newPassword")]},Xb:{name:"createUserWithEmailAndPassword",j:[V("email"),V("password")]},$b:{name:"fetchSignInMethodsForEmail",j:[V("email")]},oa:{name:"getRedirectResult",j:[]},qc:{name:"isSignInWithEmailLink",j:[V("emailLink")]},wc:{name:"onAuthStateChanged",j:[X(W(),An(),"nextOrObserver"),An("opt_error",!0),An("opt_completed",!0)]},xc:{name:"onIdTokenChanged",
j:[X(W(),An(),"nextOrObserver"),An("opt_error",!0),An("opt_completed",!0)]},kb:{name:"sendPasswordResetEmail",j:[V("email"),X(W("opt_actionCodeSettings",!0),Bn(null,!0),"opt_actionCodeSettings",!0)]},lb:{name:"sendSignInLinkToEmail",j:[V("email"),W("actionCodeSettings")]},mb:{name:"setPersistence",j:[V("persistence")]},Gc:{name:"signInAndRetrieveDataWithCredential",j:[Fn()]},ob:{name:"signInAnonymously",j:[]},Ra:{name:"signInWithCredential",j:[Fn()]},Hc:{name:"signInWithCustomToken",j:[V("token")]},
Ic:{name:"signInWithEmailAndPassword",j:[V("email"),V("password")]},Jc:{name:"signInWithEmailLink",j:[V("email"),V("emailLink",!0)]},Kc:{name:"signInWithPhoneNumber",j:[V("phoneNumber"),Hn()]},Lc:{name:"signInWithPopup",j:[Gn()]},Mc:{name:"signInWithRedirect",j:[Gn()]},Rc:{name:"updateCurrentUser",j:[X(function(a){return{name:"user",M:"an instance of Firebase User",optional:!!a,N:function(b){return!!(b&&b instanceof Q)}}}(),Bn(),"user")]},pb:{name:"signOut",j:[]},toJSON:{name:"toJSON",j:[V(null,!0)]},
Tc:{name:"useDeviceLanguage",j:[]},Uc:{name:"verifyPasswordResetCode",j:[V("code")]}});Jn(Km.prototype,{lc:{name:"languageCode",Ya:X(V(),Bn(),"languageCode")},ti:{name:"tenantId",Ya:X(V(),Bn(),"tenantId")}});Km.Persistence=nk;Km.Persistence.LOCAL="local";Km.Persistence.SESSION="session";Km.Persistence.NONE="none";
Y(Q.prototype,{"delete":{name:"delete",j:[]},dc:{name:"getIdTokenResult",j:[zn("opt_forceRefresh",!0)]},G:{name:"getIdToken",j:[zn("opt_forceRefresh",!0)]},rc:{name:"linkAndRetrieveDataWithCredential",j:[Fn()]},eb:{name:"linkWithCredential",j:[Fn()]},sc:{name:"linkWithPhoneNumber",j:[V("phoneNumber"),Hn()]},tc:{name:"linkWithPopup",j:[Gn()]},uc:{name:"linkWithRedirect",j:[Gn()]},Ac:{name:"reauthenticateAndRetrieveDataWithCredential",j:[Fn()]},gb:{name:"reauthenticateWithCredential",j:[Fn()]},Bc:{name:"reauthenticateWithPhoneNumber",
j:[V("phoneNumber"),Hn()]},Cc:{name:"reauthenticateWithPopup",j:[Gn()]},Dc:{name:"reauthenticateWithRedirect",j:[Gn()]},reload:{name:"reload",j:[]},jb:{name:"sendEmailVerification",j:[X(W("opt_actionCodeSettings",!0),Bn(null,!0),"opt_actionCodeSettings",!0)]},toJSON:{name:"toJSON",j:[V(null,!0)]},Qc:{name:"unlink",j:[V("provider")]},rb:{name:"updateEmail",j:[V("email")]},sb:{name:"updatePassword",j:[V("password")]},Sc:{name:"updatePhoneNumber",j:[Fn("phone")]},tb:{name:"updateProfile",j:[W("profile")]}});
Y(an.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}});Y($m.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}});Y(B.prototype,{ka:{name:"finally"},s:{name:"catch"},then:{name:"then"}});Jn(Al.prototype,{appVerificationDisabled:{name:"appVerificationDisabledForTesting",Ya:zn("appVerificationDisabledForTesting")}});Y(Bl.prototype,{confirm:{name:"confirm",j:[V("verificationCode")]}});
Z(jg,"fromJSON",function(a){a=n(a)?JSON.parse(a):a;for(var b,c=[ug,Lg,Sg,rg],d=0;d<c.length;d++)if(b=c[d](a))return b;return null},[X(V(),W(),"json")]);Z(Gg,"credential",function(a,b){return new Fg(a,b)},[V("email"),V("password")]);Y(Fg.prototype,{A:{name:"toJSON",j:[V(null,!0)]}});Y(xg.prototype,{wa:{name:"addScope",j:[V("scope")]},Ea:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(xg,"credential",yg,[X(V(),W(),"token")]);Z(Gg,"credentialWithLink",Mg,[V("email"),V("emailLink")]);
Y(zg.prototype,{wa:{name:"addScope",j:[V("scope")]},Ea:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(zg,"credential",Ag,[X(V(),W(),"token")]);Y(Bg.prototype,{wa:{name:"addScope",j:[V("scope")]},Ea:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(Bg,"credential",Cg,[X(V(),X(W(),Bn()),"idToken"),X(V(),Bn(),"accessToken",!0)]);Y(Dg.prototype,{Ea:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Z(Dg,"credential",Eg,[X(V(),W(),"token"),V("secret",!0)]);
Y(O.prototype,{wa:{name:"addScope",j:[V("scope")]},credential:{name:"credential",j:[X(V(),X(W(),Bn()),"optionsOrIdToken"),X(V(),Bn(),"accessToken",!0)]},Ea:{name:"setCustomParameters",j:[W("customOAuthParameters")]}});Y(sg.prototype,{A:{name:"toJSON",j:[V(null,!0)]}});Y(mg.prototype,{A:{name:"toJSON",j:[V(null,!0)]}});Z(Tg,"credential",Vg,[V("verificationId"),V("verificationCode")]);Y(Tg.prototype,{Va:{name:"verifyPhoneNumber",j:[V("phoneNumber"),Hn()]}});
Y(Og.prototype,{A:{name:"toJSON",j:[V(null,!0)]}});Y(M.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(dh.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(ch.prototype,{toJSON:{name:"toJSON",j:[V(null,!0)]}});Y(wn.prototype,{clear:{name:"clear",j:[]},render:{name:"render",j:[]},verify:{name:"verify",j:[]}});Z(qf,"parseLink",yf,[V("link")]);
(function(){if("undefined"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={ActionCodeInfo:{Operation:{EMAIL_SIGNIN:hf,PASSWORD_RESET:"PASSWORD_RESET",RECOVER_EMAIL:"RECOVER_EMAIL",VERIFY_EMAIL:"VERIFY_EMAIL"}},Auth:Km,AuthCredential:jg,Error:M};Z(a,"EmailAuthProvider",Gg,[]);Z(a,"FacebookAuthProvider",xg,[]);Z(a,"GithubAuthProvider",zg,[]);Z(a,"GoogleAuthProvider",Bg,[]);Z(a,"TwitterAuthProvider",Dg,[]);Z(a,"OAuthProvider",O,[V("providerId")]);Z(a,"SAMLAuthProvider",
wg,[V("providerId")]);Z(a,"PhoneAuthProvider",Tg,[Dn()]);Z(a,"RecaptchaVerifier",wn,[X(V(),Cn(),"recaptchaContainer"),W("recaptchaParameters",!0),En()]);Z(a,"ActionCodeURL",qf,[]);firebase.INTERNAL.registerService("auth",function(b,c){b=new Km(b);c({INTERNAL:{getUid:t(b.getUid,b),getToken:t(b.cc,b),addAuthTokenListener:t(b.Wb,b),removeAuthTokenListener:t(b.Ec,b)}});return b},a,function(b,c){if("create"===b)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:Q})}else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");
})();}).apply(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});



}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"@firebase/app":145}],147:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var firebase = _interopDefault(require('@firebase/app'));
var tslib = require('tslib');
var util = require('@firebase/util');
var idb = require('idb');

var version = "0.3.2";

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PENDING_TIMEOUT_MS = 10000;
var PACKAGE_VERSION = "w:" + version;
var INTERNAL_AUTH_VERSION = 'FIS_v2';
var INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';
var TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour
var SERVICE = 'installations';
var SERVICE_NAME = 'Installations';

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERROR_DESCRIPTION_MAP = (_a = {},
    _a["missing-app-config-values" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration values.',
    _a["create-installation-failed" /* CREATE_INSTALLATION_FAILED */] = 'Could not register Firebase Installation.',
    _a["generate-token-failed" /* GENERATE_TOKEN_FAILED */] = 'Could not generate Auth Token.',
    _a["not-registered" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',
    _a["installation-not-found" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',
    _a["request-failed" /* REQUEST_FAILED */] = '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
    _a["app-offline" /* APP_OFFLINE */] = 'Could not process request. Application offline.',
    _a["delete-pending-registration" /* DELETE_PENDING_REGISTRATION */] = "Can't delete installation while there is a pending registration request.",
    _a);
var ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);
/** Returns true if error is a FirebaseError that is based on an error from the server. */
function isServerError(error) {
    return (error instanceof util.FirebaseError &&
        error.code.includes("request-failed" /* REQUEST_FAILED */));
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function extractAppConfig(app) {
    if (!app || !app.options) {
        throw ERROR_FACTORY.create("missing-app-config-values" /* MISSING_APP_CONFIG_VALUES */);
    }
    var appName = app.name;
    var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;
    if (!appName || !projectId || !apiKey || !appId) {
        throw ERROR_FACTORY.create("missing-app-config-values" /* MISSING_APP_CONFIG_VALUES */);
    }
    return { appName: appName, projectId: projectId, apiKey: apiKey, appId: appId };
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getInstallationsEndpoint(_a) {
    var projectId = _a.projectId;
    return INSTALLATIONS_API_URL + "/projects/" + projectId + "/installations";
}
function extractAuthTokenInfoFromResponse(response) {
    return {
        token: response.token,
        requestStatus: 2 /* COMPLETED */,
        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),
        creationTime: Date.now()
    };
}
function getErrorFromResponse(requestName, response) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var responseJson, errorData;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, response.json()];
                case 1:
                    responseJson = _a.sent();
                    errorData = responseJson.error;
                    return [2 /*return*/, ERROR_FACTORY.create("request-failed" /* REQUEST_FAILED */, {
                            requestName: requestName,
                            serverCode: errorData.code,
                            serverMessage: errorData.message,
                            serverStatus: errorData.status
                        })];
            }
        });
    });
}
function getHeaders(_a) {
    var apiKey = _a.apiKey;
    return new Headers({
        'Content-Type': 'application/json',
        Accept: 'application/json',
        'x-goog-api-key': apiKey
    });
}
function getHeadersWithAuth(appConfig, _a) {
    var refreshToken = _a.refreshToken;
    var headers = getHeaders(appConfig);
    headers.append('Authorization', getAuthorizationHeader(refreshToken));
    return headers;
}
/**
 * Calls the passed in fetch wrapper and returns the response.
 * If the returned response has a status of 5xx, re-runs the function once and
 * returns the response.
 */
function retryIfServerError(fn) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var result;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, fn()];
                case 1:
                    result = _a.sent();
                    if (result.status >= 500 && result.status < 600) {
                        // Internal Server Error. Retry request.
                        return [2 /*return*/, fn()];
                    }
                    return [2 /*return*/, result];
            }
        });
    });
}
function getExpiresInFromResponseExpiresIn(responseExpiresIn) {
    // This works because the server will never respond with fractions of a second.
    return Number(responseExpiresIn.replace('s', '000'));
}
function getAuthorizationHeader(refreshToken) {
    return INTERNAL_AUTH_VERSION + " " + refreshToken;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function createInstallation(appConfig, _a) {
    var fid = _a.fid;
    return tslib.__awaiter(this, void 0, void 0, function () {
        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;
        return tslib.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    endpoint = getInstallationsEndpoint(appConfig);
                    headers = getHeaders(appConfig);
                    body = {
                        fid: fid,
                        authVersion: INTERNAL_AUTH_VERSION,
                        appId: appConfig.appId,
                        sdkVersion: PACKAGE_VERSION
                    };
                    request = {
                        method: 'POST',
                        headers: headers,
                        body: JSON.stringify(body)
                    };
                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];
                case 1:
                    response = _b.sent();
                    if (!response.ok) return [3 /*break*/, 3];
                    return [4 /*yield*/, response.json()];
                case 2:
                    responseValue = _b.sent();
                    registeredInstallationEntry = {
                        fid: responseValue.fid || fid,
                        registrationStatus: 2 /* COMPLETED */,
                        refreshToken: responseValue.refreshToken,
                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)
                    };
                    return [2 /*return*/, registeredInstallationEntry];
                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];
                case 4: throw _b.sent();
            }
        });
    });
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Returns a promise that resolves after given time passes. */
function sleep(ms) {
    return new Promise(function (resolve) {
        setTimeout(resolve, ms);
    });
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function bufferToBase64UrlSafe(array) {
    var b64 = btoa(String.fromCharCode.apply(String, tslib.__spread(array)));
    return b64.replace(/\+/g, '-').replace(/\//g, '_');
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var VALID_FID_PATTERN = /^[cdef][\w-]{21}$/;
var INVALID_FID = '';
/**
 * Generates a new FID using random values from Web Crypto API.
 * Returns an empty string if FID generation fails for any reason.
 */
function generateFid() {
    try {
        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5
        // bytes. our implementation generates a 17 byte array instead.
        var fidByteArray = new Uint8Array(17);
        var crypto_1 = self.crypto || self.msCrypto;
        crypto_1.getRandomValues(fidByteArray);
        // Replace the first 4 random bits with the constant FID header of 0b0111.
        fidByteArray[0] = 112 + (fidByteArray[0] % 16);
        var fid = encode(fidByteArray);
        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;
    }
    catch (_a) {
        // FID generation errored
        return INVALID_FID;
    }
}
/** Converts a FID Uint8Array to a base64 string representation. */
function encode(fidByteArray) {
    var b64String = bufferToBase64UrlSafe(fidByteArray);
    // Remove the 23rd character that was added because of the extra 4 bits at the
    // end of our 17 byte array, and the '=' padding.
    return b64String.substr(0, 22);
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DATABASE_NAME = 'firebase-installations-database';
var DATABASE_VERSION = 1;
var OBJECT_STORE_NAME = 'firebase-installations-store';
var dbPromise = null;
function getDbPromise() {
    if (!dbPromise) {
        dbPromise = idb.openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {
            // We don't use 'break' in this switch statement, the fall-through
            // behavior is what we want, because if there are multiple versions between
            // the old version and the current version, we want ALL the migrations
            // that correspond to those versions to run, not only the last one.
            // eslint-disable-next-line default-case
            switch (upgradeDB.oldVersion) {
                case 0:
                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);
            }
        });
    }
    return dbPromise;
}
/** Assigns or overwrites the record for the given key with the given value. */
function set(appConfig, value) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var key, db, tx;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    key = getKey(appConfig);
                    return [4 /*yield*/, getDbPromise()];
                case 1:
                    db = _a.sent();
                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(value, key)];
                case 2:
                    _a.sent();
                    return [4 /*yield*/, tx.complete];
                case 3:
                    _a.sent();
                    return [2 /*return*/, value];
            }
        });
    });
}
/** Removes record(s) from the objectStore that match the given key. */
function remove(appConfig) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var key, db, tx;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    key = getKey(appConfig);
                    return [4 /*yield*/, getDbPromise()];
                case 1:
                    db = _a.sent();
                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];
                case 2:
                    _a.sent();
                    return [4 /*yield*/, tx.complete];
                case 3:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
/**
 * Atomically updates a record with the result of updateFn, which gets
 * called with the current value. If newValue is undefined, the record is
 * deleted instead.
 * @return Updated value
 */
function update(appConfig, updateFn) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var key, db, tx, store, oldValue, newValue;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    key = getKey(appConfig);
                    return [4 /*yield*/, getDbPromise()];
                case 1:
                    db = _a.sent();
                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
                    store = tx.objectStore(OBJECT_STORE_NAME);
                    return [4 /*yield*/, store.get(key)];
                case 2:
                    oldValue = _a.sent();
                    newValue = updateFn(oldValue);
                    if (!(newValue === undefined)) return [3 /*break*/, 4];
                    return [4 /*yield*/, store.delete(key)];
                case 3:
                    _a.sent();
                    return [3 /*break*/, 6];
                case 4: return [4 /*yield*/, store.put(newValue, key)];
                case 5:
                    _a.sent();
                    _a.label = 6;
                case 6: return [4 /*yield*/, tx.complete];
                case 7:
                    _a.sent();
                    return [2 /*return*/, newValue];
            }
        });
    });
}
function getKey(appConfig) {
    return appConfig.appName + "!" + appConfig.appId;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Updates and returns the InstallationEntry from the database.
 * Also triggers a registration request if it is necessary and possible.
 */
function getInstallationEntry(appConfig) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var registrationPromise, installationEntry, _a;
        return tslib.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {
                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);
                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);
                        registrationPromise = entryWithPromise.registrationPromise;
                        return entryWithPromise.installationEntry;
                    })];
                case 1:
                    installationEntry = _b.sent();
                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];
                    _a = {};
                    return [4 /*yield*/, registrationPromise];
                case 2: 
                // FID generation failed. Waiting for the FID from the server.
                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];
                case 3: return [2 /*return*/, {
                        installationEntry: installationEntry,
                        registrationPromise: registrationPromise
                    }];
            }
        });
    });
}
/**
 * Creates a new Installation Entry if one does not exist.
 * Also clears timed out pending requests.
 */
function updateOrCreateInstallationEntry(oldEntry) {
    var entry = oldEntry || {
        fid: generateFid(),
        registrationStatus: 0 /* NOT_STARTED */
    };
    return clearTimedOutRequest(entry);
}
/**
 * If the Firebase Installation is not registered yet, this will trigger the
 * registration and return an InProgressInstallationEntry.
 */
function triggerRegistrationIfNecessary(appConfig, installationEntry) {
    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {
        if (!navigator.onLine) {
            // Registration required but app is offline.
            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create("app-offline" /* APP_OFFLINE */));
            return {
                installationEntry: installationEntry,
                registrationPromise: registrationPromiseWithError
            };
        }
        // Try registering. Change status to IN_PROGRESS.
        var inProgressEntry = {
            fid: installationEntry.fid,
            registrationStatus: 1 /* IN_PROGRESS */,
            registrationTime: Date.now()
        };
        var registrationPromise = registerInstallation(appConfig, inProgressEntry);
        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };
    }
    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {
        return {
            installationEntry: installationEntry,
            registrationPromise: waitUntilFidRegistration(appConfig)
        };
    }
    else {
        return { installationEntry: installationEntry };
    }
}
/** This will be executed only once for each new Firebase Installation. */
function registerInstallation(appConfig, installationEntry) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var registeredInstallationEntry, e_1;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 7]);
                    return [4 /*yield*/, createInstallation(appConfig, installationEntry)];
                case 1:
                    registeredInstallationEntry = _a.sent();
                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];
                case 2:
                    e_1 = _a.sent();
                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];
                    // Server returned a "FID can not be used" error.
                    // Generate a new ID next time.
                    return [4 /*yield*/, remove(appConfig)];
                case 3:
                    // Server returned a "FID can not be used" error.
                    // Generate a new ID next time.
                    _a.sent();
                    return [3 /*break*/, 6];
                case 4: 
                // Registration failed. Set FID as not registered.
                return [4 /*yield*/, set(appConfig, {
                        fid: installationEntry.fid,
                        registrationStatus: 0 /* NOT_STARTED */
                    })];
                case 5:
                    // Registration failed. Set FID as not registered.
                    _a.sent();
                    _a.label = 6;
                case 6: throw e_1;
                case 7: return [2 /*return*/];
            }
        });
    });
}
/** Call if FID registration is pending. */
function waitUntilFidRegistration(appConfig) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var entry;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];
                case 1:
                    entry = _a.sent();
                    _a.label = 2;
                case 2:
                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];
                    // createInstallation request still in progress.
                    return [4 /*yield*/, sleep(100)];
                case 3:
                    // createInstallation request still in progress.
                    _a.sent();
                    return [4 /*yield*/, updateInstallationRequest(appConfig)];
                case 4:
                    entry = _a.sent();
                    return [3 /*break*/, 2];
                case 5:
                    if (entry.registrationStatus === 0 /* NOT_STARTED */) {
                        throw ERROR_FACTORY.create("create-installation-failed" /* CREATE_INSTALLATION_FAILED */);
                    }
                    return [2 /*return*/, entry];
            }
        });
    });
}
/**
 * Called only if there is a CreateInstallation request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * CreateInstallation request.
 *
 * Returns the updated InstallationEntry.
 */
function updateInstallationRequest(appConfig) {
    return update(appConfig, function (oldEntry) {
        if (!oldEntry) {
            throw ERROR_FACTORY.create("installation-not-found" /* INSTALLATION_NOT_FOUND */);
        }
        return clearTimedOutRequest(oldEntry);
    });
}
function clearTimedOutRequest(entry) {
    if (hasInstallationRequestTimedOut(entry)) {
        return {
            fid: entry.fid,
            registrationStatus: 0 /* NOT_STARTED */
        };
    }
    return entry;
}
function hasInstallationRequestTimedOut(installationEntry) {
    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&
        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function generateAuthToken(appConfig, installationEntry) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var endpoint, headers, body, request, response, responseValue, completedAuthToken;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);
                    headers = getHeadersWithAuth(appConfig, installationEntry);
                    body = {
                        installation: {
                            sdkVersion: PACKAGE_VERSION
                        }
                    };
                    request = {
                        method: 'POST',
                        headers: headers,
                        body: JSON.stringify(body)
                    };
                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];
                case 1:
                    response = _a.sent();
                    if (!response.ok) return [3 /*break*/, 3];
                    return [4 /*yield*/, response.json()];
                case 2:
                    responseValue = _a.sent();
                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);
                    return [2 /*return*/, completedAuthToken];
                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];
                case 4: throw _a.sent();
            }
        });
    });
}
function getGenerateAuthTokenEndpoint(appConfig, _a) {
    var fid = _a.fid;
    return getInstallationsEndpoint(appConfig) + "/" + fid + "/authTokens:generate";
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a valid authentication token for the installation. Generates a new
 * token if one doesn't exist, is expired or about to expire.
 *
 * Should only be called if the Firebase Installation is registered.
 */
function refreshAuthToken(appConfig, forceRefresh) {
    if (forceRefresh === void 0) { forceRefresh = false; }
    return tslib.__awaiter(this, void 0, void 0, function () {
        var tokenPromise, entry, authToken, _a;
        return tslib.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {
                        if (!isEntryRegistered(oldEntry)) {
                            throw ERROR_FACTORY.create("not-registered" /* NOT_REGISTERED */);
                        }
                        var oldAuthToken = oldEntry.authToken;
                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {
                            // There is a valid token in the DB.
                            return oldEntry;
                        }
                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {
                            // There already is a token request in progress.
                            tokenPromise = waitUntilAuthTokenRequest(appConfig);
                            return oldEntry;
                        }
                        else {
                            // No token or token expired.
                            if (!navigator.onLine) {
                                throw ERROR_FACTORY.create("app-offline" /* APP_OFFLINE */);
                            }
                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);
                            tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);
                            return inProgressEntry;
                        }
                    })];
                case 1:
                    entry = _b.sent();
                    if (!tokenPromise) return [3 /*break*/, 3];
                    return [4 /*yield*/, tokenPromise];
                case 2:
                    _a = _b.sent();
                    return [3 /*break*/, 4];
                case 3:
                    _a = entry.authToken;
                    _b.label = 4;
                case 4:
                    authToken = _a;
                    return [2 /*return*/, authToken.token];
            }
        });
    });
}
/**
 * Call only if FID is registered and Auth Token request is in progress.
 */
function waitUntilAuthTokenRequest(appConfig) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var entry, authToken;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, updateAuthTokenRequest(appConfig)];
                case 1:
                    entry = _a.sent();
                    _a.label = 2;
                case 2:
                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];
                    // generateAuthToken still in progress.
                    return [4 /*yield*/, sleep(100)];
                case 3:
                    // generateAuthToken still in progress.
                    _a.sent();
                    return [4 /*yield*/, updateAuthTokenRequest(appConfig)];
                case 4:
                    entry = _a.sent();
                    return [3 /*break*/, 2];
                case 5:
                    authToken = entry.authToken;
                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {
                        throw ERROR_FACTORY.create("generate-token-failed" /* GENERATE_TOKEN_FAILED */);
                    }
                    else {
                        return [2 /*return*/, authToken];
                    }
            }
        });
    });
}
/**
 * Called only if there is a GenerateAuthToken request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * GenerateAuthToken request.
 *
 * Returns the updated InstallationEntry.
 */
function updateAuthTokenRequest(appConfig) {
    return update(appConfig, function (oldEntry) {
        if (!isEntryRegistered(oldEntry)) {
            throw ERROR_FACTORY.create("not-registered" /* NOT_REGISTERED */);
        }
        var oldAuthToken = oldEntry.authToken;
        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {
            return tslib.__assign(tslib.__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });
        }
        return oldEntry;
    });
}
function fetchAuthTokenFromServer(appConfig, installationEntry) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 3, , 8]);
                    return [4 /*yield*/, generateAuthToken(appConfig, installationEntry)];
                case 1:
                    authToken = _a.sent();
                    updatedInstallationEntry = tslib.__assign(tslib.__assign({}, installationEntry), { authToken: authToken });
                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];
                case 2:
                    _a.sent();
                    return [2 /*return*/, authToken];
                case 3:
                    e_1 = _a.sent();
                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];
                    // Server returned a "FID not found" or a "Invalid authentication" error.
                    // Generate a new ID next time.
                    return [4 /*yield*/, remove(appConfig)];
                case 4:
                    // Server returned a "FID not found" or a "Invalid authentication" error.
                    // Generate a new ID next time.
                    _a.sent();
                    return [3 /*break*/, 7];
                case 5:
                    updatedInstallationEntry = tslib.__assign(tslib.__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });
                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];
                case 6:
                    _a.sent();
                    _a.label = 7;
                case 7: throw e_1;
                case 8: return [2 /*return*/];
            }
        });
    });
}
function isEntryRegistered(installationEntry) {
    return (installationEntry !== undefined &&
        installationEntry.registrationStatus === 2 /* COMPLETED */);
}
function isAuthTokenValid(authToken) {
    return (authToken.requestStatus === 2 /* COMPLETED */ &&
        !isAuthTokenExpired(authToken));
}
function isAuthTokenExpired(authToken) {
    var now = Date.now();
    return (now < authToken.creationTime ||
        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);
}
/** Returns an updated InstallationEntry with an InProgressAuthToken. */
function makeAuthTokenRequestInProgressEntry(oldEntry) {
    var inProgressAuthToken = {
        requestStatus: 1 /* IN_PROGRESS */,
        requestTime: Date.now()
    };
    return tslib.__assign(tslib.__assign({}, oldEntry), { authToken: inProgressAuthToken });
}
function hasAuthTokenRequestTimedOut(authToken) {
    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&
        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getId(app) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var appConfig, _a, installationEntry, registrationPromise;
        return tslib.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    appConfig = extractAppConfig(app);
                    return [4 /*yield*/, getInstallationEntry(appConfig)];
                case 1:
                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;
                    if (registrationPromise) {
                        // Suppress registration errors as they are not a problem for getId.
                        registrationPromise.catch(function () { });
                    }
                    if (installationEntry.registrationStatus === 2 /* COMPLETED */) {
                        // If the installation is already registered, update the authentication
                        // token if needed. Suppress errors as they are not relevant to getId.
                        refreshAuthToken(appConfig).catch(function () { });
                    }
                    return [2 /*return*/, installationEntry.fid];
            }
        });
    });
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getToken(app, forceRefresh) {
    if (forceRefresh === void 0) { forceRefresh = false; }
    return tslib.__awaiter(this, void 0, void 0, function () {
        var appConfig;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    appConfig = extractAppConfig(app);
                    return [4 /*yield*/, completeInstallationRegistration(appConfig)];
                case 1:
                    _a.sent();
                    // At this point we either have a Registered Installation in the DB, or we've
                    // already thrown an error.
                    return [2 /*return*/, refreshAuthToken(appConfig, forceRefresh)];
            }
        });
    });
}
function completeInstallationRegistration(appConfig) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var _a, installationEntry, registrationPromise;
        return tslib.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];
                case 1:
                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;
                    if (!registrationPromise) return [3 /*break*/, 3];
                    // A createInstallation request is in progress. Wait until it finishes.
                    return [4 /*yield*/, registrationPromise];
                case 2:
                    // A createInstallation request is in progress. Wait until it finishes.
                    _b.sent();
                    return [3 /*break*/, 4];
                case 3:
                    if (installationEntry.registrationStatus !== 2 /* COMPLETED */) {
                        // Installation ID can't be registered.
                        throw ERROR_FACTORY.create("create-installation-failed" /* CREATE_INSTALLATION_FAILED */);
                    }
                    _b.label = 4;
                case 4: return [2 /*return*/];
            }
        });
    });
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function deleteInstallation(appConfig, installationEntry) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var endpoint, headers, request, response;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    endpoint = getDeleteEndpoint(appConfig, installationEntry);
                    headers = getHeadersWithAuth(appConfig, installationEntry);
                    request = {
                        method: 'DELETE',
                        headers: headers
                    };
                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];
                case 1:
                    response = _a.sent();
                    if (!!response.ok) return [3 /*break*/, 3];
                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];
                case 2: throw _a.sent();
                case 3: return [2 /*return*/];
            }
        });
    });
}
function getDeleteEndpoint(appConfig, _a) {
    var fid = _a.fid;
    return getInstallationsEndpoint(appConfig) + "/" + fid;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function deleteInstallation$1(app) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var appConfig, entry;
        return tslib.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    appConfig = extractAppConfig(app);
                    return [4 /*yield*/, update(appConfig, function (oldEntry) {
                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {
                                // Delete the unregistered entry without sending a deleteInstallation request.
                                return undefined;
                            }
                            return oldEntry;
                        })];
                case 1:
                    entry = _a.sent();
                    if (!entry) return [3 /*break*/, 6];
                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];
                    // Can't delete while trying to register.
                    throw ERROR_FACTORY.create("delete-pending-registration" /* DELETE_PENDING_REGISTRATION */);
                case 2:
                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];
                    if (!!navigator.onLine) return [3 /*break*/, 3];
                    throw ERROR_FACTORY.create("app-offline" /* APP_OFFLINE */);
                case 3: return [4 /*yield*/, deleteInstallation(appConfig, entry)];
                case 4:
                    _a.sent();
                    return [4 /*yield*/, remove(appConfig)];
                case 5:
                    _a.sent();
                    _a.label = 6;
                case 6: return [2 /*return*/];
            }
        });
    });
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerInstallations(instance) {
    var installationsName = 'installations';
    var factoryMethod = function (app) {
        // Throws if app isn't configured properly.
        extractAppConfig(app);
        return {
            app: app,
            getId: function () { return getId(app); },
            getToken: function (forceRefresh) { return getToken(app, forceRefresh); },
            delete: function () { return deleteInstallation$1(app); }
        };
    };
    instance.INTERNAL.registerService(installationsName, factoryMethod);
}
registerInstallations(firebase);

exports.registerInstallations = registerInstallations;


},{"@firebase/app":145,"@firebase/util":150,"idb":168,"tslib":190}],148:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A container for all of the Logger instances
 */
var instances = [];
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(exports.LogLevel || (exports.LogLevel = {}));
/**
 * The default log level
 */
var defaultLogLevel = exports.LogLevel.INFO;
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function (instance, logType) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (logType < instance.logLevel) {
        return;
    }
    var now = new Date().toISOString();
    switch (logType) {
        /**
         * By default, `console.debug` is not displayed in the developer console (in
         * chrome). To avoid forcing users to have to opt-in to these logs twice
         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
         * logs to the `console.log` function.
         */
        case exports.LogLevel.DEBUG:
            console.log.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
            break;
        case exports.LogLevel.VERBOSE:
            console.log.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
            break;
        case exports.LogLevel.INFO:
            console.info.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
            break;
        case exports.LogLevel.WARN:
            console.warn.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
            break;
        case exports.LogLevel.ERROR:
            console.error.apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
            break;
        default:
            throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
    }
};
var Logger = /** @class */ (function () {
    /**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */
    function Logger(name) {
        this.name = name;
        /**
         * The log level of the given Logger instance.
         */
        this._logLevel = defaultLogLevel;
        /**
         * The log handler for the Logger instance.
         */
        this._logHandler = defaultLogHandler;
        /**
         * Capture the current instance for later use
         */
        instances.push(this);
    }
    Object.defineProperty(Logger.prototype, "logLevel", {
        get: function () {
            return this._logLevel;
        },
        set: function (val) {
            if (!(val in exports.LogLevel)) {
                throw new TypeError('Invalid value assigned to `logLevel`');
            }
            this._logLevel = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "logHandler", {
        get: function () {
            return this._logHandler;
        },
        set: function (val) {
            if (typeof val !== 'function') {
                throw new TypeError('Value assigned to `logHandler` must be a function');
            }
            this._logHandler = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The functions below are all based on the `console` interface
     */
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.DEBUG], args));
    };
    Logger.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.VERBOSE], args));
    };
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.INFO], args));
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.WARN], args));
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, __spreadArrays([this, exports.LogLevel.ERROR], args));
    };
    return Logger;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function setLogLevel(level) {
    instances.forEach(function (inst) {
        inst.logLevel = level;
    });
}

exports.Logger = Logger;
exports.setLogLevel = setLogLevel;


},{}],149:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var firebase = _interopDefault(require('@firebase/app'));
var tslib = require('tslib');

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Constants used in the Firebase Storage library.
 */
/**
 * Domain name for firebase storage.
 */
var DEFAULT_HOST = 'firebasestorage.googleapis.com';
/**
 * The key in Firebase config json for the storage bucket.
 */
var CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';
/**
 * 2 minutes
 *
 * The timeout for all operations except upload.
 */
var DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;
/**
 * 10 minutes
 *
 * The timeout for upload.
 */
var DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;
/**
 * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported
 * enough for us to use it directly.
 */
var MIN_SAFE_INTEGER = -9007199254740991;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var FirebaseStorageError = /** @class */ (function () {
    function FirebaseStorageError(code, message) {
        this.code_ = prependCode(code);
        this.message_ = 'Firebase Storage: ' + message;
        this.serverResponse_ = null;
        this.name_ = 'FirebaseError';
    }
    FirebaseStorageError.prototype.codeProp = function () {
        return this.code;
    };
    FirebaseStorageError.prototype.codeEquals = function (code) {
        return prependCode(code) === this.codeProp();
    };
    FirebaseStorageError.prototype.serverResponseProp = function () {
        return this.serverResponse_;
    };
    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {
        this.serverResponse_ = serverResponse;
    };
    Object.defineProperty(FirebaseStorageError.prototype, "name", {
        get: function () {
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "code", {
        get: function () {
            return this.code_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "message", {
        get: function () {
            return this.message_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "serverResponse", {
        get: function () {
            return this.serverResponse_;
        },
        enumerable: true,
        configurable: true
    });
    return FirebaseStorageError;
}());
var Code = {
    // Shared between all platforms
    UNKNOWN: 'unknown',
    OBJECT_NOT_FOUND: 'object-not-found',
    BUCKET_NOT_FOUND: 'bucket-not-found',
    PROJECT_NOT_FOUND: 'project-not-found',
    QUOTA_EXCEEDED: 'quota-exceeded',
    UNAUTHENTICATED: 'unauthenticated',
    UNAUTHORIZED: 'unauthorized',
    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',
    INVALID_CHECKSUM: 'invalid-checksum',
    CANCELED: 'canceled',
    // JS specific
    INVALID_EVENT_NAME: 'invalid-event-name',
    INVALID_URL: 'invalid-url',
    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',
    NO_DEFAULT_BUCKET: 'no-default-bucket',
    CANNOT_SLICE_BLOB: 'cannot-slice-blob',
    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',
    NO_DOWNLOAD_URL: 'no-download-url',
    INVALID_ARGUMENT: 'invalid-argument',
    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',
    APP_DELETED: 'app-deleted',
    INVALID_ROOT_OPERATION: 'invalid-root-operation',
    INVALID_FORMAT: 'invalid-format',
    INTERNAL_ERROR: 'internal-error'
};
function prependCode(code) {
    return 'storage/' + code;
}
function unknown() {
    var message = 'An unknown error occurred, please check the error payload for ' +
        'server response.';
    return new FirebaseStorageError(Code.UNKNOWN, message);
}
function objectNotFound(path) {
    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, "Object '" + path + "' does not exist.");
}
function quotaExceeded(bucket) {
    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, "Quota for bucket '" +
        bucket +
        "' exceeded, please view quota on " +
        'https://firebase.google.com/pricing/.');
}
function unauthenticated() {
    var message = 'User is not authenticated, please authenticate using Firebase ' +
        'Authentication and try again.';
    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);
}
function unauthorized(path) {
    return new FirebaseStorageError(Code.UNAUTHORIZED, "User does not have permission to access '" + path + "'.");
}
function retryLimitExceeded() {
    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');
}
function canceled() {
    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');
}
function invalidUrl(url) {
    return new FirebaseStorageError(Code.INVALID_URL, "Invalid URL '" + url + "'.");
}
function invalidDefaultBucket(bucket) {
    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, "Invalid default bucket '" + bucket + "'.");
}
function noDefaultBucket() {
    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +
        "found. Did you set the '" +
        CONFIG_STORAGE_BUCKET_KEY +
        "' property when initializing the app?");
}
function cannotSliceBlob() {
    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');
}
function serverFileWrongSize() {
    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');
}
function noDownloadURL() {
    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');
}
function invalidArgument(index, fnName, message) {
    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);
}
function invalidArgumentCount(argMin, argMax, fnName, real) {
    var countPart;
    var plural;
    if (argMin === argMax) {
        countPart = argMin;
        plural = argMin === 1 ? 'argument' : 'arguments';
    }
    else {
        countPart = 'between ' + argMin + ' and ' + argMax;
        plural = 'arguments';
    }
    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +
        fnName +
        '`: Expected ' +
        countPart +
        ' ' +
        plural +
        ', received ' +
        real +
        '.');
}
function appDeleted() {
    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');
}
/**
 * @param name The name of the operation that was invalid.
 */
function invalidRootOperation(name) {
    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, "The operation '" +
        name +
        "' cannot be performed on a root reference, create a non-root " +
        "reference using child, such as .child('file.png').");
}
/**
 * @param format The format that was not valid.
 * @param message A message describing the format violation.
 */
function invalidFormat(format, message) {
    return new FirebaseStorageError(Code.INVALID_FORMAT, "String does not match format '" + format + "': " + message);
}
/**
 * @param message A message describing the internal error.
 */
function internalError(message) {
    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var StringFormat = {
    RAW: 'raw',
    BASE64: 'base64',
    BASE64URL: 'base64url',
    DATA_URL: 'data_url'
};
function formatValidator(stringFormat) {
    switch (stringFormat) {
        case StringFormat.RAW:
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
        case StringFormat.DATA_URL:
            return;
        default:
            throw 'Expected one of the event types: [' +
                StringFormat.RAW +
                ', ' +
                StringFormat.BASE64 +
                ', ' +
                StringFormat.BASE64URL +
                ', ' +
                StringFormat.DATA_URL +
                '].';
    }
}
/**
 * @struct
 */
var StringData = /** @class */ (function () {
    function StringData(data, contentType) {
        this.data = data;
        this.contentType = contentType || null;
    }
    return StringData;
}());
function dataFromString(format, stringData) {
    switch (format) {
        case StringFormat.RAW:
            return new StringData(utf8Bytes_(stringData));
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
            return new StringData(base64Bytes_(format, stringData));
        case StringFormat.DATA_URL:
            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));
        // do nothing
    }
    // assert(false);
    throw unknown();
}
function utf8Bytes_(value) {
    var b = [];
    for (var i = 0; i < value.length; i++) {
        var c = value.charCodeAt(i);
        if (c <= 127) {
            b.push(c);
        }
        else {
            if (c <= 2047) {
                b.push(192 | (c >> 6), 128 | (c & 63));
            }
            else {
                if ((c & 64512) === 55296) {
                    // The start of a surrogate pair.
                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;
                    if (!valid) {
                        // The second surrogate wasn't there.
                        b.push(239, 191, 189);
                    }
                    else {
                        var hi = c;
                        var lo = value.charCodeAt(++i);
                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);
                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));
                    }
                }
                else {
                    if ((c & 64512) === 56320) {
                        // Invalid low surrogate.
                        b.push(239, 191, 189);
                    }
                    else {
                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));
                    }
                }
            }
        }
    }
    return new Uint8Array(b);
}
function percentEncodedBytes_(value) {
    var decoded;
    try {
        decoded = decodeURIComponent(value);
    }
    catch (e) {
        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');
    }
    return utf8Bytes_(decoded);
}
function base64Bytes_(format, value) {
    switch (format) {
        case StringFormat.BASE64: {
            var hasMinus = value.indexOf('-') !== -1;
            var hasUnder = value.indexOf('_') !== -1;
            if (hasMinus || hasUnder) {
                var invalidChar = hasMinus ? '-' : '_';
                throw invalidFormat(format, "Invalid character '" +
                    invalidChar +
                    "' found: is it base64url encoded?");
            }
            break;
        }
        case StringFormat.BASE64URL: {
            var hasPlus = value.indexOf('+') !== -1;
            var hasSlash = value.indexOf('/') !== -1;
            if (hasPlus || hasSlash) {
                var invalidChar = hasPlus ? '+' : '/';
                throw invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64 encoded?");
            }
            value = value.replace(/-/g, '+').replace(/_/g, '/');
            break;
        }
        // do nothing
    }
    var bytes;
    try {
        bytes = atob(value);
    }
    catch (e) {
        throw invalidFormat(format, 'Invalid character found');
    }
    var array = new Uint8Array(bytes.length);
    for (var i = 0; i < bytes.length; i++) {
        array[i] = bytes.charCodeAt(i);
    }
    return array;
}
/**
 * @struct
 */
var DataURLParts = /** @class */ (function () {
    function DataURLParts(dataURL) {
        this.base64 = false;
        this.contentType = null;
        var matches = dataURL.match(/^data:([^,]+)?,/);
        if (matches === null) {
            throw invalidFormat(StringFormat.DATA_URL, "Must be formatted 'data:[<mediatype>][;base64],<data>");
        }
        var middle = matches[1] || null;
        if (middle != null) {
            this.base64 = endsWith(middle, ';base64');
            this.contentType = this.base64
                ? middle.substring(0, middle.length - ';base64'.length)
                : middle;
        }
        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);
    }
    return DataURLParts;
}());
function dataURLBytes_(dataUrl) {
    var parts = new DataURLParts(dataUrl);
    if (parts.base64) {
        return base64Bytes_(StringFormat.BASE64, parts.rest);
    }
    else {
        return percentEncodedBytes_(parts.rest);
    }
}
function dataURLContentType_(dataUrl) {
    var parts = new DataURLParts(dataUrl);
    return parts.contentType;
}
function endsWith(s, end) {
    var longEnough = s.length >= end.length;
    if (!longEnough) {
        return false;
    }
    return s.substring(s.length - end.length) === end;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var TaskEvent = {
    /** Triggered whenever the task changes or progress is updated. */
    STATE_CHANGED: 'state_changed'
};
var InternalTaskState = {
    RUNNING: 'running',
    PAUSING: 'pausing',
    PAUSED: 'paused',
    SUCCESS: 'success',
    CANCELING: 'canceling',
    CANCELED: 'canceled',
    ERROR: 'error'
};
var TaskState = {
    /** The task is currently transferring data. */
    RUNNING: 'running',
    /** The task was paused by the user. */
    PAUSED: 'paused',
    /** The task completed successfully. */
    SUCCESS: 'success',
    /** The task was canceled. */
    CANCELED: 'canceled',
    /** The task failed with an error. */
    ERROR: 'error'
};
function taskStateFromInternalTaskState(state) {
    switch (state) {
        case InternalTaskState.RUNNING:
        case InternalTaskState.PAUSING:
        case InternalTaskState.CANCELING:
            return TaskState.RUNNING;
        case InternalTaskState.PAUSED:
            return TaskState.PAUSED;
        case InternalTaskState.SUCCESS:
            return TaskState.SUCCESS;
        case InternalTaskState.CANCELED:
            return TaskState.CANCELED;
        case InternalTaskState.ERROR:
            return TaskState.ERROR;
        default:
            // TODO(andysoto): assert(false);
            return TaskState.ERROR;
    }
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @return False if the object is undefined or null, true otherwise.
 */
function isDef(p) {
    return p != null;
}
function isJustDef(p) {
    return p !== void 0;
}
function isFunction(p) {
    return typeof p === 'function';
}
function isObject(p) {
    return typeof p === 'object';
}
function isNonNullObject(p) {
    return isObject(p) && p !== null;
}
function isNonArrayObject(p) {
    return isObject(p) && !Array.isArray(p);
}
function isString(p) {
    return typeof p === 'string' || p instanceof String;
}
function isInteger(p) {
    return isNumber(p) && Number.isInteger(p);
}
function isNumber(p) {
    return typeof p === 'number' || p instanceof Number;
}
function isNativeBlob(p) {
    return isNativeBlobDefined() && p instanceof Blob;
}
function isNativeBlobDefined() {
    return typeof Blob !== 'undefined';
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @enum{number}
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode[ErrorCode["NO_ERROR"] = 0] = "NO_ERROR";
    ErrorCode[ErrorCode["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
    ErrorCode[ErrorCode["ABORT"] = 2] = "ABORT";
})(ErrorCode || (ErrorCode = {}));

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and
 * doesn't work in React Native on Android.
 */
var NetworkXhrIo = /** @class */ (function () {
    function NetworkXhrIo() {
        var _this = this;
        this.sent_ = false;
        this.xhr_ = new XMLHttpRequest();
        this.errorCode_ = ErrorCode.NO_ERROR;
        this.sendPromise_ = new Promise(function (resolve) {
            _this.xhr_.addEventListener('abort', function () {
                _this.errorCode_ = ErrorCode.ABORT;
                resolve(_this);
            });
            _this.xhr_.addEventListener('error', function () {
                _this.errorCode_ = ErrorCode.NETWORK_ERROR;
                resolve(_this);
            });
            _this.xhr_.addEventListener('load', function () {
                resolve(_this);
            });
        });
    }
    /**
     * @override
     */
    NetworkXhrIo.prototype.send = function (url, method, body, headers) {
        if (this.sent_) {
            throw internalError('cannot .send() more than once');
        }
        this.sent_ = true;
        this.xhr_.open(method, url, true);
        if (isDef(headers)) {
            for (var key in headers) {
                if (headers.hasOwnProperty(key)) {
                    this.xhr_.setRequestHeader(key, headers[key].toString());
                }
            }
        }
        if (isDef(body)) {
            this.xhr_.send(body);
        }
        else {
            this.xhr_.send();
        }
        return this.sendPromise_;
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getErrorCode = function () {
        if (!this.sent_) {
            throw internalError('cannot .getErrorCode() before sending');
        }
        return this.errorCode_;
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getStatus = function () {
        if (!this.sent_) {
            throw internalError('cannot .getStatus() before sending');
        }
        try {
            return this.xhr_.status;
        }
        catch (e) {
            return -1;
        }
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getResponseText = function () {
        if (!this.sent_) {
            throw internalError('cannot .getResponseText() before sending');
        }
        return this.xhr_.responseText;
    };
    /**
     * Aborts the request.
     * @override
     */
    NetworkXhrIo.prototype.abort = function () {
        this.xhr_.abort();
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getResponseHeader = function (header) {
        return this.xhr_.getResponseHeader(header);
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {
        if (isDef(this.xhr_.upload)) {
            this.xhr_.upload.addEventListener('progress', listener);
        }
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {
        if (isDef(this.xhr_.upload)) {
            this.xhr_.upload.removeEventListener('progress', listener);
        }
    };
    return NetworkXhrIo;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Factory-like class for creating XhrIo instances.
 */
var XhrIoPool = /** @class */ (function () {
    function XhrIoPool() {
    }
    XhrIoPool.prototype.createXhrIo = function () {
        return new NetworkXhrIo();
    };
    return XhrIoPool;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getBlobBuilder() {
    if (typeof BlobBuilder !== 'undefined') {
        return BlobBuilder;
    }
    else if (typeof WebKitBlobBuilder !== 'undefined') {
        return WebKitBlobBuilder;
    }
    else {
        return undefined;
    }
}
/**
 * Concatenates one or more values together and converts them to a Blob.
 *
 * @param args The values that will make up the resulting blob.
 * @return The blob.
 */
function getBlob() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var BlobBuilder = getBlobBuilder();
    if (BlobBuilder !== undefined) {
        var bb = new BlobBuilder();
        for (var i = 0; i < args.length; i++) {
            bb.append(args[i]);
        }
        return bb.getBlob();
    }
    else {
        if (isNativeBlobDefined()) {
            return new Blob(args);
        }
        else {
            throw Error("This browser doesn't seem to support creating Blobs");
        }
    }
}
/**
 * Slices the blob. The returned blob contains data from the start byte
 * (inclusive) till the end byte (exclusive). Negative indices cannot be used.
 *
 * @param blob The blob to be sliced.
 * @param start Index of the starting byte.
 * @param end Index of the ending byte.
 * @return The blob slice or null if not supported.
 */
function sliceBlob(blob, start, end) {
    if (blob.webkitSlice) {
        return blob.webkitSlice(start, end);
    }
    else if (blob.mozSlice) {
        return blob.mozSlice(start, end);
    }
    else if (blob.slice) {
        return blob.slice(start, end);
    }
    return null;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @param opt_elideCopy If true, doesn't copy mutable input data
 *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be
 *     modified after this blob's construction.
 */
var FbsBlob = /** @class */ (function () {
    function FbsBlob(data, elideCopy) {
        var size = 0;
        var blobType = '';
        if (isNativeBlob(data)) {
            this.data_ = data;
            size = data.size;
            blobType = data.type;
        }
        else if (data instanceof ArrayBuffer) {
            if (elideCopy) {
                this.data_ = new Uint8Array(data);
            }
            else {
                this.data_ = new Uint8Array(data.byteLength);
                this.data_.set(new Uint8Array(data));
            }
            size = this.data_.length;
        }
        else if (data instanceof Uint8Array) {
            if (elideCopy) {
                this.data_ = data;
            }
            else {
                this.data_ = new Uint8Array(data.length);
                this.data_.set(data);
            }
            size = data.length;
        }
        this.size_ = size;
        this.type_ = blobType;
    }
    FbsBlob.prototype.size = function () {
        return this.size_;
    };
    FbsBlob.prototype.type = function () {
        return this.type_;
    };
    FbsBlob.prototype.slice = function (startByte, endByte) {
        if (isNativeBlob(this.data_)) {
            var realBlob = this.data_;
            var sliced = sliceBlob(realBlob, startByte, endByte);
            if (sliced === null) {
                return null;
            }
            return new FbsBlob(sliced);
        }
        else {
            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);
            return new FbsBlob(slice, true);
        }
    };
    FbsBlob.getBlob = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (isNativeBlobDefined()) {
            var blobby = args.map(function (val) {
                if (val instanceof FbsBlob) {
                    return val.data_;
                }
                else {
                    return val;
                }
            });
            return new FbsBlob(getBlob.apply(null, blobby));
        }
        else {
            var uint8Arrays = args.map(function (val) {
                if (isString(val)) {
                    return dataFromString(StringFormat.RAW, val).data;
                }
                else {
                    // Blobs don't exist, so this has to be a Uint8Array.
                    return val.data_;
                }
            });
            var finalLength_1 = 0;
            uint8Arrays.forEach(function (array) {
                finalLength_1 += array.byteLength;
            });
            var merged_1 = new Uint8Array(finalLength_1);
            var index_1 = 0;
            uint8Arrays.forEach(function (array) {
                for (var i = 0; i < array.length; i++) {
                    merged_1[index_1++] = array[i];
                }
            });
            return new FbsBlob(merged_1, true);
        }
    };
    FbsBlob.prototype.uploadData = function () {
        return this.data_;
    };
    return FbsBlob;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @struct
 */
var Location = /** @class */ (function () {
    function Location(bucket, path) {
        this.bucket = bucket;
        this.path_ = path;
    }
    Object.defineProperty(Location.prototype, "path", {
        get: function () {
            return this.path_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Location.prototype, "isRoot", {
        get: function () {
            return this.path.length === 0;
        },
        enumerable: true,
        configurable: true
    });
    Location.prototype.fullServerUrl = function () {
        var encode = encodeURIComponent;
        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);
    };
    Location.prototype.bucketOnlyServerUrl = function () {
        var encode = encodeURIComponent;
        return '/b/' + encode(this.bucket) + '/o';
    };
    Location.makeFromBucketSpec = function (bucketString) {
        var bucketLocation;
        try {
            bucketLocation = Location.makeFromUrl(bucketString);
        }
        catch (e) {
            // Not valid URL, use as-is. This lets you put bare bucket names in
            // config.
            return new Location(bucketString, '');
        }
        if (bucketLocation.path === '') {
            return bucketLocation;
        }
        else {
            throw invalidDefaultBucket(bucketString);
        }
    };
    Location.makeFromUrl = function (url) {
        var location = null;
        var bucketDomain = '([A-Za-z0-9.\\-_]+)';
        function gsModify(loc) {
            if (loc.path.charAt(loc.path.length - 1) === '/') {
                loc.path_ = loc.path_.slice(0, -1);
            }
        }
        var gsPath = '(/(.*))?$';
        var path = '(/([^?#]*).*)?$';
        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');
        var gsIndices = { bucket: 1, path: 3 };
        function httpModify(loc) {
            loc.path_ = decodeURIComponent(loc.path);
        }
        var version = 'v[A-Za-z0-9_]+';
        var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\.');
        var httpRegex = new RegExp("^https?://" + hostRegex + "/" + version + "/b/" + bucketDomain + "/o" + path, 'i');
        var httpIndices = { bucket: 1, path: 3 };
        var groups = [
            { regex: gsRegex, indices: gsIndices, postModify: gsModify },
            { regex: httpRegex, indices: httpIndices, postModify: httpModify }
        ];
        for (var i = 0; i < groups.length; i++) {
            var group = groups[i];
            var captures = group.regex.exec(url);
            if (captures) {
                var bucketValue = captures[group.indices.bucket];
                var pathValue = captures[group.indices.path];
                if (!pathValue) {
                    pathValue = '';
                }
                location = new Location(bucketValue, pathValue);
                group.postModify(location);
                break;
            }
        }
        if (location == null) {
            throw invalidUrl(url);
        }
        return location;
    };
    return Location;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns the Object resulting from parsing the given JSON, or null if the
 * given string does not represent a JSON object.
 */
function jsonObjectOrNull(s) {
    var obj;
    try {
        obj = JSON.parse(s);
    }
    catch (e) {
        return null;
    }
    if (isNonArrayObject(obj)) {
        return obj;
    }
    else {
        return null;
    }
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Contains helper methods for manipulating paths.
 */
/**
 * @return Null if the path is already at the root.
 */
function parent(path) {
    if (path.length === 0) {
        return null;
    }
    var index = path.lastIndexOf('/');
    if (index === -1) {
        return '';
    }
    var newPath = path.slice(0, index);
    return newPath;
}
function child(path, childPath) {
    var canonicalChildPath = childPath
        .split('/')
        .filter(function (component) { return component.length > 0; })
        .join('/');
    if (path.length === 0) {
        return canonicalChildPath;
    }
    else {
        return path + '/' + canonicalChildPath;
    }
}
/**
 * Returns the last component of a path.
 * '/foo/bar' -> 'bar'
 * '/foo/bar/baz/' -> 'baz/'
 * '/a' -> 'a'
 */
function lastComponent(path) {
    var index = path.lastIndexOf('/', path.length - 2);
    if (index === -1) {
        return path;
    }
    else {
        return path.slice(index + 1);
    }
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function makeUrl(urlPart) {
    return "https://" + DEFAULT_HOST + "/v0" + urlPart;
}
function makeQueryString(params) {
    var encode = encodeURIComponent;
    var queryPart = '?';
    for (var key in params) {
        if (params.hasOwnProperty(key)) {
            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x
            var nextPart = encode(key) + '=' + encode(params[key]);
            queryPart = queryPart + nextPart + '&';
        }
    }
    // Chop off the extra '&' or '?' on the end
    queryPart = queryPart.slice(0, -1);
    return queryPart;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function noXform_(metadata, value) {
    return value;
}
/**
 * @struct
 */
var Mapping = /** @class */ (function () {
    function Mapping(server, local, writable, xform) {
        this.server = server;
        this.local = local || server;
        this.writable = !!writable;
        this.xform = xform || noXform_;
    }
    return Mapping;
}());
var mappings_ = null;
function xformPath(fullPath) {
    if (!isString(fullPath) || fullPath.length < 2) {
        return fullPath;
    }
    else {
        return lastComponent(fullPath);
    }
}
function getMappings() {
    if (mappings_) {
        return mappings_;
    }
    var mappings = [];
    mappings.push(new Mapping('bucket'));
    mappings.push(new Mapping('generation'));
    mappings.push(new Mapping('metageneration'));
    mappings.push(new Mapping('name', 'fullPath', true));
    function mappingsXformPath(_metadata, fullPath) {
        return xformPath(fullPath);
    }
    var nameMapping = new Mapping('name');
    nameMapping.xform = mappingsXformPath;
    mappings.push(nameMapping);
    /**
     * Coerces the second param to a number, if it is defined.
     */
    function xformSize(_metadata, size) {
        if (isDef(size)) {
            return Number(size);
        }
        else {
            return size;
        }
    }
    var sizeMapping = new Mapping('size');
    sizeMapping.xform = xformSize;
    mappings.push(sizeMapping);
    mappings.push(new Mapping('timeCreated'));
    mappings.push(new Mapping('updated'));
    mappings.push(new Mapping('md5Hash', null, true));
    mappings.push(new Mapping('cacheControl', null, true));
    mappings.push(new Mapping('contentDisposition', null, true));
    mappings.push(new Mapping('contentEncoding', null, true));
    mappings.push(new Mapping('contentLanguage', null, true));
    mappings.push(new Mapping('contentType', null, true));
    mappings.push(new Mapping('metadata', 'customMetadata', true));
    mappings_ = mappings;
    return mappings_;
}
function addRef(metadata, authWrapper) {
    function generateRef() {
        var bucket = metadata['bucket'];
        var path = metadata['fullPath'];
        var loc = new Location(bucket, path);
        return authWrapper.makeStorageReference(loc);
    }
    Object.defineProperty(metadata, 'ref', { get: generateRef });
}
function fromResource(authWrapper, resource, mappings) {
    var metadata = {};
    metadata['type'] = 'file';
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);
    }
    addRef(metadata, authWrapper);
    return metadata;
}
function fromResourceString(authWrapper, resourceString, mappings) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    var resource = obj;
    return fromResource(authWrapper, resource, mappings);
}
function downloadUrlFromResourceString(metadata, resourceString) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    if (!isString(obj['downloadTokens'])) {
        // This can happen if objects are uploaded through GCS and retrieved
        // through list, so we don't want to throw an Error.
        return null;
    }
    var tokens = obj['downloadTokens'];
    if (tokens.length === 0) {
        return null;
    }
    var encode = encodeURIComponent;
    var tokensList = tokens.split(',');
    var urls = tokensList.map(function (token) {
        var bucket = metadata['bucket'];
        var path = metadata['fullPath'];
        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);
        var base = makeUrl(urlPart);
        var queryString = makeQueryString({
            alt: 'media',
            token: token
        });
        return base + queryString;
    });
    return urls[0];
}
function toResourceString(metadata, mappings) {
    var resource = {};
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        if (mapping.writable) {
            resource[mapping.server] = metadata[mapping.local];
        }
    }
    return JSON.stringify(resource);
}
function metadataValidator(p) {
    if (!isObject(p) || !p) {
        throw 'Expected Metadata object.';
    }
    for (var key in p) {
        if (p.hasOwnProperty(key)) {
            var val = p[key];
            if (key === 'customMetadata') {
                if (!isObject(val)) {
                    throw 'Expected object for \'customMetadata\' mapping.';
                }
            }
            else {
                if (isNonNullObject(val)) {
                    throw "Mapping for '" + key + "' cannot be an object.";
                }
            }
        }
    }
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var MAX_RESULTS_KEY = 'maxResults';
var MAX_MAX_RESULTS = 1000;
var PAGE_TOKEN_KEY = 'pageToken';
var PREFIXES_KEY = 'prefixes';
var ITEMS_KEY = 'items';
function fromBackendResponse(authWrapper, resource) {
    var listResult = {
        prefixes: [],
        items: [],
        nextPageToken: resource['nextPageToken']
    };
    var bucket = authWrapper.bucket();
    if (bucket === null) {
        throw noDefaultBucket();
    }
    if (resource[PREFIXES_KEY]) {
        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {
            var path = _a[_i];
            var pathWithoutTrailingSlash = path.replace(/\/$/, '');
            var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));
            listResult.prefixes.push(reference);
        }
    }
    if (resource[ITEMS_KEY]) {
        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {
            var item = _c[_b];
            var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));
            listResult.items.push(reference);
        }
    }
    return listResult;
}
function fromResponseString(authWrapper, resourceString) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    var resource = obj;
    return fromBackendResponse(authWrapper, resource);
}
function listOptionsValidator(p) {
    if (!isObject(p) || !p) {
        throw 'Expected ListOptions object.';
    }
    for (var key in p) {
        if (key === MAX_RESULTS_KEY) {
            if (!isInteger(p[MAX_RESULTS_KEY]) ||
                p[MAX_RESULTS_KEY] <= 0) {
                throw 'Expected maxResults to be a positive number.';
            }
            if (p[MAX_RESULTS_KEY] > 1000) {
                throw "Expected maxResults to be less than or equal to " + MAX_MAX_RESULTS + ".";
            }
        }
        else if (key === PAGE_TOKEN_KEY) {
            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {
                throw 'Expected pageToken to be string.';
            }
        }
        else {
            throw 'Unknown option: ' + key;
        }
    }
}

var RequestInfo = /** @class */ (function () {
    function RequestInfo(url, method, 
    /**
     * Returns the value with which to resolve the request's promise. Only called
     * if the request is successful. Throw from this function to reject the
     * returned Request's promise with the thrown error.
     * Note: The XhrIo passed to this function may be reused after this callback
     * returns. Do not keep a reference to it in any way.
     */
    handler, timeout) {
        this.url = url;
        this.method = method;
        this.handler = handler;
        this.timeout = timeout;
        this.urlParams = {};
        this.headers = {};
        this.body = null;
        this.errorHandler = null;
        /**
         * Called with the current number of bytes uploaded and total size (-1 if not
         * computable) of the request body (i.e. used to report upload progress).
         */
        this.progressCallback = null;
        this.successCodes = [200];
        this.additionalRetryCodes = [];
    }
    return RequestInfo;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws the UNKNOWN FirebaseStorageError if cndn is false.
 */
function handlerCheck(cndn) {
    if (!cndn) {
        throw unknown();
    }
}
function metadataHandler(authWrapper, mappings) {
    function handler(xhr, text) {
        var metadata = fromResourceString(authWrapper, text, mappings);
        handlerCheck(metadata !== null);
        return metadata;
    }
    return handler;
}
function listHandler(authWrapper) {
    function handler(xhr, text) {
        var listResult = fromResponseString(authWrapper, text);
        handlerCheck(listResult !== null);
        return listResult;
    }
    return handler;
}
function downloadUrlHandler(authWrapper, mappings) {
    function handler(xhr, text) {
        var metadata = fromResourceString(authWrapper, text, mappings);
        handlerCheck(metadata !== null);
        return downloadUrlFromResourceString(metadata, text);
    }
    return handler;
}
function sharedErrorHandler(location) {
    function errorHandler(xhr, err) {
        var newErr;
        if (xhr.getStatus() === 401) {
            newErr = unauthenticated();
        }
        else {
            if (xhr.getStatus() === 402) {
                newErr = quotaExceeded(location.bucket);
            }
            else {
                if (xhr.getStatus() === 403) {
                    newErr = unauthorized(location.path);
                }
                else {
                    newErr = err;
                }
            }
        }
        newErr.setServerResponseProp(err.serverResponseProp());
        return newErr;
    }
    return errorHandler;
}
function objectErrorHandler(location) {
    var shared = sharedErrorHandler(location);
    function errorHandler(xhr, err) {
        var newErr = shared(xhr, err);
        if (xhr.getStatus() === 404) {
            newErr = objectNotFound(location.path);
        }
        newErr.setServerResponseProp(err.serverResponseProp());
        return newErr;
    }
    return errorHandler;
}
function getMetadata(authWrapper, location, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'GET';
    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function list(authWrapper, location, delimiter, pageToken, maxResults) {
    var urlParams = {};
    if (location.isRoot) {
        urlParams['prefix'] = '';
    }
    else {
        urlParams['prefix'] = location.path + '/';
    }
    if (delimiter && delimiter.length > 0) {
        urlParams['delimiter'] = delimiter;
    }
    if (pageToken) {
        urlParams['pageToken'] = pageToken;
    }
    if (maxResults) {
        urlParams['maxResults'] = maxResults;
    }
    var urlPart = location.bucketOnlyServerUrl();
    var url = makeUrl(urlPart);
    var method = 'GET';
    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
function getDownloadUrl(authWrapper, location, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'GET';
    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function updateMetadata(authWrapper, location, metadata, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'PATCH';
    var body = toResourceString(metadata, mappings);
    var headers = { 'Content-Type': 'application/json; charset=utf-8' };
    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function deleteObject(authWrapper, location) {
    var urlPart = location.fullServerUrl();
    var url = makeUrl(urlPart);
    var method = 'DELETE';
    var timeout = authWrapper.maxOperationRetryTime();
    function handler(_xhr, _text) { }
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.successCodes = [200, 204];
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function determineContentType_(metadata, blob) {
    return ((metadata && metadata['contentType']) ||
        (blob && blob.type()) ||
        'application/octet-stream');
}
function metadataForUpload_(location, blob, metadata) {
    var metadataClone = Object.assign({}, metadata);
    metadataClone['fullPath'] = location.path;
    metadataClone['size'] = blob.size();
    if (!metadataClone['contentType']) {
        metadataClone['contentType'] = determineContentType_(null, blob);
    }
    return metadataClone;
}
function multipartUpload(authWrapper, location, mappings, blob, metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var headers = {
        'X-Goog-Upload-Protocol': 'multipart'
    };
    function genBoundary() {
        var str = '';
        for (var i = 0; i < 2; i++) {
            str =
                str +
                    Math.random()
                        .toString()
                        .slice(2);
        }
        return str;
    }
    var boundary = genBoundary();
    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;
    var metadata_ = metadataForUpload_(location, blob, metadata);
    var metadataString = toResourceString(metadata_, mappings);
    var preBlobPart = '--' +
        boundary +
        '\r\n' +
        'Content-Type: application/json; charset=utf-8\r\n\r\n' +
        metadataString +
        '\r\n--' +
        boundary +
        '\r\n' +
        'Content-Type: ' +
        metadata_['contentType'] +
        '\r\n\r\n';
    var postBlobPart = '\r\n--' + boundary + '--';
    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);
    if (body === null) {
        throw cannotSliceBlob();
    }
    var urlParams = { name: metadata_['fullPath'] };
    var url = makeUrl(urlPart);
    var method = 'POST';
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * @param current The number of bytes that have been uploaded so far.
 * @param total The total number of bytes in the upload.
 * @param opt_finalized True if the server has finished the upload.
 * @param opt_metadata The upload metadata, should
 *     only be passed if opt_finalized is true.
 * @struct
 */
var ResumableUploadStatus = /** @class */ (function () {
    function ResumableUploadStatus(current, total, finalized, metadata) {
        this.current = current;
        this.total = total;
        this.finalized = !!finalized;
        this.metadata = metadata || null;
    }
    return ResumableUploadStatus;
}());
function checkResumeHeader_(xhr, allowed) {
    var status = null;
    try {
        status = xhr.getResponseHeader('X-Goog-Upload-Status');
    }
    catch (e) {
        handlerCheck(false);
    }
    var allowedStatus = allowed || ['active'];
    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);
    return status;
}
function createResumableUpload(authWrapper, location, mappings, blob, metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var metadataForUpload = metadataForUpload_(location, blob, metadata);
    var urlParams = { name: metadataForUpload['fullPath'] };
    var url = makeUrl(urlPart);
    var method = 'POST';
    var headers = {
        'X-Goog-Upload-Protocol': 'resumable',
        'X-Goog-Upload-Command': 'start',
        'X-Goog-Upload-Header-Content-Length': blob.size(),
        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],
        'Content-Type': 'application/json; charset=utf-8'
    };
    var body = toResourceString(metadataForUpload, mappings);
    var timeout = authWrapper.maxUploadRetryTime();
    function handler(xhr) {
        checkResumeHeader_(xhr);
        var url;
        try {
            url = xhr.getResponseHeader('X-Goog-Upload-URL');
        }
        catch (e) {
            handlerCheck(false);
        }
        handlerCheck(isString(url));
        return url;
    }
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 */
function getResumableUploadStatus(authWrapper, location, url, blob) {
    var headers = { 'X-Goog-Upload-Command': 'query' };
    function handler(xhr) {
        var status = checkResumeHeader_(xhr, ['active', 'final']);
        var sizeString = null;
        try {
            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');
        }
        catch (e) {
            handlerCheck(false);
        }
        if (!sizeString) {
            // null or empty string
            handlerCheck(false);
        }
        var size = Number(sizeString);
        handlerCheck(!isNaN(size));
        return new ResumableUploadStatus(size, blob.size(), status === 'final');
    }
    var method = 'POST';
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.headers = headers;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * Any uploads via the resumable upload API must transfer a number of bytes
 * that is a multiple of this number.
 */
var resumableUploadChunkSize = 256 * 1024;
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 * @param chunkSize Number of bytes to upload.
 * @param status The previous status.
 *     If not passed or null, we start from the beginning.
 * @throws fbs.Error If the upload is already complete, the passed in status
 *     has a final size inconsistent with the blob, or the blob cannot be sliced
 *     for upload.
 */
function continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {
    // TODO(andysoto): standardize on internal asserts
    // assert(!(opt_status && opt_status.finalized));
    var status_ = new ResumableUploadStatus(0, 0);
    if (status) {
        status_.current = status.current;
        status_.total = status.total;
    }
    else {
        status_.current = 0;
        status_.total = blob.size();
    }
    if (blob.size() !== status_.total) {
        throw serverFileWrongSize();
    }
    var bytesLeft = status_.total - status_.current;
    var bytesToUpload = bytesLeft;
    if (chunkSize > 0) {
        bytesToUpload = Math.min(bytesToUpload, chunkSize);
    }
    var startByte = status_.current;
    var endByte = startByte + bytesToUpload;
    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';
    var headers = {
        'X-Goog-Upload-Command': uploadCommand,
        'X-Goog-Upload-Offset': status_.current
    };
    var body = blob.slice(startByte, endByte);
    if (body === null) {
        throw cannotSliceBlob();
    }
    function handler(xhr, text) {
        // TODO(andysoto): Verify the MD5 of each uploaded range:
        // the 'x-range-md5' header comes back with status code 308 responses.
        // We'll only be able to bail out though, because you can't re-upload a
        // range that you previously uploaded.
        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);
        var newCurrent = status_.current + bytesToUpload;
        var size = blob.size();
        var metadata;
        if (uploadStatus === 'final') {
            metadata = metadataHandler(authWrapper, mappings)(xhr, text);
        }
        else {
            metadata = null;
        }
        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);
    }
    var method = 'POST';
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.progressCallback = progressCallback || null;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @struct
 */
var Observer = /** @class */ (function () {
    function Observer(nextOrObserver, error, complete) {
        var asFunctions = isFunction(nextOrObserver) ||
            isDef(error) ||
            isDef(complete);
        if (asFunctions) {
            this.next = nextOrObserver;
            this.error = error || null;
            this.complete = complete || null;
        }
        else {
            var observer = nextOrObserver;
            this.next = observer.next || null;
            this.error = observer.error || null;
            this.complete = observer.complete || null;
        }
    }
    return Observer;
}());

var UploadTaskSnapshot = /** @class */ (function () {
    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {
        this.bytesTransferred = bytesTransferred;
        this.totalBytes = totalBytes;
        this.state = state;
        this.metadata = metadata;
        this.task = task;
        this.ref = ref;
    }
    return UploadTaskSnapshot;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @param name Name of the function.
 * @param specs Argument specs.
 * @param passed The actual arguments passed to the function.
 * @throws {fbs.Error} If the arguments are invalid.
 */
function validate(name, specs, passed) {
    var minArgs = specs.length;
    var maxArgs = specs.length;
    for (var i = 0; i < specs.length; i++) {
        if (specs[i].optional) {
            minArgs = i;
            break;
        }
    }
    var validLength = minArgs <= passed.length && passed.length <= maxArgs;
    if (!validLength) {
        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);
    }
    for (var i = 0; i < passed.length; i++) {
        try {
            specs[i].validator(passed[i]);
        }
        catch (e) {
            if (e instanceof Error) {
                throw invalidArgument(i, name, e.message);
            }
            else {
                throw invalidArgument(i, name, e);
            }
        }
    }
}
/**
 * @struct
 */
var ArgSpec = /** @class */ (function () {
    function ArgSpec(validator, optional) {
        var self = this;
        this.validator = function (p) {
            if (self.optional && !isJustDef(p)) {
                return;
            }
            validator(p);
        };
        this.optional = !!optional;
    }
    return ArgSpec;
}());
function and_(v1, v2) {
    return function (p) {
        v1(p);
        v2(p);
    };
}
function stringSpec(validator, optional) {
    function stringValidator(p) {
        if (!isString(p)) {
            throw 'Expected string.';
        }
    }
    var chainedValidator;
    if (validator) {
        chainedValidator = and_(stringValidator, validator);
    }
    else {
        chainedValidator = stringValidator;
    }
    return new ArgSpec(chainedValidator, optional);
}
function uploadDataSpec() {
    function validator(p) {
        var valid = p instanceof Uint8Array ||
            p instanceof ArrayBuffer ||
            (isNativeBlobDefined() && p instanceof Blob);
        if (!valid) {
            throw 'Expected Blob or File.';
        }
    }
    return new ArgSpec(validator);
}
function metadataSpec(optional) {
    return new ArgSpec(metadataValidator, optional);
}
function listOptionSpec(optional) {
    return new ArgSpec(listOptionsValidator, optional);
}
function nonNegativeNumberSpec() {
    function validator(p) {
        var valid = isNumber(p) && p >= 0;
        if (!valid) {
            throw 'Expected a number 0 or greater.';
        }
    }
    return new ArgSpec(validator);
}
function looseObjectSpec(validator, optional) {
    function isLooseObjectValidator(p) {
        var isLooseObject = p === null || (isDef(p) && p instanceof Object);
        if (!isLooseObject) {
            throw 'Expected an Object.';
        }
        if (validator !== undefined && validator !== null) {
            validator(p);
        }
    }
    return new ArgSpec(isLooseObjectValidator, optional);
}
function nullFunctionSpec(optional) {
    function validator(p) {
        var valid = p === null || isFunction(p);
        if (!valid) {
            throw 'Expected a Function.';
        }
    }
    return new ArgSpec(validator, optional);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a function that invokes f with its arguments asynchronously as a
 * microtask, i.e. as soon as possible after the current script returns back
 * into browser code.
 */
function async(f) {
    return function () {
        var argsToForward = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            argsToForward[_i] = arguments[_i];
        }
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });
    };
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a blob being uploaded. Can be used to pause/resume/cancel the
 * upload and manage callbacks for various events.
 */
var UploadTask = /** @class */ (function () {
    /**
     * @param ref The firebaseStorage.Reference object this task came
     *     from, untyped to avoid cyclic dependencies.
     * @param blob The blob to upload.
     */
    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {
        var _this = this;
        if (metadata === void 0) { metadata = null; }
        this.transferred_ = 0;
        this.needToFetchStatus_ = false;
        this.needToFetchMetadata_ = false;
        this.observers_ = [];
        this.error_ = null;
        this.uploadUrl_ = null;
        this.request_ = null;
        this.chunkMultiplier_ = 1;
        this.resolve_ = null;
        this.reject_ = null;
        this.ref_ = ref;
        this.authWrapper_ = authWrapper;
        this.location_ = location;
        this.blob_ = blob;
        this.metadata_ = metadata;
        this.mappings_ = mappings;
        this.resumable_ = this.shouldDoResumable_(this.blob_);
        this.state_ = InternalTaskState.RUNNING;
        this.errorHandler_ = function (error) {
            _this.request_ = null;
            _this.chunkMultiplier_ = 1;
            if (error.codeEquals(Code.CANCELED)) {
                _this.needToFetchStatus_ = true;
                _this.completeTransitions_();
            }
            else {
                _this.error_ = error;
                _this.transition_(InternalTaskState.ERROR);
            }
        };
        this.metadataErrorHandler_ = function (error) {
            _this.request_ = null;
            if (error.codeEquals(Code.CANCELED)) {
                _this.completeTransitions_();
            }
            else {
                _this.error_ = error;
                _this.transition_(InternalTaskState.ERROR);
            }
        };
        this.promise_ = new Promise(function (resolve, reject) {
            _this.resolve_ = resolve;
            _this.reject_ = reject;
            _this.start_();
        });
        // Prevent uncaught rejections on the internal promise from bubbling out
        // to the top level with a dummy handler.
        this.promise_.then(null, function () { });
    }
    UploadTask.prototype.makeProgressCallback_ = function () {
        var _this = this;
        var sizeBefore = this.transferred_;
        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };
    };
    UploadTask.prototype.shouldDoResumable_ = function (blob) {
        return blob.size() > 256 * 1024;
    };
    UploadTask.prototype.start_ = function () {
        if (this.state_ !== InternalTaskState.RUNNING) {
            // This can happen if someone pauses us in a resume callback, for example.
            return;
        }
        if (this.request_ !== null) {
            return;
        }
        if (this.resumable_) {
            if (this.uploadUrl_ === null) {
                this.createResumable_();
            }
            else {
                if (this.needToFetchStatus_) {
                    this.fetchStatus_();
                }
                else {
                    if (this.needToFetchMetadata_) {
                        // Happens if we miss the metadata on upload completion.
                        this.fetchMetadata_();
                    }
                    else {
                        this.continueUpload_();
                    }
                }
            }
        }
        else {
            this.oneShotUpload_();
        }
    };
    UploadTask.prototype.resolveToken_ = function (callback) {
        var _this = this;
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.authWrapper_.getAuthToken().then(function (authToken) {
            switch (_this.state_) {
                case InternalTaskState.RUNNING:
                    callback(authToken);
                    break;
                case InternalTaskState.CANCELING:
                    _this.transition_(InternalTaskState.CANCELED);
                    break;
                case InternalTaskState.PAUSING:
                    _this.transition_(InternalTaskState.PAUSED);
                    break;
            }
        });
    };
    // TODO(andysoto): assert false
    UploadTask.prototype.createResumable_ = function () {
        var _this = this;
        this.resolveToken_(function (authToken) {
            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);
            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = createRequest;
            createRequest.getPromise().then(function (url) {
                _this.request_ = null;
                _this.uploadUrl_ = url;
                _this.needToFetchStatus_ = false;
                _this.completeTransitions_();
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.fetchStatus_ = function () {
        var _this = this;
        // TODO(andysoto): assert(this.uploadUrl_ !== null);
        var url = this.uploadUrl_;
        this.resolveToken_(function (authToken) {
            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);
            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = statusRequest;
            statusRequest.getPromise().then(function (status) {
                status = status;
                _this.request_ = null;
                _this.updateProgress_(status.current);
                _this.needToFetchStatus_ = false;
                if (status.finalized) {
                    _this.needToFetchMetadata_ = true;
                }
                _this.completeTransitions_();
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.continueUpload_ = function () {
        var _this = this;
        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;
        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());
        // TODO(andysoto): assert(this.uploadUrl_ !== null);
        var url = this.uploadUrl_;
        this.resolveToken_(function (authToken) {
            var requestInfo;
            try {
                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());
            }
            catch (e) {
                _this.error_ = e;
                _this.transition_(InternalTaskState.ERROR);
                return;
            }
            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = uploadRequest;
            uploadRequest
                .getPromise()
                .then(function (newStatus) {
                _this.increaseMultiplier_();
                _this.request_ = null;
                _this.updateProgress_(newStatus.current);
                if (newStatus.finalized) {
                    _this.metadata_ = newStatus.metadata;
                    _this.transition_(InternalTaskState.SUCCESS);
                }
                else {
                    _this.completeTransitions_();
                }
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.increaseMultiplier_ = function () {
        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;
        // Max chunk size is 32M.
        if (currentSize < 32 * 1024 * 1024) {
            this.chunkMultiplier_ *= 2;
        }
    };
    UploadTask.prototype.fetchMetadata_ = function () {
        var _this = this;
        this.resolveToken_(function (authToken) {
            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);
            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = metadataRequest;
            metadataRequest.getPromise().then(function (metadata) {
                _this.request_ = null;
                _this.metadata_ = metadata;
                _this.transition_(InternalTaskState.SUCCESS);
            }, _this.metadataErrorHandler_);
        });
    };
    UploadTask.prototype.oneShotUpload_ = function () {
        var _this = this;
        this.resolveToken_(function (authToken) {
            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);
            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = multipartRequest;
            multipartRequest.getPromise().then(function (metadata) {
                _this.request_ = null;
                _this.metadata_ = metadata;
                _this.updateProgress_(_this.blob_.size());
                _this.transition_(InternalTaskState.SUCCESS);
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.updateProgress_ = function (transferred) {
        var old = this.transferred_;
        this.transferred_ = transferred;
        // A progress update can make the "transferred" value smaller (e.g. a
        // partial upload not completed by server, after which the "transferred"
        // value may reset to the value at the beginning of the request).
        if (this.transferred_ !== old) {
            this.notifyObservers_();
        }
    };
    UploadTask.prototype.transition_ = function (state) {
        if (this.state_ === state) {
            return;
        }
        switch (state) {
            case InternalTaskState.CANCELING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING);
                this.state_ = state;
                if (this.request_ !== null) {
                    this.request_.cancel();
                }
                break;
            case InternalTaskState.PAUSING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING);
                this.state_ = state;
                if (this.request_ !== null) {
                    this.request_.cancel();
                }
                break;
            case InternalTaskState.RUNNING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSED ||
                //        this.state_ === InternalTaskState.PAUSING);
                var wasPaused = this.state_ === InternalTaskState.PAUSED;
                this.state_ = state;
                if (wasPaused) {
                    this.notifyObservers_();
                    this.start_();
                }
                break;
            case InternalTaskState.PAUSED:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSING);
                this.state_ = state;
                this.notifyObservers_();
                break;
            case InternalTaskState.CANCELED:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSED ||
                //        this.state_ === InternalTaskState.CANCELING);
                this.error_ = canceled();
                this.state_ = state;
                this.notifyObservers_();
                break;
            case InternalTaskState.ERROR:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING ||
                //        this.state_ === InternalTaskState.CANCELING);
                this.state_ = state;
                this.notifyObservers_();
                break;
            case InternalTaskState.SUCCESS:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING ||
                //        this.state_ === InternalTaskState.CANCELING);
                this.state_ = state;
                this.notifyObservers_();
                break;
        }
    };
    UploadTask.prototype.completeTransitions_ = function () {
        switch (this.state_) {
            case InternalTaskState.PAUSING:
                this.transition_(InternalTaskState.PAUSED);
                break;
            case InternalTaskState.CANCELING:
                this.transition_(InternalTaskState.CANCELED);
                break;
            case InternalTaskState.RUNNING:
                this.start_();
                break;
        }
    };
    Object.defineProperty(UploadTask.prototype, "snapshot", {
        get: function () {
            var externalState = taskStateFromInternalTaskState(this.state_);
            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds a callback for an event.
     * @param type The type of event to listen for.
     */
    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {
        function typeValidator() {
            if (type !== TaskEvent.STATE_CHANGED) {
                throw "Expected one of the event types: [" + TaskEvent.STATE_CHANGED + "].";
            }
        }
        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +
            '`next`, `error`, `complete` properties.';
        var nextValidator = nullFunctionSpec(true).validator;
        var observerValidator = looseObjectSpec(null, true).validator;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        function nextOrObserverValidator(p) {
            try {
                nextValidator(p);
                return;
            }
            catch (e) { }
            try {
                observerValidator(p);
                var anyDefined = isJustDef(p['next']) ||
                    isJustDef(p['error']) ||
                    isJustDef(p['complete']);
                if (!anyDefined) {
                    throw '';
                }
                return;
            }
            catch (e) {
                throw nextOrObserverMessage;
            }
        }
        var specs = [
            stringSpec(typeValidator),
            looseObjectSpec(nextOrObserverValidator, true),
            nullFunctionSpec(true),
            nullFunctionSpec(true)
        ];
        validate('on', specs, arguments);
        var self = this;
        function makeBinder(specs) {
            function binder(nextOrObserver, error, complete) {
                if (specs !== null) {
                    validate('on', specs, arguments);
                }
                var observer = new Observer(nextOrObserver, error, completed);
                self.addObserver_(observer);
                return function () {
                    self.removeObserver_(observer);
                };
            }
            return binder;
        }
        function binderNextOrObserverValidator(p) {
            if (p === null) {
                throw nextOrObserverMessage;
            }
            nextOrObserverValidator(p);
        }
        var binderSpecs = [
            looseObjectSpec(binderNextOrObserverValidator),
            nullFunctionSpec(true),
            nullFunctionSpec(true)
        ];
        var typeOnly = !(isJustDef(nextOrObserver) ||
            isJustDef(error) ||
            isJustDef(completed));
        if (typeOnly) {
            return makeBinder(binderSpecs);
        }
        else {
            return makeBinder(null)(nextOrObserver, error, completed);
        }
    };
    /**
     * This object behaves like a Promise, and resolves with its snapshot data
     * when the upload completes.
     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.
     * @param onRejected The rejection callback.
     */
    UploadTask.prototype.then = function (onFulfilled, onRejected) {
        // These casts are needed so that TypeScript can infer the types of the
        // resulting Promise.
        return this.promise_.then(onFulfilled, onRejected);
    };
    /**
     * Equivalent to calling `then(null, onRejected)`.
     */
    UploadTask.prototype.catch = function (onRejected) {
        return this.then(null, onRejected);
    };
    /**
     * Adds the given observer.
     */
    UploadTask.prototype.addObserver_ = function (observer) {
        this.observers_.push(observer);
        this.notifyObserver_(observer);
    };
    /**
     * Removes the given observer.
     */
    UploadTask.prototype.removeObserver_ = function (observer) {
        var i = this.observers_.indexOf(observer);
        if (i !== -1) {
            this.observers_.splice(i, 1);
        }
    };
    UploadTask.prototype.notifyObservers_ = function () {
        var _this = this;
        this.finishPromise_();
        var observers = this.observers_.slice();
        observers.forEach(function (observer) {
            _this.notifyObserver_(observer);
        });
    };
    UploadTask.prototype.finishPromise_ = function () {
        if (this.resolve_ !== null) {
            var triggered = true;
            switch (taskStateFromInternalTaskState(this.state_)) {
                case TaskState.SUCCESS:
                    async(this.resolve_.bind(null, this.snapshot))();
                    break;
                case TaskState.CANCELED:
                case TaskState.ERROR:
                    var toCall = this.reject_;
                    async(toCall.bind(null, this.error_))();
                    break;
                default:
                    triggered = false;
                    break;
            }
            if (triggered) {
                this.resolve_ = null;
                this.reject_ = null;
            }
        }
    };
    UploadTask.prototype.notifyObserver_ = function (observer) {
        var externalState = taskStateFromInternalTaskState(this.state_);
        switch (externalState) {
            case TaskState.RUNNING:
            case TaskState.PAUSED:
                if (observer.next) {
                    async(observer.next.bind(observer, this.snapshot))();
                }
                break;
            case TaskState.SUCCESS:
                if (observer.complete) {
                    async(observer.complete.bind(observer))();
                }
                break;
            case TaskState.CANCELED:
            case TaskState.ERROR:
                if (observer.error) {
                    async(observer.error.bind(observer, this.error_))();
                }
                break;
            default:
                // TODO(andysoto): assert(false);
                if (observer.error) {
                    async(observer.error.bind(observer, this.error_))();
                }
        }
    };
    /**
     * Resumes a paused task. Has no effect on a currently running or failed task.
     * @return True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.resume = function () {
        validate('resume', [], arguments);
        var valid = this.state_ === InternalTaskState.PAUSED ||
            this.state_ === InternalTaskState.PAUSING;
        if (valid) {
            this.transition_(InternalTaskState.RUNNING);
        }
        return valid;
    };
    /**
     * Pauses a currently running task. Has no effect on a paused or failed task.
     * @return True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.pause = function () {
        validate('pause', [], arguments);
        var valid = this.state_ === InternalTaskState.RUNNING;
        if (valid) {
            this.transition_(InternalTaskState.PAUSING);
        }
        return valid;
    };
    /**
     * Cancels a currently running or paused task. Has no effect on a complete or
     * failed task.
     * @return True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.cancel = function () {
        validate('cancel', [], arguments);
        var valid = this.state_ === InternalTaskState.RUNNING ||
            this.state_ === InternalTaskState.PAUSING;
        if (valid) {
            this.transition_(InternalTaskState.CANCELING);
        }
        return valid;
    };
    return UploadTask;
}());

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provides methods to interact with a bucket in the Firebase Storage service.
 * @param location An fbs.location, or the URL at
 *     which to base this object, in one of the following forms:
 *         gs://<bucket>/<object-path>
 *         http[s]://firebasestorage.googleapis.com/
 *                     <api-version>/b/<bucket>/o/<object-path>
 *     Any query or fragment strings will be ignored in the http[s]
 *     format. If no value is passed, the storage object will use a URL based on
 *     the project ID of the base firebase.App instance.
 */
var Reference = /** @class */ (function () {
    function Reference(authWrapper, location) {
        this.authWrapper = authWrapper;
        if (location instanceof Location) {
            this.location = location;
        }
        else {
            this.location = Location.makeFromUrl(location);
        }
    }
    /**
     * @return The URL for the bucket and path this object references,
     *     in the form gs://<bucket>/<object-path>
     * @override
     */
    Reference.prototype.toString = function () {
        validate('toString', [], arguments);
        return 'gs://' + this.location.bucket + '/' + this.location.path;
    };
    Reference.prototype.newRef = function (authWrapper, location) {
        return new Reference(authWrapper, location);
    };
    Reference.prototype.mappings = function () {
        return getMappings();
    };
    /**
     * @return A reference to the object obtained by
     *     appending childPath, removing any duplicate, beginning, or trailing
     *     slashes.
     */
    Reference.prototype.child = function (childPath) {
        validate('child', [stringSpec()], arguments);
        var newPath = child(this.location.path, childPath);
        var location = new Location(this.location.bucket, newPath);
        return this.newRef(this.authWrapper, location);
    };
    Object.defineProperty(Reference.prototype, "parent", {
        /**
         * @return A reference to the parent of the
         *     current object, or null if the current object is the root.
         */
        get: function () {
            var newPath = parent(this.location.path);
            if (newPath === null) {
                return null;
            }
            var location = new Location(this.location.bucket, newPath);
            return this.newRef(this.authWrapper, location);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "root", {
        /**
         * @return An reference to the root of this
         *     object's bucket.
         */
        get: function () {
            var location = new Location(this.location.bucket, '');
            return this.newRef(this.authWrapper, location);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "bucket", {
        get: function () {
            return this.location.bucket;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "fullPath", {
        get: function () {
            return this.location.path;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "name", {
        get: function () {
            return lastComponent(this.location.path);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "storage", {
        get: function () {
            return this.authWrapper.service();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Uploads a blob to this object's location.
     * @param data The blob to upload.
     * @return An UploadTask that lets you control and
     *     observe the upload.
     */
    Reference.prototype.put = function (data, metadata) {
        if (metadata === void 0) { metadata = null; }
        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);
        this.throwIfRoot_('put');
        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);
    };
    /**
     * Uploads a string to this object's location.
     * @param value The string to upload.
     * @param format The format of the string to upload.
     * @return An UploadTask that lets you control and
     *     observe the upload.
     */
    Reference.prototype.putString = function (value, format, metadata) {
        if (format === void 0) { format = StringFormat.RAW; }
        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);
        this.throwIfRoot_('putString');
        var data = dataFromString(format, value);
        var metadataClone = Object.assign({}, metadata);
        if (!isDef(metadataClone['contentType']) &&
            isDef(data.contentType)) {
            metadataClone['contentType'] = data.contentType;
        }
        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);
    };
    /**
     * Deletes the object at this location.
     * @return A promise that resolves if the deletion succeeds.
     */
    Reference.prototype.delete = function () {
        var _this = this;
        validate('delete', [], arguments);
        this.throwIfRoot_('delete');
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = deleteObject(_this.authWrapper, _this.location);
            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     * List all items (files) and prefixes (folders) under this storage reference.
     *
     * This is a helper method for calling list() repeatedly until there are
     * no more results. The default pagination size is 1000.
     *
     * Note: The results may not be consistent if objects are changed while this
     * operation is running.
     *
     * Warning: listAll may potentially consume too many resources if there are
     * too many results.
     *
     * @return A Promise that resolves with all the items and prefixes under
     *      the current storage reference. `prefixes` contains references to
     *      sub-directories and `items` contains references to objects in this
     *      folder. `nextPageToken` is never returned.
     */
    Reference.prototype.listAll = function () {
        validate('listAll', [], arguments);
        var accumulator = {
            prefixes: [],
            items: []
        };
        return this.listAllHelper(accumulator).then(function () { return accumulator; });
    };
    Reference.prototype.listAllHelper = function (accumulator, pageToken) {
        return tslib.__awaiter(this, void 0, void 0, function () {
            var opt, nextPage;
            var _a, _b;
            return tslib.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        opt = {
                            // maxResults is 1000 by default.
                            pageToken: pageToken
                        };
                        return [4 /*yield*/, this.list(opt)];
                    case 1:
                        nextPage = _c.sent();
                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);
                        (_b = accumulator.items).push.apply(_b, nextPage.items);
                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];
                    case 2:
                        _c.sent();
                        _c.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * List items (files) and prefixes (folders) under this storage reference.
     *
     * List API is only available for Firebase Rules Version 2.
     *
     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'
     * delimited folder structure.
     * Refer to GCS's List API if you want to learn more.
     *
     * To adhere to Firebase Rules's Semantics, Firebase Storage does not
     * support objects whose paths end with "/" or contain two consecutive
     * "/"s. Firebase Storage List API will filter these unsupported objects.
     * list() may fail if there are too many unsupported objects in the bucket.
     *
     * @param options See ListOptions for details.
     * @return A Promise that resolves with the items and prefixes.
     *      `prefixes` contains references to sub-folders and `items`
     *      contains references to objects in this folder. `nextPageToken`
     *      can be used to get the rest of the results.
     */
    Reference.prototype.list = function (options) {
        validate('list', [listOptionSpec(true)], arguments);
        var self = this;
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var op = options || {};
            var requestInfo = list(self.authWrapper, self.location, 
            /*delimiter= */ '/', op.pageToken, op.maxResults);
            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     *     A promise that resolves with the metadata for this object. If this
     *     object doesn't exist or metadata cannot be retreived, the promise is
     *     rejected.
     */
    Reference.prototype.getMetadata = function () {
        var _this = this;
        validate('getMetadata', [], arguments);
        this.throwIfRoot_('getMetadata');
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());
            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     * Updates the metadata for this object.
     * @param metadata The new metadata for the object.
     *     Only values that have been explicitly set will be changed. Explicitly
     *     setting a value to null will remove the metadata.
     * @return A promise that resolves
     *     with the new metadata for this object.
     *     @see firebaseStorage.Reference.prototype.getMetadata
     */
    Reference.prototype.updateMetadata = function (metadata) {
        var _this = this;
        validate('updateMetadata', [metadataSpec()], arguments);
        this.throwIfRoot_('updateMetadata');
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());
            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     * @return A promise that resolves with the download
     *     URL for this object.
     */
    Reference.prototype.getDownloadURL = function () {
        var _this = this;
        validate('getDownloadURL', [], arguments);
        this.throwIfRoot_('getDownloadURL');
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());
            return _this.authWrapper
                .makeRequest(requestInfo, authToken)
                .getPromise()
                .then(function (url) {
                if (url === null) {
                    throw noDownloadURL();
                }
                return url;
            });
        });
    };
    Reference.prototype.throwIfRoot_ = function (name) {
        if (this.location.path === '') {
            throw invalidRootOperation(name);
        }
    };
    return Reference;
}());

/**
 * A request whose promise always fails.
 * @struct
 * @template T
 */
var FailRequest = /** @class */ (function () {
    function FailRequest(error) {
        this.promise_ = Promise.reject(error);
    }
    /** @inheritDoc */
    FailRequest.prototype.getPromise = function () {
        return this.promise_;
    };
    /** @inheritDoc */
    FailRequest.prototype.cancel = function (_appDelete) {
    };
    return FailRequest;
}());

var RequestMap = /** @class */ (function () {
    function RequestMap() {
        this.map = new Map();
        this.id = MIN_SAFE_INTEGER;
    }
    /**
     * Registers the given request with this map.
     * The request is unregistered when it completes.
     *
     * @param request The request to register.
     */
    RequestMap.prototype.addRequest = function (request) {
        var _this = this;
        var id = this.id;
        this.id++;
        this.map.set(id, request);
        request
            .getPromise()
            .then(function () { return _this.map.delete(id); }, function () { return _this.map.delete(id); });
    };
    /**
     * Cancels all registered requests.
     */
    RequestMap.prototype.clear = function () {
        this.map.forEach(function (v) {
            v && v.cancel(true);
        });
        this.map.clear();
    };
    return RequestMap;
}());

/**
 * @param app If null, getAuthToken always resolves with null.
 * @param service The storage service associated with this auth wrapper.
 *     Untyped to avoid circular type dependencies.
 * @struct
 */
var AuthWrapper = /** @class */ (function () {
    function AuthWrapper(app, maker, requestMaker, service, pool) {
        this.bucket_ = null;
        this.deleted_ = false;
        this.app_ = app;
        if (this.app_ !== null) {
            var options = this.app_.options;
            if (isDef(options)) {
                this.bucket_ = AuthWrapper.extractBucket_(options);
            }
        }
        this.storageRefMaker_ = maker;
        this.requestMaker_ = requestMaker;
        this.pool_ = pool;
        this.service_ = service;
        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;
        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;
        this.requestMap_ = new RequestMap();
    }
    AuthWrapper.extractBucket_ = function (config) {
        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;
        if (bucketString == null) {
            return null;
        }
        var loc = Location.makeFromBucketSpec(bucketString);
        return loc.bucket;
    };
    AuthWrapper.prototype.getAuthToken = function () {
        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs
        // (b/28673818).
        if (this.app_ !== null &&
            isDef(this.app_.INTERNAL) &&
            isDef(this.app_.INTERNAL.getToken)) {
            return this.app_.INTERNAL.getToken().then(function (response) {
                if (response !== null) {
                    return response.accessToken;
                }
                else {
                    return null;
                }
            }, function () { return null; });
        }
        else {
            return Promise.resolve(null);
        }
    };
    AuthWrapper.prototype.bucket = function () {
        if (this.deleted_) {
            throw appDeleted();
        }
        else {
            return this.bucket_;
        }
    };
    /**
     * The service associated with this auth wrapper. Untyped to avoid circular
     * type dependencies.
     */
    AuthWrapper.prototype.service = function () {
        return this.service_;
    };
    /**
     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper
     * at the given Location.
     * @param loc The Location.
     * @return Actually a firebaseStorage.Reference, typing not allowed
     *     because of circular dependency problems.
     */
    AuthWrapper.prototype.makeStorageReference = function (loc) {
        return this.storageRefMaker_(this, loc);
    };
    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {
        if (!this.deleted_) {
            var request = this.requestMaker_(requestInfo, authToken, this.pool_);
            this.requestMap_.addRequest(request);
            return request;
        }
        else {
            return new FailRequest(appDeleted());
        }
    };
    /**
     * Stop running requests and prevent more from being created.
     */
    AuthWrapper.prototype.deleteApp = function () {
        this.deleted_ = true;
        this.app_ = null;
        this.requestMap_.clear();
    };
    AuthWrapper.prototype.maxUploadRetryTime = function () {
        return this.maxUploadRetryTime_;
    };
    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {
        this.maxUploadRetryTime_ = time;
    };
    AuthWrapper.prototype.maxOperationRetryTime = function () {
        return this.maxOperationRetryTime_;
    };
    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {
        this.maxOperationRetryTime_ = time;
    };
    return AuthWrapper;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @param f May be invoked
 *     before the function returns.
 * @param callback Get all the arguments passed to the function
 *     passed to f, including the initial boolean.
 */
function start(f, callback, timeout) {
    // TODO(andysoto): make this code cleaner (probably refactor into an actual
    // type instead of a bunch of functions with state shared in the closure)
    var waitSeconds = 1;
    // Would type this as "number" but that doesn't work for Node so ¯\_(ツ)_/¯
    // TODO: find a way to exclude Node type definition for storage because storage only works in browser
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var timeoutId = null;
    var hitTimeout = false;
    var cancelState = 0;
    function canceled() {
        return cancelState === 2;
    }
    var triggeredCallback = false;
    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to
    // the no-explicit-any rule when ESlint releases it.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    function triggerCallback() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!triggeredCallback) {
            triggeredCallback = true;
            callback.apply(null, args);
        }
    }
    function callWithDelay(millis) {
        timeoutId = setTimeout(function () {
            timeoutId = null;
            f(handler, canceled());
        }, millis);
    }
    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to
    // the no-explicit-any rule when ESlint releases it.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    function handler(success) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (triggeredCallback) {
            return;
        }
        if (success) {
            triggerCallback.call.apply(triggerCallback, tslib.__spreadArrays([null, success], args));
            return;
        }
        var mustStop = canceled() || hitTimeout;
        if (mustStop) {
            triggerCallback.call.apply(triggerCallback, tslib.__spreadArrays([null, success], args));
            return;
        }
        if (waitSeconds < 64) {
            /* TODO(andysoto): don't back off so quickly if we know we're offline. */
            waitSeconds *= 2;
        }
        var waitMillis;
        if (cancelState === 1) {
            cancelState = 2;
            waitMillis = 0;
        }
        else {
            waitMillis = (waitSeconds + Math.random()) * 1000;
        }
        callWithDelay(waitMillis);
    }
    var stopped = false;
    function stop(wasTimeout) {
        if (stopped) {
            return;
        }
        stopped = true;
        if (triggeredCallback) {
            return;
        }
        if (timeoutId !== null) {
            if (!wasTimeout) {
                cancelState = 2;
            }
            clearTimeout(timeoutId);
            callWithDelay(0);
        }
        else {
            if (!wasTimeout) {
                cancelState = 1;
            }
        }
    }
    callWithDelay(0);
    setTimeout(function () {
        hitTimeout = true;
        stop(true);
    }, timeout);
    return stop;
}
/**
 * Stops the retry loop from repeating.
 * If the function is currently "in between" retries, it is invoked immediately
 * with the second parameter as "true". Otherwise, it will be invoked once more
 * after the current invocation finishes iff the current invocation would have
 * triggered another retry.
 */
function stop(id) {
    id(false);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @struct
 * @template T
 */
var NetworkRequest = /** @class */ (function () {
    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {
        var _this = this;
        this.pendingXhr_ = null;
        this.backoffId_ = null;
        this.resolve_ = null;
        this.reject_ = null;
        this.canceled_ = false;
        this.appDelete_ = false;
        this.url_ = url;
        this.method_ = method;
        this.headers_ = headers;
        this.body_ = body;
        this.successCodes_ = successCodes.slice();
        this.additionalRetryCodes_ = additionalRetryCodes.slice();
        this.callback_ = callback;
        this.errorCallback_ = errorCallback;
        this.progressCallback_ = progressCallback;
        this.timeout_ = timeout;
        this.pool_ = pool;
        this.promise_ = new Promise(function (resolve, reject) {
            _this.resolve_ = resolve;
            _this.reject_ = reject;
            _this.start_();
        });
    }
    /**
     * Actually starts the retry loop.
     */
    NetworkRequest.prototype.start_ = function () {
        var self = this;
        function doTheRequest(backoffCallback, canceled) {
            if (canceled) {
                backoffCallback(false, new RequestEndStatus(false, null, true));
                return;
            }
            var xhr = self.pool_.createXhrIo();
            self.pendingXhr_ = xhr;
            function progressListener(progressEvent) {
                var loaded = progressEvent.loaded;
                var total = progressEvent.lengthComputable ? progressEvent.total : -1;
                if (self.progressCallback_ !== null) {
                    self.progressCallback_(loaded, total);
                }
            }
            if (self.progressCallback_ !== null) {
                xhr.addUploadProgressListener(progressListener);
            }
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            xhr
                .send(self.url_, self.method_, self.body_, self.headers_)
                .then(function (xhr) {
                if (self.progressCallback_ !== null) {
                    xhr.removeUploadProgressListener(progressListener);
                }
                self.pendingXhr_ = null;
                xhr = xhr;
                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;
                var status = xhr.getStatus();
                if (!hitServer || self.isRetryStatusCode_(status)) {
                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;
                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));
                    return;
                }
                var successCode = self.successCodes_.indexOf(status) !== -1;
                backoffCallback(true, new RequestEndStatus(successCode, xhr));
            });
        }
        /**
         * @param requestWentThrough True if the request eventually went
         *     through, false if it hit the retry limit or was canceled.
         */
        function backoffDone(requestWentThrough, status) {
            var resolve = self.resolve_;
            var reject = self.reject_;
            var xhr = status.xhr;
            if (status.wasSuccessCode) {
                try {
                    var result = self.callback_(xhr, xhr.getResponseText());
                    if (isJustDef(result)) {
                        resolve(result);
                    }
                    else {
                        resolve();
                    }
                }
                catch (e) {
                    reject(e);
                }
            }
            else {
                if (xhr !== null) {
                    var err = unknown();
                    err.setServerResponseProp(xhr.getResponseText());
                    if (self.errorCallback_) {
                        reject(self.errorCallback_(xhr, err));
                    }
                    else {
                        reject(err);
                    }
                }
                else {
                    if (status.canceled) {
                        var err = self.appDelete_ ? appDeleted() : canceled();
                        reject(err);
                    }
                    else {
                        var err = retryLimitExceeded();
                        reject(err);
                    }
                }
            }
        }
        if (this.canceled_) {
            backoffDone(false, new RequestEndStatus(false, null, true));
        }
        else {
            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);
        }
    };
    /** @inheritDoc */
    NetworkRequest.prototype.getPromise = function () {
        return this.promise_;
    };
    /** @inheritDoc */
    NetworkRequest.prototype.cancel = function (appDelete) {
        this.canceled_ = true;
        this.appDelete_ = appDelete || false;
        if (this.backoffId_ !== null) {
            stop(this.backoffId_);
        }
        if (this.pendingXhr_ !== null) {
            this.pendingXhr_.abort();
        }
    };
    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {
        // The codes for which to retry came from this page:
        // https://cloud.google.com/storage/docs/exponential-backoff
        var isFiveHundredCode = status >= 500 && status < 600;
        var extraRetryCodes = [
            // Request Timeout: web server didn't receive full request in time.
            408,
            // Too Many Requests: you're getting rate-limited, basically.
            429
        ];
        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;
        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;
        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;
    };
    return NetworkRequest;
}());
/**
 * A collection of information about the result of a network request.
 * @param opt_canceled Defaults to false.
 * @struct
 */
var RequestEndStatus = /** @class */ (function () {
    function RequestEndStatus(wasSuccessCode, xhr, canceled) {
        this.wasSuccessCode = wasSuccessCode;
        this.xhr = xhr;
        this.canceled = !!canceled;
    }
    return RequestEndStatus;
}());
function addAuthHeader_(headers, authToken) {
    if (authToken !== null && authToken.length > 0) {
        headers['Authorization'] = 'Firebase ' + authToken;
    }
}
function addVersionHeader_(headers) {
    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';
    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;
}
/**
 * @template T
 */
function makeRequest(requestInfo, authToken, pool) {
    var queryPart = makeQueryString(requestInfo.urlParams);
    var url = requestInfo.url + queryPart;
    var headers = Object.assign({}, requestInfo.headers);
    addAuthHeader_(headers, authToken);
    addVersionHeader_(headers);
    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A service that provides firebaseStorage.Reference instances.
 * @param opt_url gs:// url to a custom Storage Bucket
 *
 * @struct
 */
var Service = /** @class */ (function () {
    function Service(app, pool, url) {
        this.bucket_ = null;
        function maker(authWrapper, loc) {
            return new Reference(authWrapper, loc);
        }
        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);
        this.app_ = app;
        if (url != null) {
            this.bucket_ = Location.makeFromBucketSpec(url);
        }
        else {
            var authWrapperBucket = this.authWrapper_.bucket();
            if (authWrapperBucket != null) {
                this.bucket_ = new Location(authWrapperBucket, '');
            }
        }
        this.internals_ = new ServiceInternals(this);
    }
    /**
     * Returns a firebaseStorage.Reference for the given path in the default
     * bucket.
     */
    Service.prototype.ref = function (path) {
        function validator(path) {
            if (typeof path !== 'string') {
                throw 'Path is not a string.';
            }
            if (/^[A-Za-z]+:\/\//.test(path)) {
                throw 'Expected child path but got a URL, use refFromURL instead.';
            }
        }
        validate('ref', [stringSpec(validator, true)], arguments);
        if (this.bucket_ == null) {
            throw new Error('No Storage Bucket defined in Firebase Options.');
        }
        var ref = new Reference(this.authWrapper_, this.bucket_);
        if (path != null) {
            return ref.child(path);
        }
        else {
            return ref;
        }
    };
    /**
     * Returns a firebaseStorage.Reference object for the given absolute URL,
     * which must be a gs:// or http[s]:// URL.
     */
    Service.prototype.refFromURL = function (url) {
        function validator(p) {
            if (typeof p !== 'string') {
                throw 'Path is not a string.';
            }
            if (!/^[A-Za-z]+:\/\//.test(p)) {
                throw 'Expected full URL but got a child path, use ref instead.';
            }
            try {
                Location.makeFromUrl(p);
            }
            catch (e) {
                throw 'Expected valid full URL but got an invalid one.';
            }
        }
        validate('refFromURL', [stringSpec(validator, false)], arguments);
        return new Reference(this.authWrapper_, url);
    };
    Object.defineProperty(Service.prototype, "maxUploadRetryTime", {
        get: function () {
            return this.authWrapper_.maxUploadRetryTime();
        },
        enumerable: true,
        configurable: true
    });
    Service.prototype.setMaxUploadRetryTime = function (time) {
        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);
        this.authWrapper_.setMaxUploadRetryTime(time);
    };
    Service.prototype.setMaxOperationRetryTime = function (time) {
        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);
        this.authWrapper_.setMaxOperationRetryTime(time);
    };
    Object.defineProperty(Service.prototype, "app", {
        get: function () {
            return this.app_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Service.prototype, "INTERNAL", {
        get: function () {
            return this.internals_;
        },
        enumerable: true,
        configurable: true
    });
    return Service;
}());
/**
 * @struct
 */
var ServiceInternals = /** @class */ (function () {
    function ServiceInternals(service) {
        this.service_ = service;
    }
    /**
     * Called when the associated app is deleted.
     * @see {!fbs.AuthWrapper.prototype.deleteApp}
     */
    ServiceInternals.prototype.delete = function () {
        this.service_.authWrapper_.deleteApp();
        return Promise.resolve();
    };
    return ServiceInternals;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Type constant for Firebase Storage.
 */
var STORAGE_TYPE = 'storage';
function factory(app, unused, url) {
    return new Service(app, new XhrIoPool(), url);
}
function registerStorage(instance) {
    var namespaceExports = {
        // no-inline
        TaskState: TaskState,
        TaskEvent: TaskEvent,
        StringFormat: StringFormat,
        Storage: Service,
        Reference: Reference
    };
    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, 
    // Allow multiple storage instances per app.
    true);
}
registerStorage(firebase);

exports.registerStorage = registerStorage;


},{"@firebase/app":145,"tslib":190}],150:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function (assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function (message) {
    return new Error('Firebase Database (' +
        CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function (str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < str.length &&
            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0, c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        }
        else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function (input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, webSafe) {
        this.init_();
        var charToByteMap = webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function (str) {
    try {
        return base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        if (!source.hasOwnProperty(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.reject = function () { };
        this.resolve = function () { };
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return (typeof window !== 'undefined' &&
        // @ts-ignore Setting up an broadly applicable index signature for Window
        // just to deal with this case would probably be a bad idea.
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return (Object.prototype.toString.call(global.process) === '[object process]');
    }
    catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */ (function (_super) {
    tslib.__extends(FirebaseError, _super);
    function FirebaseError(code, message) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error));
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage);
        // Keys with an underscore at the end of their name are not included in
        // error.data for some reason.
        // TODO: Replace with Object.entries when lib is updated to es2017.
        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
            var key = _b[_a];
            if (key.slice(-1) !== '_') {
                if (key in error) {
                    console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
                }
                error[key] = customData[key];
            }
        }
        return error;
    };
    return ErrorFactory;
}());
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? value.toString() : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function (token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0, validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (!!now &&
        !!validSince &&
        !!validUntil &&
        now >= validSince &&
        now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function (token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function (token) {
    var decoded = decode(token), claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function (token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
        return obj[key];
    }
    else {
        return undefined;
    }
}
function isEmpty(obj) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
function map(obj, fn, contextObj) {
    var res = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            res[key] = fn.call(contextObj, obj[key], key, obj);
        }
    }
    return res;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
    var params = [];
    var _loop_1 = function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    };
    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        _loop_1(key, value);
    }
    return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var key = token.split('=');
            obj[key[0]] = key[1];
        }
    });
    return obj;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(offset) << 24) |
                        (buf.charCodeAt(offset + 1) << 16) |
                        (buf.charCodeAt(offset + 2) << 8) |
                        buf.charCodeAt(offset + 3);
                offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[offset] << 24) |
                        (buf[offset + 1] << 16) |
                        (buf[offset + 2] << 8) |
                        buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}());

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, [
            'next',
            'error',
            'complete'
        ])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argumentNumber, optional) {
    var argName = '';
    switch (argumentNumber) {
        case 1:
            argName = optional ? 'first' : 'First';
            break;
        case 2:
            argName = optional ? 'second' : 'Second';
            break;
        case 3:
            argName = optional ? 'third' : 'Third';
            break;
        case 4:
            argName = optional ? 'fourth' : 'Fourth';
            break;
        default:
            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
    }
    var error = fnName + ' failed: ';
    error += argName + ' argument ';
    return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, argumentNumber, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentNumber, callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentNumber, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function (str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

exports.CONSTANTS = CONSTANTS;
exports.Deferred = Deferred;
exports.ErrorFactory = ErrorFactory;
exports.FirebaseError = FirebaseError;
exports.Sha1 = Sha1;
exports.assert = assert;
exports.assertionError = assertionError;
exports.async = async;
exports.base64 = base64;
exports.base64Decode = base64Decode;
exports.base64Encode = base64Encode;
exports.contains = contains;
exports.createSubscribe = createSubscribe;
exports.decode = decode;
exports.deepCopy = deepCopy;
exports.deepExtend = deepExtend;
exports.errorPrefix = errorPrefix;
exports.getUA = getUA;
exports.isAdmin = isAdmin;
exports.isBrowser = isBrowser;
exports.isEmpty = isEmpty;
exports.isMobileCordova = isMobileCordova;
exports.isNode = isNode;
exports.isNodeSdk = isNodeSdk;
exports.isReactNative = isReactNative;
exports.isValidFormat = isValidFormat;
exports.isValidTimestamp = isValidTimestamp;
exports.issuedAtTime = issuedAtTime;
exports.jsonEval = jsonEval;
exports.map = map;
exports.querystring = querystring;
exports.querystringDecode = querystringDecode;
exports.safeGet = safeGet;
exports.stringLength = stringLength;
exports.stringToByteArray = stringToByteArray$1;
exports.stringify = stringify;
exports.validateArgCount = validateArgCount;
exports.validateCallback = validateCallback;
exports.validateContextObject = validateContextObject;
exports.validateNamespace = validateNamespace;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"tslib":190}],151:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return b64.length * 3 / 4 - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, j, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr(len * 3 / 4 - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],152:[function(require,module,exports){

},{}],153:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (value instanceof ArrayBuffer) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (isArrayBufferView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (isArrayBufferView(string) || string instanceof ArrayBuffer) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
function isArrayBufferView (obj) {
  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":151,"ieee754":169}],154:[function(require,module,exports){
var upperCase = require('upper-case')
var noCase = require('no-case')

/**
 * Camel case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale, mergeNumbers) {
  var result = noCase(value, locale)

  // Replace periods between numeric entities with an underscore.
  if (!mergeNumbers) {
    result = result.replace(/ (?=\d)/g, '_')
  }

  // Replace spaces between words with an upper cased character.
  return result.replace(/ (.)/g, function (m, $1) {
    return upperCase($1, locale)
  })
}

},{"no-case":176,"upper-case":192}],155:[function(require,module,exports){
exports.no = exports.noCase = require('no-case')
exports.dot = exports.dotCase = require('dot-case')
exports.swap = exports.swapCase = require('swap-case')
exports.path = exports.pathCase = require('path-case')
exports.upper = exports.upperCase = require('upper-case')
exports.lower = exports.lowerCase = require('lower-case')
exports.camel = exports.camelCase = require('camel-case')
exports.snake = exports.snakeCase = require('snake-case')
exports.title = exports.titleCase = require('title-case')
exports.param = exports.paramCase = require('param-case')
exports.header = exports.headerCase = require('header-case')
exports.pascal = exports.pascalCase = require('pascal-case')
exports.constant = exports.constantCase = require('constant-case')
exports.sentence = exports.sentenceCase = require('sentence-case')
exports.isUpper = exports.isUpperCase = require('is-upper-case')
exports.isLower = exports.isLowerCase = require('is-lower-case')
exports.ucFirst = exports.upperCaseFirst = require('upper-case-first')
exports.lcFirst = exports.lowerCaseFirst = require('lower-case-first')

},{"camel-case":154,"constant-case":156,"dot-case":159,"header-case":167,"is-lower-case":170,"is-upper-case":171,"lower-case":175,"lower-case-first":174,"no-case":176,"param-case":180,"pascal-case":181,"path-case":183,"sentence-case":186,"snake-case":187,"swap-case":188,"title-case":189,"upper-case":192,"upper-case-first":191}],156:[function(require,module,exports){
var upperCase = require('upper-case')
var snakeCase = require('snake-case')

/**
 * Constant case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return upperCase(snakeCase(value, locale), locale)
}

},{"snake-case":187,"upper-case":192}],157:[function(require,module,exports){
'use strict';

const copyTextToClipboard = (input, {target = document.body} = {}) => {
	const element = document.createElement('textarea');
	const previouslyFocusedElement = document.activeElement;

	element.value = input;

	// Prevent keyboard from showing on mobile
	element.setAttribute('readonly', '');

	element.style.contain = 'strict';
	element.style.position = 'absolute';
	element.style.left = '-9999px';
	element.style.fontSize = '12pt'; // Prevent zooming on iOS

	const selection = document.getSelection();
	let originalRange = false;
	if (selection.rangeCount > 0) {
		originalRange = selection.getRangeAt(0);
	}

	target.append(element);
	element.select();

	// Explicit selection workaround for iOS
	element.selectionStart = 0;
	element.selectionEnd = input.length;

	let isSuccess = false;
	try {
		isSuccess = document.execCommand('copy');
	} catch (_) {}

	element.remove();

	if (originalRange) {
		selection.removeAllRanges();
		selection.addRange(originalRange);
	}

	// Get the focus back on the previously focused element, if any
	if (previouslyFocusedElement) {
		previouslyFocusedElement.focus();
	}

	return isSuccess;
};

module.exports = copyTextToClipboard;
// TODO: Remove this for the next major release
module.exports.default = copyTextToClipboard;

},{}],158:[function(require,module,exports){
(function() {

  // nb. This is for IE10 and lower _only_.
  var supportCustomEvent = window.CustomEvent;
  if (!supportCustomEvent || typeof supportCustomEvent === 'object') {
    supportCustomEvent = function CustomEvent(event, x) {
      x = x || {};
      var ev = document.createEvent('CustomEvent');
      ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);
      return ev;
    };
    supportCustomEvent.prototype = window.Event.prototype;
  }

  /**
   * @param {Element} el to check for stacking context
   * @return {boolean} whether this el or its parents creates a stacking context
   */
  function createsStackingContext(el) {
    while (el && el !== document.body) {
      var s = window.getComputedStyle(el);
      var invalid = function(k, ok) {
        return !(s[k] === undefined || s[k] === ok);
      }
      if (s.opacity < 1 ||
          invalid('zIndex', 'auto') ||
          invalid('transform', 'none') ||
          invalid('mixBlendMode', 'normal') ||
          invalid('filter', 'none') ||
          invalid('perspective', 'none') ||
          s['isolation'] === 'isolate' ||
          s.position === 'fixed' ||
          s.webkitOverflowScrolling === 'touch') {
        return true;
      }
      el = el.parentElement;
    }
    return false;
  }

  /**
   * Finds the nearest <dialog> from the passed element.
   *
   * @param {Element} el to search from
   * @return {HTMLDialogElement} dialog found
   */
  function findNearestDialog(el) {
    while (el) {
      if (el.localName === 'dialog') {
        return /** @type {HTMLDialogElement} */ (el);
      }
      el = el.parentElement;
    }
    return null;
  }

  /**
   * Blur the specified element, as long as it's not the HTML body element.
   * This works around an IE9/10 bug - blurring the body causes Windows to
   * blur the whole application.
   *
   * @param {Element} el to blur
   */
  function safeBlur(el) {
    if (el && el.blur && el !== document.body) {
      el.blur();
    }
  }

  /**
   * @param {!NodeList} nodeList to search
   * @param {Node} node to find
   * @return {boolean} whether node is inside nodeList
   */
  function inNodeList(nodeList, node) {
    for (var i = 0; i < nodeList.length; ++i) {
      if (nodeList[i] === node) {
        return true;
      }
    }
    return false;
  }

  /**
   * @param {HTMLFormElement} el to check
   * @return {boolean} whether this form has method="dialog"
   */
  function isFormMethodDialog(el) {
    if (!el || !el.hasAttribute('method')) {
      return false;
    }
    return el.getAttribute('method').toLowerCase() === 'dialog';
  }

  /**
   * @param {!HTMLDialogElement} dialog to upgrade
   * @constructor
   */
  function dialogPolyfillInfo(dialog) {
    this.dialog_ = dialog;
    this.replacedStyleTop_ = false;
    this.openAsModal_ = false;

    // Set a11y role. Browsers that support dialog implicitly know this already.
    if (!dialog.hasAttribute('role')) {
      dialog.setAttribute('role', 'dialog');
    }

    dialog.show = this.show.bind(this);
    dialog.showModal = this.showModal.bind(this);
    dialog.close = this.close.bind(this);

    if (!('returnValue' in dialog)) {
      dialog.returnValue = '';
    }

    if ('MutationObserver' in window) {
      var mo = new MutationObserver(this.maybeHideModal.bind(this));
      mo.observe(dialog, {attributes: true, attributeFilter: ['open']});
    } else {
      // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also
      // seem to fire even if the element was removed as part of a parent removal. Use the removed
      // events to force downgrade (useful if removed/immediately added).
      var removed = false;
      var cb = function() {
        removed ? this.downgradeModal() : this.maybeHideModal();
        removed = false;
      }.bind(this);
      var timeout;
      var delayModel = function(ev) {
        if (ev.target !== dialog) { return; }  // not for a child element
        var cand = 'DOMNodeRemoved';
        removed |= (ev.type.substr(0, cand.length) === cand);
        window.clearTimeout(timeout);
        timeout = window.setTimeout(cb, 0);
      };
      ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {
        dialog.addEventListener(name, delayModel);
      });
    }
    // Note that the DOM is observed inside DialogManager while any dialog
    // is being displayed as a modal, to catch modal removal from the DOM.

    Object.defineProperty(dialog, 'open', {
      set: this.setOpen.bind(this),
      get: dialog.hasAttribute.bind(dialog, 'open')
    });

    this.backdrop_ = document.createElement('div');
    this.backdrop_.className = 'backdrop';
    this.backdrop_.addEventListener('click', this.backdropClick_.bind(this));
  }

  dialogPolyfillInfo.prototype = {

    get dialog() {
      return this.dialog_;
    },

    /**
     * Maybe remove this dialog from the modal top layer. This is called when
     * a modal dialog may no longer be tenable, e.g., when the dialog is no
     * longer open or is no longer part of the DOM.
     */
    maybeHideModal: function() {
      if (this.dialog_.hasAttribute('open') && document.body.contains(this.dialog_)) { return; }
      this.downgradeModal();
    },

    /**
     * Remove this dialog from the modal top layer, leaving it as a non-modal.
     */
    downgradeModal: function() {
      if (!this.openAsModal_) { return; }
      this.openAsModal_ = false;
      this.dialog_.style.zIndex = '';

      // This won't match the native <dialog> exactly because if the user set top on a centered
      // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's
      // possible to polyfill this perfectly.
      if (this.replacedStyleTop_) {
        this.dialog_.style.top = '';
        this.replacedStyleTop_ = false;
      }

      // Clear the backdrop and remove from the manager.
      this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);
      dialogPolyfill.dm.removeDialog(this);
    },

    /**
     * @param {boolean} value whether to open or close this dialog
     */
    setOpen: function(value) {
      if (value) {
        this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');
      } else {
        this.dialog_.removeAttribute('open');
        this.maybeHideModal();  // nb. redundant with MutationObserver
      }
    },

    /**
     * Handles clicks on the fake .backdrop element, redirecting them as if
     * they were on the dialog itself.
     *
     * @param {!Event} e to redirect
     */
    backdropClick_: function(e) {
      if (!this.dialog_.hasAttribute('tabindex')) {
        // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be
        // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this
        // would not be needed - clicks would move the implicit cursor there.
        var fake = document.createElement('div');
        this.dialog_.insertBefore(fake, this.dialog_.firstChild);
        fake.tabIndex = -1;
        fake.focus();
        this.dialog_.removeChild(fake);
      } else {
        this.dialog_.focus();
      }

      var redirectedEvent = document.createEvent('MouseEvents');
      redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,
          e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,
          e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);
      this.dialog_.dispatchEvent(redirectedEvent);
      e.stopPropagation();
    },

    /**
     * Focuses on the first focusable element within the dialog. This will always blur the current
     * focus, even if nothing within the dialog is found.
     */
    focus_: function() {
      // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.
      var target = this.dialog_.querySelector('[autofocus]:not([disabled])');
      if (!target && this.dialog_.tabIndex >= 0) {
        target = this.dialog_;
      }
      if (!target) {
        // Note that this is 'any focusable area'. This list is probably not exhaustive, but the
        // alternative involves stepping through and trying to focus everything.
        var opts = ['button', 'input', 'keygen', 'select', 'textarea'];
        var query = opts.map(function(el) {
          return el + ':not([disabled])';
        });
        // TODO(samthor): tabindex values that are not numeric are not focusable.
        query.push('[tabindex]:not([disabled]):not([tabindex=""])');  // tabindex != "", not disabled
        target = this.dialog_.querySelector(query.join(', '));
      }
      safeBlur(document.activeElement);
      target && target.focus();
    },

    /**
     * Sets the zIndex for the backdrop and dialog.
     *
     * @param {number} dialogZ
     * @param {number} backdropZ
     */
    updateZIndex: function(dialogZ, backdropZ) {
      if (dialogZ < backdropZ) {
        throw new Error('dialogZ should never be < backdropZ');
      }
      this.dialog_.style.zIndex = dialogZ;
      this.backdrop_.style.zIndex = backdropZ;
    },

    /**
     * Shows the dialog. If the dialog is already open, this does nothing.
     */
    show: function() {
      if (!this.dialog_.open) {
        this.setOpen(true);
        this.focus_();
      }
    },

    /**
     * Show this dialog modally.
     */
    showModal: function() {
      if (this.dialog_.hasAttribute('open')) {
        throw new Error('Failed to execute \'showModal\' on dialog: The element is already open, and therefore cannot be opened modally.');
      }
      if (!document.body.contains(this.dialog_)) {
        throw new Error('Failed to execute \'showModal\' on dialog: The element is not in a Document.');
      }
      if (!dialogPolyfill.dm.pushDialog(this)) {
        throw new Error('Failed to execute \'showModal\' on dialog: There are too many open modal dialogs.');
      }

      if (createsStackingContext(this.dialog_.parentElement)) {
        console.warn('A dialog is being shown inside a stacking context. ' +
            'This may cause it to be unusable. For more information, see this link: ' +
            'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');
      }

      this.setOpen(true);
      this.openAsModal_ = true;

      // Optionally center vertically, relative to the current viewport.
      if (dialogPolyfill.needsCentering(this.dialog_)) {
        dialogPolyfill.reposition(this.dialog_);
        this.replacedStyleTop_ = true;
      } else {
        this.replacedStyleTop_ = false;
      }

      // Insert backdrop.
      this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);

      // Focus on whatever inside the dialog.
      this.focus_();
    },

    /**
     * Closes this HTMLDialogElement. This is optional vs clearing the open
     * attribute, however this fires a 'close' event.
     *
     * @param {string=} opt_returnValue to use as the returnValue
     */
    close: function(opt_returnValue) {
      if (!this.dialog_.hasAttribute('open')) {
        throw new Error('Failed to execute \'close\' on dialog: The element does not have an \'open\' attribute, and therefore cannot be closed.');
      }
      this.setOpen(false);

      // Leave returnValue untouched in case it was set directly on the element
      if (opt_returnValue !== undefined) {
        this.dialog_.returnValue = opt_returnValue;
      }

      // Triggering "close" event for any attached listeners on the <dialog>.
      var closeEvent = new supportCustomEvent('close', {
        bubbles: false,
        cancelable: false
      });
      this.dialog_.dispatchEvent(closeEvent);
    }

  };

  var dialogPolyfill = {};

  dialogPolyfill.reposition = function(element) {
    var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;
    var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;
    element.style.top = Math.max(scrollTop, topValue) + 'px';
  };

  dialogPolyfill.isInlinePositionSetByStylesheet = function(element) {
    for (var i = 0; i < document.styleSheets.length; ++i) {
      var styleSheet = document.styleSheets[i];
      var cssRules = null;
      // Some browsers throw on cssRules.
      try {
        cssRules = styleSheet.cssRules;
      } catch (e) {}
      if (!cssRules) { continue; }
      for (var j = 0; j < cssRules.length; ++j) {
        var rule = cssRules[j];
        var selectedNodes = null;
        // Ignore errors on invalid selector texts.
        try {
          selectedNodes = document.querySelectorAll(rule.selectorText);
        } catch(e) {}
        if (!selectedNodes || !inNodeList(selectedNodes, element)) {
          continue;
        }
        var cssTop = rule.style.getPropertyValue('top');
        var cssBottom = rule.style.getPropertyValue('bottom');
        if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {
          return true;
        }
      }
    }
    return false;
  };

  dialogPolyfill.needsCentering = function(dialog) {
    var computedStyle = window.getComputedStyle(dialog);
    if (computedStyle.position !== 'absolute') {
      return false;
    }

    // We must determine whether the top/bottom specified value is non-auto.  In
    // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but
    // Firefox returns the used value. So we do this crazy thing instead: check
    // the inline style and then go through CSS rules.
    if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||
        (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {
      return false;
    }
    return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);
  };

  /**
   * @param {!Element} element to force upgrade
   */
  dialogPolyfill.forceRegisterDialog = function(element) {
    if (window.HTMLDialogElement || element.showModal) {
      console.warn('This browser already supports <dialog>, the polyfill ' +
          'may not work correctly', element);
    }
    if (element.localName !== 'dialog') {
      throw new Error('Failed to register dialog: The element is not a dialog.');
    }
    new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));
  };

  /**
   * @param {!Element} element to upgrade, if necessary
   */
  dialogPolyfill.registerDialog = function(element) {
    if (!element.showModal) {
      dialogPolyfill.forceRegisterDialog(element);
    }
  };

  /**
   * @constructor
   */
  dialogPolyfill.DialogManager = function() {
    /** @type {!Array<!dialogPolyfillInfo>} */
    this.pendingDialogStack = [];

    var checkDOM = this.checkDOM_.bind(this);

    // The overlay is used to simulate how a modal dialog blocks the document.
    // The blocking dialog is positioned on top of the overlay, and the rest of
    // the dialogs on the pending dialog stack are positioned below it. In the
    // actual implementation, the modal dialog stacking is controlled by the
    // top layer, where z-index has no effect.
    this.overlay = document.createElement('div');
    this.overlay.className = '_dialog_overlay';
    this.overlay.addEventListener('click', function(e) {
      this.forwardTab_ = undefined;
      e.stopPropagation();
      checkDOM([]);  // sanity-check DOM
    }.bind(this));

    this.handleKey_ = this.handleKey_.bind(this);
    this.handleFocus_ = this.handleFocus_.bind(this);

    this.zIndexLow_ = 100000;
    this.zIndexHigh_ = 100000 + 150;

    this.forwardTab_ = undefined;

    if ('MutationObserver' in window) {
      this.mo_ = new MutationObserver(function(records) {
        var removed = [];
        records.forEach(function(rec) {
          for (var i = 0, c; c = rec.removedNodes[i]; ++i) {
            if (!(c instanceof Element)) {
              continue;
            } else if (c.localName === 'dialog') {
              removed.push(c);
            }
            removed = removed.concat(c.querySelectorAll('dialog'));
          }
        });
        removed.length && checkDOM(removed);
      });
    }
  };

  /**
   * Called on the first modal dialog being shown. Adds the overlay and related
   * handlers.
   */
  dialogPolyfill.DialogManager.prototype.blockDocument = function() {
    document.documentElement.addEventListener('focus', this.handleFocus_, true);
    document.addEventListener('keydown', this.handleKey_);
    this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});
  };

  /**
   * Called on the first modal dialog being removed, i.e., when no more modal
   * dialogs are visible.
   */
  dialogPolyfill.DialogManager.prototype.unblockDocument = function() {
    document.documentElement.removeEventListener('focus', this.handleFocus_, true);
    document.removeEventListener('keydown', this.handleKey_);
    this.mo_ && this.mo_.disconnect();
  };

  /**
   * Updates the stacking of all known dialogs.
   */
  dialogPolyfill.DialogManager.prototype.updateStacking = function() {
    var zIndex = this.zIndexHigh_;

    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {
      dpi.updateZIndex(--zIndex, --zIndex);
      if (i === 0) {
        this.overlay.style.zIndex = --zIndex;
      }
    }

    // Make the overlay a sibling of the dialog itself.
    var last = this.pendingDialogStack[0];
    if (last) {
      var p = last.dialog.parentNode || document.body;
      p.appendChild(this.overlay);
    } else if (this.overlay.parentNode) {
      this.overlay.parentNode.removeChild(this.overlay);
    }
  };

  /**
   * @param {Element} candidate to check if contained or is the top-most modal dialog
   * @return {boolean} whether candidate is contained in top dialog
   */
  dialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {
    while (candidate = findNearestDialog(candidate)) {
      for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {
        if (dpi.dialog === candidate) {
          return i === 0;  // only valid if top-most
        }
      }
      candidate = candidate.parentElement;
    }
    return false;
  };

  dialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {
    if (this.containedByTopDialog_(event.target)) { return; }

    event.preventDefault();
    event.stopPropagation();
    safeBlur(/** @type {Element} */ (event.target));

    if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key

    var dpi = this.pendingDialogStack[0];
    var dialog = dpi.dialog;
    var position = dialog.compareDocumentPosition(event.target);
    if (position & Node.DOCUMENT_POSITION_PRECEDING) {
      if (this.forwardTab_) {  // forward
        dpi.focus_();
      } else {  // backwards
        document.documentElement.focus();
      }
    } else {
      // TODO: Focus after the dialog, is ignored.
    }

    return false;
  };

  dialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {
    this.forwardTab_ = undefined;
    if (event.keyCode === 27) {
      event.preventDefault();
      event.stopPropagation();
      var cancelEvent = new supportCustomEvent('cancel', {
        bubbles: false,
        cancelable: true
      });
      var dpi = this.pendingDialogStack[0];
      if (dpi && dpi.dialog.dispatchEvent(cancelEvent)) {
        dpi.dialog.close();
      }
    } else if (event.keyCode === 9) {
      this.forwardTab_ = !event.shiftKey;
    }
  };

  /**
   * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are
   * removed and immediately readded don't stay modal, they become normal.
   *
   * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed
   */
  dialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {
    // This operates on a clone because it may cause it to change. Each change also calls
    // updateStacking, which only actually needs to happen once. But who removes many modal dialogs
    // at a time?!
    var clone = this.pendingDialogStack.slice();
    clone.forEach(function(dpi) {
      if (removed.indexOf(dpi.dialog) !== -1) {
        dpi.downgradeModal();
      } else {
        dpi.maybeHideModal();
      }
    });
  };

  /**
   * @param {!dialogPolyfillInfo} dpi
   * @return {boolean} whether the dialog was allowed
   */
  dialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {
    var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;
    if (this.pendingDialogStack.length >= allowed) {
      return false;
    }
    if (this.pendingDialogStack.unshift(dpi) === 1) {
      this.blockDocument();
    }
    this.updateStacking();
    return true;
  };

  /**
   * @param {!dialogPolyfillInfo} dpi
   */
  dialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {
    var index = this.pendingDialogStack.indexOf(dpi);
    if (index === -1) { return; }

    this.pendingDialogStack.splice(index, 1);
    if (this.pendingDialogStack.length === 0) {
      this.unblockDocument();
    }
    this.updateStacking();
  };

  dialogPolyfill.dm = new dialogPolyfill.DialogManager();
  dialogPolyfill.formSubmitter = null;
  dialogPolyfill.useValue = null;

  /**
   * Installs global handlers, such as click listers and native method overrides. These are needed
   * even if a no dialog is registered, as they deal with <form method="dialog">.
   */
  if (window.HTMLDialogElement === undefined) {

    /**
     * If HTMLFormElement translates method="DIALOG" into 'get', then replace the descriptor with
     * one that returns the correct value.
     */
    var testForm = document.createElement('form');
    testForm.setAttribute('method', 'dialog');
    if (testForm.method !== 'dialog') {
      var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');
      if (methodDescriptor) {
        // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything
        // and don't bother to update the element.
        var realGet = methodDescriptor.get;
        methodDescriptor.get = function() {
          if (isFormMethodDialog(this)) {
            return 'dialog';
          }
          return realGet.call(this);
        };
        var realSet = methodDescriptor.set;
        methodDescriptor.set = function(v) {
          if (typeof v === 'string' && v.toLowerCase() === 'dialog') {
            return this.setAttribute('method', v);
          }
          return realSet.call(this, v);
        };
        Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);
      }
    }

    /**
     * Global 'click' handler, to capture the <input type="submit"> or <button> element which has
     * submitted a <form method="dialog">. Needed as Safari and others don't report this inside
     * document.activeElement.
     */
    document.addEventListener('click', function(ev) {
      dialogPolyfill.formSubmitter = null;
      dialogPolyfill.useValue = null;
      if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission

      var target = /** @type {Element} */ (ev.target);
      if (!target || !isFormMethodDialog(target.form)) { return; }

      var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);
      if (!valid) {
        if (!(target.localName === 'input' && target.type === 'image')) { return; }
        // this is a <input type="image">, which can submit forms
        dialogPolyfill.useValue = ev.offsetX + ',' + ev.offsetY;
      }

      var dialog = findNearestDialog(target);
      if (!dialog) { return; }

      dialogPolyfill.formSubmitter = target;
    }, false);

    /**
     * Replace the native HTMLFormElement.submit() method, as it won't fire the
     * submit event and give us a chance to respond.
     */
    var nativeFormSubmit = HTMLFormElement.prototype.submit;
    var replacementFormSubmit = function () {
      if (!isFormMethodDialog(this)) {
        return nativeFormSubmit.call(this);
      }
      var dialog = findNearestDialog(this);
      dialog && dialog.close();
    };
    HTMLFormElement.prototype.submit = replacementFormSubmit;

    /**
     * Global form 'dialog' method handler. Closes a dialog correctly on submit
     * and possibly sets its return value.
     */
    document.addEventListener('submit', function(ev) {
      var form = /** @type {HTMLFormElement} */ (ev.target);
      if (!isFormMethodDialog(form)) { return; }
      ev.preventDefault();

      var dialog = findNearestDialog(form);
      if (!dialog) { return; }

      // Forms can only be submitted via .submit() or a click (?), but anyway: sanity-check that
      // the submitter is correct before using its value as .returnValue.
      var s = dialogPolyfill.formSubmitter;
      if (s && s.form === form) {
        dialog.close(dialogPolyfill.useValue || s.value);
      } else {
        dialog.close();
      }
      dialogPolyfill.formSubmitter = null;
    }, true);
  }

  dialogPolyfill['forceRegisterDialog'] = dialogPolyfill.forceRegisterDialog;
  dialogPolyfill['registerDialog'] = dialogPolyfill.registerDialog;

  if (typeof define === 'function' && 'amd' in define) {
    // AMD support
    define(function() { return dialogPolyfill; });
  } else if (typeof module === 'object' && typeof module['exports'] === 'object') {
    // CommonJS support
    module['exports'] = dialogPolyfill;
  } else {
    // all others
    window['dialogPolyfill'] = dialogPolyfill;
  }
})();

},{}],159:[function(require,module,exports){
var noCase = require('no-case')

/**
 * Dot case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '.')
}

},{"no-case":176}],160:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (!events)
    return [];

  var evlistener = events[type];
  if (!evlistener)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],161:[function(require,module,exports){
/* FileSaver.js
 * A saveAs() FileSaver implementation.
 * 1.3.2
 * 2016-06-16 18:25:19
 *
 * By Eli Grey, http://eligrey.com
 * License: MIT
 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
 */

/*global self */
/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */

var saveAs = saveAs || (function(view) {
	"use strict";
	// IE <10 is explicitly unsupported
	if (typeof view === "undefined" || typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
		return;
	}
	var
		  doc = view.document
		  // only get URL when necessary in case Blob.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link = "download" in save_link
		, click = function(node) {
			var event = new MouseEvent("click");
			node.dispatchEvent(event);
		}
		, is_safari = /constructor/i.test(view.HTMLElement) || view.safari
		, is_chrome_ios =/CriOS\/[\d]+/.test(navigator.userAgent)
		, throw_outside = function(ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
		, arbitrary_revoke_timeout = 1000 * 40 // in ms
		, revoke = function(file) {
			var revoker = function() {
				if (typeof file === "string") { // file is an object URL
					get_URL().revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			};
			setTimeout(revoker, arbitrary_revoke_timeout);
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, auto_bom = function(blob) {
			// prepend BOM for UTF-8 XML and text/* types (including HTML)
			// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF
			if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
				return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});
			}
			return blob;
		}
		, FileSaver = function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, force = type === force_saveable_type
				, object_url
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					if ((is_chrome_ios || (force && is_safari)) && view.FileReader) {
						// Safari doesn't allow downloading of blob urls
						var reader = new FileReader();
						reader.onloadend = function() {
							var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');
							var popup = view.open(url, '_blank');
							if(!popup) view.location.href = url;
							url=undefined; // release reference before dispatching
							filesaver.readyState = filesaver.DONE;
							dispatch_all();
						};
						reader.readAsDataURL(blob);
						filesaver.readyState = filesaver.INIT;
						return;
					}
					// don't create more object URLs than needed
					if (!object_url) {
						object_url = get_URL().createObjectURL(blob);
					}
					if (force) {
						view.location.href = object_url;
					} else {
						var opened = view.open(object_url, "_blank");
						if (!opened) {
							// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html
							view.location.href = object_url;
						}
					}
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
					revoke(object_url);
				}
			;
			filesaver.readyState = filesaver.INIT;

			if (can_use_save_link) {
				object_url = get_URL().createObjectURL(blob);
				setTimeout(function() {
					save_link.href = object_url;
					save_link.download = name;
					click(save_link);
					dispatch_all();
					revoke(object_url);
					filesaver.readyState = filesaver.DONE;
				});
				return;
			}

			fs_error();
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name, no_auto_bom) {
			return new FileSaver(blob, name || blob.name || "download", no_auto_bom);
		}
	;
	// IE 10+ (native saveAs)
	if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
		return function(blob, name, no_auto_bom) {
			name = name || blob.name || "download";

			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			return navigator.msSaveOrOpenBlob(blob, name);
		};
	}

	FS_proto.abort = function(){};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	return saveAs;
}(
	   typeof self !== "undefined" && self
	|| typeof window !== "undefined" && window
	|| this.content
));
// `self` is undefined in Firefox for Android content script context
// while `this` is nsIContentFrameMessageManager
// with an attribute `content` that corresponds to the window

if (typeof module !== "undefined" && module.exports) {
  module.exports.saveAs = saveAs;
} else if ((typeof define !== "undefined" && define !== null) && (define.amd !== null)) {
  define("FileSaver.js", function() {
    return saveAs;
  });
}

},{}],162:[function(require,module,exports){
'use strict';

require('@firebase/analytics');



},{"@firebase/analytics":144}],163:[function(require,module,exports){
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var firebase = _interopDefault(require('@firebase/app'));

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module.exports = firebase;


},{"@firebase/app":145}],164:[function(require,module,exports){
'use strict';

require('@firebase/auth');



},{"@firebase/auth":146}],165:[function(require,module,exports){
'use strict';

require('@firebase/storage');



},{"@firebase/storage":149}],166:[function(require,module,exports){
(function (global){
(function() { var firebase=require('firebase/app');require('firebase/auth');if(typeof firebase.default!=='undefined'){firebase=firebase.default;}/*

 Copyright 2015 Google Inc. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
var componentHandler={upgradeDom:function(optJsClass,optCssClass){},upgradeElement:function(element,optJsClass){},upgradeElements:function(elements){},upgradeAllRegistered:function(){},registerUpgradedCallback:function(jsClass,callback){},register:function(config){},downgradeElements:function(nodes){}};
componentHandler=function(){var registeredComponents_=[];var createdComponents_=[];var componentConfigProperty_="mdlComponentConfigInternal_";function findRegisteredClass_(name,optReplace){for(var i=0;i<registeredComponents_.length;i++)if(registeredComponents_[i].className===name){if(typeof optReplace!=="undefined")registeredComponents_[i]=optReplace;return registeredComponents_[i]}return false}function getUpgradedListOfElement_(element){var dataUpgraded=element.getAttribute("data-upgraded");return dataUpgraded===
null?[""]:dataUpgraded.split(",")}function isElementUpgraded_(element,jsClass){var upgradedList=getUpgradedListOfElement_(element);return upgradedList.indexOf(jsClass)!==-1}function createEvent_(eventType,bubbles,cancelable){if("CustomEvent"in window&&typeof window.CustomEvent==="function")return new CustomEvent(eventType,{bubbles:bubbles,cancelable:cancelable});else{var ev=document.createEvent("Events");ev.initEvent(eventType,bubbles,cancelable);return ev}}function upgradeDomInternal(optJsClass,
optCssClass){if(typeof optJsClass==="undefined"&&typeof optCssClass==="undefined")for(var i=0;i<registeredComponents_.length;i++)upgradeDomInternal(registeredComponents_[i].className,registeredComponents_[i].cssClass);else{var jsClass=optJsClass;if(typeof optCssClass==="undefined"){var registeredClass=findRegisteredClass_(jsClass);if(registeredClass)optCssClass=registeredClass.cssClass}var elements=document.querySelectorAll("."+optCssClass);for(var n=0;n<elements.length;n++)upgradeElementInternal(elements[n],
jsClass)}}function upgradeElementInternal(element,optJsClass){if(!(typeof element==="object"&&element instanceof Element))throw new Error("Invalid argument provided to upgrade MDL element.");var upgradingEv=createEvent_("mdl-componentupgrading",true,true);element.dispatchEvent(upgradingEv);if(upgradingEv.defaultPrevented)return;var upgradedList=getUpgradedListOfElement_(element);var classesToUpgrade=[];if(!optJsClass){var classList=element.classList;registeredComponents_.forEach(function(component){if(classList.contains(component.cssClass)&&
classesToUpgrade.indexOf(component)===-1&&!isElementUpgraded_(element,component.className))classesToUpgrade.push(component)})}else if(!isElementUpgraded_(element,optJsClass))classesToUpgrade.push(findRegisteredClass_(optJsClass));for(var i=0,n=classesToUpgrade.length,registeredClass;i<n;i++){registeredClass=classesToUpgrade[i];if(registeredClass){upgradedList.push(registeredClass.className);element.setAttribute("data-upgraded",upgradedList.join(","));var instance=new registeredClass.classConstructor(element);
instance[componentConfigProperty_]=registeredClass;createdComponents_.push(instance);for(var j=0,m=registeredClass.callbacks.length;j<m;j++)registeredClass.callbacks[j](element);if(registeredClass.widget)element[registeredClass.className]=instance}else throw new Error("Unable to find a registered component for the given class.");var upgradedEv=createEvent_("mdl-componentupgraded",true,false);element.dispatchEvent(upgradedEv)}}function upgradeElementsInternal(elements){if(!Array.isArray(elements))if(elements instanceof
Element)elements=[elements];else elements=Array.prototype.slice.call(elements);for(var i=0,n=elements.length,element;i<n;i++){element=elements[i];if(element instanceof HTMLElement){upgradeElementInternal(element);if(element.children.length>0)upgradeElementsInternal(element.children)}}}function registerInternal(config){var widgetMissing=typeof config.widget==="undefined"&&typeof config["widget"]==="undefined";var widget=true;if(!widgetMissing)widget=config.widget||config["widget"];var newConfig={classConstructor:config.constructor||
config["constructor"],className:config.classAsString||config["classAsString"],cssClass:config.cssClass||config["cssClass"],widget:widget,callbacks:[]};registeredComponents_.forEach(function(item){if(item.cssClass===newConfig.cssClass)throw new Error("The provided cssClass has already been registered: "+item.cssClass);if(item.className===newConfig.className)throw new Error("The provided className has already been registered");});if(config.constructor.prototype.hasOwnProperty(componentConfigProperty_))throw new Error("MDL component classes must not have "+
componentConfigProperty_+" defined as a property.");var found=findRegisteredClass_(config.classAsString,newConfig);if(!found)registeredComponents_.push(newConfig)}function registerUpgradedCallbackInternal(jsClass,callback){var regClass=findRegisteredClass_(jsClass);if(regClass)regClass.callbacks.push(callback)}function upgradeAllRegisteredInternal(){for(var n=0;n<registeredComponents_.length;n++)upgradeDomInternal(registeredComponents_[n].className)}function deconstructComponentInternal(component){if(component){var componentIndex=
createdComponents_.indexOf(component);createdComponents_.splice(componentIndex,1);var upgrades=component.element_.getAttribute("data-upgraded").split(",");var componentPlace=upgrades.indexOf(component[componentConfigProperty_].classAsString);upgrades.splice(componentPlace,1);component.element_.setAttribute("data-upgraded",upgrades.join(","));var ev=createEvent_("mdl-componentdowngraded",true,false);component.element_.dispatchEvent(ev)}}function downgradeNodesInternal(nodes){var downgradeNode=function(node){createdComponents_.filter(function(item){return item.element_===
node}).forEach(deconstructComponentInternal)};if(nodes instanceof Array||nodes instanceof NodeList)for(var n=0;n<nodes.length;n++)downgradeNode(nodes[n]);else if(nodes instanceof Node)downgradeNode(nodes);else throw new Error("Invalid argument provided to downgrade MDL nodes.");}return{upgradeDom:upgradeDomInternal,upgradeElement:upgradeElementInternal,upgradeElements:upgradeElementsInternal,upgradeAllRegistered:upgradeAllRegisteredInternal,registerUpgradedCallback:registerUpgradedCallbackInternal,
register:registerInternal,downgradeElements:downgradeNodesInternal}}();componentHandler.ComponentConfigPublic;componentHandler.ComponentConfig;componentHandler.Component;componentHandler["upgradeDom"]=componentHandler.upgradeDom;componentHandler["upgradeElement"]=componentHandler.upgradeElement;componentHandler["upgradeElements"]=componentHandler.upgradeElements;componentHandler["upgradeAllRegistered"]=componentHandler.upgradeAllRegistered;componentHandler["registerUpgradedCallback"]=componentHandler.registerUpgradedCallback;
componentHandler["register"]=componentHandler.register;componentHandler["downgradeElements"]=componentHandler.downgradeElements;window.componentHandler=componentHandler;window["componentHandler"]=componentHandler;
window.addEventListener("load",function(){if("classList"in document.createElement("div")&&"querySelector"in document&&"addEventListener"in window&&Array.prototype.forEach){document.documentElement.classList.add("mdl-js");componentHandler.upgradeAllRegistered()}else{componentHandler.upgradeElement=function(){};componentHandler.register=function(){}}});(function(){var MaterialButton=function MaterialButton(element){this.element_=element;this.init()};window["MaterialButton"]=MaterialButton;MaterialButton.prototype.Constant_={};MaterialButton.prototype.CssClasses_={RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_CONTAINER:"mdl-button__ripple-container",RIPPLE:"mdl-ripple"};MaterialButton.prototype.blurHandler_=function(event){if(event)this.element_.blur()};MaterialButton.prototype.disable=function(){this.element_.disabled=true};MaterialButton.prototype["disable"]=
MaterialButton.prototype.disable;MaterialButton.prototype.enable=function(){this.element_.disabled=false};MaterialButton.prototype["enable"]=MaterialButton.prototype.enable;MaterialButton.prototype.init=function(){if(this.element_){if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){var rippleContainer=document.createElement("span");rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);this.rippleElement_=document.createElement("span");this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);
rippleContainer.appendChild(this.rippleElement_);this.boundRippleBlurHandler=this.blurHandler_.bind(this);this.rippleElement_.addEventListener("mouseup",this.boundRippleBlurHandler);this.element_.appendChild(rippleContainer)}this.boundButtonBlurHandler=this.blurHandler_.bind(this);this.element_.addEventListener("mouseup",this.boundButtonBlurHandler);this.element_.addEventListener("mouseleave",this.boundButtonBlurHandler)}};componentHandler.register({constructor:MaterialButton,classAsString:"MaterialButton",
cssClass:"mdl-js-button",widget:true})})();(function(){var MaterialProgress=function MaterialProgress(element){this.element_=element;this.init()};window["MaterialProgress"]=MaterialProgress;MaterialProgress.prototype.Constant_={};MaterialProgress.prototype.CssClasses_={INDETERMINATE_CLASS:"mdl-progress__indeterminate"};MaterialProgress.prototype.setProgress=function(p){if(this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS))return;this.progressbar_.style.width=p+"%"};MaterialProgress.prototype["setProgress"]=MaterialProgress.prototype.setProgress;
MaterialProgress.prototype.setBuffer=function(p){this.bufferbar_.style.width=p+"%";this.auxbar_.style.width=100-p+"%"};MaterialProgress.prototype["setBuffer"]=MaterialProgress.prototype.setBuffer;MaterialProgress.prototype.init=function(){if(this.element_){var el=document.createElement("div");el.className="progressbar bar bar1";this.element_.appendChild(el);this.progressbar_=el;el=document.createElement("div");el.className="bufferbar bar bar2";this.element_.appendChild(el);this.bufferbar_=el;el=document.createElement("div");
el.className="auxbar bar bar3";this.element_.appendChild(el);this.auxbar_=el;this.progressbar_.style.width="0%";this.bufferbar_.style.width="100%";this.auxbar_.style.width="0%";this.element_.classList.add("is-upgraded")}};componentHandler.register({constructor:MaterialProgress,classAsString:"MaterialProgress",cssClass:"mdl-js-progress",widget:true})})();(function(){var MaterialSpinner=function MaterialSpinner(element){this.element_=element;this.init()};window["MaterialSpinner"]=MaterialSpinner;MaterialSpinner.prototype.Constant_={MDL_SPINNER_LAYER_COUNT:4};MaterialSpinner.prototype.CssClasses_={MDL_SPINNER_LAYER:"mdl-spinner__layer",MDL_SPINNER_CIRCLE_CLIPPER:"mdl-spinner__circle-clipper",MDL_SPINNER_CIRCLE:"mdl-spinner__circle",MDL_SPINNER_GAP_PATCH:"mdl-spinner__gap-patch",MDL_SPINNER_LEFT:"mdl-spinner__left",MDL_SPINNER_RIGHT:"mdl-spinner__right"};
MaterialSpinner.prototype.createLayer=function(index){var layer=document.createElement("div");layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER+"-"+index);var leftClipper=document.createElement("div");leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);var gapPatch=document.createElement("div");gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);var rightClipper=
document.createElement("div");rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);var circleOwners=[leftClipper,gapPatch,rightClipper];for(var i=0;i<circleOwners.length;i++){var circle=document.createElement("div");circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);circleOwners[i].appendChild(circle)}layer.appendChild(leftClipper);layer.appendChild(gapPatch);layer.appendChild(rightClipper);this.element_.appendChild(layer)};
MaterialSpinner.prototype["createLayer"]=MaterialSpinner.prototype.createLayer;MaterialSpinner.prototype.stop=function(){this.element_.classList.remove("is-active")};MaterialSpinner.prototype["stop"]=MaterialSpinner.prototype.stop;MaterialSpinner.prototype.start=function(){this.element_.classList.add("is-active")};MaterialSpinner.prototype["start"]=MaterialSpinner.prototype.start;MaterialSpinner.prototype.init=function(){if(this.element_){for(var i=1;i<=this.Constant_.MDL_SPINNER_LAYER_COUNT;i++)this.createLayer(i);
this.element_.classList.add("is-upgraded")}};componentHandler.register({constructor:MaterialSpinner,classAsString:"MaterialSpinner",cssClass:"mdl-js-spinner",widget:true})})();(function(){var MaterialTextfield=function MaterialTextfield(element){this.element_=element;this.maxRows=this.Constant_.NO_MAX_ROWS;this.init()};window["MaterialTextfield"]=MaterialTextfield;MaterialTextfield.prototype.Constant_={NO_MAX_ROWS:-1,MAX_ROWS_ATTRIBUTE:"maxrows"};MaterialTextfield.prototype.CssClasses_={LABEL:"mdl-textfield__label",INPUT:"mdl-textfield__input",IS_DIRTY:"is-dirty",IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_INVALID:"is-invalid",IS_UPGRADED:"is-upgraded",HAS_PLACEHOLDER:"has-placeholder"};
MaterialTextfield.prototype.onKeyDown_=function(event){var currentRowCount=event.target.value.split("\n").length;if(event.keyCode===13)if(currentRowCount>=this.maxRows)event.preventDefault()};MaterialTextfield.prototype.onFocus_=function(event){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)};MaterialTextfield.prototype.onBlur_=function(event){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)};MaterialTextfield.prototype.onReset_=function(event){this.updateClasses_()};MaterialTextfield.prototype.updateClasses_=
function(){this.checkDisabled();this.checkValidity();this.checkDirty();this.checkFocus()};MaterialTextfield.prototype.checkDisabled=function(){if(this.input_.disabled)this.element_.classList.add(this.CssClasses_.IS_DISABLED);else this.element_.classList.remove(this.CssClasses_.IS_DISABLED)};MaterialTextfield.prototype["checkDisabled"]=MaterialTextfield.prototype.checkDisabled;MaterialTextfield.prototype.checkFocus=function(){if(Boolean(this.element_.querySelector(":focus")))this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
else this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)};MaterialTextfield.prototype["checkFocus"]=MaterialTextfield.prototype.checkFocus;MaterialTextfield.prototype.checkValidity=function(){if(this.input_.validity)if(this.input_.validity.valid)this.element_.classList.remove(this.CssClasses_.IS_INVALID);else this.element_.classList.add(this.CssClasses_.IS_INVALID)};MaterialTextfield.prototype["checkValidity"]=MaterialTextfield.prototype.checkValidity;MaterialTextfield.prototype.checkDirty=
function(){if(this.input_.value&&this.input_.value.length>0)this.element_.classList.add(this.CssClasses_.IS_DIRTY);else this.element_.classList.remove(this.CssClasses_.IS_DIRTY)};MaterialTextfield.prototype["checkDirty"]=MaterialTextfield.prototype.checkDirty;MaterialTextfield.prototype.disable=function(){this.input_.disabled=true;this.updateClasses_()};MaterialTextfield.prototype["disable"]=MaterialTextfield.prototype.disable;MaterialTextfield.prototype.enable=function(){this.input_.disabled=false;
this.updateClasses_()};MaterialTextfield.prototype["enable"]=MaterialTextfield.prototype.enable;MaterialTextfield.prototype.change=function(value){this.input_.value=value||"";this.updateClasses_()};MaterialTextfield.prototype["change"]=MaterialTextfield.prototype.change;MaterialTextfield.prototype.init=function(){if(this.element_){this.label_=this.element_.querySelector("."+this.CssClasses_.LABEL);this.input_=this.element_.querySelector("."+this.CssClasses_.INPUT);if(this.input_){if(this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)){this.maxRows=
parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE),10);if(isNaN(this.maxRows))this.maxRows=this.Constant_.NO_MAX_ROWS}if(this.input_.hasAttribute("placeholder"))this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);this.boundUpdateClassesHandler=this.updateClasses_.bind(this);this.boundFocusHandler=this.onFocus_.bind(this);this.boundBlurHandler=this.onBlur_.bind(this);this.boundResetHandler=this.onReset_.bind(this);this.input_.addEventListener("input",this.boundUpdateClassesHandler);
this.input_.addEventListener("focus",this.boundFocusHandler);this.input_.addEventListener("blur",this.boundBlurHandler);this.input_.addEventListener("reset",this.boundResetHandler);if(this.maxRows!==this.Constant_.NO_MAX_ROWS){this.boundKeyDownHandler=this.onKeyDown_.bind(this);this.input_.addEventListener("keydown",this.boundKeyDownHandler)}var invalid=this.element_.classList.contains(this.CssClasses_.IS_INVALID);this.updateClasses_();this.element_.classList.add(this.CssClasses_.IS_UPGRADED);if(invalid)this.element_.classList.add(this.CssClasses_.IS_INVALID);
if(this.input_.hasAttribute("autofocus")){this.element_.focus();this.checkFocus()}}}};componentHandler.register({constructor:MaterialTextfield,classAsString:"MaterialTextfield",cssClass:"mdl-js-textfield",widget:true})})();(function(){var supportCustomEvent=window.CustomEvent;if(!supportCustomEvent||typeof supportCustomEvent==="object"){supportCustomEvent=function CustomEvent(event,x){x=x||{};var ev=document.createEvent("CustomEvent");ev.initCustomEvent(event,!!x.bubbles,!!x.cancelable,x.detail||null);return ev};supportCustomEvent.prototype=window.Event.prototype}function createsStackingContext(el){while(el&&el!==document.body){var s=window.getComputedStyle(el);var invalid=function(k,ok){return!(s[k]===undefined||s[k]===
ok)};if(s.opacity<1||invalid("zIndex","auto")||invalid("transform","none")||invalid("mixBlendMode","normal")||invalid("filter","none")||invalid("perspective","none")||s["isolation"]==="isolate"||s.position==="fixed"||s.webkitOverflowScrolling==="touch")return true;el=el.parentElement}return false}function findNearestDialog(el){while(el){if(el.localName==="dialog")return el;el=el.parentElement}return null}function safeBlur(el){if(el&&el.blur&&el!==document.body)el.blur()}function inNodeList(nodeList,
node){for(var i=0;i<nodeList.length;++i)if(nodeList[i]===node)return true;return false}function isFormMethodDialog(el){if(!el||!el.hasAttribute("method"))return false;return el.getAttribute("method").toLowerCase()==="dialog"}function dialogPolyfillInfo(dialog){this.dialog_=dialog;this.replacedStyleTop_=false;this.openAsModal_=false;if(!dialog.hasAttribute("role"))dialog.setAttribute("role","dialog");dialog.show=this.show.bind(this);dialog.showModal=this.showModal.bind(this);dialog.close=this.close.bind(this);
if(!("returnValue"in dialog))dialog.returnValue="";if("MutationObserver"in window){var mo=new MutationObserver(this.maybeHideModal.bind(this));mo.observe(dialog,{attributes:true,attributeFilter:["open"]})}else{var removed=false;var cb=function(){removed?this.downgradeModal():this.maybeHideModal();removed=false}.bind(this);var timeout;var delayModel=function(ev){if(ev.target!==dialog)return;var cand="DOMNodeRemoved";removed|=ev.type.substr(0,cand.length)===cand;window.clearTimeout(timeout);timeout=
window.setTimeout(cb,0)};["DOMAttrModified","DOMNodeRemoved","DOMNodeRemovedFromDocument"].forEach(function(name){dialog.addEventListener(name,delayModel)})}Object.defineProperty(dialog,"open",{set:this.setOpen.bind(this),get:dialog.hasAttribute.bind(dialog,"open")});this.backdrop_=document.createElement("div");this.backdrop_.className="backdrop";this.backdrop_.addEventListener("click",this.backdropClick_.bind(this))}dialogPolyfillInfo.prototype={get dialog(){return this.dialog_},maybeHideModal:function(){if(this.dialog_.hasAttribute("open")&&
document.body.contains(this.dialog_))return;this.downgradeModal()},downgradeModal:function(){if(!this.openAsModal_)return;this.openAsModal_=false;this.dialog_.style.zIndex="";if(this.replacedStyleTop_){this.dialog_.style.top="";this.replacedStyleTop_=false}this.backdrop_.parentNode&&this.backdrop_.parentNode.removeChild(this.backdrop_);dialogPolyfill.dm.removeDialog(this)},setOpen:function(value){if(value)this.dialog_.hasAttribute("open")||this.dialog_.setAttribute("open","");else{this.dialog_.removeAttribute("open");
this.maybeHideModal()}},backdropClick_:function(e){if(!this.dialog_.hasAttribute("tabindex")){var fake=document.createElement("div");this.dialog_.insertBefore(fake,this.dialog_.firstChild);fake.tabIndex=-1;fake.focus();this.dialog_.removeChild(fake)}else this.dialog_.focus();var redirectedEvent=document.createEvent("MouseEvents");redirectedEvent.initMouseEvent(e.type,e.bubbles,e.cancelable,window,e.detail,e.screenX,e.screenY,e.clientX,e.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.button,e.relatedTarget);
this.dialog_.dispatchEvent(redirectedEvent);e.stopPropagation()},focus_:function(){var target=this.dialog_.querySelector("[autofocus]:not([disabled])");if(!target&&this.dialog_.tabIndex>=0)target=this.dialog_;if(!target){var opts=["button","input","keygen","select","textarea"];var query=opts.map(function(el){return el+":not([disabled])"});query.push('[tabindex]:not([disabled]):not([tabindex=""])');target=this.dialog_.querySelector(query.join(", "))}safeBlur(document.activeElement);target&&target.focus()},
updateZIndex:function(dialogZ,backdropZ){if(dialogZ<backdropZ)throw new Error("dialogZ should never be < backdropZ");this.dialog_.style.zIndex=dialogZ;this.backdrop_.style.zIndex=backdropZ},show:function(){if(!this.dialog_.open){this.setOpen(true);this.focus_()}},showModal:function(){if(this.dialog_.hasAttribute("open"))throw new Error("Failed to execute 'showModal' on dialog: The element is already open, and therefore cannot be opened modally.");if(!document.body.contains(this.dialog_))throw new Error("Failed to execute 'showModal' on dialog: The element is not in a Document.");
if(!dialogPolyfill.dm.pushDialog(this))throw new Error("Failed to execute 'showModal' on dialog: There are too many open modal dialogs.");if(createsStackingContext(this.dialog_.parentElement))console.warn("A dialog is being shown inside a stacking context. "+"This may cause it to be unusable. For more information, see this link: "+"https://github.com/GoogleChrome/dialog-polyfill/#stacking-context");this.setOpen(true);this.openAsModal_=true;if(dialogPolyfill.needsCentering(this.dialog_)){dialogPolyfill.reposition(this.dialog_);
this.replacedStyleTop_=true}else this.replacedStyleTop_=false;this.dialog_.parentNode.insertBefore(this.backdrop_,this.dialog_.nextSibling);this.focus_()},close:function(opt_returnValue){if(!this.dialog_.hasAttribute("open"))throw new Error("Failed to execute 'close' on dialog: The element does not have an 'open' attribute, and therefore cannot be closed.");this.setOpen(false);if(opt_returnValue!==undefined)this.dialog_.returnValue=opt_returnValue;var closeEvent=new supportCustomEvent("close",{bubbles:false,
cancelable:false});this.dialog_.dispatchEvent(closeEvent)}};var dialogPolyfill={};dialogPolyfill.reposition=function(element){var scrollTop=document.body.scrollTop||document.documentElement.scrollTop;var topValue=scrollTop+(window.innerHeight-element.offsetHeight)/2;element.style.top=Math.max(scrollTop,topValue)+"px"};dialogPolyfill.isInlinePositionSetByStylesheet=function(element){for(var i=0;i<document.styleSheets.length;++i){var styleSheet=document.styleSheets[i];var cssRules=null;try{cssRules=
styleSheet.cssRules}catch(e){}if(!cssRules)continue;for(var j=0;j<cssRules.length;++j){var rule=cssRules[j];var selectedNodes=null;try{selectedNodes=document.querySelectorAll(rule.selectorText)}catch(e$0){}if(!selectedNodes||!inNodeList(selectedNodes,element))continue;var cssTop=rule.style.getPropertyValue("top");var cssBottom=rule.style.getPropertyValue("bottom");if(cssTop&&cssTop!=="auto"||cssBottom&&cssBottom!=="auto")return true}}return false};dialogPolyfill.needsCentering=function(dialog){var computedStyle=
window.getComputedStyle(dialog);if(computedStyle.position!=="absolute")return false;if(dialog.style.top!=="auto"&&dialog.style.top!==""||dialog.style.bottom!=="auto"&&dialog.style.bottom!=="")return false;return!dialogPolyfill.isInlinePositionSetByStylesheet(dialog)};dialogPolyfill.forceRegisterDialog=function(element){if(window.HTMLDialogElement||element.showModal)console.warn("This browser already supports <dialog>, the polyfill "+"may not work correctly",element);if(element.localName!=="dialog")throw new Error("Failed to register dialog: The element is not a dialog.");
new dialogPolyfillInfo(element)};dialogPolyfill.registerDialog=function(element){if(!element.showModal)dialogPolyfill.forceRegisterDialog(element)};dialogPolyfill.DialogManager=function(){this.pendingDialogStack=[];var checkDOM=this.checkDOM_.bind(this);this.overlay=document.createElement("div");this.overlay.className="_dialog_overlay";this.overlay.addEventListener("click",function(e){this.forwardTab_=undefined;e.stopPropagation();checkDOM([])}.bind(this));this.handleKey_=this.handleKey_.bind(this);
this.handleFocus_=this.handleFocus_.bind(this);this.zIndexLow_=1E5;this.zIndexHigh_=1E5+150;this.forwardTab_=undefined;if("MutationObserver"in window)this.mo_=new MutationObserver(function(records){var removed=[];records.forEach(function(rec){for(var i=0,c;c=rec.removedNodes[i];++i){if(!(c instanceof Element))continue;else if(c.localName==="dialog")removed.push(c);removed=removed.concat(c.querySelectorAll("dialog"))}});removed.length&&checkDOM(removed)})};dialogPolyfill.DialogManager.prototype.blockDocument=
function(){document.documentElement.addEventListener("focus",this.handleFocus_,true);document.addEventListener("keydown",this.handleKey_);this.mo_&&this.mo_.observe(document,{childList:true,subtree:true})};dialogPolyfill.DialogManager.prototype.unblockDocument=function(){document.documentElement.removeEventListener("focus",this.handleFocus_,true);document.removeEventListener("keydown",this.handleKey_);this.mo_&&this.mo_.disconnect()};dialogPolyfill.DialogManager.prototype.updateStacking=function(){var zIndex=
this.zIndexHigh_;for(var i=0,dpi;dpi=this.pendingDialogStack[i];++i){dpi.updateZIndex(--zIndex,--zIndex);if(i===0)this.overlay.style.zIndex=--zIndex}var last=this.pendingDialogStack[0];if(last){var p=last.dialog.parentNode||document.body;p.appendChild(this.overlay)}else if(this.overlay.parentNode)this.overlay.parentNode.removeChild(this.overlay)};dialogPolyfill.DialogManager.prototype.containedByTopDialog_=function(candidate){while(candidate=findNearestDialog(candidate)){for(var i=0,dpi;dpi=this.pendingDialogStack[i];++i)if(dpi.dialog===
candidate)return i===0;candidate=candidate.parentElement}return false};dialogPolyfill.DialogManager.prototype.handleFocus_=function(event){if(this.containedByTopDialog_(event.target))return;event.preventDefault();event.stopPropagation();safeBlur(event.target);if(this.forwardTab_===undefined)return;var dpi=this.pendingDialogStack[0];var dialog=dpi.dialog;var position=dialog.compareDocumentPosition(event.target);if(position&Node.DOCUMENT_POSITION_PRECEDING)if(this.forwardTab_)dpi.focus_();else document.documentElement.focus();
else;return false};dialogPolyfill.DialogManager.prototype.handleKey_=function(event){this.forwardTab_=undefined;if(event.keyCode===27){event.preventDefault();event.stopPropagation();var cancelEvent=new supportCustomEvent("cancel",{bubbles:false,cancelable:true});var dpi=this.pendingDialogStack[0];if(dpi&&dpi.dialog.dispatchEvent(cancelEvent))dpi.dialog.close()}else if(event.keyCode===9)this.forwardTab_=!event.shiftKey};dialogPolyfill.DialogManager.prototype.checkDOM_=function(removed){var clone=this.pendingDialogStack.slice();
clone.forEach(function(dpi){if(removed.indexOf(dpi.dialog)!==-1)dpi.downgradeModal();else dpi.maybeHideModal()})};dialogPolyfill.DialogManager.prototype.pushDialog=function(dpi){var allowed=(this.zIndexHigh_-this.zIndexLow_)/2-1;if(this.pendingDialogStack.length>=allowed)return false;if(this.pendingDialogStack.unshift(dpi)===1)this.blockDocument();this.updateStacking();return true};dialogPolyfill.DialogManager.prototype.removeDialog=function(dpi){var index=this.pendingDialogStack.indexOf(dpi);if(index===
-1)return;this.pendingDialogStack.splice(index,1);if(this.pendingDialogStack.length===0)this.unblockDocument();this.updateStacking()};dialogPolyfill.dm=new dialogPolyfill.DialogManager;dialogPolyfill.formSubmitter=null;dialogPolyfill.useValue=null;if(window.HTMLDialogElement===undefined){var testForm=document.createElement("form");testForm.setAttribute("method","dialog");if(testForm.method!=="dialog"){var methodDescriptor=Object.getOwnPropertyDescriptor(HTMLFormElement.prototype,"method");if(methodDescriptor){var realGet=
methodDescriptor.get;methodDescriptor.get=function(){if(isFormMethodDialog(this))return"dialog";return realGet.call(this)};var realSet=methodDescriptor.set;methodDescriptor.set=function(v){if(typeof v==="string"&&v.toLowerCase()==="dialog")return this.setAttribute("method",v);return realSet.call(this,v)};Object.defineProperty(HTMLFormElement.prototype,"method",methodDescriptor)}}document.addEventListener("click",function(ev){dialogPolyfill.formSubmitter=null;dialogPolyfill.useValue=null;if(ev.defaultPrevented)return;
var target=ev.target;if(!target||!isFormMethodDialog(target.form))return;var valid=target.type==="submit"&&["button","input"].indexOf(target.localName)>-1;if(!valid){if(!(target.localName==="input"&&target.type==="image"))return;dialogPolyfill.useValue=ev.offsetX+","+ev.offsetY}var dialog=findNearestDialog(target);if(!dialog)return;dialogPolyfill.formSubmitter=target},false);var nativeFormSubmit=HTMLFormElement.prototype.submit;var replacementFormSubmit=function(){if(!isFormMethodDialog(this))return nativeFormSubmit.call(this);
var dialog=findNearestDialog(this);dialog&&dialog.close()};HTMLFormElement.prototype.submit=replacementFormSubmit;document.addEventListener("submit",function(ev){var form=ev.target;if(!isFormMethodDialog(form))return;ev.preventDefault();var dialog=findNearestDialog(form);if(!dialog)return;var s=dialogPolyfill.formSubmitter;if(s&&s.form===form)dialog.close(dialogPolyfill.useValue||s.value);else dialog.close();dialogPolyfill.formSubmitter=null},true)}dialogPolyfill["forceRegisterDialog"]=dialogPolyfill.forceRegisterDialog;
dialogPolyfill["registerDialog"]=dialogPolyfill.registerDialog;if(typeof define==="function"&&"amd"in define)define(function(){return dialogPolyfill});else if(typeof module==="object"&&typeof module["exports"]==="object")module["exports"]=dialogPolyfill;else window["dialogPolyfill"]=dialogPolyfill})();(function(){var m,aa="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},ca="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this;function da(a,b){if(b){var c=ca;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}function ea(a){var b=0;return function(){return b<
a.length?{done:!1,value:a[b++]}:{done:!0}}}function fa(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:ea(a)}}da("Promise",function(a){function b(g){this.f=0;this.h=void 0;this.a=[];var h=this.j();try{g(h.resolve,h.reject)}catch(k){h.reject(k)}}function c(){this.a=null}function d(g){return g instanceof b?g:new b(function(h){h(g)})}if(a)return a;c.prototype.f=function(g){if(null==this.a){this.a=[];var h=this;this.h(function(){h.i()})}this.a.push(g)};
var e=ca.setTimeout;c.prototype.h=function(g){e(g,0)};c.prototype.i=function(){for(;this.a&&this.a.length;){var g=this.a;this.a=[];for(var h=0;h<g.length;++h){var k=g[h];g[h]=null;try{k()}catch(l){this.j(l)}}}this.a=null};c.prototype.j=function(g){this.h(function(){throw g;})};b.prototype.j=function(){function g(l){return function(v){k||(k=!0,l.call(h,v))}}var h=this,k=!1;return{resolve:g(this.I),reject:g(this.i)}};b.prototype.I=function(g){if(g===this)this.i(new TypeError("A Promise cannot resolve to itself"));
else if(g instanceof b)this.K(g);else{a:switch(typeof g){case "object":var h=null!=g;break a;case "function":h=!0;break a;default:h=!1}h?this.F(g):this.v(g)}};b.prototype.F=function(g){var h=void 0;try{h=g.then}catch(k){this.i(k);return}"function"==typeof h?this.O(h,g):this.v(g)};b.prototype.i=function(g){this.w(2,g)};b.prototype.v=function(g){this.w(1,g)};b.prototype.w=function(g,h){if(0!=this.f)throw Error("Cannot settle("+g+", "+h+"): Promise already settled in state"+this.f);this.f=g;this.h=h;
this.C()};b.prototype.C=function(){if(null!=this.a){for(var g=0;g<this.a.length;++g)f.f(this.a[g]);this.a=null}};var f=new c;b.prototype.K=function(g){var h=this.j();g.Da(h.resolve,h.reject)};b.prototype.O=function(g,h){var k=this.j();try{g.call(h,k.resolve,k.reject)}catch(l){k.reject(l)}};b.prototype.then=function(g,h){function k(sa,Da){return"function"==typeof sa?function(Ka){try{l(sa(Ka))}catch(ba){v(ba)}}:Da}var l,v,ya=new b(function(sa,Da){l=sa;v=Da});this.Da(k(g,l),k(h,v));return ya};b.prototype.catch=
function(g){return this.then(void 0,g)};b.prototype.Da=function(g,h){function k(){switch(l.f){case 1:g(l.h);break;case 2:h(l.h);break;default:throw Error("Unexpected state: "+l.f);}}var l=this;null==this.a?f.f(k):this.a.push(k)};b.resolve=d;b.reject=function(g){return new b(function(h,k){k(g)})};b.race=function(g){return new b(function(h,k){for(var l=fa(g),v=l.next();!v.done;v=l.next())d(v.value).Da(h,k)})};b.all=function(g){var h=fa(g),k=h.next();return k.done?d([]):new b(function(l,v){function ya(Ka){return function(ba){sa[Ka]=
ba;Da--;0==Da&&l(sa)}}var sa=[],Da=0;do sa.push(void 0),Da++,d(k.value).Da(ya(sa.length-1),v),k=h.next();while(!k.done)})};return b});var n=this;function ha(a){return void 0!==a}function p(a){return"string"==typeof a}var ia=/^[\w+/_-]+[=]{0,2}$/,ja=null;function ka(){}function la(a){a.V=void 0;a.Sa=function(){return a.V?a.V:a.V=new a}}function ma(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==
c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";else if("function"==b&&"undefined"==typeof a.call)return"object";return b}function na(a){return null!=a}function oa(a){return"array"==ma(a)}function pa(a){var b=
ma(a);return"array"==b||"object"==b&&"number"==typeof a.length}function qa(a){return"function"==ma(a)}function ra(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}var ta="closure_uid_"+(1E9*Math.random()>>>0),ua=0;function va(a,b,c){return a.call.apply(a.bind,arguments)}function wa(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,
e)}}return function(){return a.apply(b,arguments)}}function q(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?q=va:q=wa;return q.apply(null,arguments)}function xa(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function r(a,b){for(var c in b)a[c]=b[c]}var za=Date.now||function(){return+new Date};function Aa(a,b){a=a.split(".");var c=n;a[0]in c||"undefined"==typeof c.execScript||
c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&ha(b)?c[d]=b:c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}}function t(a,b){function c(){}c.prototype=b.prototype;a.o=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.gc=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}}function Ba(a){if(Error.captureStackTrace)Error.captureStackTrace(this,Ba);else{var b=Error().stack;b&&(this.stack=
b)}a&&(this.message=String(a))}t(Ba,Error);Ba.prototype.name="CustomError";var Ca;function Ea(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");Ba.call(this,c+a[d])}t(Ea,Ba);Ea.prototype.name="AssertionError";function Fa(a,b){throw new Ea("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1));}var Ga=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(p(a))return p(b)&&1==b.length?a.indexOf(b,0):
-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},Ha=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};function Ia(a,b){for(var c=p(a)?a.split(""):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)}var Ja=Array.prototype.filter?function(a,b){return Array.prototype.filter.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=[],e=0,f=p(a)?a.split(""):a,g=
0;g<c;g++)if(g in f){var h=f[g];b.call(void 0,h,g,a)&&(d[e++]=h)}return d},La=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=p(a)?a.split(""):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Ma=Array.prototype.some?function(a,b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=p(a)?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};function Na(a,
b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}function Oa(a,b){return 0<=Ga(a,b)}function Pa(a,b){b=Ga(a,b);var c;(c=0<=b)&&Qa(a,b);return c}function Qa(a,b){return 1==Array.prototype.splice.call(a,b,1).length}function Ra(a,b){b=Na(a,b,void 0);0<=b&&Qa(a,b)}function Sa(a,b){var c=0;Ia(a,function(d,e){b.call(void 0,d,e,a)&&Qa(a,e)&&c++})}function Ta(a){return Array.prototype.concat.apply([],arguments)}function Ua(a){var b=a.length;if(0<b){for(var c=
Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]}function Va(a,b,c,d){return Array.prototype.splice.apply(a,Wa(arguments,1))}function Wa(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}var Xa=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]},Ya=/&/g,Za=/</g,$a=/>/g,ab=/"/g,bb=/'/g,cb=/\x00/g,db=/[\x00&<>"']/;function eb(a,b){return a<b?-1:a>b?1:0}var fb;a:{var gb=n.navigator;if(gb){var hb=
gb.userAgent;if(hb){fb=hb;break a}}fb=""}function u(a){return-1!=fb.indexOf(a)}function ib(a,b,c){for(var d in a)b.call(c,a[d],d,a)}function jb(a){var b={},c;for(c in a)b[c]=a[c];return b}var kb="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function lb(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<kb.length;f++)c=kb[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}}function mb(){return(u("Chrome")||
u("CriOS"))&&!u("Edge")}function nb(a){db.test(a)&&(-1!=a.indexOf("&")&&(a=a.replace(Ya,"&amp;")),-1!=a.indexOf("<")&&(a=a.replace(Za,"&lt;")),-1!=a.indexOf(">")&&(a=a.replace($a,"&gt;")),-1!=a.indexOf('"')&&(a=a.replace(ab,"&quot;")),-1!=a.indexOf("'")&&(a=a.replace(bb,"&#39;")),-1!=a.indexOf("\x00")&&(a=a.replace(cb,"&#0;")));return a}function ob(a){ob[" "](a);return a}ob[" "]=ka;function pb(a,b){var c=qb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)}var rb=u("Opera"),w=u("Trident")||
u("MSIE"),sb=u("Edge"),tb=sb||w,ub=u("Gecko")&&!(-1!=fb.toLowerCase().indexOf("webkit")&&!u("Edge"))&&!(u("Trident")||u("MSIE"))&&!u("Edge"),vb=-1!=fb.toLowerCase().indexOf("webkit")&&!u("Edge"),wb=vb&&u("Mobile"),xb=u("Macintosh");function yb(){var a=n.document;return a?a.documentMode:void 0}var zb;a:{var Ab="",Bb=function(){var a=fb;if(ub)return/rv:([^\);]+)(\)|;)/.exec(a);if(sb)return/Edge\/([\d\.]+)/.exec(a);if(w)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(vb)return/WebKit\/(\S+)/.exec(a);
if(rb)return/(?:Version)[ \/]?(\S+)/.exec(a)}();Bb&&(Ab=Bb?Bb[1]:"");if(w){var Cb=yb();if(null!=Cb&&Cb>parseFloat(Ab)){zb=String(Cb);break a}}zb=Ab}var qb={};function Db(a){return pb(a,function(){for(var b=0,c=Xa(String(zb)).split("."),d=Xa(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||"",h=d[f]||"";do{g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];h=/(\d*)(\D*)(.*)/.exec(h)||["","","",""];if(0==g[0].length&&0==h[0].length)break;b=eb(0==g[1].length?0:parseInt(g[1],
10),0==h[1].length?0:parseInt(h[1],10))||eb(0==g[2].length,0==h[2].length)||eb(g[2],h[2]);g=g[3];h=h[3]}while(0==b)}return 0<=b})}var Eb;var Fb=n.document;Eb=Fb&&w?yb()||("CSS1Compat"==Fb.compatMode?parseInt(zb,10):5):void 0;function Gb(a,b){this.a=a===Hb&&b||"";this.f=Ib}Gb.prototype.la=!0;Gb.prototype.ja=function(){return this.a};Gb.prototype.toString=function(){return"Const{"+this.a+"}"};function Jb(a){if(a instanceof Gb&&a.constructor===Gb&&a.f===Ib)return a.a;Fa("expected object of type Const, got '"+
a+"'");return"type_error:Const"}var Ib={},Hb={};function Kb(){this.a="";this.h=Lb}Kb.prototype.la=!0;Kb.prototype.ja=function(){return this.a.toString()};Kb.prototype.f=function(){return 1};Kb.prototype.toString=function(){return"TrustedResourceUrl{"+this.a+"}"};function Mb(a){if(a instanceof Kb&&a.constructor===Kb&&a.h===Lb)return a.a;Fa("expected object of type TrustedResourceUrl, got '"+a+"' of type "+ma(a));return"type_error:TrustedResourceUrl"}var Lb={};function Nb(a){var b=new Kb;b.a=a;return b}
function Ob(){this.a="";this.h=Pb}Ob.prototype.la=!0;Ob.prototype.ja=function(){return this.a.toString()};Ob.prototype.f=function(){return 1};Ob.prototype.toString=function(){return"SafeUrl{"+this.a+"}"};function Qb(a){return Rb(a).toString()}function Rb(a){if(a instanceof Ob&&a.constructor===Ob&&a.h===Pb)return a.a;Fa("expected object of type SafeUrl, got '"+a+"' of type "+ma(a));return"type_error:SafeUrl"}var Sb=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;function Tb(a){if(a instanceof Ob)return a;
a="object"==typeof a&&a.la?a.ja():String(a);Sb.test(a)||(a="about:invalid#zClosurez");return Ub(a)}var Pb={};function Ub(a){var b=new Ob;b.a=a;return b}Ub("about:blank");function Vb(){this.a="";this.f=Wb}Vb.prototype.la=!0;var Wb={};Vb.prototype.ja=function(){return this.a};Vb.prototype.toString=function(){return"SafeStyle{"+this.a+"}"};function Xb(){this.a="";this.j=Yb;this.h=null}Xb.prototype.f=function(){return this.h};Xb.prototype.la=!0;Xb.prototype.ja=function(){return this.a.toString()};Xb.prototype.toString=
function(){return"SafeHtml{"+this.a+"}"};function Zb(a){if(a instanceof Xb&&a.constructor===Xb&&a.j===Yb)return a.a;Fa("expected object of type SafeHtml, got '"+a+"' of type "+ma(a));return"type_error:SafeHtml"}var Yb={};function $b(a,b){var c=new Xb;c.a=a;c.h=b;return c}$b("<!DOCTYPE html>",0);var ac=$b("",0);$b("<br>",0);var bc=function(a){var b=!1,c;return function(){b||(c=a(),b=!0);return c}}(function(){if("undefined"===typeof document)return!1;var a=document.createElement("div"),b=document.createElement("div");
b.appendChild(document.createElement("div"));a.appendChild(b);if(!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=Zb(ac);return!b.parentElement});function cc(a,b){a.src=Mb(b);if(null===ja)b:{b=n.document;if((b=b.querySelector&&b.querySelector("script[nonce]"))&&(b=b.nonce||b.getAttribute("nonce"))&&ia.test(b)){ja=b;break b}ja=""}b=ja;b&&a.setAttribute("nonce",b)}function dc(a,b){this.a=ha(a)?a:0;this.f=ha(b)?b:0}dc.prototype.toString=function(){return"("+this.a+", "+this.f+")"};dc.prototype.ceil=
function(){this.a=Math.ceil(this.a);this.f=Math.ceil(this.f);return this};dc.prototype.floor=function(){this.a=Math.floor(this.a);this.f=Math.floor(this.f);return this};dc.prototype.round=function(){this.a=Math.round(this.a);this.f=Math.round(this.f);return this};function ec(a,b){this.width=a;this.height=b}m=ec.prototype;m.toString=function(){return"("+this.width+" x "+this.height+")"};m.aspectRatio=function(){return this.width/this.height};m.ceil=function(){this.width=Math.ceil(this.width);this.height=
Math.ceil(this.height);return this};m.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};m.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};function fc(a){return a?new gc(hc(a)):Ca||(Ca=new gc)}function ic(a,b){var c=b||document;return c.querySelectorAll&&c.querySelector?c.querySelectorAll("."+a):jc(document,a,b)}function kc(a,b){var c=b||document;if(c.getElementsByClassName)a=c.getElementsByClassName(a)[0];
else{c=document;var d=b||c;a=d.querySelectorAll&&d.querySelector&&a?d.querySelector(a?"."+a:""):jc(c,a,b)[0]||null}return a||null}function jc(a,b,c){var d;a=c||a;if(a.querySelectorAll&&a.querySelector&&b)return a.querySelectorAll(b?"."+b:"");if(b&&a.getElementsByClassName){var e=a.getElementsByClassName(b);return e}e=a.getElementsByTagName("*");if(b){var f={};for(c=d=0;a=e[c];c++){var g=a.className;"function"==typeof g.split&&Oa(g.split(/\s+/),b)&&(f[d++]=a)}f.length=d;return f}return e}function lc(a,
b){ib(b,function(c,d){c&&"object"==typeof c&&c.la&&(c=c.ja());"style"==d?a.style.cssText=c:"class"==d?a.className=c:"for"==d?a.htmlFor=c:mc.hasOwnProperty(d)?a.setAttribute(mc[d],c):0==d.lastIndexOf("aria-",0)||0==d.lastIndexOf("data-",0)?a.setAttribute(d,c):a[d]=c})}var mc={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};
function nc(a){return a.scrollingElement?a.scrollingElement:vb||"CSS1Compat"!=a.compatMode?a.body||a.documentElement:a.documentElement}function oc(a){a&&a.parentNode&&a.parentNode.removeChild(a)}function hc(a){return 9==a.nodeType?a:a.ownerDocument||a.document}function pc(a,b){if("textContent"in a)a.textContent=b;else if(3==a.nodeType)a.data=String(b);else if(a.firstChild&&3==a.firstChild.nodeType){for(;a.lastChild!=a.firstChild;)a.removeChild(a.lastChild);a.firstChild.data=String(b)}else{for(var c;c=
a.firstChild;)a.removeChild(c);a.appendChild(hc(a).createTextNode(String(b)))}}function qc(a,b){return b?rc(a,function(c){return!b||p(c.className)&&Oa(c.className.split(/\s+/),b)}):null}function rc(a,b){for(var c=0;a;){if(b(a))return a;a=a.parentNode;c++}return null}function gc(a){this.a=a||n.document||document}gc.prototype.N=function(){return p(void 0)?this.a.getElementById(void 0):void 0};var sc="StopIteration"in n?n.StopIteration:{message:"StopIteration",stack:""};function tc(){}tc.prototype.next=
function(){throw sc;};tc.prototype.ga=function(){return this};function uc(a){if(a instanceof tc)return a;if("function"==typeof a.ga)return a.ga(!1);if(pa(a)){var b=0,c=new tc;c.next=function(){for(;;){if(b>=a.length)throw sc;if(b in a)return a[b++];b++}};return c}throw Error("Not implemented");}function vc(a,b){if(pa(a))try{Ha(a,b,void 0)}catch(c){if(c!==sc)throw c;}else{a=uc(a);try{for(;;)b.call(void 0,a.next(),void 0,a)}catch(c$1){if(c$1!==sc)throw c$1;}}}function wc(a){if(pa(a))return Ua(a);a=
uc(a);var b=[];vc(a,function(c){b.push(c)});return b}function xc(a,b){this.f={};this.a=[];this.j=this.h=0;var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof xc)for(c=a.ia(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}m=xc.prototype;m.ka=function(){yc(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.f[this.a[b]]);return a};m.ia=function(){yc(this);
return this.a.concat()};m.clear=function(){this.f={};this.j=this.h=this.a.length=0};function yc(a){if(a.h!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];zc(a.f,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.h!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],zc(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}m.get=function(a,b){return zc(this.f,a)?this.f[a]:b};m.set=function(a,b){zc(this.f,a)||(this.h++,this.a.push(a),this.j++);this.f[a]=b};m.forEach=function(a,b){for(var c=this.ia(),d=0;d<c.length;d++){var e=
c[d],f=this.get(e);a.call(b,f,e,this)}};m.ga=function(a){yc(this);var b=0,c=this.j,d=this,e=new tc;e.next=function(){if(c!=d.j)throw Error("The map has changed since the iterator was created");if(b>=d.a.length)throw sc;var f=d.a[b++];return a?f:d.f[f]};return e};function zc(a,b){return Object.prototype.hasOwnProperty.call(a,b)}var Ac=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function Bc(a,b){if(a){a=a.split("&");for(var c=
0;c<a.length;c++){var d=a[c].indexOf("="),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\+/g," ")):"")}}}function Cc(a,b,c,d){for(var e=c.length;0<=(b=a.indexOf(c,b))&&b<d;){var f=a.charCodeAt(b-1);if(38==f||63==f)if(f=a.charCodeAt(b+e),!f||61==f||38==f||35==f)return b;b+=e+1}return-1}var Dc=/#|$/;function Ec(a,b){var c=a.search(Dc),d=Cc(a,0,b,c);if(0>d)return null;var e=a.indexOf("&",d);if(0>e||e>c)e=c;d+=b.length+1;return decodeURIComponent(a.substr(d,
e-d).replace(/\+/g," "))}var Fc=/[?&]($|#)/;function Gc(a,b){this.h=this.w=this.j="";this.C=null;this.i=this.f="";this.v=!1;var c;a instanceof Gc?(this.v=ha(b)?b:a.v,Hc(this,a.j),this.w=a.w,this.h=a.h,Ic(this,a.C),this.f=a.f,Jc(this,Kc(a.a)),this.i=a.i):a&&(c=String(a).match(Ac))?(this.v=!!b,Hc(this,c[1]||"",!0),this.w=Lc(c[2]||""),this.h=Lc(c[3]||"",!0),Ic(this,c[4]),this.f=Lc(c[5]||"",!0),Jc(this,c[6]||"",!0),this.i=Lc(c[7]||"")):(this.v=!!b,this.a=new Mc(null,this.v))}Gc.prototype.toString=function(){var a=
[],b=this.j;b&&a.push(Nc(b,Oc,!0),":");var c=this.h;if(c||"file"==b)a.push("//"),(b=this.w)&&a.push(Nc(b,Oc,!0),"@"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),c=this.C,null!=c&&a.push(":",String(c));if(c=this.f)this.h&&"/"!=c.charAt(0)&&a.push("/"),a.push(Nc(c,"/"==c.charAt(0)?Pc:Qc,!0));(c=this.a.toString())&&a.push("?",c);(c=this.i)&&a.push("#",Nc(c,Rc));return a.join("")};Gc.prototype.resolve=function(a){var b=new Gc(this),c=!!a.j;c?Hc(b,a.j):c=!!a.w;c?b.w=a.w:
c=!!a.h;c?b.h=a.h:c=null!=a.C;var d=a.f;if(c)Ic(b,a.C);else if(c=!!a.f){if("/"!=d.charAt(0))if(this.h&&!this.f)d="/"+d;else{var e=b.f.lastIndexOf("/");-1!=e&&(d=b.f.substr(0,e+1)+d)}e=d;if(".."==e||"."==e)d="";else if(-1!=e.indexOf("./")||-1!=e.indexOf("/.")){d=0==e.lastIndexOf("/",0);e=e.split("/");for(var f=[],g=0;g<e.length;){var h=e[g++];"."==h?d&&g==e.length&&f.push(""):".."==h?((1<f.length||1==f.length&&""!=f[0])&&f.pop(),d&&g==e.length&&f.push("")):(f.push(h),d=!0)}d=f.join("/")}else d=e}c?
b.f=d:c=""!==a.a.toString();c?Jc(b,Kc(a.a)):c=!!a.i;c&&(b.i=a.i);return b};function Hc(a,b,c){a.j=c?Lc(b,!0):b;a.j&&(a.j=a.j.replace(/:$/,""))}function Ic(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error("Bad port number "+b);a.C=b}else a.C=null}function Jc(a,b,c){b instanceof Mc?(a.a=b,Sc(a.a,a.v)):(c||(b=Nc(b,Tc)),a.a=new Mc(b,a.v))}function Uc(a){return a instanceof Gc?new Gc(a):new Gc(a,void 0)}function Vc(a,b){a instanceof Gc||(a=Uc(a));b instanceof Gc||(b=Uc(b));return a.resolve(b)}function Lc(a,
b){return a?b?decodeURI(a.replace(/%25/g,"%2525")):decodeURIComponent(a):""}function Nc(a,b,c){return p(a)?(a=encodeURI(a).replace(b,Wc),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),a):null}function Wc(a){a=a.charCodeAt(0);return"%"+(a>>4&15).toString(16)+(a&15).toString(16)}var Oc=/[#\/\?@]/g,Qc=/[#\?:]/g,Pc=/[#\?]/g,Tc=/[#\?@]/g,Rc=/#/g;function Mc(a,b){this.f=this.a=null;this.h=a||null;this.j=!!b}function Xc(a){a.a||(a.a=new xc,a.f=0,a.h&&Bc(a.h,function(b,c){a.add(decodeURIComponent(b.replace(/\+/g,
" ")),c)}))}m=Mc.prototype;m.add=function(a,b){Xc(this);this.h=null;a=Yc(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.f+=1;return this};function Zc(a,b){Xc(a);b=Yc(a,b);zc(a.a.f,b)&&(a.h=null,a.f-=a.a.get(b).length,a=a.a,zc(a.f,b)&&(delete a.f[b],a.h--,a.j++,a.a.length>2*a.h&&yc(a)))}m.clear=function(){this.a=this.h=null;this.f=0};function $c(a,b){Xc(a);b=Yc(a,b);return zc(a.a.f,b)}m.forEach=function(a,b){Xc(this);this.a.forEach(function(c,d){Ha(c,function(e){a.call(b,e,d,this)},
this)},this)};m.ia=function(){Xc(this);for(var a=this.a.ka(),b=this.a.ia(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};m.ka=function(a){Xc(this);var b=[];if(p(a))$c(this,a)&&(b=Ta(b,this.a.get(Yc(this,a))));else{a=this.a.ka();for(var c=0;c<a.length;c++)b=Ta(b,a[c])}return b};m.set=function(a,b){Xc(this);this.h=null;a=Yc(this,a);$c(this,a)&&(this.f-=this.a.get(a).length);this.a.set(a,[b]);this.f+=1;return this};m.get=function(a,b){if(!a)return b;a=this.ka(a);return 0<
a.length?String(a[0]):b};m.toString=function(){if(this.h)return this.h;if(!this.a)return"";for(var a=[],b=this.a.ia(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.ka(d);for(var f=0;f<d.length;f++){var g=e;""!==d[f]&&(g+="="+encodeURIComponent(String(d[f])));a.push(g)}}return this.h=a.join("&")};function Kc(a){var b=new Mc;b.h=a.h;a.a&&(b.a=new xc(a.a),b.f=a.f);return b}function Yc(a,b){b=String(b);a.j&&(b=b.toLowerCase());return b}function Sc(a,b){b&&!a.j&&(Xc(a),a.h=null,
a.a.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(Zc(this,d),Zc(this,e),0<c.length&&(this.h=null,this.a.set(Yc(this,e),Ua(c)),this.f+=c.length))},a));a.j=b}var ad={rc:!0},bd={tc:!0},cd={qc:!0},dd={sc:!0};function ed(){throw Error("Do not instantiate directly");}ed.prototype.ta=null;ed.prototype.toString=function(){return this.content};function fd(a,b,c,d){a=a(b||gd,void 0,c);d=(d||fc()).a.createElement("DIV");a=hd(a);a.match(id);a=$b(a,null);if(bc())for(;d.lastChild;)d.removeChild(d.lastChild);
d.innerHTML=Zb(a);1==d.childNodes.length&&(a=d.firstChild,1==a.nodeType&&(d=a));return d}function hd(a){if(!ra(a))return nb(String(a));if(a instanceof ed){if(a.ea===ad)return a.content;if(a.ea===dd)return nb(a.content)}Fa("Soy template output is unsafe for use as HTML: "+a);return"zSoyz"}var id=/^<(body|caption|col|colgroup|head|html|tr|td|th|tbody|thead|tfoot)>/i,gd={};function jd(a){if(null!=a)switch(a.ta){case 1:return 1;case -1:return-1;case 0:return 0}return null}function kd(){ed.call(this)}
t(kd,ed);kd.prototype.ea=ad;function x(a){return null!=a&&a.ea===ad?a:a instanceof Xb?y(Zb(a).toString(),a.f()):y(nb(String(String(a))),jd(a))}function ld(){ed.call(this)}t(ld,ed);ld.prototype.ea=bd;ld.prototype.ta=1;function md(a,b){this.content=String(a);this.ta=null!=b?b:null}t(md,ed);md.prototype.ea=dd;function z(a){return new md(a,void 0)}var y=function(a){function b(c){this.content=c}b.prototype=a.prototype;return function(c,d){c=new b(String(c));void 0!==d&&(c.ta=d);return c}}(kd),nd=function(a){function b(c){this.content=
c}b.prototype=a.prototype;return function(c){return new b(String(c))}}(ld);function od(a){function b(){}var c={label:A("New password")};b.prototype=a;a=new b;for(var d in c)a[d]=c[d];return a}function A(a){return(a=String(a))?new md(a,void 0):""}var pd=function(a){function b(c){this.content=c}b.prototype=a.prototype;return function(c,d){c=String(c);if(!c)return"";c=new b(c);void 0!==d&&(c.ta=d);return c}}(kd);function qd(a){return null!=a&&a.ea===ad?String(String(a.content).replace(rd,"").replace(sd,
"&lt;")).replace(td,vd):nb(String(a))}function wd(a){null!=a&&a.ea===bd?a=String(a).replace(xd,yd):a instanceof Ob?a=String(Qb(a)).replace(xd,yd):(a=String(a),zd.test(a)?a=a.replace(xd,yd):(Fa("Bad value `%s` for |filterNormalizeUri",[a]),a="#zSoyz"));return a}var Ad={"\x00":"&#0;","\t":"&#9;","\n":"&#10;","\x0B":"&#11;","\f":"&#12;","\r":"&#13;"," ":"&#32;",'"':"&quot;","&":"&amp;","'":"&#39;","-":"&#45;","/":"&#47;","<":"&lt;","=":"&#61;",">":"&gt;","`":"&#96;","\u0085":"&#133;","\u00a0":"&#160;",
"\u2028":"&#8232;","\u2029":"&#8233;"};function vd(a){return Ad[a]}var Bd={"\x00":"%00","\u0001":"%01","\u0002":"%02","\u0003":"%03","\u0004":"%04","\u0005":"%05","\u0006":"%06","\u0007":"%07","\b":"%08","\t":"%09","\n":"%0A","\x0B":"%0B","\f":"%0C","\r":"%0D","\u000e":"%0E","\u000f":"%0F","\u0010":"%10","\u0011":"%11","\u0012":"%12","\u0013":"%13","\u0014":"%14","\u0015":"%15","\u0016":"%16","\u0017":"%17","\u0018":"%18","\u0019":"%19","\u001a":"%1A","\u001b":"%1B","\u001c":"%1C","\u001d":"%1D",
"\u001e":"%1E","\u001f":"%1F"," ":"%20",'"':"%22","'":"%27","(":"%28",")":"%29","<":"%3C",">":"%3E","\\":"%5C","{":"%7B","}":"%7D","\u007f":"%7F","\u0085":"%C2%85","\u00a0":"%C2%A0","\u2028":"%E2%80%A8","\u2029":"%E2%80%A9","\uff01":"%EF%BC%81","\uff03":"%EF%BC%83","\uff04":"%EF%BC%84","\uff06":"%EF%BC%86","\uff07":"%EF%BC%87","\uff08":"%EF%BC%88","\uff09":"%EF%BC%89","\uff0a":"%EF%BC%8A","\uff0b":"%EF%BC%8B","\uff0c":"%EF%BC%8C","\uff0f":"%EF%BC%8F","\uff1a":"%EF%BC%9A","\uff1b":"%EF%BC%9B","\uff1d":"%EF%BC%9D",
"\uff1f":"%EF%BC%9F","\uff20":"%EF%BC%A0","\uff3b":"%EF%BC%BB","\uff3d":"%EF%BC%BD"};function yd(a){return Bd[a]}var td=/[\x00\x22\x27\x3c\x3e]/g,xd=/[\x00- \x22\x27-\x29\x3c\x3e\\\x7b\x7d\x7f\x85\xa0\u2028\u2029\uff01\uff03\uff04\uff06-\uff0c\uff0f\uff1a\uff1b\uff1d\uff1f\uff20\uff3b\uff3d]/g,Cd=/^(?!-*(?:expression|(?:moz-)?binding))(?:[.#]?-?(?:[_a-z0-9-]+)(?:-[_a-z0-9-]+)*-?|-?(?:[0-9]+(?:\.[0-9]*)?|\.[0-9]+)(?:[a-z]{1,2}|%)?|!important|)$/i,zd=/^(?![^#?]*\/(?:\.|%2E){2}(?:[\/?#]|$))(?:(?:https?|mailto):|[^&:\/?#]*(?:[\/?#]|$))/i,
rd=/<(?:!|\/?([a-zA-Z][a-zA-Z0-9:\-]*))(?:[^>'"]|"[^"]*"|'[^']*')*>/g,sd=/</g;function Dd(){return z("Enter a valid phone number")}function Ed(){return z("Something went wrong. Please try again.")}function Fd(){return z("This email already exists without any means of sign-in. Please reset the password to recover.")}function Gd(){return z("Please login again to perform this operation")}function Hd(a,b,c){this.code=Id+a;if(!(a=b)){a="";switch(this.code){case "firebaseui/merge-conflict":a+="The current anonymous user failed to upgrade. The non-anonymous credential is already associated with a different user account.";
break;default:a+=Ed()}a=z(a).toString()}this.message=a||"";this.credential=c||null}t(Hd,Error);Hd.prototype.Z=function(){return{code:this.code,message:this.message}};Hd.prototype.toJSON=function(){return this.Z()};var Id="firebaseui/";function Jd(){this.V={}}function Kd(a,b,c){if(b.toLowerCase()in a.V)throw Error("Configuration "+b+" has already been defined.");a.V[b.toLowerCase()]=c}function Ld(a,b,c){if(!(b.toLowerCase()in a.V))throw Error("Configuration "+b+" is not defined.");a.V[b.toLowerCase()]=
c}Jd.prototype.get=function(a){if(!(a.toLowerCase()in this.V))throw Error("Configuration "+a+" is not defined.");return this.V[a.toLowerCase()]};function Md(a,b){a=a.get(b);if(!a)throw Error("Configuration "+b+" is required.");return a}function Nd(){this.f=void 0;this.a={}}m=Nd.prototype;m.set=function(a,b){Od(this,a,b,!1)};m.add=function(a,b){Od(this,a,b,!0)};function Od(a,b,c,d){for(var e=0;e<b.length;e++){var f=b.charAt(e);a.a[f]||(a.a[f]=new Nd);a=a.a[f]}if(d&&void 0!==a.f)throw Error('The collection already contains the key "'+
b+'"');a.f=c}m.get=function(a){a:{for(var b=this,c=0;c<a.length;c++)if(b=b.a[a.charAt(c)],!b){a=void 0;break a}a=b}return a?a.f:void 0};m.ka=function(){var a=[];Pd(this,a);return a};function Pd(a,b){void 0!==a.f&&b.push(a.f);for(var c in a.a)Pd(a.a[c],b)}m.ia=function(){var a=[];Qd(this,"",a);return a};function Qd(a,b,c){void 0!==a.f&&c.push(b);for(var d in a.a)Qd(a.a[d],b+d,c)}m.clear=function(){this.a={};this.f=void 0};function Rd(a){this.a=a;this.f=new Nd;for(a=0;a<this.a.length;a++){var b=this.f.get("+"+
this.a[a].b);b?b.push(this.a[a]):this.f.add("+"+this.a[a].b,[this.a[a]])}}function Sd(a,b){a=a.f;var c={},d=0;void 0!==a.f&&(c[d]=a.f);for(;d<b.length;d++){var e=b.charAt(d);if(!(e in a.a))break;a=a.a[e];void 0!==a.f&&(c[d]=a.f)}for(var f in c)if(c.hasOwnProperty(f))return c[f];return[]}function Td(a){for(var b=0;b<Ud.length;b++)if(Ud[b].c===a)return Ud[b];return null}function Vd(a){a=a.toUpperCase();for(var b=[],c=0;c<Ud.length;c++)Ud[c].g===a&&b.push(Ud[c]);return b}function Wd(a){if(0<a.length&&
"+"==a.charAt(0)){a=a.substring(1);for(var b=[],c=0;c<Ud.length;c++)Ud[c].b==a&&b.push(Ud[c]);a=b}else a=Vd(a);return a}function Xd(a){a.sort(function(b,c){return b.name.localeCompare(c.name,"en")})}var Ud=[{name:"Afghanistan",c:"93-AF-0",b:"93",g:"AF"},{name:"\u00c5land Islands",c:"358-AX-0",b:"358",g:"AX"},{name:"Albania",c:"355-AL-0",b:"355",g:"AL"},{name:"Algeria",c:"213-DZ-0",b:"213",g:"DZ"},{name:"American Samoa",c:"1-AS-0",b:"1",g:"AS"},{name:"Andorra",c:"376-AD-0",b:"376",g:"AD"},{name:"Angola",
c:"244-AO-0",b:"244",g:"AO"},{name:"Anguilla",c:"1-AI-0",b:"1",g:"AI"},{name:"Antigua and Barbuda",c:"1-AG-0",b:"1",g:"AG"},{name:"Argentina",c:"54-AR-0",b:"54",g:"AR"},{name:"Armenia",c:"374-AM-0",b:"374",g:"AM"},{name:"Aruba",c:"297-AW-0",b:"297",g:"AW"},{name:"Ascension Island",c:"247-AC-0",b:"247",g:"AC"},{name:"Australia",c:"61-AU-0",b:"61",g:"AU"},{name:"Austria",c:"43-AT-0",b:"43",g:"AT"},{name:"Azerbaijan",c:"994-AZ-0",b:"994",g:"AZ"},{name:"Bahamas",c:"1-BS-0",b:"1",g:"BS"},{name:"Bahrain",
c:"973-BH-0",b:"973",g:"BH"},{name:"Bangladesh",c:"880-BD-0",b:"880",g:"BD"},{name:"Barbados",c:"1-BB-0",b:"1",g:"BB"},{name:"Belarus",c:"375-BY-0",b:"375",g:"BY"},{name:"Belgium",c:"32-BE-0",b:"32",g:"BE"},{name:"Belize",c:"501-BZ-0",b:"501",g:"BZ"},{name:"Benin",c:"229-BJ-0",b:"229",g:"BJ"},{name:"Bermuda",c:"1-BM-0",b:"1",g:"BM"},{name:"Bhutan",c:"975-BT-0",b:"975",g:"BT"},{name:"Bolivia",c:"591-BO-0",b:"591",g:"BO"},{name:"Bosnia and Herzegovina",c:"387-BA-0",b:"387",g:"BA"},{name:"Botswana",
c:"267-BW-0",b:"267",g:"BW"},{name:"Brazil",c:"55-BR-0",b:"55",g:"BR"},{name:"British Indian Ocean Territory",c:"246-IO-0",b:"246",g:"IO"},{name:"British Virgin Islands",c:"1-VG-0",b:"1",g:"VG"},{name:"Brunei",c:"673-BN-0",b:"673",g:"BN"},{name:"Bulgaria",c:"359-BG-0",b:"359",g:"BG"},{name:"Burkina Faso",c:"226-BF-0",b:"226",g:"BF"},{name:"Burundi",c:"257-BI-0",b:"257",g:"BI"},{name:"Cambodia",c:"855-KH-0",b:"855",g:"KH"},{name:"Cameroon",c:"237-CM-0",b:"237",g:"CM"},{name:"Canada",c:"1-CA-0",b:"1",
g:"CA"},{name:"Cape Verde",c:"238-CV-0",b:"238",g:"CV"},{name:"Caribbean Netherlands",c:"599-BQ-0",b:"599",g:"BQ"},{name:"Cayman Islands",c:"1-KY-0",b:"1",g:"KY"},{name:"Central African Republic",c:"236-CF-0",b:"236",g:"CF"},{name:"Chad",c:"235-TD-0",b:"235",g:"TD"},{name:"Chile",c:"56-CL-0",b:"56",g:"CL"},{name:"China",c:"86-CN-0",b:"86",g:"CN"},{name:"Christmas Island",c:"61-CX-0",b:"61",g:"CX"},{name:"Cocos [Keeling] Islands",c:"61-CC-0",b:"61",g:"CC"},{name:"Colombia",c:"57-CO-0",b:"57",g:"CO"},
{name:"Comoros",c:"269-KM-0",b:"269",g:"KM"},{name:"Democratic Republic Congo",c:"243-CD-0",b:"243",g:"CD"},{name:"Republic of Congo",c:"242-CG-0",b:"242",g:"CG"},{name:"Cook Islands",c:"682-CK-0",b:"682",g:"CK"},{name:"Costa Rica",c:"506-CR-0",b:"506",g:"CR"},{name:"C\u00f4te d'Ivoire",c:"225-CI-0",b:"225",g:"CI"},{name:"Croatia",c:"385-HR-0",b:"385",g:"HR"},{name:"Cuba",c:"53-CU-0",b:"53",g:"CU"},{name:"Cura\u00e7ao",c:"599-CW-0",b:"599",g:"CW"},{name:"Cyprus",c:"357-CY-0",b:"357",g:"CY"},{name:"Czech Republic",
c:"420-CZ-0",b:"420",g:"CZ"},{name:"Denmark",c:"45-DK-0",b:"45",g:"DK"},{name:"Djibouti",c:"253-DJ-0",b:"253",g:"DJ"},{name:"Dominica",c:"1-DM-0",b:"1",g:"DM"},{name:"Dominican Republic",c:"1-DO-0",b:"1",g:"DO"},{name:"East Timor",c:"670-TL-0",b:"670",g:"TL"},{name:"Ecuador",c:"593-EC-0",b:"593",g:"EC"},{name:"Egypt",c:"20-EG-0",b:"20",g:"EG"},{name:"El Salvador",c:"503-SV-0",b:"503",g:"SV"},{name:"Equatorial Guinea",c:"240-GQ-0",b:"240",g:"GQ"},{name:"Eritrea",c:"291-ER-0",b:"291",g:"ER"},{name:"Estonia",
c:"372-EE-0",b:"372",g:"EE"},{name:"Ethiopia",c:"251-ET-0",b:"251",g:"ET"},{name:"Falkland Islands [Islas Malvinas]",c:"500-FK-0",b:"500",g:"FK"},{name:"Faroe Islands",c:"298-FO-0",b:"298",g:"FO"},{name:"Fiji",c:"679-FJ-0",b:"679",g:"FJ"},{name:"Finland",c:"358-FI-0",b:"358",g:"FI"},{name:"France",c:"33-FR-0",b:"33",g:"FR"},{name:"French Guiana",c:"594-GF-0",b:"594",g:"GF"},{name:"French Polynesia",c:"689-PF-0",b:"689",g:"PF"},{name:"Gabon",c:"241-GA-0",b:"241",g:"GA"},{name:"Gambia",c:"220-GM-0",
b:"220",g:"GM"},{name:"Georgia",c:"995-GE-0",b:"995",g:"GE"},{name:"Germany",c:"49-DE-0",b:"49",g:"DE"},{name:"Ghana",c:"233-GH-0",b:"233",g:"GH"},{name:"Gibraltar",c:"350-GI-0",b:"350",g:"GI"},{name:"Greece",c:"30-GR-0",b:"30",g:"GR"},{name:"Greenland",c:"299-GL-0",b:"299",g:"GL"},{name:"Grenada",c:"1-GD-0",b:"1",g:"GD"},{name:"Guadeloupe",c:"590-GP-0",b:"590",g:"GP"},{name:"Guam",c:"1-GU-0",b:"1",g:"GU"},{name:"Guatemala",c:"502-GT-0",b:"502",g:"GT"},{name:"Guernsey",c:"44-GG-0",b:"44",g:"GG"},
{name:"Guinea Conakry",c:"224-GN-0",b:"224",g:"GN"},{name:"Guinea-Bissau",c:"245-GW-0",b:"245",g:"GW"},{name:"Guyana",c:"592-GY-0",b:"592",g:"GY"},{name:"Haiti",c:"509-HT-0",b:"509",g:"HT"},{name:"Heard Island and McDonald Islands",c:"672-HM-0",b:"672",g:"HM"},{name:"Honduras",c:"504-HN-0",b:"504",g:"HN"},{name:"Hong Kong",c:"852-HK-0",b:"852",g:"HK"},{name:"Hungary",c:"36-HU-0",b:"36",g:"HU"},{name:"Iceland",c:"354-IS-0",b:"354",g:"IS"},{name:"India",c:"91-IN-0",b:"91",g:"IN"},{name:"Indonesia",
c:"62-ID-0",b:"62",g:"ID"},{name:"Iran",c:"98-IR-0",b:"98",g:"IR"},{name:"Iraq",c:"964-IQ-0",b:"964",g:"IQ"},{name:"Ireland",c:"353-IE-0",b:"353",g:"IE"},{name:"Isle of Man",c:"44-IM-0",b:"44",g:"IM"},{name:"Israel",c:"972-IL-0",b:"972",g:"IL"},{name:"Italy",c:"39-IT-0",b:"39",g:"IT"},{name:"Jamaica",c:"1-JM-0",b:"1",g:"JM"},{name:"Japan",c:"81-JP-0",b:"81",g:"JP"},{name:"Jersey",c:"44-JE-0",b:"44",g:"JE"},{name:"Jordan",c:"962-JO-0",b:"962",g:"JO"},{name:"Kazakhstan",c:"7-KZ-0",b:"7",g:"KZ"},{name:"Kenya",
c:"254-KE-0",b:"254",g:"KE"},{name:"Kiribati",c:"686-KI-0",b:"686",g:"KI"},{name:"Kosovo",c:"377-XK-0",b:"377",g:"XK"},{name:"Kosovo",c:"381-XK-0",b:"381",g:"XK"},{name:"Kosovo",c:"386-XK-0",b:"386",g:"XK"},{name:"Kuwait",c:"965-KW-0",b:"965",g:"KW"},{name:"Kyrgyzstan",c:"996-KG-0",b:"996",g:"KG"},{name:"Laos",c:"856-LA-0",b:"856",g:"LA"},{name:"Latvia",c:"371-LV-0",b:"371",g:"LV"},{name:"Lebanon",c:"961-LB-0",b:"961",g:"LB"},{name:"Lesotho",c:"266-LS-0",b:"266",g:"LS"},{name:"Liberia",c:"231-LR-0",
b:"231",g:"LR"},{name:"Libya",c:"218-LY-0",b:"218",g:"LY"},{name:"Liechtenstein",c:"423-LI-0",b:"423",g:"LI"},{name:"Lithuania",c:"370-LT-0",b:"370",g:"LT"},{name:"Luxembourg",c:"352-LU-0",b:"352",g:"LU"},{name:"Macau",c:"853-MO-0",b:"853",g:"MO"},{name:"Macedonia",c:"389-MK-0",b:"389",g:"MK"},{name:"Madagascar",c:"261-MG-0",b:"261",g:"MG"},{name:"Malawi",c:"265-MW-0",b:"265",g:"MW"},{name:"Malaysia",c:"60-MY-0",b:"60",g:"MY"},{name:"Maldives",c:"960-MV-0",b:"960",g:"MV"},{name:"Mali",c:"223-ML-0",
b:"223",g:"ML"},{name:"Malta",c:"356-MT-0",b:"356",g:"MT"},{name:"Marshall Islands",c:"692-MH-0",b:"692",g:"MH"},{name:"Martinique",c:"596-MQ-0",b:"596",g:"MQ"},{name:"Mauritania",c:"222-MR-0",b:"222",g:"MR"},{name:"Mauritius",c:"230-MU-0",b:"230",g:"MU"},{name:"Mayotte",c:"262-YT-0",b:"262",g:"YT"},{name:"Mexico",c:"52-MX-0",b:"52",g:"MX"},{name:"Micronesia",c:"691-FM-0",b:"691",g:"FM"},{name:"Moldova",c:"373-MD-0",b:"373",g:"MD"},{name:"Monaco",c:"377-MC-0",b:"377",g:"MC"},{name:"Mongolia",c:"976-MN-0",
b:"976",g:"MN"},{name:"Montenegro",c:"382-ME-0",b:"382",g:"ME"},{name:"Montserrat",c:"1-MS-0",b:"1",g:"MS"},{name:"Morocco",c:"212-MA-0",b:"212",g:"MA"},{name:"Mozambique",c:"258-MZ-0",b:"258",g:"MZ"},{name:"Myanmar [Burma]",c:"95-MM-0",b:"95",g:"MM"},{name:"Namibia",c:"264-NA-0",b:"264",g:"NA"},{name:"Nauru",c:"674-NR-0",b:"674",g:"NR"},{name:"Nepal",c:"977-NP-0",b:"977",g:"NP"},{name:"Netherlands",c:"31-NL-0",b:"31",g:"NL"},{name:"New Caledonia",c:"687-NC-0",b:"687",g:"NC"},{name:"New Zealand",
c:"64-NZ-0",b:"64",g:"NZ"},{name:"Nicaragua",c:"505-NI-0",b:"505",g:"NI"},{name:"Niger",c:"227-NE-0",b:"227",g:"NE"},{name:"Nigeria",c:"234-NG-0",b:"234",g:"NG"},{name:"Niue",c:"683-NU-0",b:"683",g:"NU"},{name:"Norfolk Island",c:"672-NF-0",b:"672",g:"NF"},{name:"North Korea",c:"850-KP-0",b:"850",g:"KP"},{name:"Northern Mariana Islands",c:"1-MP-0",b:"1",g:"MP"},{name:"Norway",c:"47-NO-0",b:"47",g:"NO"},{name:"Oman",c:"968-OM-0",b:"968",g:"OM"},{name:"Pakistan",c:"92-PK-0",b:"92",g:"PK"},{name:"Palau",
c:"680-PW-0",b:"680",g:"PW"},{name:"Palestinian Territories",c:"970-PS-0",b:"970",g:"PS"},{name:"Panama",c:"507-PA-0",b:"507",g:"PA"},{name:"Papua New Guinea",c:"675-PG-0",b:"675",g:"PG"},{name:"Paraguay",c:"595-PY-0",b:"595",g:"PY"},{name:"Peru",c:"51-PE-0",b:"51",g:"PE"},{name:"Philippines",c:"63-PH-0",b:"63",g:"PH"},{name:"Poland",c:"48-PL-0",b:"48",g:"PL"},{name:"Portugal",c:"351-PT-0",b:"351",g:"PT"},{name:"Puerto Rico",c:"1-PR-0",b:"1",g:"PR"},{name:"Qatar",c:"974-QA-0",b:"974",g:"QA"},{name:"R\u00e9union",
c:"262-RE-0",b:"262",g:"RE"},{name:"Romania",c:"40-RO-0",b:"40",g:"RO"},{name:"Russia",c:"7-RU-0",b:"7",g:"RU"},{name:"Rwanda",c:"250-RW-0",b:"250",g:"RW"},{name:"Saint Barth\u00e9lemy",c:"590-BL-0",b:"590",g:"BL"},{name:"Saint Helena",c:"290-SH-0",b:"290",g:"SH"},{name:"St. Kitts",c:"1-KN-0",b:"1",g:"KN"},{name:"St. Lucia",c:"1-LC-0",b:"1",g:"LC"},{name:"Saint Martin",c:"590-MF-0",b:"590",g:"MF"},{name:"Saint Pierre and Miquelon",c:"508-PM-0",b:"508",g:"PM"},{name:"St. Vincent",c:"1-VC-0",b:"1",
g:"VC"},{name:"Samoa",c:"685-WS-0",b:"685",g:"WS"},{name:"San Marino",c:"378-SM-0",b:"378",g:"SM"},{name:"S\u00e3o Tom\u00e9 and Pr\u00edncipe",c:"239-ST-0",b:"239",g:"ST"},{name:"Saudi Arabia",c:"966-SA-0",b:"966",g:"SA"},{name:"Senegal",c:"221-SN-0",b:"221",g:"SN"},{name:"Serbia",c:"381-RS-0",b:"381",g:"RS"},{name:"Seychelles",c:"248-SC-0",b:"248",g:"SC"},{name:"Sierra Leone",c:"232-SL-0",b:"232",g:"SL"},{name:"Singapore",c:"65-SG-0",b:"65",g:"SG"},{name:"Sint Maarten",c:"1-SX-0",b:"1",g:"SX"},
{name:"Slovakia",c:"421-SK-0",b:"421",g:"SK"},{name:"Slovenia",c:"386-SI-0",b:"386",g:"SI"},{name:"Solomon Islands",c:"677-SB-0",b:"677",g:"SB"},{name:"Somalia",c:"252-SO-0",b:"252",g:"SO"},{name:"South Africa",c:"27-ZA-0",b:"27",g:"ZA"},{name:"South Georgia and the South Sandwich Islands",c:"500-GS-0",b:"500",g:"GS"},{name:"South Korea",c:"82-KR-0",b:"82",g:"KR"},{name:"South Sudan",c:"211-SS-0",b:"211",g:"SS"},{name:"Spain",c:"34-ES-0",b:"34",g:"ES"},{name:"Sri Lanka",c:"94-LK-0",b:"94",g:"LK"},
{name:"Sudan",c:"249-SD-0",b:"249",g:"SD"},{name:"Suriname",c:"597-SR-0",b:"597",g:"SR"},{name:"Svalbard and Jan Mayen",c:"47-SJ-0",b:"47",g:"SJ"},{name:"Swaziland",c:"268-SZ-0",b:"268",g:"SZ"},{name:"Sweden",c:"46-SE-0",b:"46",g:"SE"},{name:"Switzerland",c:"41-CH-0",b:"41",g:"CH"},{name:"Syria",c:"963-SY-0",b:"963",g:"SY"},{name:"Taiwan",c:"886-TW-0",b:"886",g:"TW"},{name:"Tajikistan",c:"992-TJ-0",b:"992",g:"TJ"},{name:"Tanzania",c:"255-TZ-0",b:"255",g:"TZ"},{name:"Thailand",c:"66-TH-0",b:"66",g:"TH"},
{name:"Togo",c:"228-TG-0",b:"228",g:"TG"},{name:"Tokelau",c:"690-TK-0",b:"690",g:"TK"},{name:"Tonga",c:"676-TO-0",b:"676",g:"TO"},{name:"Trinidad/Tobago",c:"1-TT-0",b:"1",g:"TT"},{name:"Tunisia",c:"216-TN-0",b:"216",g:"TN"},{name:"Turkey",c:"90-TR-0",b:"90",g:"TR"},{name:"Turkmenistan",c:"993-TM-0",b:"993",g:"TM"},{name:"Turks and Caicos Islands",c:"1-TC-0",b:"1",g:"TC"},{name:"Tuvalu",c:"688-TV-0",b:"688",g:"TV"},{name:"U.S. Virgin Islands",c:"1-VI-0",b:"1",g:"VI"},{name:"Uganda",c:"256-UG-0",b:"256",
g:"UG"},{name:"Ukraine",c:"380-UA-0",b:"380",g:"UA"},{name:"United Arab Emirates",c:"971-AE-0",b:"971",g:"AE"},{name:"United Kingdom",c:"44-GB-0",b:"44",g:"GB"},{name:"United States",c:"1-US-0",b:"1",g:"US"},{name:"Uruguay",c:"598-UY-0",b:"598",g:"UY"},{name:"Uzbekistan",c:"998-UZ-0",b:"998",g:"UZ"},{name:"Vanuatu",c:"678-VU-0",b:"678",g:"VU"},{name:"Vatican City",c:"379-VA-0",b:"379",g:"VA"},{name:"Venezuela",c:"58-VE-0",b:"58",g:"VE"},{name:"Vietnam",c:"84-VN-0",b:"84",g:"VN"},{name:"Wallis and Futuna",
c:"681-WF-0",b:"681",g:"WF"},{name:"Western Sahara",c:"212-EH-0",b:"212",g:"EH"},{name:"Yemen",c:"967-YE-0",b:"967",g:"YE"},{name:"Zambia",c:"260-ZM-0",b:"260",g:"ZM"},{name:"Zimbabwe",c:"263-ZW-0",b:"263",g:"ZW"}];Xd(Ud);var Yd=new Rd(Ud);function Zd(a,b){this.a=a;this.va=b}function $d(a){a=Xa(a);var b=Sd(Yd,a);return 0<b.length?new Zd("1"==b[0].b?"1-US-0":b[0].c,Xa(a.substr(b[0].b.length+1))):null}function ae(a){var b=Td(a.a);if(!b)throw Error("Country ID "+a.a+" not found.");return"+"+b.b+a.va}
function be(a,b){for(var c=0;c<a.length;c++)if(!Oa(ce,a[c])&&(null!==de&&a[c]in de||Oa(b,a[c])))return a[c];return null}var ce=["emailLink","password","phone"],de={"facebook.com":"FacebookAuthProvider","github.com":"GithubAuthProvider","google.com":"GoogleAuthProvider",password:"EmailAuthProvider","twitter.com":"TwitterAuthProvider",phone:"PhoneAuthProvider"};var ee=Object.freeze||function(a){return a};function fe(a,b,c){this.reset(a,b,c,void 0,void 0)}fe.prototype.a=null;var ge=0;fe.prototype.reset=
function(a,b,c,d,e){"number"==typeof e||ge++;this.h=d||za();this.j=a;this.i=b;this.f=c;delete this.a};function he(a){this.i=a;this.a=this.h=this.j=this.f=null}function ie(a,b){this.name=a;this.value=b}ie.prototype.toString=function(){return this.name};var je=new ie("SEVERE",1E3),ke=new ie("WARNING",900),le=new ie("CONFIG",700);function me(a){if(a.j)return a.j;if(a.f)return me(a.f);Fa("Root logger has no level set.");return null}he.prototype.log=function(a,b,c){if(a.value>=me(this).value)for(qa(b)&&
(b=b()),a=new fe(a,String(b),this.i),c&&(a.a=c),c=this;c;){var d=c,e=a;if(d.a)for(var f=0;b=d.a[f];f++)b(e);c=c.f}};var ne={},oe=null;function pe(){oe||(oe=new he(""),ne[""]=oe,oe.j=le)}function qe(a){pe();var b;if(!(b=ne[a])){b=new he(a);var c=a.lastIndexOf("."),d=a.substr(c+1);c=qe(a.substr(0,c));c.h||(c.h={});c.h[d]=b;b.f=c;ne[a]=b}return b}function re(){this.a=za()}var se=null;re.prototype.set=function(a){this.a=a};re.prototype.reset=function(){this.set(za())};re.prototype.get=function(){return this.a};
function te(a){this.j=a||"";se||(se=new re);this.i=se}te.prototype.a=!0;te.prototype.f=!0;te.prototype.h=!1;function ue(a){return 10>a?"0"+a:String(a)}function ve(a,b){a=(a.h-b)/1E3;b=a.toFixed(3);var c=0;if(1>a)c=2;else for(;100>a;)c++,a*=10;for(;0<c--;)b=" "+b;return b}function we(a){te.call(this,a)}t(we,te);function xe(a,b){var c=[];c.push(a.j," ");if(a.f){var d=new Date(b.h);c.push("[",ue(d.getFullYear()-2E3)+ue(d.getMonth()+1)+ue(d.getDate())+" "+ue(d.getHours())+":"+ue(d.getMinutes())+":"+ue(d.getSeconds())+
"."+ue(Math.floor(d.getMilliseconds()/10)),"] ")}c.push("[",ve(b,a.i.get()),"s] ");c.push("[",b.f,"] ");c.push(b.i);a.h&&(b=b.a)&&c.push("\n",b instanceof Error?b.message:b.toString());a.a&&c.push("\n");return c.join("")}function ye(){this.i=q(this.h,this);this.a=new we;this.a.f=!1;this.a.h=!1;this.f=this.a.a=!1;this.j={}}ye.prototype.h=function(a){function b(f){if(f){if(f.value>=je.value)return"error";if(f.value>=ke.value)return"warn";if(f.value>=le.value)return"log"}return"debug"}if(!this.j[a.f]){var c=
xe(this.a,a),d=ze;if(d){var e=b(a.j);Ae(d,e,c,a.a)}}};var ze=n.console;function Ae(a,b,c,d){if(a[b])a[b](c,d||"");else a.log(c,d||"")}function Be(a,b){var c=Ce;c&&c.log(je,a,b)}var Ce;Ce=qe("firebaseui");var De=new ye;if(1!=De.f){var Ee;pe();Ee=oe;var Fe=De.i;Ee.a||(Ee.a=[]);Ee.a.push(Fe);De.f=!0}function Ge(a){var b=Ce;b&&b.log(ke,a,void 0)}function He(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}}function Ie(a,b){this.h=a;this.j=b;this.f=0;this.a=null}Ie.prototype.get=function(){if(0<
this.f){this.f--;var a=this.a;this.a=a.next;a.next=null}else a=this.h();return a};function Je(a,b){a.j(b);100>a.f&&(a.f++,b.next=a.a,a.a=b)}function Ke(){this.f=this.a=null}var Me=new Ie(function(){return new Le},function(a){a.reset()});Ke.prototype.add=function(a,b){var c=Me.get();c.set(a,b);this.f?this.f.next=c:this.a=c;this.f=c};function Ne(){var a=Oe,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.f=null),b.next=null);return b}function Le(){this.next=this.f=this.a=null}Le.prototype.set=function(a,b){this.a=
a;this.f=b;this.next=null};Le.prototype.reset=function(){this.next=this.f=this.a=null};function Pe(a){n.setTimeout(function(){throw a;},0)}var Qe;function Re(){var a=n.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!u("Presto")&&(a=function(){var e=document.createElement("IFRAME");e.style.display="none";e.src="";document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.write("");e.close();var g="callImmediate"+
Math.random(),h="file:"==f.location.protocol?"*":f.location.protocol+"//"+f.location.host;e=q(function(k){if(("*"==h||k.origin==h)&&k.data==g)this.port1.onmessage()},this);f.addEventListener("message",e,!1);this.port1={};this.port2={postMessage:function(){f.postMessage(g,h)}}});if("undefined"!==typeof a&&!u("Trident")&&!u("MSIE")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(ha(c.next)){c=c.next;var e=c.ab;c.ab=null;e()}};return function(e){d.next={ab:e};d=d.next;b.port2.postMessage(0)}}return"undefined"!==
typeof document&&"onreadystatechange"in document.createElement("SCRIPT")?function(e){var f=document.createElement("SCRIPT");f.onreadystatechange=function(){f.onreadystatechange=null;f.parentNode.removeChild(f);f=null;e();e=null};document.documentElement.appendChild(f)}:function(e){n.setTimeout(e,0)}}function Se(a,b){Te||Ue();Ve||(Te(),Ve=!0);Oe.add(a,b)}var Te;function Ue(){if(n.Promise&&n.Promise.resolve){var a=n.Promise.resolve(void 0);Te=function(){a.then(We)}}else Te=function(){var b=We;!qa(n.setImmediate)||
n.Window&&n.Window.prototype&&!u("Edge")&&n.Window.prototype.setImmediate==n.setImmediate?(Qe||(Qe=Re()),Qe(b)):n.setImmediate(b)}}var Ve=!1,Oe=new Ke;function We(){for(var a;a=Ne();){try{a.a.call(a.f)}catch(b){Pe(b)}Je(Me,a)}Ve=!1}function Xe(a){this.a=Ye;this.w=void 0;this.j=this.f=this.h=null;this.i=this.v=!1;if(a!=ka)try{var b=this;a.call(void 0,function(c){Ze(b,$e,c)},function(c){if(!(c instanceof af))try{if(c instanceof Error)throw c;throw Error("Promise rejected.");}catch(d){}Ze(b,bf,c)})}catch(c){Ze(this,
bf,c)}}var Ye=0,$e=2,bf=3;function cf(){this.next=this.context=this.f=this.h=this.a=null;this.j=!1}cf.prototype.reset=function(){this.context=this.f=this.h=this.a=null;this.j=!1};var df=new Ie(function(){return new cf},function(a){a.reset()});function ef(a,b,c){var d=df.get();d.h=a;d.f=b;d.context=c;return d}function B(a){if(a instanceof Xe)return a;var b=new Xe(ka);Ze(b,$e,a);return b}function ff(a){return new Xe(function(b,c){c(a)})}Xe.prototype.then=function(a,b,c){return gf(this,qa(a)?a:null,
qa(b)?b:null,c)};Xe.prototype.$goog_Thenable=!0;function hf(a,b){return gf(a,null,b,void 0)}Xe.prototype.cancel=function(a){this.a==Ye&&Se(function(){var b=new af(a);jf(this,b)},this)};function jf(a,b){if(a.a==Ye)if(a.h){var c=a.h;if(c.f){for(var d=0,e=null,f=null,g=c.f;g&&(g.j||(d++,g.a==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(c.a==Ye&&1==d?jf(c,b):(f?(d=f,d.next==c.j&&(c.j=d),d.next=d.next.next):kf(c),lf(c,e,bf,b)))}a.h=null}else Ze(a,bf,b)}function mf(a,b){a.f||a.a!=$e&&a.a!=bf||nf(a);a.j?a.j.next=
b:a.f=b;a.j=b}function gf(a,b,c,d){var e=ef(null,null,null);e.a=new Xe(function(f,g){e.h=b?function(h){try{var k=b.call(d,h);f(k)}catch(l){g(l)}}:f;e.f=c?function(h){try{var k=c.call(d,h);!ha(k)&&h instanceof af?g(h):f(k)}catch(l){g(l)}}:g});e.a.h=a;mf(a,e);return e.a}Xe.prototype.F=function(a){this.a=Ye;Ze(this,$e,a)};Xe.prototype.I=function(a){this.a=Ye;Ze(this,bf,a)};function Ze(a,b,c){if(a.a==Ye){a===c&&(b=bf,c=new TypeError("Promise cannot resolve to itself"));a.a=1;a:{var d=c,e=a.F,f=a.I;if(d instanceof
Xe){mf(d,ef(e||ka,f||null,a));var g=!0}else if(He(d))d.then(e,f,a),g=!0;else{if(ra(d))try{var h=d.then;if(qa(h)){of(d,h,e,f,a);g=!0;break a}}catch(k){f.call(a,k);g=!0;break a}g=!1}}g||(a.w=c,a.a=b,a.h=null,nf(a),b!=bf||c instanceof af||pf(a,c))}}function of(a,b,c,d,e){function f(k){h||(h=!0,d.call(e,k))}function g(k){h||(h=!0,c.call(e,k))}var h=!1;try{b.call(a,g,f)}catch(k){f(k)}}function nf(a){a.v||(a.v=!0,Se(a.C,a))}function kf(a){var b=null;a.f&&(b=a.f,a.f=b.next,b.next=null);a.f||(a.j=null);return b}
Xe.prototype.C=function(){for(var a;a=kf(this);)lf(this,a,this.a,this.w);this.v=!1};function lf(a,b,c,d){if(c==bf&&b.f&&!b.j)for(;a&&a.i;a=a.h)a.i=!1;if(b.a)b.a.h=null,qf(b,c,d);else try{b.j?b.h.call(b.context):qf(b,c,d)}catch(e){rf.call(null,e)}Je(df,b)}function qf(a,b,c){b==$e?a.h.call(a.context,c):a.f&&a.f.call(a.context,c)}function pf(a,b){a.i=!0;Se(function(){a.i&&rf.call(null,b)})}var rf=Pe;function af(a){Ba.call(this,a)}t(af,Ba);af.prototype.name="cancel";var sf=!w||9<=Number(Eb),tf=w&&!Db("9"),
uf=function(){if(!n.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{n.addEventListener("test",ka,b),n.removeEventListener("test",ka,b)}catch(c){}return a}();function vf(){0!=wf&&(xf[this[ta]||(this[ta]=++ua)]=this);this.O=this.O;this.C=this.C}var wf=0,xf={};vf.prototype.O=!1;vf.prototype.m=function(){if(!this.O&&(this.O=!0,this.l(),0!=wf)){var a=this[ta]||(this[ta]=++ua);if(0!=wf&&this.C&&0<this.C.length)throw Error(this+
" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete xf[a]}};function yf(a,b){a.O?ha(void 0)?b.call(void 0):b():(a.C||(a.C=[]),a.C.push(ha(void 0)?q(b,void 0):b))}vf.prototype.l=function(){if(this.C)for(;this.C.length;)this.C.shift()()};function zf(a){a&&"function"==typeof a.m&&a.m()}function Af(a,b){this.type=a;this.f=this.target=b;this.h=!1;this.ib=!0}Af.prototype.stopPropagation=function(){this.h=
!0};Af.prototype.preventDefault=function(){this.ib=!1};function Bf(a,b){Af.call(this,a?a.type:"");this.relatedTarget=this.f=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.j=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType="";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.f=b;if(b=a.relatedTarget){if(ub){a:{try{ob(b.nodeName);
var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else"mouseover"==c?b=a.fromElement:"mouseout"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||
"";this.j=a.charCode||("keypress"==c?a.keyCode:0);this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=p(a.pointerType)?a.pointerType:Cf[a.pointerType]||"";this.a=a;a.defaultPrevented&&this.preventDefault()}}t(Bf,Af);var Cf=ee({2:"touch",3:"pen",4:"mouse"});Bf.prototype.stopPropagation=function(){Bf.o.stopPropagation.call(this);this.a.stopPropagation?this.a.stopPropagation():this.a.cancelBubble=!0};Bf.prototype.preventDefault=
function(){Bf.o.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,tf)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};var Df="closure_listenable_"+(1E6*Math.random()|0),Ef=0;function Ff(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.Fa=e;this.key=++Ef;this.qa=this.Ca=!1}function Gf(a){a.qa=!0;a.listener=null;a.proxy=null;a.src=null;a.Fa=null}function Hf(a){this.src=a;this.a={};this.f=
0}Hf.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.f++);var g=If(a,b,d,e);-1<g?(b=a[g],c||(b.Ca=!1)):(b=new Ff(b,this.src,f,!!d,e),b.Ca=c,a.push(b));return b};function Jf(a,b){var c=b.type;c in a.a&&Pa(a.a[c],b)&&(Gf(b),0==a.a[c].length&&(delete a.a[c],a.f--))}function If(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.qa&&f.listener==b&&f.capture==!!c&&f.Fa==d)return e}return-1}var Kf="closure_lm_"+(1E6*Math.random()|0),Lf={},Mf=0;function Nf(a,b,
c,d,e){if(d&&d.once)return Of(a,b,c,d,e);if(oa(b)){for(var f=0;f<b.length;f++)Nf(a,b[f],c,d,e);return null}c=Pf(c);return a&&a[Df]?a.F.add(String(b),c,!1,ra(d)?!!d.capture:!!d,e):Qf(a,b,c,!1,d,e)}function Qf(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=ra(e)?!!e.capture:!!e,h=Rf(a);h||(a[Kf]=h=new Hf(a));c=h.add(b,c,d,g,f);if(c.proxy)return c;d=Sf();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)uf||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(Tf(b.toString()),
d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");Mf++;return c}function Sf(){var a=Uf,b=sf?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function Of(a,b,c,d,e){if(oa(b)){for(var f=0;f<b.length;f++)Of(a,b[f],c,d,e);return null}c=Pf(c);return a&&a[Df]?a.F.add(String(b),c,!0,ra(d)?!!d.capture:!!d,e):Qf(a,b,c,!0,d,e)}function Vf(a,b,c,d,e){if(oa(b))for(var f=
0;f<b.length;f++)Vf(a,b[f],c,d,e);else(d=ra(d)?!!d.capture:!!d,c=Pf(c),a&&a[Df])?(a=a.F,b=String(b).toString(),b in a.a&&(f=a.a[b],c=If(f,c,d,e),-1<c&&(Gf(f[c]),Qa(f,c),0==f.length&&(delete a.a[b],a.f--)))):a&&(a=Rf(a))&&(b=a.a[b.toString()],a=-1,b&&(a=If(b,c,d,e)),(c=-1<a?b[a]:null)&&Wf(c))}function Wf(a){if("number"!=typeof a&&a&&!a.qa){var b=a.src;if(b&&b[Df])Jf(b.F,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(Tf(c),d):b.addListener&&
b.removeListener&&b.removeListener(d);Mf--;(c=Rf(b))?(Jf(c,a),0==c.f&&(c.src=null,b[Kf]=null)):Gf(a)}}}function Tf(a){return a in Lf?Lf[a]:Lf[a]="on"+a}function Xf(a,b,c,d){var e=!0;if(a=Rf(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.qa&&(f=Yf(f,d),e=e&&!1!==f)}return e}function Yf(a,b){var c=a.listener,d=a.Fa||a.src;a.Ca&&Wf(a);return c.call(d,b)}function Uf(a,b){if(a.qa)return!0;if(!sf){if(!b)a:{b=["window","event"];for(var c=n,d=0;d<b.length;d++)if(c=
c[b[d]],null==c){b=null;break a}b=c}d=b;b=new Bf(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.f;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;!b.h&&0<=e;e--){b.f=d[e];var f=Xf(d[e],a,!0,b);c=c&&f}for(e=0;!b.h&&e<d.length;e++)b.f=d[e],f=Xf(d[e],a,!1,b),c=c&&f}return c}return Yf(a,new Bf(b,this))}function Rf(a){a=a[Kf];return a instanceof Hf?a:null}var Zf="__closure_events_fn_"+
(1E9*Math.random()>>>0);function Pf(a){if(qa(a))return a;a[Zf]||(a[Zf]=function(b){return a.handleEvent(b)});return a[Zf]}function $f(a,b,c){b||(b={});c=c||window;var d=a instanceof Ob?a:Tb("undefined"!=typeof a.href?a.href:String(a));a=b.target||a.target;var e=[];for(f in b)switch(f){case "width":case "height":case "top":case "left":e.push(f+"="+b[f]);break;case "target":case "noopener":case "noreferrer":break;default:e.push(f+"="+(b[f]?1:0))}var f=e.join(",");(u("iPhone")&&!u("iPod")&&!u("iPad")||
u("iPad")||u("iPod"))&&c.navigator&&c.navigator.standalone&&a&&"_self"!=a?(f=c.document.createElement("A"),d instanceof Ob||d instanceof Ob||(d="object"==typeof d&&d.la?d.ja():String(d),Sb.test(d)||(d="about:invalid#zClosurez"),d=Ub(d)),f.href=Rb(d),f.setAttribute("target",a),b.noreferrer&&f.setAttribute("rel","noreferrer"),b=document.createEvent("MouseEvent"),b.initMouseEvent("click",!0,!0,c,1),f.dispatchEvent(b),c={}):b.noreferrer?(c=c.open("",a,f),b=Qb(d),c&&(tb&&-1!=b.indexOf(";")&&(b="'"+b.replace(/'/g,
"%27")+"'"),c.opener=null,b=$b('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+nb(b)+'">',null),c.document.write(Zb(b)),c.document.close())):(c=c.open(Qb(d),a,f))&&b.noopener&&(c.opener=null);return c}function ag(a){window.location.assign(Qb(Tb(a)))}function bg(){try{return!!(window.opener&&window.opener.location&&window.opener.location.assign&&window.opener.location.hostname===window.location.hostname&&window.opener.location.protocol===window.location.protocol)}catch(a){}return!1}
function cg(a){$f(a,{target:window.cordova&&window.cordova.InAppBrowser?"_system":"_blank"},void 0)}function dg(a){a=ra(a)&&1==a.nodeType?a:document.querySelector(String(a));if(null==a)throw Error("Could not find the FirebaseUI widget element on the page.");return a}function eg(){return window.location.href}function fg(){var a=null;return hf(new Xe(function(b){"complete"==n.document.readyState?b():(a=function(){b()},Of(window,"load",a))}),function(b){Vf(window,"load",a);throw b;})}function gg(){for(var a=
32,b=[];0<a;)b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),a--;return b.join("")}function hg(){this.a=new Jd;Kd(this.a,"acUiConfig");Kd(this.a,"autoUpgradeAnonymousUsers");Kd(this.a,"callbacks");Kd(this.a,"credentialHelper",ig);Kd(this.a,"immediateFederatedRedirect",!1);Kd(this.a,"popupMode",!1);Kd(this.a,"privacyPolicyUrl");Kd(this.a,"queryParameterForSignInSuccessUrl","signInSuccessUrl");Kd(this.a,"queryParameterForWidgetMode","mode");
Kd(this.a,"signInFlow");Kd(this.a,"signInOptions");Kd(this.a,"signInSuccessUrl");Kd(this.a,"siteName");Kd(this.a,"tosUrl");Kd(this.a,"widgetUrl")}var ig="accountchooser.com",jg={Wb:ig,Zb:"googleyolo",NONE:"none"},kg={$b:"popup",bc:"redirect"};function lg(a){return a.a.get("acUiConfig")||null}var mg={Yb:"callback",ac:"recoverEmail",cc:"resetPassword",dc:"select",ec:"signIn",fc:"verifyEmail"},og=["anonymous"],pg=["sitekey","tabindex","callback","expired-callback"];function qg(a){var b=a.a.get("widgetUrl")||
eg();return rg(a,b)}function rg(a,b){a=sg(a);for(var c=b.search(Dc),d=0,e,f=[];0<=(e=Cc(b,d,a,c));)f.push(b.substring(d,e)),d=Math.min(b.indexOf("&",e)+1||c,c);f.push(b.substr(d));b=f.join("").replace(Fc,"$1");c="="+encodeURIComponent("select");(a+=c)?(c=b.indexOf("#"),0>c&&(c=b.length),d=b.indexOf("?"),0>d||d>c?(d=c,e=""):e=b.substring(d+1,c),b=[b.substr(0,d),e,b.substr(c)],c=b[1],b[1]=a?c?c+"&"+a:a:c,a=b[0]+(b[1]?"?"+b[1]:"")+b[2]):a=b;return a}function tg(a){var b=!!a.a.get("autoUpgradeAnonymousUsers");
b&&!ug(a)&&Be('Missing "signInFailure" callback: "signInFailure" callback needs to be provided when "autoUpgradeAnonymousUsers" is set to true.',void 0);return b}function vg(a){a=a.a.get("signInOptions")||[];for(var b=[],c=0;c<a.length;c++){var d=a[c];d=ra(d)?d:{provider:d};d.provider&&b.push(d)}return b}function wg(a,b){a=vg(a);for(var c=0;c<a.length;c++)if(a[c].provider===b)return a[c];return null}function xg(a){return La(vg(a),function(b){return b.provider})}function yg(a,b){a=zg(a);for(var c=
0;c<a.length;c++)if(a[c].providerId===b)return a[c];return null}function zg(a){return La(vg(a),function(b){return de[b.provider]||Oa(og,b.provider)?{providerId:b.provider}:{providerId:b.provider,hb:b.providerName||b.provider,pb:b.buttonColor||null,fb:b.iconUrl?Qb(Tb(b.iconUrl)):null,Eb:b.loginHintKey||null}})}function Ag(a){var b=[],c=[];Ha(vg(a),function(e){e.authMethod&&(b.push(e.authMethod),e.clientId&&c.push({uri:e.authMethod,clientId:e.clientId}))});var d=null;"googleyolo"===Bg(a)&&b.length&&
(d={supportedIdTokenProviders:c,supportedAuthMethods:b});return d}function Cg(a,b){var c=null;Ha(vg(a),function(d){d.authMethod===b&&(c=d.provider)});return c}function Dg(a){var b=null;Ha(vg(a),function(d){d.provider==firebase.auth.PhoneAuthProvider.PROVIDER_ID&&ra(d.recaptchaParameters)&&!oa(d.recaptchaParameters)&&(b=jb(d.recaptchaParameters))});if(b){var c=[];Ha(pg,function(d){"undefined"!==typeof b[d]&&(c.push(d),delete b[d])});c.length&&Ge('The following provided "recaptchaParameters" keys are not allowed: '+
c.join(", "))}return b}function Eg(a,b){a=(a=wg(a,b))&&a.scopes;return oa(a)?a:[]}function Fg(a,b){a=(a=wg(a,b))&&a.customParameters;return ra(a)?(a=jb(a),b===firebase.auth.GoogleAuthProvider.PROVIDER_ID&&delete a.login_hint,b===firebase.auth.GithubAuthProvider.PROVIDER_ID&&delete a.login,a):null}function Gg(a){a=wg(a,firebase.auth.PhoneAuthProvider.PROVIDER_ID);var b=null;a&&p(a.loginHint)&&(b=$d(a.loginHint));return a&&a.defaultNationalNumber||b&&b.va||null}function Hg(a){var b=(a=wg(a,firebase.auth.PhoneAuthProvider.PROVIDER_ID))&&
a.defaultCountry||null;b=b&&Vd(b);var c=null;a&&p(a.loginHint)&&(c=$d(a.loginHint));return b&&b[0]||c&&Td(c.a)||null}function Ig(a){a=wg(a,firebase.auth.PhoneAuthProvider.PROVIDER_ID);if(!a)return null;var b=a.whitelistedCountries,c=a.blacklistedCountries;if("undefined"!==typeof b&&(!oa(b)||0==b.length))throw Error("WhitelistedCountries must be a non-empty array.");if("undefined"!==typeof c&&!oa(c))throw Error("BlacklistedCountries must be an array.");if(b&&c)throw Error("Both whitelistedCountries and blacklistedCountries are provided.");
if(!b&&!c)return Ud;a=[];if(b){c={};for(var d=0;d<b.length;d++){var e=Wd(b[d]);for(var f=0;f<e.length;f++)c[e[f].c]=e[f]}for(var g in c)c.hasOwnProperty(g)&&a.push(c[g])}else{g={};for(d=0;d<c.length;d++)for(e=Wd(c[d]),f=0;f<e.length;f++)g[e[f].c]=e[f];for(b=0;b<Ud.length;b++)null!==g&&Ud[b].c in g||a.push(Ud[b])}return a}function sg(a){return Md(a.a,"queryParameterForWidgetMode")}function C(a){var b=a.a.get("tosUrl")||null;a=a.a.get("privacyPolicyUrl")||null;b&&!a&&Ge("Privacy Policy URL is missing, the link will not be displayed.");
if(b&&a){if(qa(b))return b;if(p(b))return function(){cg(b)}}return null}function D(a){var b=a.a.get("tosUrl")||null,c=a.a.get("privacyPolicyUrl")||null;c&&!b&&Ge("Term of Service URL is missing, the link will not be displayed.");if(b&&c){if(qa(c))return c;if(p(c))return function(){cg(c)}}return null}function Jg(a){return(a=wg(a,firebase.auth.EmailAuthProvider.PROVIDER_ID))&&"undefined"!==typeof a.requireDisplayName?!!a.requireDisplayName:!0}function Kg(a){a=wg(a,firebase.auth.EmailAuthProvider.PROVIDER_ID);
return!(!a||a.signInMethod!==firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD)}function Lg(a){a=wg(a,firebase.auth.EmailAuthProvider.PROVIDER_ID);return!(!a||!a.forceSameDevice)}function Mg(a){if(Kg(a)){var b={url:eg(),handleCodeInApp:!0};(a=wg(a,firebase.auth.EmailAuthProvider.PROVIDER_ID))&&"function"===typeof a.emailLinkSignIn&&lb(b,a.emailLinkSignIn());b.url=Vc(eg(),b.url).toString();return b}return null}function Ng(a){var b=!!a.a.get("immediateFederatedRedirect"),c=xg(a);a=Og(a);return b&&
1==c.length&&!Oa(ce,c[0])&&"redirect"==a}function Og(a){a=a.a.get("signInFlow");for(var b in kg)if(kg[b]==a)return kg[b];return"redirect"}function Pg(a){return Qg(a).uiShown||null}function Rg(a){return Qg(a).signInSuccess||null}function Sg(a){return Qg(a).signInSuccessWithAuthResult||null}function ug(a){return Qg(a).signInFailure||null}function Qg(a){return a.a.get("callbacks")||{}}function Bg(a){if("http:"!==(window.location&&window.location.protocol)&&"https:"!==(window.location&&window.location.protocol))return"none";
a=a.a.get("credentialHelper");for(var b in jg)if(jg[b]==a)return jg[b];return ig}function Tg(a){this.a=Uc(a)}var E={Ja:"ui_auid",Xb:"apiKey",Ka:"ui_sd",lb:"mode",Va:"oobCode",PROVIDER_ID:"ui_pid",Na:"ui_sid",mb:"tenantId"};function Ug(a,b){b?a.a.a.set(E.Na,b):Zc(a.a.a,E.Na)}function Vg(a,b){null!==b?a.a.a.set(E.Ka,b?"1":"0"):Zc(a.a.a,E.Ka)}function Wg(a){return a.a.a.get(E.Ja)||null}function Xg(a,b){b?a.a.a.set(E.PROVIDER_ID,b):Zc(a.a.a,E.PROVIDER_ID)}Tg.prototype.toString=function(){return this.a.toString()};
function F(){vf.call(this);this.F=new Hf(this);this.nb=this;this.Ba=null}t(F,vf);F.prototype[Df]=!0;F.prototype.Ua=function(a){this.Ba=a};F.prototype.removeEventListener=function(a,b,c,d){Vf(this,a,b,c,d)};function Yg(a,b){var c,d=a.Ba;if(d)for(c=[];d;d=d.Ba)c.push(d);a=a.nb;d=b.type||b;if(p(b))b=new Af(b,a);else if(b instanceof Af)b.target=b.target||a;else{var e=b;b=new Af(d,a);lb(b,e)}e=!0;if(c)for(var f=c.length-1;!b.h&&0<=f;f--){var g=b.f=c[f];e=Zg(g,d,!0,b)&&e}b.h||(g=b.f=a,e=Zg(g,d,!0,b)&&e,
b.h||(e=Zg(g,d,!1,b)&&e));if(c)for(f=0;!b.h&&f<c.length;f++)g=b.f=c[f],e=Zg(g,d,!1,b)&&e;return e}F.prototype.l=function(){F.o.l.call(this);if(this.F){var a=this.F,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,Gf(d[e]);delete a.a[c];a.f--}}this.Ba=null};function Zg(a,b,c,d){b=a.F.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.qa&&g.capture==c){var h=g.listener,k=g.Fa||g.src;g.Ca&&Jf(a.F,g);e=!1!==h.call(k,d)&&e}}return e&&0!=d.ib}var $g=
{},ah=0;function bh(a,b){if(!a)throw Error("Event target element must be provided!");a=ch(a);if($g[a]&&$g[a].length)for(var c=0;c<$g[a].length;c++)Yg($g[a][c],b)}function dh(a){var b=ch(a.N());$g[b]&&$g[b].length&&(Ra($g[b],function(c){return c==a}),$g[b].length||delete $g[b])}function ch(a){"undefined"===typeof a.a&&(a.a=ah,ah++);return a.a}function eh(a){if(!a)throw Error("Event target element must be provided!");this.a=a;F.call(this)}t(eh,F);eh.prototype.N=function(){return this.a};eh.prototype.register=
function(){var a=ch(this.N());$g[a]?Oa($g[a],this)||$g[a].push(this):$g[a]=[this]};function fh(a){var b=gh;this.i=[];this.O=b;this.K=a||null;this.j=this.a=!1;this.h=void 0;this.F=this.s=this.w=!1;this.v=0;this.f=null;this.C=0}fh.prototype.cancel=function(a){if(this.a)this.h instanceof fh&&this.h.cancel();else{if(this.f){var b=this.f;delete this.f;a?b.cancel(a):(b.C--,0>=b.C&&b.cancel())}this.O?this.O.call(this.K,this):this.F=!0;this.a||(a=new hh(this),ih(this),jh(this,!1,a))}};fh.prototype.I=function(a,
b){this.w=!1;jh(this,a,b)};function jh(a,b,c){a.a=!0;a.h=c;a.j=!b;kh(a)}function ih(a){if(a.a){if(!a.F)throw new lh(a);a.F=!1}}function mh(a,b,c){a.i.push([b,c,void 0]);a.a&&kh(a)}fh.prototype.then=function(a,b,c){var d,e,f=new Xe(function(g,h){d=g;e=h});mh(this,d,function(g){g instanceof hh?f.cancel():e(g)});return f.then(a,b,c)};fh.prototype.$goog_Thenable=!0;function nh(a){return Ma(a.i,function(b){return qa(b[1])})}function kh(a){if(a.v&&a.a&&nh(a)){var b=a.v,c=oh[b];c&&(n.clearTimeout(c.a),delete oh[b]);
a.v=0}a.f&&(a.f.C--,delete a.f);b=a.h;for(var d=c=!1;a.i.length&&!a.w;){var e=a.i.shift(),f=e[0],g=e[1];e=e[2];if(f=a.j?g:f)try{var h=f.call(e||a.K,b);ha(h)&&(a.j=a.j&&(h==b||h instanceof Error),a.h=b=h);if(He(b)||"function"===typeof n.Promise&&b instanceof n.Promise)d=!0,a.w=!0}catch(k){b=k,a.j=!0,nh(a)||(c=!0)}}a.h=b;d&&(h=q(a.I,a,!0),d=q(a.I,a,!1),b instanceof fh?(mh(b,h,d),b.s=!0):b.then(h,d));c&&(b=new ph(b),oh[b.a]=b,a.v=b.a)}function lh(){Ba.call(this)}t(lh,Ba);lh.prototype.message="Deferred has already fired";
lh.prototype.name="AlreadyCalledError";function hh(){Ba.call(this)}t(hh,Ba);hh.prototype.message="Deferred was canceled";hh.prototype.name="CanceledError";function ph(a){this.a=n.setTimeout(q(this.h,this),0);this.f=a}ph.prototype.h=function(){delete oh[this.a];throw this.f;};var oh={};function qh(a){var b={},c=b.document||document,d=Mb(a).toString(),e=document.createElement("SCRIPT"),f={jb:e,kb:void 0},g=new fh(f),h=null,k=null!=b.timeout?b.timeout:5E3;0<k&&(h=window.setTimeout(function(){rh(e,!0);
var l=new sh(th,"Timeout reached for loading script "+d);ih(g);jh(g,!1,l)},k),f.kb=h);e.onload=e.onreadystatechange=function(){e.readyState&&"loaded"!=e.readyState&&"complete"!=e.readyState||(rh(e,b.ic||!1,h),ih(g),jh(g,!0,null))};e.onerror=function(){rh(e,!0,h);var l=new sh(uh,"Error while loading script "+d);ih(g);jh(g,!1,l)};f=b.attributes||{};lb(f,{type:"text/javascript",charset:"UTF-8"});lc(e,f);cc(e,a);vh(c).appendChild(e);return g}function vh(a){var b=(a||document).getElementsByTagName("HEAD");
return b&&0!=b.length?b[0]:a.documentElement}function gh(){if(this&&this.jb){var a=this.jb;a&&"SCRIPT"==a.tagName&&rh(a,!0,this.kb)}}function rh(a,b,c){null!=c&&n.clearTimeout(c);a.onload=ka;a.onerror=ka;a.onreadystatechange=ka;b&&window.setTimeout(function(){oc(a)},0)}var uh=0,th=1;function sh(a,b){var c="Jsloader error (code #"+a+")";b&&(c+=": "+b);Ba.call(this,c);this.code=a}t(sh,Ba);function wh(a){this.a=a||n.googleyolo;this.f=null;this.h=!1}la(wh);var xh=new Gb(Hb,"https://smartlock.google.com/client");
wh.prototype.cancel=function(){this.a&&this.h&&(this.f=this.a.cancelLastOperation().catch(function(){}))};function yh(a,b,c){if(a.a&&b){var d=function(){a.h=!0;var e=Promise.resolve(null);c||(e=a.a.retrieve(b).catch(function(f){if("userCanceled"===f.type||"illegalConcurrentRequest"===f.type)throw f;return null}));return e.then(function(f){return f?f:a.a.hint(b)}).catch(function(f){if("userCanceled"===f.type)a.f=Promise.resolve();else if("illegalConcurrentRequest"===f.type)return a.cancel(),yh(a,b,
c);return null})};return a.f?a.f.then(d):d()}if(b)return d=hf(zh.Sa().load().then(function(){a.a=n.googleyolo;return yh(a,b,c)}),function(){return null}),Promise.resolve(d);if("undefined"!==typeof Promise)return Promise.resolve(null);throw Error("One-Tap sign in not supported in the current browser!");}function zh(){this.a=null}la(zh);zh.prototype.load=function(){var a=this;if(this.a)return this.a;var b=Nb(Jb(xh));return n.googleyolo?B():this.a=fg().then(function(){if(!n.googleyolo)return new Xe(function(c,
d){var e=setTimeout(function(){a.a=null;d(Error("Network error!"))},1E4);n.onGoogleYoloLoad=function(){clearTimeout(e);c()};hf(B(qh(b)),function(f){clearTimeout(e);a.a=null;d(f)})})})};function Ah(a,b){this.a=a;this.f=b||function(c){throw c;}}Ah.prototype.confirm=function(a){return hf(B(this.a.confirm(a)),this.f)};function Bh(a,b,c,d){this.a=a;this.h=b||null;this.j=c||null;this.f=d||null}Bh.prototype.Z=function(){return{email:this.a,displayName:this.h,photoUrl:this.j,providerId:this.f}};function Ch(a){return a.email?
new Bh(a.email,a.displayName,a.photoUrl,a.providerId):null}function Dh(){this.a=("undefined"==typeof document?null:document)||{cookie:""}}m=Dh.prototype;m.set=function(a,b,c,d,e,f){if(/[;=\s]/.test(a))throw Error('Invalid cookie name "'+a+'"');if(/[;\r\n]/.test(b))throw Error('Invalid cookie value "'+b+'"');ha(c)||(c=-1);e=e?";domain="+e:"";d=d?";path="+d:"";f=f?";secure":"";c=0>c?"":0==c?";expires="+(new Date(1970,1,1)).toUTCString():";expires="+(new Date(za()+1E3*c)).toUTCString();this.a.cookie=
a+"="+b+e+d+c+f};m.get=function(a,b){for(var c=a+"=",d=(this.a.cookie||"").split(";"),e=0,f;e<d.length;e++){f=Xa(d[e]);if(0==f.lastIndexOf(c,0))return f.substr(c.length);if(f==a)return""}return b};m.ia=function(){return Eh(this).keys};m.ka=function(){return Eh(this).values};m.clear=function(){for(var a=Eh(this).keys,b=a.length-1;0<=b;b--){var c=a[b];this.get(c);this.set(c,"",0,void 0,void 0)}};function Eh(a){a=(a.a.cookie||"").split(";");for(var b=[],c=[],d,e,f=0;f<a.length;f++)e=Xa(a[f]),d=e.indexOf("="),
-1==d?(b.push(""),c.push(e)):(b.push(e.substring(0,d)),c.push(e.substring(d+1)));return{keys:b,values:c}}var Fh=new Dh;function Gh(){}function Hh(a,b,c,d){this.h="undefined"!==typeof a&&null!==a?a:-1;this.f=b||null;this.a=c||null;this.j=!!d}t(Hh,Gh);Hh.prototype.set=function(a,b){Fh.set(a,b,this.h,this.f,this.a,this.j)};Hh.prototype.get=function(a){return Fh.get(a)||null};Hh.prototype.pa=function(a){var b=this.f,c=this.a;Fh.get(a);Fh.set(a,"",0,b,c)};function Ih(a,b){this.f=a;this.a=b||null}Ih.prototype.Z=
function(){return{email:this.f,credential:this.a&&this.a.toJSON()}};function Jh(a){if(a&&a.email){var b=a.credential&&firebase.auth.AuthCredential.fromJSON(a.credential);return new Ih(a.email,b)}return null}function Kh(a){this.a=a||null}Kh.prototype.Z=function(){return{tenantId:this.a}};function Lh(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e}return b}function Mh(a){return La(a,function(b){b=b.toString(16);return 1<b.length?b:"0"+b}).join("")}
function Nh(a){this.v=a;this.f=this.v.length/4;this.j=this.f+6;this.h=[[],[],[],[]];this.i=[[],[],[],[]];this.a=Array(Oh*(this.j+1));for(a=0;a<this.f;a++)this.a[a]=[this.v[4*a],this.v[4*a+1],this.v[4*a+2],this.v[4*a+3]];var b=Array(4);for(a=this.f;a<Oh*(this.j+1);a++){b[0]=this.a[a-1][0];b[1]=this.a[a-1][1];b[2]=this.a[a-1][2];b[3]=this.a[a-1][3];if(0==a%this.f){var c=b,d=c[0];c[0]=c[1];c[1]=c[2];c[2]=c[3];c[3]=d;Ph(b);b[0]^=Qh[a/this.f][0];b[1]^=Qh[a/this.f][1];b[2]^=Qh[a/this.f][2];b[3]^=Qh[a/this.f][3]}else 6<
this.f&&4==a%this.f&&Ph(b);this.a[a]=Array(4);this.a[a][0]=this.a[a-this.f][0]^b[0];this.a[a][1]=this.a[a-this.f][1]^b[1];this.a[a][2]=this.a[a-this.f][2]^b[2];this.a[a][3]=this.a[a-this.f][3]^b[3]}}Nh.prototype.w=16;var Oh=Nh.prototype.w/4;function Rh(a,b){for(var c,d=0;d<Oh;d++)for(var e=0;4>e;e++)c=4*e+d,c=b[c],a.h[d][e]=c}function Sh(a){for(var b=[],c=0;c<Oh;c++)for(var d=0;4>d;d++)b[4*d+c]=a.h[c][d];return b}function Th(a,b){for(var c=0;4>c;c++)for(var d=0;4>d;d++)a.h[c][d]^=a.a[4*b+d][c]}function Uh(a,
b){for(var c=0;4>c;c++)for(var d=0;4>d;d++)a.h[c][d]=b[a.h[c][d]]}function Vh(a){for(var b=1;4>b;b++)for(var c=0;4>c;c++)a.i[b][c]=a.h[b][c];for(b=1;4>b;b++)for(c=0;4>c;c++)a.h[b][c]=a.i[b][(c+b)%Oh]}function Wh(a){for(var b=1;4>b;b++)for(var c=0;4>c;c++)a.i[b][(c+b)%Oh]=a.h[b][c];for(b=1;4>b;b++)for(c=0;4>c;c++)a.h[b][c]=a.i[b][c]}function Ph(a){a[0]=Xh[a[0]];a[1]=Xh[a[1]];a[2]=Xh[a[2]];a[3]=Xh[a[3]]}var Xh=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,
173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,
92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],Yh=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,
8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,
120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],Qh=[[0,0,0,0],[1,0,0,0],[2,0,0,0],[4,0,0,0],[8,0,0,0],[16,0,0,0],[32,0,0,0],[64,0,0,0],[128,0,0,0],[27,0,0,0],[54,0,0,0]],Zh=[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,
94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,27,25,31,29,19,17,23,21,11,9,15,13,3,1,7,5,59,57,63,61,51,49,55,53,43,41,47,45,35,33,39,37,91,89,95,93,83,81,87,85,75,73,79,77,67,65,71,69,123,121,127,125,115,113,119,117,107,105,111,
109,99,97,103,101,155,153,159,157,147,145,151,149,139,137,143,141,131,129,135,133,187,185,191,189,179,177,183,181,171,169,175,173,163,161,167,165,219,217,223,221,211,209,215,213,203,201,207,205,195,193,199,197,251,249,255,253,243,241,247,245,235,233,239,237,227,225,231,229],$h=[0,3,6,5,12,15,10,9,24,27,30,29,20,23,18,17,48,51,54,53,60,63,58,57,40,43,46,45,36,39,34,33,96,99,102,101,108,111,106,105,120,123,126,125,116,119,114,113,80,83,86,85,92,95,90,89,72,75,78,77,68,71,66,65,192,195,198,197,204,207,
202,201,216,219,222,221,212,215,210,209,240,243,246,245,252,255,250,249,232,235,238,237,228,231,226,225,160,163,166,165,172,175,170,169,184,187,190,189,180,183,178,177,144,147,150,149,156,159,154,153,136,139,142,141,132,135,130,129,155,152,157,158,151,148,145,146,131,128,133,134,143,140,137,138,171,168,173,174,167,164,161,162,179,176,181,182,191,188,185,186,251,248,253,254,247,244,241,242,227,224,229,230,239,236,233,234,203,200,205,206,199,196,193,194,211,208,213,214,223,220,217,218,91,88,93,94,87,
84,81,82,67,64,69,70,79,76,73,74,107,104,109,110,103,100,97,98,115,112,117,118,127,124,121,122,59,56,61,62,55,52,49,50,35,32,37,38,47,44,41,42,11,8,13,14,7,4,1,2,19,16,21,22,31,28,25,26],ai=[0,9,18,27,36,45,54,63,72,65,90,83,108,101,126,119,144,153,130,139,180,189,166,175,216,209,202,195,252,245,238,231,59,50,41,32,31,22,13,4,115,122,97,104,87,94,69,76,171,162,185,176,143,134,157,148,227,234,241,248,199,206,213,220,118,127,100,109,82,91,64,73,62,55,44,37,26,19,8,1,230,239,244,253,194,203,208,217,
174,167,188,181,138,131,152,145,77,68,95,86,105,96,123,114,5,12,23,30,33,40,51,58,221,212,207,198,249,240,235,226,149,156,135,142,177,184,163,170,236,229,254,247,200,193,218,211,164,173,182,191,128,137,146,155,124,117,110,103,88,81,74,67,52,61,38,47,16,25,2,11,215,222,197,204,243,250,225,232,159,150,141,132,187,178,169,160,71,78,85,92,99,106,113,120,15,6,29,20,43,34,57,48,154,147,136,129,190,183,172,165,210,219,192,201,246,255,228,237,10,3,24,17,46,39,60,53,66,75,80,89,102,111,116,125,161,168,179,
186,133,140,151,158,233,224,251,242,205,196,223,214,49,56,35,42,21,28,7,14,121,112,107,98,93,84,79,70],bi=[0,11,22,29,44,39,58,49,88,83,78,69,116,127,98,105,176,187,166,173,156,151,138,129,232,227,254,245,196,207,210,217,123,112,109,102,87,92,65,74,35,40,53,62,15,4,25,18,203,192,221,214,231,236,241,250,147,152,133,142,191,180,169,162,246,253,224,235,218,209,204,199,174,165,184,179,130,137,148,159,70,77,80,91,106,97,124,119,30,21,8,3,50,57,36,47,141,134,155,144,161,170,183,188,213,222,195,200,249,
242,239,228,61,54,43,32,17,26,7,12,101,110,115,120,73,66,95,84,247,252,225,234,219,208,205,198,175,164,185,178,131,136,149,158,71,76,81,90,107,96,125,118,31,20,9,2,51,56,37,46,140,135,154,145,160,171,182,189,212,223,194,201,248,243,238,229,60,55,42,33,16,27,6,13,100,111,114,121,72,67,94,85,1,10,23,28,45,38,59,48,89,82,79,68,117,126,99,104,177,186,167,172,157,150,139,128,233,226,255,244,197,206,211,216,122,113,108,103,86,93,64,75,34,41,52,63,14,5,24,19,202,193,220,215,230,237,240,251,146,153,132,143,
190,181,168,163],ci=[0,13,26,23,52,57,46,35,104,101,114,127,92,81,70,75,208,221,202,199,228,233,254,243,184,181,162,175,140,129,150,155,187,182,161,172,143,130,149,152,211,222,201,196,231,234,253,240,107,102,113,124,95,82,69,72,3,14,25,20,55,58,45,32,109,96,119,122,89,84,67,78,5,8,31,18,49,60,43,38,189,176,167,170,137,132,147,158,213,216,207,194,225,236,251,246,214,219,204,193,226,239,248,245,190,179,164,169,138,135,144,157,6,11,28,17,50,63,40,37,110,99,116,121,90,87,64,77,218,215,192,205,238,227,
244,249,178,191,168,165,134,139,156,145,10,7,16,29,62,51,36,41,98,111,120,117,86,91,76,65,97,108,123,118,85,88,79,66,9,4,19,30,61,48,39,42,177,188,171,166,133,136,159,146,217,212,195,206,237,224,247,250,183,186,173,160,131,142,153,148,223,210,197,200,235,230,241,252,103,106,125,112,83,94,73,68,15,2,21,24,59,54,33,44,12,1,22,27,56,53,34,47,100,105,126,115,80,93,74,71,220,209,198,203,232,229,242,255,180,185,174,163,128,141,154,151],di=[0,14,28,18,56,54,36,42,112,126,108,98,72,70,84,90,224,238,252,242,
216,214,196,202,144,158,140,130,168,166,180,186,219,213,199,201,227,237,255,241,171,165,183,185,147,157,143,129,59,53,39,41,3,13,31,17,75,69,87,89,115,125,111,97,173,163,177,191,149,155,137,135,221,211,193,207,229,235,249,247,77,67,81,95,117,123,105,103,61,51,33,47,5,11,25,23,118,120,106,100,78,64,82,92,6,8,26,20,62,48,34,44,150,152,138,132,174,160,178,188,230,232,250,244,222,208,194,204,65,79,93,83,121,119,101,107,49,63,45,35,9,7,21,27,161,175,189,179,153,151,133,139,209,223,205,195,233,231,245,
251,154,148,134,136,162,172,190,176,234,228,246,248,210,220,206,192,122,116,102,104,66,76,94,80,10,4,22,24,50,60,46,32,236,226,240,254,212,218,200,198,156,146,128,142,164,170,184,182,12,2,16,30,52,58,40,38,124,114,96,110,68,74,88,86,55,57,43,37,15,1,19,29,71,73,91,85,127,113,99,109,215,217,203,197,239,225,243,253,167,169,187,181,159,145,131,141];function ei(a,b){a=new Nh(fi(a));b=Lh(b);for(var c=Va(b,0,16),d="",e;c.length;){e=16-c.length;for(var f=0;f<e;f++)c.push(0);e=a;Rh(e,c);Th(e,0);for(c=1;c<
e.j;++c){Uh(e,Xh);Vh(e);f=e.h;for(var g=e.i[0],h=0;4>h;h++)g[0]=f[0][h],g[1]=f[1][h],g[2]=f[2][h],g[3]=f[3][h],f[0][h]=Zh[g[0]]^$h[g[1]]^g[2]^g[3],f[1][h]=g[0]^Zh[g[1]]^$h[g[2]]^g[3],f[2][h]=g[0]^g[1]^Zh[g[2]]^$h[g[3]],f[3][h]=$h[g[0]]^g[1]^g[2]^Zh[g[3]];Th(e,c)}Uh(e,Xh);Vh(e);Th(e,e.j);d+=Mh(Sh(e));c=Va(b,0,16)}return d}function gi(a,b){a=new Nh(fi(a));for(var c=[],d=0;d<b.length;d+=2)c.push(parseInt(b.substring(d,d+2),16));var e=Va(c,0,16);for(b="";e.length;){d=a;Rh(d,e);Th(d,d.j);for(e=1;e<d.j;++e){Wh(d);
Uh(d,Yh);Th(d,d.j-e);for(var f=d.h,g=d.i[0],h=0;4>h;h++)g[0]=f[0][h],g[1]=f[1][h],g[2]=f[2][h],g[3]=f[3][h],f[0][h]=di[g[0]]^bi[g[1]]^ci[g[2]]^ai[g[3]],f[1][h]=ai[g[0]]^di[g[1]]^bi[g[2]]^ci[g[3]],f[2][h]=ci[g[0]]^ai[g[1]]^di[g[2]]^bi[g[3]],f[3][h]=bi[g[0]]^ci[g[1]]^ai[g[2]]^di[g[3]]}Wh(d);Uh(d,Yh);Th(d,0);d=Sh(d);if(8192>=d.length)d=String.fromCharCode.apply(null,d);else{e="";for(f=0;f<d.length;f+=8192)e+=String.fromCharCode.apply(null,Wa(d,f,f+8192));d=e}b+=d;e=Va(c,0,16)}return b.replace(/(\x00)+$/,
"")}function fi(a){a=Lh(a.substring(0,32));for(var b=32-a.length,c=0;c<b;c++)a.push(0);return a}function hi(a){var b=[];ii(new ji,a,b);return b.join("")}function ji(){}function ii(a,b,c){if(null==b)c.push("null");else{if("object"==typeof b){if(oa(b)){var d=b;b=d.length;c.push("[");for(var e="",f=0;f<b;f++)c.push(e),ii(a,d[f],c),e=",";c.push("]");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push("{");e="";for(d in b)Object.prototype.hasOwnProperty.call(b,
d)&&(f=b[d],"function"!=typeof f&&(c.push(e),ki(d,c),c.push(":"),ii(a,f,c),e=","));c.push("}");return}}switch(typeof b){case "string":ki(b,c);break;case "number":c.push(isFinite(b)&&!isNaN(b)?String(b):"null");break;case "boolean":c.push(String(b));break;case "function":c.push("null");break;default:throw Error("Unknown type: "+typeof b);}}}var li={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},mi=/\uffff/.test("\uffff")?/[\\"\x00-\x1f\x7f-\uffff]/g:
/[\\"\x00-\x1f\x7f-\xff]/g;function ki(a,b){b.push('"',a.replace(mi,function(c){var d=li[c];d||(d="\\u"+(c.charCodeAt(0)|65536).toString(16).substr(1),li[c]=d);return d}),'"')}function ni(a){this.a=a}ni.prototype.set=function(a,b){ha(b)?this.a.set(a,hi(b)):this.a.pa(a)};ni.prototype.get=function(a){try{var b=this.a.get(a)}catch(c){return}if(null!==b)try{return JSON.parse(b)}catch(c$2){throw"Storage: Invalid value was encountered";}};function oi(){}t(oi,Gh);oi.prototype.clear=function(){var a=wc(this.ga(!0)),
b=this;Ha(a,function(c){b.pa(c)})};function pi(a){this.a=a}t(pi,oi);function qi(a){if(!a.a)return!1;try{return a.a.setItem("__sak","1"),a.a.removeItem("__sak"),!0}catch(b){return!1}}m=pi.prototype;m.set=function(a,b){try{this.a.setItem(a,b)}catch(c){if(0==this.a.length)throw"Storage mechanism: Storage disabled";throw"Storage mechanism: Quota exceeded";}};m.get=function(a){a=this.a.getItem(a);if(!p(a)&&null!==a)throw"Storage mechanism: Invalid value was encountered";return a};m.pa=function(a){this.a.removeItem(a)};
m.ga=function(a){var b=0,c=this.a,d=new tc;d.next=function(){if(b>=c.length)throw sc;var e=c.key(b++);if(a)return e;e=c.getItem(e);if(!p(e))throw"Storage mechanism: Invalid value was encountered";return e};return d};m.clear=function(){this.a.clear()};m.key=function(a){return this.a.key(a)};function ri(){var a=null;try{a=window.localStorage||null}catch(b){}this.a=a}t(ri,pi);function si(){var a=null;try{a=window.sessionStorage||null}catch(b){}this.a=a}t(si,pi);function ti(a,b){this.f=a;this.a=b+"::"}
t(ti,oi);ti.prototype.set=function(a,b){this.f.set(this.a+a,b)};ti.prototype.get=function(a){return this.f.get(this.a+a)};ti.prototype.pa=function(a){this.f.pa(this.a+a)};ti.prototype.ga=function(a){var b=this.f.ga(!0),c=this,d=new tc;d.next=function(){for(var e=b.next();e.substr(0,c.a.length)!=c.a;)e=b.next();return a?e.substr(c.a.length):c.f.get(e)};return d};var ui,vi=new ri;ui=qi(vi)?new ti(vi,"firebaseui"):null;var wi=new ni(ui),xi,yi=new si;xi=qi(yi)?new ti(yi,"firebaseui"):null;var zi=new ni(xi),
Ai={name:"pendingEmailCredential",storage:zi},Bi={name:"redirectStatus",storage:zi},Ci={name:"redirectUrl",storage:zi},Di={name:"rememberAccount",storage:zi},Ei={name:"rememberedAccounts",storage:wi},Fi={name:"emailForSignIn",storage:new ni(new Hh(3600,"/"))},Gi={name:"pendingEncryptedCredential",storage:new ni(new Hh(3600,"/"))};function Hi(a,b){return a.storage.get(b?a.name+":"+b:a.name)}function G(a,b){a.storage.a.pa(b?a.name+":"+b:a.name)}function Ii(a,b,c){a.storage.set(c?a.name+":"+c:a.name,
b)}function Ji(a){return Hi(Ci,a)||null}function Ki(a,b){Ii(Ci,a,b)}function Li(a,b){Ii(Di,a,b)}function Mi(a){a=Hi(Ei,a)||[];a=La(a,function(b){return Ch(b)});return Ja(a,na)}function Ni(a,b){var c=Mi(b),d=Na(c,function(e){return e.a==a.a&&(e.f||null)==(a.f||null)});-1<d&&Qa(c,d);c.unshift(a);Ii(Ei,La(c,function(e){return e.Z()}),b)}function Oi(a){a=Hi(Ai,a)||null;return Jh(a)}function Pi(a){G(Ai,a)}function Qi(a,b){Ii(Ai,a.Z(),b)}function Ri(a){return(a=Hi(Bi,a)||null)&&"undefined"!==typeof a.tenantId?
new Kh(a.tenantId):null}function Si(a,b){Ii(Bi,a.Z(),b)}function Ti(a,b){b=Hi(Fi,b);var c=null;if(b)try{var d=gi(a,b),e=JSON.parse(d);c=e&&e.email||null}catch(f){}return c}function Ui(a,b){b=Hi(Gi,b);var c=null;if(b)try{var d=gi(a,b);c=JSON.parse(d)}catch(e){}return Jh(c||null)}function Vi(a,b,c){Ii(Gi,ei(a,JSON.stringify(b.Z())),c)}var Wi=null;function Xi(a){return!(!a||-32E3!=a.code||"Service unavailable"!=a.message)}function Yi(a,b,c,d){Wi||(a={callbacks:{empty:a,select:function(e,f){e&&e.account&&
b?b(Ch(e.account)):c&&c(!Xi(f))},store:a,update:a},language:"en",providers:void 0,ui:d},"undefined"!=typeof accountchooser&&accountchooser.Api&&accountchooser.Api.init?Wi=accountchooser.Api.init(a):(Wi=new Zi(a),$i()))}function aj(a,b,c){function d(){var e=Vc(window.location.href,c).toString();Wi.select(La(b||[],function(f){return f.Z()}),{clientCallbackUrl:e})}b&&b.length?d():Wi.checkEmpty(function(e,f){e||f?a(!Xi(f)):d()})}function Zi(a){this.a=a;this.a.callbacks=this.a.callbacks||{}}function $i(){var a=
Wi;qa(a.a.callbacks.empty)&&a.a.callbacks.empty()}var bj={code:-32E3,message:"Service unavailable",data:"Service is unavailable."};m=Zi.prototype;m.store=function(){qa(this.a.callbacks.store)&&this.a.callbacks.store(void 0,bj)};m.select=function(){qa(this.a.callbacks.select)&&this.a.callbacks.select(void 0,bj)};m.update=function(){qa(this.a.callbacks.update)&&this.a.callbacks.update(void 0,bj)};m.checkDisabled=function(a){a(!0)};m.checkEmpty=function(a){a(void 0,bj)};m.checkAccountExist=function(a,
b){b(void 0,bj)};m.checkShouldUpdate=function(a,b){b(void 0,bj)};var cj,dj,ej,fj,H={};function I(a,b,c,d){H[a].apply(null,Array.prototype.slice.call(arguments,1))}var gj=/MSIE ([\d.]+).*Windows NT ([\d.]+)/,hj=/Firefox\/([\d.]+)/,ij=/Opera[ \/]([\d.]+)(.*Version\/([\d.]+))?/,jj=/Chrome\/([\d.]+)/,kj=/((Windows NT ([\d.]+))|(Mac OS X ([\d_]+))).*Version\/([\d.]+).*Safari/,lj=/Mac OS X;.*(?!(Version)).*Safari/,mj=/Android ([\d.]+).*Safari/,nj=/OS ([\d_]+) like Mac OS X.*Mobile.*Safari/,oj=/Konqueror\/([\d.]+)/,
pj=/MSIE ([\d.]+).*Windows Phone OS ([\d.]+)/;function qj(a,b){a=a.split(b||".");this.a=[];for(b=0;b<a.length;b++)this.a.push(parseInt(a[b],10))}function rj(a,b){b instanceof qj||(b=new qj(String(b)));for(var c=Math.max(a.a.length,b.a.length),d=0;d<c;d++){var e=a.a[d],f=b.a[d];if(void 0!==e&&void 0!==f&&e!==f)return e-f;if(void 0===e)return-1;if(void 0===f)return 1}return 0}function sj(a,b){return 0<=rj(a,b)}function tj(){var a=window.navigator&&window.navigator.userAgent;if(a){var b;if(b=a.match(ij)){var c=
new qj(b[3]||b[1]);return 0<=a.indexOf("Opera Mini")?!1:0<=a.indexOf("Opera Mobi")?0<=a.indexOf("Android")&&sj(c,"10.1"):sj(c,"8.0")}if(b=a.match(hj))return sj(new qj(b[1]),"2.0");if(b=a.match(jj))return sj(new qj(b[1]),"6.0");if(b=a.match(kj))return c=new qj(b[6]),a=b[3]&&new qj(b[3]),b=b[5]&&new qj(b[5],"_"),(!(!a||!sj(a,"6.0"))||!(!b||!sj(b,"10.5.6")))&&sj(c,"3.0");if(b=a.match(mj))return sj(new qj(b[1]),"3.0");if(b=a.match(nj))return sj(new qj(b[1],"_"),"4.0");if(b=a.match(oj))return sj(new qj(b[1]),
"4.7");if(b=a.match(pj))return c=new qj(b[1]),a=new qj(b[2]),sj(c,"7.0")&&sj(a,"7.0");if(b=a.match(gj))return c=new qj(b[1]),a=new qj(b[2]),sj(c,"7.0")&&sj(a,"6.0");if(a.match(lj))return!1}return!0}function uj(a){if(a.classList)return a.classList;a=a.className;return p(a)&&a.match(/\S+/g)||[]}function vj(a,b){return a.classList?a.classList.contains(b):Oa(uj(a),b)}function wj(a,b){a.classList?a.classList.add(b):vj(a,b)||(a.className+=0<a.className.length?" "+b:b)}function xj(a,b){a.classList?a.classList.remove(b):
vj(a,b)&&(a.className=Ja(uj(a),function(c){return c!=b}).join(" "))}function J(a){var b=a.type;switch(p(b)&&b.toLowerCase()){case "checkbox":case "radio":return a.checked?a.value:null;case "select-one":return b=a.selectedIndex,0<=b?a.options[b].value:null;case "select-multiple":b=[];for(var c,d=0;c=a.options[d];d++)c.selected&&b.push(c.value);return b.length?b:null;default:return null!=a.value?a.value:null}}function yj(a,b){var c=a.type;switch(p(c)&&c.toLowerCase()){case "checkbox":case "radio":a.checked=
b;break;case "select-one":a.selectedIndex=-1;if(p(b))for(var d=0;c=a.options[d];d++)if(c.value==b){c.selected=!0;break}break;case "select-multiple":p(b)&&(b=[b]);for(d=0;c=a.options[d];d++)if(c.selected=!1,b)for(var e,f=0;e=b[f];f++)c.value==e&&(c.selected=!0);break;default:a.value=null!=b?b:""}}function zj(a){if(a.altKey&&!a.ctrlKey||a.metaKey||112<=a.keyCode&&123>=a.keyCode)return!1;if(Aj(a.keyCode))return!0;switch(a.keyCode){case 18:case 20:case 93:case 17:case 40:case 35:case 27:case 36:case 45:case 37:case 224:case 91:case 144:case 12:case 34:case 33:case 19:case 255:case 44:case 39:case 145:case 16:case 38:case 252:case 224:case 92:return!1;
case 0:return!ub;default:return 166>a.keyCode||183<a.keyCode}}function Bj(a,b,c,d,e,f){if(vb&&!Db("525"))return!0;if(xb&&e)return Aj(a);if(e&&!d)return!1;if(!ub){"number"==typeof b&&(b=Cj(b));var g=17==b||18==b||xb&&91==b;if((!c||xb)&&g||xb&&16==b&&(d||f))return!1}if((vb||sb)&&d&&c)switch(a){case 220:case 219:case 221:case 192:case 186:case 189:case 187:case 188:case 190:case 191:case 192:case 222:return!1}if(w&&d&&b==a)return!1;switch(a){case 13:return ub?f||e?!1:!(c&&d):!0;case 27:return!(vb||sb||
ub)}return ub&&(d||e||f)?!1:Aj(a)}function Aj(a){if(48<=a&&57>=a||96<=a&&106>=a||65<=a&&90>=a||(vb||sb)&&0==a)return!0;switch(a){case 32:case 43:case 63:case 64:case 107:case 109:case 110:case 111:case 186:case 59:case 189:case 187:case 61:case 188:case 190:case 191:case 192:case 222:case 219:case 220:case 221:case 163:return!0;case 173:return ub;default:return!1}}function Cj(a){if(ub)a=Dj(a);else if(xb&&vb)switch(a){case 93:a=91}return a}function Dj(a){switch(a){case 61:return 187;case 59:return 186;
case 173:return 189;case 224:return 91;case 0:return 224;default:return a}}function Ej(a){F.call(this);this.a=a;Nf(a,"keydown",this.f,!1,this);Nf(a,"click",this.h,!1,this)}t(Ej,F);Ej.prototype.f=function(a){(13==a.keyCode||vb&&3==a.keyCode)&&Fj(this,a)};Ej.prototype.h=function(a){Fj(this,a)};function Fj(a,b){var c=new Gj(b);if(Yg(a,c)){c=new Hj(b);try{Yg(a,c)}finally{b.stopPropagation()}}}Ej.prototype.l=function(){Ej.o.l.call(this);Vf(this.a,"keydown",this.f,!1,this);Vf(this.a,"click",this.h,!1,this);
delete this.a};function Hj(a){Bf.call(this,a.a);this.type="action"}t(Hj,Bf);function Gj(a){Bf.call(this,a.a);this.type="beforeaction"}t(Gj,Bf);function Ij(a){F.call(this);this.a=a;a=w?"focusout":"blur";this.f=Nf(this.a,w?"focusin":"focus",this,!w);this.h=Nf(this.a,a,this,!w)}t(Ij,F);Ij.prototype.handleEvent=function(a){var b=new Bf(a.a);b.type="focusin"==a.type||"focus"==a.type?"focusin":"focusout";Yg(this,b)};Ij.prototype.l=function(){Ij.o.l.call(this);Wf(this.f);Wf(this.h);delete this.a};function Jj(a,
b){F.call(this);this.f=a||1;this.a=b||n;this.h=q(this.Sb,this);this.j=za()}t(Jj,F);m=Jj.prototype;m.Ea=!1;m.Y=null;m.Sb=function(){if(this.Ea){var a=za()-this.j;0<a&&a<.8*this.f?this.Y=this.a.setTimeout(this.h,this.f-a):(this.Y&&(this.a.clearTimeout(this.Y),this.Y=null),Yg(this,"tick"),this.Ea&&(Kj(this),this.start()))}};m.start=function(){this.Ea=!0;this.Y||(this.Y=this.a.setTimeout(this.h,this.f),this.j=za())};function Kj(a){a.Ea=!1;a.Y&&(a.a.clearTimeout(a.Y),a.Y=null)}m.l=function(){Jj.o.l.call(this);
Kj(this);delete this.a};function Lj(a,b){if(qa(a))b&&(a=q(a,b));else if(a&&"function"==typeof a.handleEvent)a=q(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<Number(0)?-1:n.setTimeout(a,0)}function Mj(a){vf.call(this);this.f=a;this.a={}}t(Mj,vf);var Nj=[];function Oj(a,b,c,d){oa(c)||(c&&(Nj[0]=c.toString()),c=Nj);for(var e=0;e<c.length;e++){var f=Nf(b,c[e],d||a.handleEvent,!1,a.f||a);if(!f)break;a.a[f.key]=f}}function Pj(a){ib(a.a,function(b,c){this.a.hasOwnProperty(c)&&
Wf(b)},a);a.a={}}Mj.prototype.l=function(){Mj.o.l.call(this);Pj(this)};Mj.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented");};function Qj(a){F.call(this);this.a=null;this.f=a;a=w||sb||vb&&!Db("531")&&"TEXTAREA"==a.tagName;this.h=new Mj(this);Oj(this.h,this.f,a?["keydown","paste","cut","drop","input"]:"input",this)}t(Qj,F);Qj.prototype.handleEvent=function(a){if("input"==a.type)w&&Db(10)&&0==a.keyCode&&0==a.j||(Rj(this),Yg(this,Sj(a)));else if("keydown"!=a.type||
zj(a)){var b="keydown"==a.type?this.f.value:null;w&&229==a.keyCode&&(b=null);var c=Sj(a);Rj(this);this.a=Lj(function(){this.a=null;this.f.value!=b&&Yg(this,c)},this)}};function Rj(a){null!=a.a&&(n.clearTimeout(a.a),a.a=null)}function Sj(a){a=new Bf(a.a);a.type="input";return a}Qj.prototype.l=function(){Qj.o.l.call(this);this.h.m();Rj(this);delete this.f};function Tj(a,b){F.call(this);a&&(this.Ia&&Uj(this),this.oa=a,this.Ha=Nf(this.oa,"keypress",this,b),this.Ta=Nf(this.oa,"keydown",this.yb,b,this),
this.Ia=Nf(this.oa,"keyup",this.Bb,b,this))}t(Tj,F);m=Tj.prototype;m.oa=null;m.Ha=null;m.Ta=null;m.Ia=null;m.S=-1;m.W=-1;m.Pa=!1;var Vj={3:13,12:144,63232:38,63233:40,63234:37,63235:39,63236:112,63237:113,63238:114,63239:115,63240:116,63241:117,63242:118,63243:119,63244:120,63245:121,63246:122,63247:123,63248:44,63272:46,63273:36,63275:35,63276:33,63277:34,63289:144,63302:45},Wj={Up:38,Down:40,Left:37,Right:39,Enter:13,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,
F12:123,"U+007F":46,Home:36,End:35,PageUp:33,PageDown:34,Insert:45},Xj=!vb||Db("525"),Yj=xb&&ub;m=Tj.prototype;m.yb=function(a){if(vb||sb)if(17==this.S&&!a.ctrlKey||18==this.S&&!a.altKey||xb&&91==this.S&&!a.metaKey)this.W=this.S=-1;-1==this.S&&(a.ctrlKey&&17!=a.keyCode?this.S=17:a.altKey&&18!=a.keyCode?this.S=18:a.metaKey&&91!=a.keyCode&&(this.S=91));Xj&&!Bj(a.keyCode,this.S,a.shiftKey,a.ctrlKey,a.altKey,a.metaKey)?this.handleEvent(a):(this.W=Cj(a.keyCode),Yj&&(this.Pa=a.altKey))};m.Bb=function(a){this.W=
this.S=-1;this.Pa=a.altKey};m.handleEvent=function(a){var b=a.a,c=b.altKey;if(w&&"keypress"==a.type){var d=this.W;var e=13!=d&&27!=d?b.keyCode:0}else(vb||sb)&&"keypress"==a.type?(d=this.W,e=0<=b.charCode&&63232>b.charCode&&Aj(d)?b.charCode:0):rb&&!vb?(d=this.W,e=Aj(d)?b.keyCode:0):("keypress"==a.type?(Yj&&(c=this.Pa),b.keyCode==b.charCode?32>b.keyCode?(d=b.keyCode,e=0):(d=this.W,e=b.charCode):(d=b.keyCode||this.W,e=b.charCode||0)):(d=b.keyCode||this.W,e=b.charCode||0),xb&&63==e&&224==d&&(d=191));
var f=d=Cj(d);d?63232<=d&&d in Vj?f=Vj[d]:25==d&&a.shiftKey&&(f=9):b.keyIdentifier&&b.keyIdentifier in Wj&&(f=Wj[b.keyIdentifier]);ub&&Xj&&"keypress"==a.type&&!Bj(f,this.S,a.shiftKey,a.ctrlKey,c,a.metaKey)||(a=f==this.S,this.S=f,b=new Zj(f,e,a,b),b.altKey=c,Yg(this,b))};m.N=function(){return this.oa};function Uj(a){a.Ha&&(Wf(a.Ha),Wf(a.Ta),Wf(a.Ia),a.Ha=null,a.Ta=null,a.Ia=null);a.oa=null;a.S=-1;a.W=-1}m.l=function(){Tj.o.l.call(this);Uj(this)};function Zj(a,b,c,d){Bf.call(this,d);this.type="key";
this.keyCode=a;this.j=b;this.repeat=c}t(Zj,Bf);function ak(a,b,c,d){this.top=a;this.right=b;this.bottom=c;this.left=d}ak.prototype.toString=function(){return"("+this.top+"t, "+this.right+"r, "+this.bottom+"b, "+this.left+"l)"};ak.prototype.ceil=function(){this.top=Math.ceil(this.top);this.right=Math.ceil(this.right);this.bottom=Math.ceil(this.bottom);this.left=Math.ceil(this.left);return this};ak.prototype.floor=function(){this.top=Math.floor(this.top);this.right=Math.floor(this.right);this.bottom=
Math.floor(this.bottom);this.left=Math.floor(this.left);return this};ak.prototype.round=function(){this.top=Math.round(this.top);this.right=Math.round(this.right);this.bottom=Math.round(this.bottom);this.left=Math.round(this.left);return this};function bk(a,b){var c=hc(a);return c.defaultView&&c.defaultView.getComputedStyle&&(a=c.defaultView.getComputedStyle(a,null))?a[b]||a.getPropertyValue(b)||"":""}function ck(a){try{var b=a.getBoundingClientRect()}catch(c){return{left:0,top:0,right:0,bottom:0}}w&&
a.ownerDocument.body&&(a=a.ownerDocument,b.left-=a.documentElement.clientLeft+a.body.clientLeft,b.top-=a.documentElement.clientTop+a.body.clientTop);return b}function dk(a,b){b=b||nc(document);var c=b||nc(document);var d=ek(a),e=ek(c);if(!w||9<=Number(Eb)){g=bk(c,"borderLeftWidth");var f=bk(c,"borderRightWidth");h=bk(c,"borderTopWidth");k=bk(c,"borderBottomWidth");f=new ak(parseFloat(h),parseFloat(f),parseFloat(k),parseFloat(g))}else{var g=fk(c,"borderLeft");f=fk(c,"borderRight");var h=fk(c,"borderTop"),
k=fk(c,"borderBottom");f=new ak(h,f,k,g)}c==nc(document)?(g=d.a-c.scrollLeft,d=d.f-c.scrollTop,!w||10<=Number(Eb)||(g+=f.left,d+=f.top)):(g=d.a-e.a-f.left,d=d.f-e.f-f.top);e=a.offsetWidth;f=a.offsetHeight;h=vb&&!e&&!f;ha(e)&&!h||!a.getBoundingClientRect?a=new ec(e,f):(a=ck(a),a=new ec(a.right-a.left,a.bottom-a.top));e=c.clientHeight-a.height;f=c.scrollLeft;h=c.scrollTop;f+=Math.min(g,Math.max(g-(c.clientWidth-a.width),0));h+=Math.min(d,Math.max(d-e,0));c=new dc(f,h);b.scrollLeft=c.a;b.scrollTop=c.f}
function ek(a){var b=hc(a),c=new dc(0,0);var d=b?hc(b):document;d=!w||9<=Number(Eb)||"CSS1Compat"==fc(d).a.compatMode?d.documentElement:d.body;if(a==d)return c;a=ck(a);d=fc(b).a;b=nc(d);d=d.parentWindow||d.defaultView;b=w&&Db("10")&&d.pageYOffset!=b.scrollTop?new dc(b.scrollLeft,b.scrollTop):new dc(d.pageXOffset||b.scrollLeft,d.pageYOffset||b.scrollTop);c.a=a.left+b.a;c.f=a.top+b.f;return c}var gk={thin:2,medium:4,thick:6};function fk(a,b){if("none"==(a.currentStyle?a.currentStyle[b+"Style"]:null))return 0;
var c=a.currentStyle?a.currentStyle[b+"Width"]:null;if(c in gk)a=gk[c];else if(/^\d+px?$/.test(c))a=parseInt(c,10);else{b=a.style.left;var d=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;a.style.left=c;c=a.style.pixelLeft;a.style.left=b;a.runtimeStyle.left=d;a=+c}return a}function hk(){}la(hk);hk.prototype.a=0;function ik(a){F.call(this);this.w=a||fc();this.Ya=null;this.ma=!1;this.j=null;this.I=void 0;this.xa=this.za=this.$=null}t(ik,F);m=ik.prototype;m.Db=hk.Sa();m.N=function(){return this.j};
function K(a,b){return a.j?kc(b,a.j||a.w.a):null}function jk(a){a.I||(a.I=new Mj(a));return a.I}m.Ua=function(a){if(this.$&&this.$!=a)throw Error("Method not supported");ik.o.Ua.call(this,a)};m.eb=function(){this.j=this.w.a.createElement("DIV")};m.render=function(a){if(this.ma)throw Error("Component already rendered");this.j||this.eb();a?a.insertBefore(this.j,null):this.w.a.body.appendChild(this.j);this.$&&!this.$.ma||this.u()};m.u=function(){this.ma=!0;kk(this,function(a){!a.ma&&a.N()&&a.u()})};
m.ua=function(){kk(this,function(a){a.ma&&a.ua()});this.I&&Pj(this.I);this.ma=!1};m.l=function(){this.ma&&this.ua();this.I&&(this.I.m(),delete this.I);kk(this,function(a){a.m()});this.j&&oc(this.j);this.$=this.j=this.xa=this.za=null;ik.o.l.call(this)};function kk(a,b){a.za&&Ha(a.za,b,void 0)}m.removeChild=function(a,b){if(a){var c=p(a)?a:a.Ya||(a.Ya=":"+(a.Db.a++).toString(36));this.xa&&c?(a=this.xa,a=(null!==a&&c in a?a[c]:void 0)||null):a=null;if(c&&a){var d=this.xa;c in d&&delete d[c];Pa(this.za,
a);b&&(a.ua(),a.j&&oc(a.j));b=a;if(null==b)throw Error("Unable to set parent component");b.$=null;ik.o.Ua.call(b,null)}}if(!a)throw Error("Child is not in parent component");return a};function L(a,b){var c=qc(a,"firebaseui-textfield");b?(xj(a,"firebaseui-input-invalid"),wj(a,"firebaseui-input"),c&&xj(c,"firebaseui-textfield-invalid")):(xj(a,"firebaseui-input"),wj(a,"firebaseui-input-invalid"),c&&wj(c,"firebaseui-textfield-invalid"))}function lk(a,b,c){b=new Qj(b);yf(a,xa(zf,b));Oj(jk(a),b,"input",
c)}function mk(a,b,c){b=new Tj(b);yf(a,xa(zf,b));Oj(jk(a),b,"key",function(d){13==d.keyCode&&(d.stopPropagation(),d.preventDefault(),c(d))})}function nk(a,b,c){b=new Ij(b);yf(a,xa(zf,b));Oj(jk(a),b,"focusin",c)}function ok(a,b,c){b=new Ij(b);yf(a,xa(zf,b));Oj(jk(a),b,"focusout",c)}function M(a,b,c){b=new Ej(b);yf(a,xa(zf,b));Oj(jk(a),b,"action",function(d){d.stopPropagation();d.preventDefault();c(d)})}function pk(a){wj(a,"firebaseui-hidden")}function N(a,b){b&&pc(a,b);xj(a,"firebaseui-hidden")}function qk(a){return!vj(a,
"firebaseui-hidden")&&"none"!=a.style.display}function rk(a){a=a||{};var b=a.email,c=a.disabled,d='<div class="firebaseui-textfield mdl-textfield mdl-js-textfield mdl-textfield--floating-label"><label class="mdl-textfield__label firebaseui-label" for="email">';d=a.hc?d+"Enter new email address":d+"Email";d+='</label><input type="email" name="email" autocomplete="username" class="mdl-textfield__input firebaseui-input firebaseui-id-email" value="'+qd(null!=b?b:"")+'"'+(c?"disabled":"")+'></div><div class="firebaseui-error-wrapper"><p class="firebaseui-error firebaseui-text-input-error firebaseui-hidden firebaseui-id-email-error"></p></div>';
return y(d)}function sk(a){a=a||{};a=a.label;var b='<button type="submit" class="firebaseui-id-submit firebaseui-button mdl-button mdl-js-button mdl-button--raised mdl-button--colored">';b=a?b+x(a):b+"Next";return y(b+"</button>")}function tk(){var a=""+sk({label:A("Sign In")});return y(a)}function uk(){var a=""+sk({label:A("Save")});return y(a)}function vk(){var a=""+sk({label:A("Continue")});return y(a)}function wk(a){a=a||{};a=a.label;var b='<div class="firebaseui-new-password-component"><div class="firebaseui-textfield mdl-textfield mdl-js-textfield mdl-textfield--floating-label"><label class="mdl-textfield__label firebaseui-label" for="newPassword">';
b=a?b+x(a):b+"Choose password";return y(b+'</label><input type="password" name="newPassword" autocomplete="new-password" class="mdl-textfield__input firebaseui-input firebaseui-id-new-password"></div><a href="javascript:void(0)" class="firebaseui-input-floating-button firebaseui-id-password-toggle firebaseui-input-toggle-on firebaseui-input-toggle-blur"></a><div class="firebaseui-error-wrapper"><p class="firebaseui-error firebaseui-text-input-error firebaseui-hidden firebaseui-id-new-password-error"></p></div></div>')}
function xk(){var a={};var b='<div class="firebaseui-textfield mdl-textfield mdl-js-textfield mdl-textfield--floating-label"><label class="mdl-textfield__label firebaseui-label" for="password">';b=a.current?b+"Current password":b+"Password";return y(b+'</label><input type="password" name="password" autocomplete="current-password" class="mdl-textfield__input firebaseui-input firebaseui-id-password"></div><div class="firebaseui-error-wrapper"><p class="firebaseui-error firebaseui-text-input-error firebaseui-hidden firebaseui-id-password-error"></p></div>')}
function yk(){return y('<a class="firebaseui-link firebaseui-id-secondary-link" href="javascript:void(0)">Trouble signing in?</a>')}function zk(a){a=a||{};a=a.label;var b='<button class="firebaseui-id-secondary-link firebaseui-button mdl-button mdl-js-button mdl-button--primary">';b=a?b+x(a):b+"Cancel";return y(b+"</button>")}function Ak(a){var b="";a.H&&a.G&&(b+='<ul class="firebaseui-tos-list firebaseui-tos"><li class="firebaseui-inline-list-item"><a href="javascript:void(0)" class="firebaseui-link firebaseui-tos-link" target="_blank">Terms of Service</a></li><li class="firebaseui-inline-list-item"><a href="javascript:void(0)" class="firebaseui-link firebaseui-pp-link" target="_blank">Privacy Policy</a></li></ul>');
return y(b)}function Bk(a){var b="";a.H&&a.G&&(b+='<p class="firebaseui-tos firebaseui-tospp-full-message">By continuing, you are indicating that you accept our <a href="javascript:void(0)" class="firebaseui-link firebaseui-tos-link" target="_blank">Terms of Service</a> and <a href="javascript:void(0)" class="firebaseui-link firebaseui-pp-link" target="_blank">Privacy Policy</a>.</p>');return y(b)}function Ck(a){a='<div class="firebaseui-info-bar firebaseui-id-info-bar"><p class="firebaseui-info-bar-message">'+
x(a.message)+'&nbsp;&nbsp;<a href="javascript:void(0)" class="firebaseui-link firebaseui-id-dismiss-info-bar">Dismiss</a></p></div>';return y(a)}Ck.B="firebaseui.auth.soy2.element.infoBar";function Dk(a){var b=a.content;a=a.rb;return y('<dialog class="mdl-dialog firebaseui-dialog firebaseui-id-dialog'+(a?" "+qd(a):"")+'">'+x(b)+"</dialog>")}function Ek(a){var b=a.message;return y(Dk({content:pd('<div class="firebaseui-dialog-icon-wrapper"><div class="'+qd(a.Ga)+' firebaseui-dialog-icon"></div></div><div class="firebaseui-progress-dialog-message">'+
x(b)+"</div>")}))}Ek.B="firebaseui.auth.soy2.element.progressDialog";function Fk(a){var b='<div class="firebaseui-list-box-actions">';a=a.items;for(var c=a.length,d=0;d<c;d++){var e=a[d];b+='<button type="button" data-listboxid="'+qd(e.id)+'" class="mdl-button firebaseui-id-list-box-dialog-button firebaseui-list-box-dialog-button">'+(e.Ga?'<div class="firebaseui-list-box-icon-wrapper"><div class="firebaseui-list-box-icon '+qd(e.Ga)+'"></div></div>':"")+'<div class="firebaseui-list-box-label-wrapper">'+
x(e.label)+"</div></button>"}b=""+Dk({rb:A("firebaseui-list-box-dialog"),content:pd(b+"</div>")});return y(b)}Fk.B="firebaseui.auth.soy2.element.listBoxDialog";function Gk(a){a=a||{};return y(a.Ub?'<div class="mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active firebaseui-busy-indicator firebaseui-id-busy-indicator"></div>':'<div class="mdl-progress mdl-js-progress mdl-progress__indeterminate firebaseui-busy-indicator firebaseui-id-busy-indicator"></div>')}Gk.B="firebaseui.auth.soy2.element.busyIndicator";
function Hk(a){a=a||{};a=a.na;var b="";if(a.hb)b+=a.hb;else switch(a.providerId){case "google.com":b+="Google";break;case "github.com":b+="GitHub";break;case "facebook.com":b+="Facebook";break;case "twitter.com":b+="Twitter";break;case "anonymous":b+="Guest";break;default:b+="Password"}return z(b)}function Ik(a){Jk(a,"upgradeElement")}function Kk(a){Jk(a,"downgradeElements")}var Lk=["mdl-js-textfield","mdl-js-progress","mdl-js-spinner","mdl-js-button"];function Jk(a,b){a&&window.componentHandler&&
window.componentHandler[b]&&Ha(Lk,function(c){if(vj(a,c))window.componentHandler[b](a);Ha(ic(c,a),function(d){window.componentHandler[b](d)})})}function Mk(a,b,c){Nk.call(this);document.body.appendChild(a);a.showModal||window.dialogPolyfill.registerDialog(a);a.showModal();Ik(a);b&&M(this,a,function(f){var g=a.getBoundingClientRect();(f.clientX<g.left||g.left+g.width<f.clientX||f.clientY<g.top||g.top+g.height<f.clientY)&&Nk.call(this)});if(!c){var d=this.N().parentElement||this.N().parentNode;if(d){var e=
this;this.ca=function(){if(a.open){var f=a.getBoundingClientRect().height,g=d.getBoundingClientRect().height,h=d.getBoundingClientRect().top-document.body.getBoundingClientRect().top,k=d.getBoundingClientRect().left-document.body.getBoundingClientRect().left,l=a.getBoundingClientRect().width,v=d.getBoundingClientRect().width;a.style.top=(h+(g-f)/2).toString()+"px";f=k+(v-l)/2;a.style.left=f.toString()+"px";a.style.right=(document.body.getBoundingClientRect().width-f-l).toString()+"px"}else window.removeEventListener("resize",
e.ca)};this.ca();window.addEventListener("resize",this.ca,!1)}}}function Nk(){var a=Ok.call(this);a&&(Kk(a),a.open&&a.close(),oc(a),this.ca&&window.removeEventListener("resize",this.ca))}function Ok(){return kc("firebaseui-id-dialog")}function Pk(){oc(Qk.call(this))}function Qk(){return K(this,"firebaseui-id-info-bar")}function Rk(){return K(this,"firebaseui-id-dismiss-info-bar")}var Sk={zb:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg",xb:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/github.svg",
ub:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/facebook.svg",Tb:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/twitter.svg",Fb:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/mail.svg",Hb:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/phone.svg",ob:"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/anonymous.png"};function Tk(a,b,c){Af.call(this,a,b);for(var d in c)this[d]=c[d]}t(Tk,Af);function O(a,b,c,d,e){ik.call(this,c);this.$a=a;this.Za=b;this.Aa=
!1;this.Ma=d||null;this.v=this.fa=null;this.aa=jb(Sk);lb(this.aa,e||{})}t(O,ik);m=O.prototype;m.eb=function(){var a=fd(this.$a,this.Za,this.aa,this.w);Ik(a);this.j=a};m.u=function(){O.o.u.call(this);bh(P(this),new Tk("pageEnter",P(this),{pageId:this.Ma}));if(this.Xa()&&this.aa.H){var a=this.aa.H;M(this,this.Xa(),function(){a()})}if(this.Wa()&&this.aa.G){var b=this.aa.G;M(this,this.Wa(),function(){b()})}};m.ua=function(){bh(P(this),new Tk("pageExit",P(this),{pageId:this.Ma}));O.o.ua.call(this)};m.l=
function(){window.clearTimeout(this.fa);this.Za=this.$a=this.fa=null;this.Aa=!1;this.v=null;Kk(this.N());O.o.l.call(this)};function Uk(a){a.Aa=!0;var b=vj(a.N(),"firebaseui-use-spinner");a.fa=window.setTimeout(function(){a.N()&&null===a.v&&(a.v=fd(Gk,{Ub:b},null,a.w),a.N().appendChild(a.v),Ik(a.v))},500)}m.M=function(a,b,c,d){function e(){if(f.O)return null;f.Aa=!1;window.clearTimeout(f.fa);f.fa=null;f.v&&(Kk(f.v),oc(f.v),f.v=null)}var f=this;if(f.Aa)return null;Uk(f);return a.apply(null,b).then(c,
d).then(e,e)};function P(a){return a.N().parentElement||a.N().parentNode}function Vk(a,b,c){mk(a,b,function(){c.focus()})}function Wk(a,b,c){mk(a,b,function(){c()})}r(O.prototype,{f:function(a){Pk.call(this);var b=fd(Ck,{message:a},null,this.w);this.N().appendChild(b);M(this,Rk.call(this),function(){oc(b)})},jc:Pk,mc:Qk,lc:Rk,X:function(a,b){a=fd(Ek,{Ga:a,message:b},null,this.w);Mk.call(this,a)},h:Nk,qb:Ok,oc:function(){return K(this,"firebaseui-tos")},Xa:function(){return K(this,"firebaseui-tos-link")},
Wa:function(){return K(this,"firebaseui-pp-link")},pc:function(){return K(this,"firebaseui-tos-list")}});function Xk(a,b,c){a=a||{};b=a.Qa;var d=a.ha;a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-sign-in"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in with email</h1></div><div class="firebaseui-card-content"><div class="firebaseui-relative-wrapper">'+rk(a)+'</div></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+
(b?zk(null):"")+sk(null)+'</div></div><div class="firebaseui-card-footer">'+(d?Bk(c):Ak(c))+"</div></form></div>";return y(a)}Xk.B="firebaseui.auth.soy2.page.signIn";function Yk(a,b,c){a=a||{};b=a.ha;a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-sign-in"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content">'+rk(a)+xk()+'</div><div class="firebaseui-card-actions"><div class="firebaseui-form-links">'+
yk()+'</div><div class="firebaseui-form-actions">'+tk()+'</div></div><div class="firebaseui-card-footer">'+(b?Bk(c):Ak(c))+"</div></form></div>";return y(a)}Yk.B="firebaseui.auth.soy2.page.passwordSignIn";function Zk(a,b,c){a=a||{};var d=a.Jb;b=a.Oa;var e=a.ha,f='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-sign-up"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Create account</h1></div><div class="firebaseui-card-content">'+
rk(a);d?(a=a||{},a=a.name,a='<div class="firebaseui-textfield mdl-textfield mdl-js-textfield mdl-textfield--floating-label"><label class="mdl-textfield__label firebaseui-label" for="name">First &amp; last name</label><input type="text" name="name" autocomplete="name" class="mdl-textfield__input firebaseui-input firebaseui-id-name" value="'+qd(null!=a?a:"")+'"></div><div class="firebaseui-error-wrapper"><p class="firebaseui-error firebaseui-text-input-error firebaseui-hidden firebaseui-id-name-error"></p></div>',
a=y(a)):a="";c=f+a+wk(null)+'</div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+(b?zk(null):"")+uk()+'</div></div><div class="firebaseui-card-footer">'+(e?Bk(c):Ak(c))+"</div></form></div>";return y(c)}Zk.B="firebaseui.auth.soy2.page.passwordSignUp";function $k(a,b,c){a=a||{};b=a.Oa;a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-recovery"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Recover password</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">Get instructions sent to this email that explain how to reset your password</p>'+
rk(a)+'</div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+(b?zk(null):"")+sk({label:A("Send")})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(a)}$k.B="firebaseui.auth.soy2.page.passwordRecovery";function al(a,b,c){b=a.T;var d="";a="Follow the instructions sent to <strong>"+(x(a.email)+"</strong> to recover your password");d+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-recovery-email-sent"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Check your email</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">'+
a+'</p></div><div class="firebaseui-card-actions">';b&&(d+='<div class="firebaseui-form-actions">'+sk({label:A("Done")})+"</div>");d+='</div><div class="firebaseui-card-footer">'+Ak(c)+"</div></div>";return y(d)}al.B="firebaseui.auth.soy2.page.passwordRecoveryEmailSent";function bl(a,b,c){return y('<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-callback"><div class="firebaseui-callback-indicator-container">'+Gk(null,null,c)+"</div></div>")}bl.B="firebaseui.auth.soy2.page.callback";
function cl(){return y('<div class="firebaseui-container firebaseui-id-page-blank firebaseui-use-spinner"></div>')}cl.B="firebaseui.auth.soy2.page.blank";function dl(a,b,c){b="";a="A sign-in email with additional instructions was sent to <strong>"+(x(a.email)+"</strong>. Check your email to complete sign-in.");var d=y('<a class="firebaseui-link firebaseui-id-trouble-getting-email-link" href="javascript:void(0)">Trouble getting email?</a>');b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-link-sign-in-sent"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign-in email sent</h1></div><div class="firebaseui-card-content"><div class="firebaseui-email-sent"></div><p class="firebaseui-text">'+
a+'</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-links">'+d+'</div><div class="firebaseui-form-actions">'+zk({label:A("Back")})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}dl.B="firebaseui.auth.soy2.page.emailLinkSignInSent";function el(a,b,c){a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-not-received"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Trouble getting email?</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">Try these common fixes:<ul><li>Check if the email was marked as spam or filtered.</li><li>Check your internet connection.</li><li>Check that you did not misspell your email.</li><li>Check that your inbox space is not running out or other inbox settings related issues.</li></ul></p><p class="firebaseui-text">If the steps above didn\'t work, you can resend the email. Note that this will deactivate the link in the older email.</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-links">'+
y('<a class="firebaseui-link firebaseui-id-resend-email-link" href="javascript:void(0)">Resend</a>')+'</div><div class="firebaseui-form-actions">'+zk({label:A("Back")})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(a)}el.B="firebaseui.auth.soy2.page.emailNotReceived";function fl(a,b,c){a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-link-sign-in-confirmation"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Confirm email</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">Confirm your email to complete sign in</p><div class="firebaseui-relative-wrapper">'+
rk(a)+'</div></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+zk(null)+sk(null)+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(a)}fl.B="firebaseui.auth.soy2.page.emailLinkSignInConfirmation";function gl(){var a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-different-device-error"><div class="firebaseui-card-header"><h1 class="firebaseui-title">New device or browser detected</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">Try opening the link using the same device or browser where you started the sign-in process.</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+
zk({label:A("Dismiss")})+"</div></div></div>";return y(a)}gl.B="firebaseui.auth.soy2.page.differentDeviceError";function hl(){var a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-anonymous-user-mismatch"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Session ended</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">The session associated with this sign-in request has either expired or was cleared.</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+
zk({label:A("Dismiss")})+"</div></div></div>";return y(a)}hl.B="firebaseui.auth.soy2.page.anonymousUserMismatch";function il(a,b,c){b="";a="You\u2019ve already used <strong>"+(x(a.email)+"</strong> to sign in. Enter your password for that account.");b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-linking"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content"><h2 class="firebaseui-subtitle">You already have an account</h2><p class="firebaseui-text">'+
a+"</p>"+xk()+'</div><div class="firebaseui-card-actions"><div class="firebaseui-form-links">'+yk()+'</div><div class="firebaseui-form-actions">'+tk()+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}il.B="firebaseui.auth.soy2.page.passwordLinking";function jl(a,b,c){var d=a.email;b="";a=""+Hk(a);a=A(a);d="You\u2019ve already used <strong>"+(x(d)+("</strong>. You can connect your <strong>"+(x(a)+("</strong> account with <strong>"+(x(d)+"</strong> by signing in with email link below.")))));
a="For this flow to successfully connect your "+(x(a)+" account with this email, you have to open the link on the same device or browser.");b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-link-sign-in-linking"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content"><h2 class="firebaseui-subtitle">You already have an account</h2><p class="firebaseui-text firebaseui-text-justify">'+
d+'<p class="firebaseui-text firebaseui-text-justify">'+a+'</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+tk()+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}jl.B="firebaseui.auth.soy2.page.emailLinkSignInLinking";function kl(a,b,c){b="";var d=""+Hk(a);d=A(d);a="You originally intended to connect <strong>"+(x(d)+"</strong> to your email account but have opened the link on a different device where you are not signed in.");
d="If you still want to connect your <strong>"+(x(d)+"</strong> account, open the link on the same device where you started sign-in. Otherwise, tap Continue to sign-in on this device.");b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-link-sign-in-linking-different-device"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text firebaseui-text-justify">'+
a+'</p><p class="firebaseui-text firebaseui-text-justify">'+d+'</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+vk()+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}kl.B="firebaseui.auth.soy2.page.emailLinkSignInLinkingDifferentDevice";function ll(a,b,c){var d=a.email;b="";a=""+Hk(a);a=A(a);d="You\u2019ve already used <strong>"+(x(d)+("</strong>. Sign in with "+(x(a)+" to continue.")));b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-federated-linking"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content"><h2 class="firebaseui-subtitle">You already have an account</h2><p class="firebaseui-text">'+
d+'</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+sk({label:A("Sign in with "+a)})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}ll.B="firebaseui.auth.soy2.page.federatedLinking";function ml(a,b,c){b="";a="To continue sign in with <strong>"+(x(a.email)+"</strong> on this device, you have to recover the password.");b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-unsupported-provider"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">'+
a+'</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+zk(null)+sk({label:A("Recover password")})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}ml.B="firebaseui.auth.soy2.page.unsupportedProvider";function nl(a){var b="",c='<p class="firebaseui-text">for <strong>'+(x(a.email)+"</strong></p>");b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-reset"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Reset your password</h1></div><div class="firebaseui-card-content">'+
c+wk(od(a))+'</div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+uk()+"</div></div></form></div>";return y(b)}nl.B="firebaseui.auth.soy2.page.passwordReset";function ol(a){a=a||{};a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-reset-success"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Password changed</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">You can now sign in with your new password</p></div><div class="firebaseui-card-actions">'+
(a.T?'<div class="firebaseui-form-actions">'+vk()+"</div>":"")+"</div></div>";return y(a)}ol.B="firebaseui.auth.soy2.page.passwordResetSuccess";function pl(a){a=a||{};a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-password-reset-failure"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Try resetting your password again</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">Your request to reset your password has expired or the link has already been used</p></div><div class="firebaseui-card-actions">'+
(a.T?'<div class="firebaseui-form-actions">'+sk(null)+"</div>":"")+"</div></div>";return y(a)}pl.B="firebaseui.auth.soy2.page.passwordResetFailure";function ql(a){var b=a.T,c="";a="Your sign-in email address has been changed back to <strong>"+(x(a.email)+"</strong>.");c+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-change-revoke-success"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Updated email address</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">'+
a+'</p><p class="firebaseui-text">If you didn\u2019t ask to change your sign-in email, it\u2019s possible someone is trying to access your account and you should <a class="firebaseui-link firebaseui-id-reset-password-link" href="javascript:void(0)">change your password right away</a>.</p></div><div class="firebaseui-card-actions">'+(b?'<div class="firebaseui-form-actions">'+sk(null)+"</div>":"")+"</div></form></div>";return y(c)}ql.B="firebaseui.auth.soy2.page.emailChangeRevokeSuccess";function rl(a){a=
a||{};a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-change-revoke-failure"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Unable to update your email address</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">There was a problem changing your sign-in email back.</p><p class="firebaseui-text">If you try again and still can\u2019t reset your email, try asking your administrator for help.</p></div><div class="firebaseui-card-actions">'+
(a.T?'<div class="firebaseui-form-actions">'+sk(null)+"</div>":"")+"</div></div>";return y(a)}rl.B="firebaseui.auth.soy2.page.emailChangeRevokeFailure";function sl(a){a=a||{};a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-verification-success"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Your email has been verified</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">You can now sign in with your new account</p></div><div class="firebaseui-card-actions">'+
(a.T?'<div class="firebaseui-form-actions">'+vk()+"</div>":"")+"</div></div>";return y(a)}sl.B="firebaseui.auth.soy2.page.emailVerificationSuccess";function tl(a){a=a||{};a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-verification-failure"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Try verifying your email again</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">Your request to verify your email has expired or the link has already been used</p></div><div class="firebaseui-card-actions">'+
(a.T?'<div class="firebaseui-form-actions">'+sk(null)+"</div>":"")+"</div></div>";return y(a)}tl.B="firebaseui.auth.soy2.page.emailVerificationFailure";function ul(a){a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-unrecoverable-error"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Error encountered</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">'+x(a.errorMessage)+"</p></div></div>";return y(a)}ul.B="firebaseui.auth.soy2.page.unrecoverableError";
function vl(a,b,c){var d=a.Gb;b="";a="Continue with "+(x(a.Vb)+"?");d="You originally wanted to sign in with "+x(d);b+='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-email-mismatch"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Sign in</h1></div><div class="firebaseui-card-content"><h2 class="firebaseui-subtitle">'+a+'</h2><p class="firebaseui-text">'+d+'</p></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+
zk(null)+sk({label:A("Continue")})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form></div>";return y(b)}vl.B="firebaseui.auth.soy2.page.emailMismatch";function wl(a,b,c){var d='<div class="firebaseui-container firebaseui-page-provider-sign-in firebaseui-id-page-provider-sign-in firebaseui-use-spinner"><div class="firebaseui-card-content"><form onsubmit="return false;"><ul class="firebaseui-idp-list">';a=a.Ib;b=a.length;for(var e=0;e<b;e++){var f={na:a[e]};var g=c;f=f||{};var h=
f.na,k=f;k=k||{};var l="";switch(k.na.providerId){case "google.com":l+="firebaseui-idp-google";break;case "github.com":l+="firebaseui-idp-github";break;case "facebook.com":l+="firebaseui-idp-facebook";break;case "twitter.com":l+="firebaseui-idp-twitter";break;case "phone":l+="firebaseui-idp-phone";break;case "anonymous":l+="firebaseui-idp-anonymous";break;case "password":l+="firebaseui-idp-password";break;default:l+="firebaseui-idp-generic"}k='<button class="firebaseui-idp-button mdl-button mdl-js-button mdl-button--raised '+
qd(z(l))+' firebaseui-id-idp-button" data-provider-id="'+qd(h.providerId)+'" style="background-color:';l=h.pb;null!=l&&l.ea===cd?l=l.content:null==l?l="":l instanceof Vb?l instanceof Vb&&l.constructor===Vb&&l.f===Wb?l=l.a:(Fa("expected object of type SafeStyle, got '"+l+"' of type "+ma(l)),l="type_error:SafeStyle"):(l=String(l),Cd.test(l)||(Fa("Bad value `%s` for |filterCssValue",[l]),l="zSoyz"));k=k+qd(l)+'"><span class="firebaseui-idp-icon-wrapper"><img class="firebaseui-idp-icon" alt="" src="';
l=(l=f)||{};l=l.na;var v="";if(l.fb)v+=wd(l.fb);else switch(l.providerId){case "google.com":v+=wd(g.zb);break;case "github.com":v+=wd(g.xb);break;case "facebook.com":v+=wd(g.ub);break;case "twitter.com":v+=wd(g.Tb);break;case "phone":v+=wd(g.Hb);break;case "anonymous":v+=wd(g.ob);break;default:v+=wd(g.Fb)}g=nd(v);g=k+qd(wd(g))+'"></span>';"password"==h.providerId?g+='<span class="firebaseui-idp-text firebaseui-idp-text-long">Sign in with email</span><span class="firebaseui-idp-text firebaseui-idp-text-short">Email</span>':
"phone"==h.providerId?g+='<span class="firebaseui-idp-text firebaseui-idp-text-long">Sign in with phone</span><span class="firebaseui-idp-text firebaseui-idp-text-short">Phone</span>':"anonymous"==h.providerId?g+='<span class="firebaseui-idp-text firebaseui-idp-text-long">Continue as guest</span><span class="firebaseui-idp-text firebaseui-idp-text-short">Guest</span>':(h="Sign in with "+x(Hk(f)),g+='<span class="firebaseui-idp-text firebaseui-idp-text-long">'+h+'</span><span class="firebaseui-idp-text firebaseui-idp-text-short">'+
x(Hk(f))+"</span>");f=y(g+"</button>");d+='<li class="firebaseui-list-item">'+f+"</li>"}d+='</ul></form></div><div class="firebaseui-card-footer firebaseui-provider-sign-in-footer">'+Bk(c)+"</div></div>";return y(d)}wl.B="firebaseui.auth.soy2.page.providerSignIn";function xl(a,b,c){a=a||{};var d=a.tb,e=a.Qa;b=a.ha;a=a||{};a=a.va;a='<div class="firebaseui-phone-number"><button class="firebaseui-id-country-selector firebaseui-country-selector mdl-button mdl-js-button"><span class="firebaseui-flag firebaseui-country-selector-flag firebaseui-id-country-selector-flag"></span><span class="firebaseui-id-country-selector-code"></span></button><div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label firebaseui-textfield firebaseui-phone-input-wrapper"><label class="mdl-textfield__label firebaseui-label" for="phoneNumber">Phone number</label><input type="tel" name="phoneNumber" class="mdl-textfield__input firebaseui-input firebaseui-id-phone-number" value="'+
qd(null!=a?a:"")+'"></div></div><div class="firebaseui-error-wrapper"><p class="firebaseui-error firebaseui-text-input-error firebaseui-hidden firebaseui-phone-number-error firebaseui-id-phone-number-error"></p></div>';a='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-phone-sign-in-start"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Enter your phone number</h1></div><div class="firebaseui-card-content"><div class="firebaseui-relative-wrapper">'+
y(a);var f;d?f=y('<div class="firebaseui-recaptcha-wrapper"><div class="firebaseui-recaptcha-container"></div><div class="firebaseui-error-wrapper firebaseui-recaptcha-error-wrapper"><p class="firebaseui-error firebaseui-hidden firebaseui-id-recaptcha-error"></p></div></div>'):f="";f=a+f+'</div></div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+(e?zk(null):"")+sk({label:A("Verify")})+'</div></div><div class="firebaseui-card-footer">';b?(b='<p class="firebaseui-tos firebaseui-phone-tos">',
b=c.H&&c.G?b+'By tapping Verify, you are indicating that you accept our <a href="javascript:void(0)" class="firebaseui-link firebaseui-tos-link" target="_blank">Terms of Service</a> and <a href="javascript:void(0)" class="firebaseui-link firebaseui-pp-link" target="_blank">Privacy Policy</a>. An SMS may be sent. Message &amp; data rates may apply.':b+"By tapping Verify, an SMS may be sent. Message &amp; data rates may apply.",c=y(b+"</p>")):c=y('<p class="firebaseui-tos firebaseui-phone-sms-notice">By tapping Verify, an SMS may be sent. Message &amp; data rates may apply.</p>')+
Ak(c);return y(f+c+"</div></form></div>")}xl.B="firebaseui.auth.soy2.page.phoneSignInStart";function yl(a,b,c){a=a||{};b=a.phoneNumber;var d="";a='Enter the 6-digit code we sent to <a class="firebaseui-link firebaseui-change-phone-number-link firebaseui-id-change-phone-number-link" href="javascript:void(0)">&lrm;'+(x(b)+"</a>");x(b);b=d;d=y('<div class="firebaseui-textfield mdl-textfield mdl-js-textfield mdl-textfield--floating-label"><label class="mdl-textfield__label firebaseui-label" for="phoneConfirmationCode">6-digit code</label><input type="number" name="phoneConfirmationCode" class="mdl-textfield__input firebaseui-input firebaseui-id-phone-confirmation-code"></div><div class="firebaseui-error-wrapper"><p class="firebaseui-error firebaseui-text-input-error firebaseui-hidden firebaseui-id-phone-confirmation-code-error"></p></div>');
c='<div class="mdl-card mdl-shadow--2dp firebaseui-container firebaseui-id-page-phone-sign-in-finish"><form onsubmit="return false;"><div class="firebaseui-card-header"><h1 class="firebaseui-title">Verify your phone number</h1></div><div class="firebaseui-card-content"><p class="firebaseui-text">'+a+"</p>"+d+'</div><div class="firebaseui-card-actions"><div class="firebaseui-form-actions">'+zk(null)+sk({label:A("Continue")})+'</div></div><div class="firebaseui-card-footer">'+Ak(c)+"</div></form>";
a=y('<div class="firebaseui-resend-container"><span class="firebaseui-id-resend-countdown"></span><a href="javascript:void(0)" class="firebaseui-id-resend-link firebaseui-hidden firebaseui-link">Resend</a></div>');return y(b+(c+a+"</div>"))}yl.B="firebaseui.auth.soy2.page.phoneSignInFinish";function zl(){return K(this,"firebaseui-id-submit")}function Q(){return K(this,"firebaseui-id-secondary-link")}function Al(a,b){M(this,zl.call(this),function(d){a(d)});var c=Q.call(this);c&&b&&M(this,c,function(d){b(d)})}
function Bl(){return K(this,"firebaseui-id-password")}function Cl(){return K(this,"firebaseui-id-password-error")}function Dl(){var a=Bl.call(this),b=Cl.call(this);lk(this,a,function(){qk(b)&&(L(a,!0),pk(b))})}function El(){var a=Bl.call(this);var b=Cl.call(this);J(a)?(L(a,!0),pk(b),b=!0):(L(a,!1),N(b,z("Enter your password").toString()),b=!1);return b?J(a):null}function Fl(a,b,c,d,e,f){O.call(this,il,{email:a},f,"passwordLinking",{H:d,G:e});this.a=b;this.L=c}t(Fl,O);Fl.prototype.u=function(){this.R();
this.P(this.a,this.L);Wk(this,this.i(),this.a);this.i().focus();Fl.o.u.call(this)};Fl.prototype.l=function(){this.a=null;Fl.o.l.call(this)};Fl.prototype.J=function(){return J(K(this,"firebaseui-id-email"))};r(Fl.prototype,{i:Bl,D:Cl,R:Dl,A:El,ba:zl,da:Q,P:Al});var Gl=/^[+a-zA-Z0-9_.!#$%&'*\/=?^`{|}~-]+@([a-zA-Z0-9-]+\.)+[a-zA-Z0-9]{2,63}$/;function Hl(){return K(this,"firebaseui-id-email")}function Il(){return K(this,"firebaseui-id-email-error")}function Jl(a){var b=Hl.call(this),c=Il.call(this);
lk(this,b,function(){qk(c)&&(L(b,!0),pk(c))});a&&mk(this,b,function(){a()})}function Kl(){return Xa(J(Hl.call(this))||"")}function Ll(){var a=Hl.call(this);var b=Il.call(this);var c=J(a)||"";c?Gl.test(c)?(L(a,!0),pk(b),b=!0):(L(a,!1),N(b,z("That email address isn't correct").toString()),b=!1):(L(a,!1),N(b,z("Enter your email address to continue").toString()),b=!1);return b?Xa(J(a)):null}function Ml(a,b,c,d,e,f,g){O.call(this,Yk,{email:c,ha:!!f},g,"passwordSignIn",{H:d,G:e});this.a=a;this.L=b}t(Ml,
O);Ml.prototype.u=function(){this.R();this.ba();this.da(this.a,this.L);Vk(this,this.s(),this.i());Wk(this,this.i(),this.a);J(this.s())?this.i().focus():this.s().focus();Ml.o.u.call(this)};Ml.prototype.l=function(){this.L=this.a=null;Ml.o.l.call(this)};r(Ml.prototype,{s:Hl,U:Il,R:Jl,P:Kl,J:Ll,i:Bl,D:Cl,ba:Dl,A:El,sa:zl,ra:Q,da:Al});function R(a,b,c,d,e,f){O.call(this,a,b,d,e||"notice",f);this.a=c||null}t(R,O);R.prototype.u=function(){this.a&&(this.s(this.a),this.i().focus());R.o.u.call(this)};R.prototype.l=
function(){this.a=null;R.o.l.call(this)};r(R.prototype,{i:zl,A:Q,s:Al});function Nl(a,b,c,d,e){R.call(this,al,{email:a,T:!!b},b,e,"passwordRecoveryEmailSent",{H:c,G:d})}t(Nl,R);function Ol(a,b){R.call(this,sl,{T:!!a},a,b,"emailVerificationSuccess")}t(Ol,R);function Pl(a,b){R.call(this,tl,{T:!!a},a,b,"emailVerificationFailure")}t(Pl,R);function Ql(a,b){R.call(this,ol,{T:!!a},a,b,"passwordResetSuccess")}t(Ql,R);function Rl(a,b){R.call(this,pl,{T:!!a},a,b,"passwordResetFailure")}t(Rl,R);function Sl(a,
b){R.call(this,rl,{T:!!a},a,b,"emailChangeRevokeFailure")}t(Sl,R);function Tl(a,b){R.call(this,ul,{errorMessage:a},void 0,b,"unrecoverableError")}t(Tl,R);var Ul=!1,Vl=null;function Wl(a,b){Ul=!!b;Vl||("undefined"==typeof accountchooser&&tj()?(b=Nb(Jb(new Gb(Hb,"//www.gstatic.com/accountchooser/client.js"))),Vl=hf(B(qh(b)),function(){})):Vl=B());Vl.then(a,a)}function Xl(a,b){a=S(a);(a=Qg(a).accountChooserInvoked||null)?a(b):b()}function Yl(a,b,c){a=S(a);(a=Qg(a).accountChooserResult||null)?a(b,c):
c()}function Zl(a,b,c,d,e){d?(I("callback",a,b),Ul&&c()):Xl(a,function(){Si(new Kh(a.a.tenantId||null),T(a));aj(function(f){G(Bi,T(a));Yl(a,f?"empty":"unavailable",function(){I("signIn",a,b);(f||Ul)&&c()})},Mi(T(a)),e)})}function $l(a,b,c,d){function e(f){f=U(f);V(b,c,void 0,f);d()}Yl(b,"accountSelected",function(){Li(!1,T(b));var f=am(b);W(b,X(b).fetchSignInMethodsForEmail(a.a).then(function(g){bm(b,c,g,a.a,a.h||void 0,void 0,f);d()},e))})}function cm(a,b,c,d){Yl(b,a?"addAccount":"unavailable",function(){I("signIn",
b,c);(a||Ul)&&d()})}function dm(a,b,c,d){function e(){var f=a();f&&(f=Pg(S(f)))&&f()}Yi(function(){var f=a();f&&Zl(f,b,e,c,d)},function(f){var g=a();g&&$l(f,g,b,e)},function(f){var g=a();g&&cm(f,g,b,e)},a()&&lg(S(a())))}function em(a,b,c,d){function e(g){if(!g.name||"cancel"!=g.name){a:{var h=g.message;try{var k=((JSON.parse(h).error||{}).message||"").toLowerCase().match(/invalid.+(access|id)_token/);if(k&&k.length){var l=!0;break a}}catch(v){}l=!1}if(l)g=P(b),b.m(),V(a,g,void 0,z("Your sign-in session has expired. Please try again.").toString());
else{l=g&&g.message||"";if(g.code){if("auth/email-already-in-use"==g.code||"auth/credential-already-in-use"==g.code)return;l=U(g)}b.f(l)}}}fm(a);if(d)return gm(a,c),B();if(!c.credential)throw Error("No credential found!");d=X(a).currentUser||c.user;if(!d)throw Error("User not logged in.");d=new Bh(d.email,d.displayName,d.photoURL,"password"==c.credential.providerId?null:c.credential.providerId);null!=Hi(Di,T(a))&&!Hi(Di,T(a))||Ni(d,T(a));G(Di,T(a));try{var f=hm(a,c)}catch(g){return Be(g.code||g.message,
g),b.f(g.code||g.message),B()}c=f.then(function(g){gm(a,g)},e).then(void 0,e);W(a,f);return B(c)}function gm(a,b){if(!b.user)throw Error("No user found");var c=Sg(S(a));Rg(S(a))&&c&&Ge("Both signInSuccess and signInSuccessWithAuthResult callbacks are provided. Only signInSuccessWithAuthResult callback will be invoked.");if(c){c=Sg(S(a));var d=Ji(T(a))||void 0;G(Ci,T(a));var e=!1;if(bg()){if(!c||c(b,d))e=!0,window.opener.location.assign(Qb(Tb(im(a,d))));c||window.close()}else if(!c||c(b,d))e=!0,ag(im(a,
d));e||a.reset()}else{c=b.user;b=b.credential;d=Rg(S(a));e=Ji(T(a))||void 0;G(Ci,T(a));var f=!1;if(bg()){if(!d||d(c,b,e))f=!0,window.opener.location.assign(Qb(Tb(im(a,e))));d||window.close()}else if(!d||d(c,b,e))f=!0,ag(im(a,e));f||a.reset()}}function im(a,b){a=b||S(a).a.get("signInSuccessUrl");if(!a)throw Error("No redirect URL has been found. You must either specify a signInSuccessUrl in the configuration, pass in a redirect URL to the widget URL, or return false from the callback.");return a}function U(a){var b=
"";switch(a.code){case "auth/email-already-in-use":b+="The email address is already used by another account";break;case "auth/requires-recent-login":b+=Gd();break;case "auth/too-many-requests":b+="You have entered an incorrect password too many times. Please try again in a few minutes.";break;case "auth/user-cancelled":b+="Please authorize the required permissions to sign in to the application";break;case "auth/user-not-found":b+="That email address doesn't match an existing account";break;case "auth/user-token-expired":b+=
Gd();break;case "auth/weak-password":b+="Strong passwords have at least 6 characters and a mix of letters and numbers";break;case "auth/wrong-password":b+="The email and password you entered don't match";break;case "auth/network-request-failed":b+="A network error has occurred";break;case "auth/invalid-phone-number":b+=Dd();break;case "auth/invalid-verification-code":b+=z("Wrong code. Try again.");break;case "auth/code-expired":b+="This code is no longer valid";break;case "auth/expired-action-code":b+=
"This code has expired.";break;case "auth/invalid-action-code":b+="The action code is invalid. This can happen if the code is malformed, expired, or has already been used."}if(b=z(b).toString())return b;try{return JSON.parse(a.message),Be("Internal error: "+a.message,void 0),Ed().toString()}catch(c){return a.message}}function jm(a,b,c){var d=de[b]&&firebase.auth[de[b]]?new firebase.auth[de[b]]:0==b.indexOf("saml.")?new firebase.auth.SAMLAuthProvider(b):new firebase.auth.OAuthProvider(b);if(!d)throw Error("Invalid Firebase Auth provider!");
var e=Eg(S(a),b);if(d.addScope)for(var f=0;f<e.length;f++)d.addScope(e[f]);e=Fg(S(a),b)||{};c&&(b==firebase.auth.GoogleAuthProvider.PROVIDER_ID?a="login_hint":b==firebase.auth.GithubAuthProvider.PROVIDER_ID?a="login":a=(a=yg(S(a),b))&&a.Eb,a&&(e[a]=c));d.setCustomParameters&&d.setCustomParameters(e);return d}function km(a,b,c,d){function e(){Si(new Kh(a.a.tenantId||null),T(a));W(a,b.M(q(a.Rb,a),[k],function(){if("file:"===(window.location&&window.location.protocol))return W(a,lm(a).then(function(l){b.m();
G(Bi,T(a));I("callback",a,h,B(l))},f))},g))}function f(l){G(Bi,T(a));if(!l.name||"cancel"!=l.name)switch(l.code){case "auth/popup-blocked":e();break;case "auth/popup-closed-by-user":case "auth/cancelled-popup-request":break;case "auth/credential-already-in-use":break;case "auth/network-request-failed":case "auth/too-many-requests":case "auth/user-cancelled":b.f(U(l));break;default:b.m(),I("callback",a,h,ff(l))}}function g(l){G(Bi,T(a));l.name&&"cancel"==l.name||(Be("signInWithRedirect: "+l.code,void 0),
l=U(l),"blank"==b.Ma&&Ng(S(a))?(b.m(),I("providerSignIn",a,h,l)):b.f(l))}var h=P(b),k=jm(a,c,d);"redirect"==Og(S(a))?e():W(a,mm(a,k).then(function(l){b.m();I("callback",a,h,B(l))},f))}function nm(a,b){W(a,b.M(q(a.Nb,a),[],function(c){b.m();return em(a,b,c,!0)},function(c){c.name&&"cancel"==c.name||(Be("ContinueAsGuest: "+c.code,void 0),c=U(c),b.f(c))}))}function om(a,b,c){function d(f){var g=!1;f=b.M(q(a.Ob,a),[f],function(h){var k=P(b);b.m();I("callback",a,k,B(h));g=!0},function(h){if(!h.name||"cancel"!=
h.name)if(!h||"auth/credential-already-in-use"!=h.code)if(h&&"auth/email-already-in-use"==h.code&&h.email&&h.credential){var k=P(b);b.m();I("callback",a,k,ff(h))}else h=U(h),b.f(h)});W(a,f);return f.then(function(){return g},function(){return!1})}var e=Cg(S(a),c&&c.authMethod||null);if(c&&c.idToken&&e===firebase.auth.GoogleAuthProvider.PROVIDER_ID)return Eg(S(a),firebase.auth.GoogleAuthProvider.PROVIDER_ID).length?(km(a,b,e,c.id),c=B(!0)):c=d(firebase.auth.GoogleAuthProvider.credential(c.idToken)),
c;c&&b.f(z("The selected credential for the authentication provider is not supported!").toString());return B(!1)}function pm(a,b){var c=b.J(),d=b.A();if(c)if(d){var e=firebase.auth.EmailAuthProvider.credential(c,d);W(a,b.M(q(a.Pb,a),[c,d],function(f){return em(a,b,{user:f.user,credential:e,operationType:f.operationType,additionalUserInfo:f.additionalUserInfo})},function(f){if(!f.name||"cancel"!=f.name)switch(f.code){case "auth/email-already-in-use":break;case "auth/email-exists":L(b.s(),!1);N(b.U(),
U(f));break;case "auth/too-many-requests":case "auth/wrong-password":L(b.i(),!1);N(b.D(),U(f));break;default:Be("verifyPassword: "+f.message,void 0),b.f(U(f))}}))}else b.i().focus();else b.s().focus()}function am(a){a=xg(S(a));return 1==a.length&&a[0]==firebase.auth.EmailAuthProvider.PROVIDER_ID}function qm(a){a=xg(S(a));return 1==a.length&&a[0]==firebase.auth.PhoneAuthProvider.PROVIDER_ID}function V(a,b,c,d){am(a)?d?I("signIn",a,b,c,d):rm(a,b,c):a&&qm(a)&&!d?I("phoneSignInStart",a,b):a&&Ng(S(a))&&
!d?I("federatedRedirect",a,b):I("providerSignIn",a,b,d)}function sm(a,b,c,d){var e=P(b);W(a,b.M(q(X(a).fetchSignInMethodsForEmail,X(a)),[c],function(f){Li(Bg(S(a))==ig,T(a));b.m();bm(a,e,f,c,void 0,d)},function(f){f=U(f);b.f(f)}))}function bm(a,b,c,d,e,f,g){c.length||Kg(S(a))?!c.length&&Kg(S(a))?I("sendEmailLinkForSignIn",a,b,d,function(){I("signIn",a,b)}):Oa(c,firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD)?I("passwordSignIn",a,b,d,g):1==c.length&&c[0]===firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD?
I("sendEmailLinkForSignIn",a,b,d,function(){I("signIn",a,b)}):(c=be(c,xg(S(a))))?(Qi(new Ih(d),T(a)),I("federatedSignIn",a,b,d,c,f)):I("unsupportedProvider",a,b,d):I("passwordSignUp",a,b,d,e,void 0,g)}function tm(a,b,c,d,e,f){var g=P(b);W(a,b.M(q(a.wb,a),[c,f],function(){b.m();I("emailLinkSignInSent",a,g,c,d,f)},e))}function rm(a,b,c){Bg(S(a))==ig?Wl(function(){Wi?Xl(a,function(){Si(new Kh(a.a.tenantId||null),T(a));aj(function(d){G(Bi,T(a));Yl(a,d?"empty":"unavailable",function(){I("signIn",a,b,c)})},
Mi(T(a)),qg(S(a)))}):(Y(a),dm(um,b,!1,qg(S(a))))},!1):(Ul=!1,Xl(a,function(){Yl(a,"unavailable",function(){I("signIn",a,b,c)})}))}function vm(a){var b=eg();a=sg(S(a));b=Ec(b,a)||"";for(var c in mg)if(mg[c].toLowerCase()==b.toLowerCase())return mg[c];return"callback"}function wm(a){var b=eg();a=Md(S(a).a,"queryParameterForSignInSuccessUrl");return(b=Ec(b,a))?Qb(Tb(b)):null}function xm(){return Ec(eg(),"oobCode")}function ym(){var a=Ec(eg(),"continueUrl");return a?function(){ag(a)}:null}function zm(a,
b){var c=dg(b);switch(vm(a)){case "callback":(b=wm(a))&&Ki(b,T(a));a.gb()?I("callback",a,c):V(a,c);break;case "resetPassword":I("passwordReset",a,c,xm(),ym());break;case "recoverEmail":I("emailChangeRevocation",a,c,xm());break;case "verifyEmail":I("emailVerification",a,c,xm(),ym());break;case "signIn":I("emailLinkSignInCallback",a,c,eg());Am();break;case "select":if((b=wm(a))&&Ki(b,T(a)),Wi){V(a,c);break}else{Wl(function(){Y(a);dm(um,c,!0)},!0);return}default:throw Error("Unhandled widget operation.");
}(b=Pg(S(a)))&&b()}function Bm(a,b){O.call(this,hl,void 0,b,"anonymousUserMismatch");this.a=a}t(Bm,O);Bm.prototype.u=function(){var a=this;M(this,this.i(),function(){a.a()});this.i().focus();Bm.o.u.call(this)};Bm.prototype.l=function(){this.a=null;Bm.o.l.call(this)};r(Bm.prototype,{i:Q});H.anonymousUserMismatch=function(a,b){var c=new Bm(function(){c.m();V(a,b)});c.render(b);Z(a,c)};function Cm(a){O.call(this,bl,void 0,a,"callback")}t(Cm,O);Cm.prototype.M=function(a,b,c,d){return a.apply(null,b).then(c,
d)};function Dm(a,b,c){if(c.user){var d={user:c.user,credential:c.credential,operationType:c.operationType,additionalUserInfo:c.additionalUserInfo},e=Oi(T(a)),f=e&&e.f;if(f&&!Em(c.user,f))Fm(a,b,d);else{var g=e&&e.a;g?W(a,c.user.linkWithCredential(g).then(function(h){d={user:h.user,credential:g,operationType:h.operationType,additionalUserInfo:h.additionalUserInfo};Gm(a,b,d)},function(h){Hm(a,b,h)})):Gm(a,b,d)}}else c=P(b),b.m(),Pi(T(a)),V(a,c)}function Gm(a,b,c){Pi(T(a));em(a,b,c)}function Hm(a,b,
c){var d=P(b);Pi(T(a));c=U(c);b.m();V(a,d,void 0,c)}function Im(a,b,c,d){var e=P(b);W(a,X(a).fetchSignInMethodsForEmail(c).then(function(f){b.m();f.length?Oa(f,firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD)?I("passwordLinking",a,e,c):1==f.length&&f[0]===firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD?I("emailLinkSignInLinking",a,e,c):(f=be(f,xg(S(a))))?I("federatedLinking",a,e,c,f,d):(Pi(T(a)),I("unsupportedProvider",a,e,c)):(Pi(T(a)),I("passwordRecovery",a,e,c,!1,Fd().toString()))},
function(f){Hm(a,b,f)}))}function Fm(a,b,c){var d=P(b);W(a,Jm(a).then(function(){b.m();I("emailMismatch",a,d,c)},function(e){e.name&&"cancel"==e.name||(e=U(e.code),b.f(e))}))}function Em(a,b){if(b==a.email)return!0;if(a.providerData)for(var c=0;c<a.providerData.length;c++)if(b==a.providerData[c].email)return!0;return!1}H.callback=function(a,b,c){var d=new Cm;d.render(b);Z(a,d);b=c||lm(a);W(a,b.then(function(e){Dm(a,d,e)},function(e){if(e&&("auth/account-exists-with-different-credential"==e.code||
"auth/email-already-in-use"==e.code)&&e.email&&e.credential)Qi(new Ih(e.email,e.credential),T(a)),Im(a,d,e.email);else if(e&&"auth/user-cancelled"==e.code){var f=Oi(T(a)),g=U(e);f&&f.a?Im(a,d,f.f,g):f?sm(a,d,f.f,g):Hm(a,d,e)}else e&&"auth/credential-already-in-use"==e.code||(e&&"auth/operation-not-supported-in-this-environment"==e.code&&am(a)?Dm(a,d,{user:null,credential:null}):Hm(a,d,e))}))};function Km(a,b){O.call(this,gl,void 0,b,"differentDeviceError");this.a=a}t(Km,O);Km.prototype.u=function(){var a=
this;M(this,this.i(),function(){a.a()});this.i().focus();Km.o.u.call(this)};Km.prototype.l=function(){this.a=null;Km.o.l.call(this)};r(Km.prototype,{i:Q});H.differentDeviceError=function(a,b){var c=new Km(function(){c.m();V(a,b)});c.render(b);Z(a,c)};function Lm(a,b,c,d){O.call(this,ql,{email:a,T:!!c},d,"emailChangeRevoke");this.i=b;this.a=c||null}t(Lm,O);Lm.prototype.u=function(){var a=this;M(this,K(this,"firebaseui-id-reset-password-link"),function(){a.i()});this.a&&(this.A(this.a),this.s().focus());
Lm.o.u.call(this)};Lm.prototype.l=function(){this.i=this.a=null;Lm.o.l.call(this)};r(Lm.prototype,{s:zl,D:Q,A:Al});function Mm(){return K(this,"firebaseui-id-new-password")}function Nm(){return K(this,"firebaseui-id-password-toggle")}function Om(){this.La=!this.La;var a=Nm.call(this),b=Mm.call(this);this.La?(b.type="text",wj(a,"firebaseui-input-toggle-off"),xj(a,"firebaseui-input-toggle-on")):(b.type="password",wj(a,"firebaseui-input-toggle-on"),xj(a,"firebaseui-input-toggle-off"));b.focus()}function Pm(){return K(this,
"firebaseui-id-new-password-error")}function Qm(){this.La=!1;var a=Mm.call(this);a.type="password";var b=Pm.call(this);lk(this,a,function(){qk(b)&&(L(a,!0),pk(b))});var c=Nm.call(this);wj(c,"firebaseui-input-toggle-on");xj(c,"firebaseui-input-toggle-off");nk(this,a,function(){wj(c,"firebaseui-input-toggle-focus");xj(c,"firebaseui-input-toggle-blur")});ok(this,a,function(){wj(c,"firebaseui-input-toggle-blur");xj(c,"firebaseui-input-toggle-focus")});M(this,c,q(Om,this))}function Rm(){var a=Mm.call(this);
var b=Pm.call(this);J(a)?(L(a,!0),pk(b),b=!0):(L(a,!1),N(b,z("Enter your password").toString()),b=!1);return b?J(a):null}function Sm(a,b,c){O.call(this,nl,{email:a},c,"passwordReset");this.a=b}t(Sm,O);Sm.prototype.u=function(){this.J();this.D(this.a);Wk(this,this.i(),this.a);this.i().focus();Sm.o.u.call(this)};Sm.prototype.l=function(){this.a=null;Sm.o.l.call(this)};r(Sm.prototype,{i:Mm,A:Pm,L:Nm,J:Qm,s:Rm,R:zl,P:Q,D:Al});function Tm(a,b,c,d,e){var f=c.s();f&&W(a,c.M(q(X(a).confirmPasswordReset,X(a)),
[d,f],function(){c.m();var g=new Ql(e);g.render(b);Z(a,g)},function(g){Um(a,b,c,g)}))}function Um(a,b,c,d){"auth/weak-password"==(d&&d.code)?(a=U(d),L(c.i(),!1),N(c.A(),a),c.i().focus()):(c&&c.m(),c=new Rl,c.render(b),Z(a,c))}function Vm(a,b,c){var d=new Lm(c,function(){W(a,d.M(q(X(a).sendPasswordResetEmail,X(a)),[c],function(){d.m();d=new Nl(c,void 0,C(S(a)),D(S(a)));d.render(b);Z(a,d)},function(){d.f(z("Unable to send password reset code to specified email").toString())}))});d.render(b);Z(a,d)}
H.passwordReset=function(a,b,c,d){W(a,X(a).verifyPasswordResetCode(c).then(function(e){var f=new Sm(e,function(){Tm(a,b,f,c,d)});f.render(b);Z(a,f)},function(){Um(a,b)}))};H.emailChangeRevocation=function(a,b,c){var d=null;W(a,X(a).checkActionCode(c).then(function(e){d=e.data.email;return X(a).applyActionCode(c)}).then(function(){Vm(a,b,d)},function(){var e=new Sl;e.render(b);Z(a,e)}))};H.emailVerification=function(a,b,c,d){W(a,X(a).applyActionCode(c).then(function(){var e=new Ol(d);e.render(b);Z(a,
e)},function(){var e=new Pl;e.render(b);Z(a,e)}))};function Wm(a,b){try{var c="number"==typeof a.selectionStart}catch(d){c=!1}c?(a.selectionStart=b,a.selectionEnd=b):w&&!Db("9")&&("textarea"==a.type&&(b=a.value.substring(0,b).replace(/(\r\n|\r|\n)/g,"\n").length),a=a.createTextRange(),a.collapse(!0),a.move("character",b),a.select())}function Xm(a,b,c,d,e,f){O.call(this,fl,{email:c},f,"emailLinkSignInConfirmation",{H:d,G:e});this.i=a;this.s=b}t(Xm,O);Xm.prototype.u=function(){this.D(this.i);this.J(this.i,
this.s);this.a().focus();Wm(this.a(),(this.a().value||"").length);Xm.o.u.call(this)};Xm.prototype.l=function(){this.s=this.i=null;Xm.o.l.call(this)};r(Xm.prototype,{a:Hl,P:Il,D:Jl,L:Kl,A:Ll,U:zl,R:Q,J:Al});H.emailLinkConfirmation=function(a,b,c,d,e,f){var g=new Xm(function(){var h=g.A();h?(g.m(),d(a,b,h,c)):g.a().focus()},function(){g.m();V(a,b,e||void 0)},e||void 0,C(S(a)),D(S(a)));g.render(b);Z(a,g);f&&g.f(f)};function Ym(a,b,c,d,e){O.call(this,kl,{na:a},e,"emailLinkSignInLinkingDifferentDevice",
{H:c,G:d});this.a=b}t(Ym,O);Ym.prototype.u=function(){this.s(this.a);this.i().focus();Ym.o.u.call(this)};Ym.prototype.l=function(){this.a=null;Ym.o.l.call(this)};r(Ym.prototype,{i:zl,s:Al});H.emailLinkNewDeviceLinking=function(a,b,c,d){var e=new Tg(c);c=e.a.a.get(E.PROVIDER_ID)||null;Xg(e,null);if(c){var f=new Ym(yg(S(a),c),function(){f.m();d(a,b,e.toString())},C(S(a)),D(S(a)));f.render(b);Z(a,f)}else V(a,b)};function Zm(a){O.call(this,cl,void 0,a,"blank")}t(Zm,O);function $m(a,b,c,d,e){var f=new Zm,
g=new Tg(c),h=g.a.a.get(E.Va)||"",k=g.a.a.get(E.Na)||"",l="1"===g.a.a.get(E.Ka),v=Wg(g),ya=g.a.a.get(E.PROVIDER_ID)||null;g=g.a.a.get(E.mb)||null;an(a,g);var sa=!Hi(Fi,T(a)),Da=d||Ti(k,T(a)),Ka=(d=Ui(k,T(a)))&&d.a;ya&&Ka&&Ka.providerId!==ya&&(Ka=null);f.render(b);Z(a,f);W(a,f.M(function(){var ba=B(null);ba=v&&sa||sa&&l?ff(Error("anonymous-user-not-found")):bn(a,c).then(function(ng){if(ya&&!Ka)throw Error("pending-credential-not-found");return ng});var ud=null;return ba.then(function(ng){ud=ng;return e?
null:X(a).checkActionCode(h)}).then(function(){return ud})},[],function(ba){Da?cn(a,f,Da,c,Ka,ba):l?(f.m(),I("differentDeviceError",a,b)):(f.m(),I("emailLinkConfirmation",a,b,c,dn))},function(ba){var ud=void 0;if(!ba||!ba.name||"cancel"!=ba.name)switch(f.m(),ba&&ba.message){case "anonymous-user-not-found":I("differentDeviceError",a,b);break;case "anonymous-user-mismatch":I("anonymousUserMismatch",a,b);break;case "pending-credential-not-found":I("emailLinkNewDeviceLinking",a,b,c,en);break;default:ba&&
(ud=U(ba)),V(a,b,void 0,ud)}}))}function dn(a,b,c,d){$m(a,b,d,c,!0)}function en(a,b,c){$m(a,b,c)}function cn(a,b,c,d,e,f){var g=P(b);b.X("mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active firebaseui-progress-dialog-loading-icon",z("Signing in...").toString());var h=null;e=(f?fn(a,f,c,d,e):gn(a,c,d,e)).then(function(k){G(Gi,T(a));G(Fi,T(a));b.h();b.X("firebaseui-icon-done",z("Signed in!").toString());h=setTimeout(function(){b.h();em(a,b,k,!0)},1E3);W(a,function(){b&&(b.h(),b.m());clearTimeout(h)})},
function(k){b.h();b.m();if(!k.name||"cancel"!=k.name){var l=U(k);"auth/email-already-in-use"==k.code||"auth/credential-already-in-use"==k.code?(G(Gi,T(a)),G(Fi,T(a))):"auth/invalid-email"==k.code?(l=z("The email provided does not match the current sign-in session.").toString(),I("emailLinkConfirmation",a,g,d,dn,null,l)):V(a,g,c,l)}});W(a,e)}H.emailLinkSignInCallback=$m;function hn(a,b,c,d,e,f){O.call(this,jl,{email:a,na:b},f,"emailLinkSignInLinking",{H:d,G:e});this.a=c}t(hn,O);hn.prototype.u=function(){this.s(this.a);
this.i().focus();hn.o.u.call(this)};hn.prototype.l=function(){this.a=null;hn.o.l.call(this)};r(hn.prototype,{i:zl,s:Al});function jn(a,b,c,d){var e=P(b);tm(a,b,c,function(){V(a,e,c)},function(f){if(!f.name||"cancel"!=f.name){var g=U(f);f&&"auth/network-request-failed"==f.code?b.f(g):(b.m(),V(a,e,c,g))}},d)}H.emailLinkSignInLinking=function(a,b,c){var d=Oi(T(a));Pi(T(a));if(d){var e=d.a.providerId,f=new hn(c,yg(S(a),e),function(){jn(a,f,c,d)},C(S(a)),D(S(a)));f.render(b);Z(a,f)}else V(a,b)};function kn(a,
b,c,d,e,f){O.call(this,dl,{email:a},f,"emailLinkSignInSent",{H:d,G:e});this.s=b;this.a=c}t(kn,O);kn.prototype.u=function(){var a=this;M(this,this.i(),function(){a.a()});M(this,K(this,"firebaseui-id-trouble-getting-email-link"),function(){a.s()});this.i().focus();kn.o.u.call(this)};kn.prototype.l=function(){this.a=this.s=null;kn.o.l.call(this)};r(kn.prototype,{i:Q});H.emailLinkSignInSent=function(a,b,c,d,e){var f=new kn(c,function(){f.m();I("emailNotReceived",a,b,c,d,e)},function(){f.m();d()},C(S(a)),
D(S(a)));f.render(b);Z(a,f)};function ln(a,b,c,d,e,f,g){O.call(this,vl,{Vb:a,Gb:b},g,"emailMismatch",{H:e,G:f});this.s=c;this.i=d}t(ln,O);ln.prototype.u=function(){this.D(this.s,this.i);this.A().focus();ln.o.u.call(this)};ln.prototype.l=function(){this.i=this.a=null;ln.o.l.call(this)};r(ln.prototype,{A:zl,J:Q,D:Al});H.emailMismatch=function(a,b,c){var d=Oi(T(a));if(d){var e=new ln(c.user.email,d.f,function(){var f=e;Pi(T(a));em(a,f,c)},function(){var f=c.credential.providerId,g=P(e);e.m();d.a?I("federatedLinking",
a,g,d.f,f):I("federatedSignIn",a,g,d.f,f)},C(S(a)),D(S(a)));e.render(b);Z(a,e)}else V(a,b)};function mn(a,b,c,d,e){O.call(this,el,void 0,e,"emailNotReceived",{H:c,G:d});this.i=a;this.a=b}t(mn,O);mn.prototype.u=function(){var a=this;M(this,this.s(),function(){a.a()});M(this,this.ya(),function(){a.i()});this.s().focus();mn.o.u.call(this)};mn.prototype.ya=function(){return K(this,"firebaseui-id-resend-email-link")};mn.prototype.l=function(){this.a=this.i=null;mn.o.l.call(this)};r(mn.prototype,{s:Q});
H.emailNotReceived=function(a,b,c,d,e){var f=new mn(function(){tm(a,f,c,d,function(g){g=U(g);f.f(g)},e)},function(){f.m();V(a,b,c)},C(S(a)),D(S(a)));f.render(b);Z(a,f)};function nn(a,b,c,d,e,f){O.call(this,ll,{email:a,na:b},f,"federatedLinking",{H:d,G:e});this.a=c}t(nn,O);nn.prototype.u=function(){this.s(this.a);this.i().focus();nn.o.u.call(this)};nn.prototype.l=function(){this.a=null;nn.o.l.call(this)};r(nn.prototype,{i:zl,s:Al});H.federatedLinking=function(a,b,c,d,e){var f=Oi(T(a));if(f&&f.a){var g=
new nn(c,yg(S(a),d),function(){km(a,g,d,c)},C(S(a)),D(S(a)));g.render(b);Z(a,g);e&&g.f(e)}else V(a,b)};H.federatedRedirect=function(a,b){var c=new Zm;c.render(b);Z(a,c);b=xg(S(a))[0];km(a,c,b)};H.federatedSignIn=function(a,b,c,d,e){var f=new nn(c,yg(S(a),d),function(){km(a,f,d,c)},C(S(a)),D(S(a)));f.render(b);Z(a,f);e&&f.f(e)};function on(a,b,c,d){var e=b.A();e?W(a,b.M(q(a.Lb,a),[c,e],function(f){f=f.user.linkWithCredential(d).then(function(g){return em(a,b,{user:g.user,credential:d,operationType:g.operationType,
additionalUserInfo:g.additionalUserInfo})});W(a,f);return f},function(f){if(!f.name||"cancel"!=f.name)switch(f.code){case "auth/wrong-password":L(b.i(),!1);N(b.D(),U(f));break;case "auth/too-many-requests":b.f(U(f));break;default:Be("signInWithEmailAndPassword: "+f.message,void 0),b.f(U(f))}})):b.i().focus()}H.passwordLinking=function(a,b,c){var d=Oi(T(a));Pi(T(a));var e=d&&d.a;if(e){var f=new Fl(c,function(){on(a,f,c,e)},function(){f.m();I("passwordRecovery",a,b,c)},C(S(a)),D(S(a)));f.render(b);
Z(a,f)}else V(a,b)};function pn(a,b,c,d,e,f){O.call(this,$k,{email:c,Oa:!!b},f,"passwordRecovery",{H:d,G:e});this.a=a;this.s=b}t(pn,O);pn.prototype.u=function(){this.J();this.L(this.a,this.s);J(this.i())||this.i().focus();Wk(this,this.i(),this.a);pn.o.u.call(this)};pn.prototype.l=function(){this.s=this.a=null;pn.o.l.call(this)};r(pn.prototype,{i:Hl,D:Il,J:Jl,P:Kl,A:Ll,U:zl,R:Q,L:Al});function qn(a,b){var c=b.A();if(c){var d=P(b);W(a,b.M(q(X(a).sendPasswordResetEmail,X(a)),[c],function(){b.m();var e=
new Nl(c,function(){e.m();V(a,d)},C(S(a)),D(S(a)));e.render(d);Z(a,e)},function(e){L(b.i(),!1);N(b.D(),U(e))}))}else b.i().focus()}H.passwordRecovery=function(a,b,c,d,e){var f=new pn(function(){qn(a,f)},d?void 0:function(){f.m();V(a,b)},c,C(S(a)),D(S(a)));f.render(b);Z(a,f);e&&f.f(e)};H.passwordSignIn=function(a,b,c,d){var e=new Ml(function(){pm(a,e)},function(){var f=e.P();e.m();I("passwordRecovery",a,b,f)},c,C(S(a)),D(S(a)),d);e.render(b);Z(a,e)};function rn(){return K(this,"firebaseui-id-name")}
function sn(){return K(this,"firebaseui-id-name-error")}function tn(a,b,c,d,e,f,g,h,k){O.call(this,Zk,{email:d,Jb:a,name:e,Oa:!!c,ha:!!h},k,"passwordSignUp",{H:f,G:g});this.a=b;this.J=c;this.D=a}t(tn,O);tn.prototype.u=function(){this.ba();this.D&&this.Ra();this.sa();this.ra(this.a,this.J);this.D?(Vk(this,this.i(),this.A()),Vk(this,this.A(),this.s())):Vk(this,this.i(),this.s());this.a&&Wk(this,this.s(),this.a);J(this.i())?this.D&&!J(this.A())?this.A().focus():this.s().focus():this.i().focus();tn.o.u.call(this)};
tn.prototype.l=function(){this.J=this.a=null;tn.o.l.call(this)};r(tn.prototype,{i:Hl,U:Il,ba:Jl,bb:Kl,P:Ll,A:rn,nc:sn,Ra:function(){var a=rn.call(this),b=sn.call(this);lk(this,a,function(){qk(b)&&(L(a,!0),pk(b))})},L:function(){var a=rn.call(this);var b=sn.call(this);var c=J(a);c=!/^[\s\xa0]*$/.test(null==c?"":String(c));L(a,c);c?(pk(b),b=!0):(N(b,z("Enter your account name").toString()),b=!1);return b?Xa(J(a)):null},s:Mm,da:Pm,Ab:Nm,sa:Qm,R:Rm,kc:zl,Cb:Q,ra:Al});function un(a,b){var c=Jg(S(a)),d=
b.P(),e=null;c&&(e=b.L());var f=b.R();if(d){if(c)if(e)e=nb(e);else{b.A().focus();return}if(f){var g=firebase.auth.EmailAuthProvider.credential(d,f);W(a,b.M(q(a.Mb,a),[d,f],function(h){var k={user:h.user,credential:g,operationType:h.operationType,additionalUserInfo:h.additionalUserInfo};return c?(h=h.user.updateProfile({displayName:e}).then(function(){return em(a,b,k)}),W(a,h),h):em(a,b,k)},function(h){if(!h.name||"cancel"!=h.name){var k=U(h);switch(h.code){case "auth/email-already-in-use":return vn(a,
b,d,h);case "auth/too-many-requests":k=z("Too many account requests are coming from your IP address. Try again in a few minutes.").toString();case "auth/operation-not-allowed":case "auth/weak-password":L(b.s(),!1);N(b.da(),k);break;default:h="setAccountInfo: "+hi(h),Be(h,void 0),b.f(k)}}}))}else b.s().focus()}else b.i().focus()}function vn(a,b,c,d){function e(){var g=U(d);L(b.i(),!1);N(b.U(),g);b.i().focus()}var f=X(a).fetchSignInMethodsForEmail(c).then(function(g){g.length?e():(g=P(b),b.m(),I("passwordRecovery",
a,g,c,!1,Fd().toString()))},function(){e()});W(a,f);return f}H.passwordSignUp=function(a,b,c,d,e,f){function g(){h.m();V(a,b)}var h=new tn(Jg(S(a)),function(){un(a,h)},e?void 0:g,c,d,C(S(a)),D(S(a)),f);h.render(b);Z(a,h)};function wn(){return K(this,"firebaseui-id-phone-confirmation-code")}function xn(){return K(this,"firebaseui-id-phone-confirmation-code-error")}function yn(){return K(this,"firebaseui-id-resend-countdown")}function zn(a,b,c,d,e,f,g,h,k){O.call(this,yl,{phoneNumber:e},k,"phoneSignInFinish",
{H:g,G:h});this.Ra=f;this.i=new Jj(1E3);this.D=f;this.P=a;this.a=b;this.J=c;this.L=d}t(zn,O);zn.prototype.u=function(){var a=this;this.R(this.Ra);Nf(this.i,"tick",this.A,!1,this);this.i.start();M(this,K(this,"firebaseui-id-change-phone-number-link"),function(){a.P()});M(this,this.ya(),function(){a.L()});this.sa(this.a);this.da(this.a,this.J);this.s().focus();zn.o.u.call(this)};zn.prototype.l=function(){this.L=this.J=this.a=this.P=null;Kj(this.i);Vf(this.i,"tick",this.A);this.i=null;zn.o.l.call(this)};
zn.prototype.A=function(){--this.D;0<this.D?this.R(this.D):(Kj(this.i),Vf(this.i,"tick",this.A),this.ra(),this.bb())};r(zn.prototype,{s:wn,ba:xn,sa:function(a){var b=wn.call(this),c=xn.call(this);lk(this,b,function(){qk(c)&&(L(b,!0),pk(c))});a&&mk(this,b,function(){a()})},U:function(){var a=Xa(J(wn.call(this))||"");return/^\d{6}$/.test(a)?a:null},sb:yn,R:function(a){pc(yn.call(this),z("Resend code in "+((9<a?"0:":"0:0")+a)).toString())},ra:function(){pk(this.sb())},ya:function(){return K(this,"firebaseui-id-resend-link")},
bb:function(){N(this.ya())},Cb:zl,Ab:Q,da:Al});function An(a,b,c,d){function e(g){b.s().focus();L(b.s(),!1);N(b.ba(),g)}var f=b.U();f?(b.X("mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active firebaseui-progress-dialog-loading-icon",z("Verifying...").toString()),W(a,b.M(q(d.confirm,d),[f],function(g){b.h();b.X("firebaseui-icon-done",z("Verified!").toString());var h=setTimeout(function(){b.h();b.m();var k={user:Bn(a).currentUser,credential:null,operationType:g.operationType,additionalUserInfo:g.additionalUserInfo};
em(a,b,k,!0)},1E3);W(a,function(){b&&b.h();clearTimeout(h)})},function(g){if(g.name&&"cancel"==g.name)b.h();else{var h=U(g);switch(g.code){case "auth/credential-already-in-use":b.h();break;case "auth/code-expired":g=P(b);b.h();b.m();I("phoneSignInStart",a,g,c,h);break;case "auth/missing-verification-code":case "auth/invalid-verification-code":b.h();e(h);break;default:b.h(),b.f(h)}}}))):e(z("Wrong code. Try again.").toString())}H.phoneSignInFinish=function(a,b,c,d,e,f){var g=new zn(function(){g.m();
I("phoneSignInStart",a,b,c)},function(){An(a,g,c,e)},function(){g.m();V(a,b)},function(){g.m();I("phoneSignInStart",a,b,c)},ae(c),d,C(S(a)),D(S(a)));g.render(b);Z(a,g);f&&g.f(f)};var Cn=!w&&!(u("Safari")&&!(mb()||u("Coast")||u("Opera")||u("Edge")||u("Firefox")||u("FxiOS")||u("Silk")||u("Android")));function Dn(a,b){if(/-[a-z]/.test(b))return null;if(Cn&&a.dataset){if(!(!u("Android")||mb()||u("Firefox")||u("FxiOS")||u("Opera")||u("Silk")||b in a.dataset))return null;a=a.dataset[b];return void 0===
a?null:a}return a.getAttribute("data-"+String(b).replace(/([A-Z])/g,"-$1").toLowerCase())}function En(a,b,c){var d=this;a=fd(Fk,{items:a},null,this.w);Mk.call(this,a,!0,!0);c&&(c=Fn(a,c))&&(c.focus(),dk(c,a));M(this,a,function(e){if(e=(e=qc(e.target,"firebaseui-id-list-box-dialog-button"))&&Dn(e,"listboxid"))Nk.call(d),b(e)})}function Fn(a,b){a=(a||document).getElementsByTagName("BUTTON");for(var c=0;c<a.length;c++)if(Dn(a[c],"listboxid")===b)return a[c];return null}function Gn(){return K(this,"firebaseui-id-phone-number")}
function Hn(){return K(this,"firebaseui-id-country-selector")}function In(){return K(this,"firebaseui-id-phone-number-error")}function Jn(a,b){var c=a.a,d=Kn("1-US-0",c),e=null;b&&Kn(b,c)?e=b:d?e="1-US-0":e=0<c.length?c[0].c:null;if(!e)throw Error("No available default country");Ln.call(this,e,a)}function Kn(a,b){a=Td(a);return!(!a||!Oa(b,a))}function Mn(a){return La(a,function(b){return{id:b.c,Ga:"firebaseui-flag "+Nn(b),label:b.name+" "+("\u200e+"+b.b)}})}function Nn(a){return"firebaseui-flag-"+
a.g}function On(a){var b=this;En.call(this,Mn(a.a),function(c){Ln.call(b,c,a,!0);b.K().focus()},this.wa)}function Ln(a,b,c){var d=Td(a);d&&(c&&(c=Xa(J(Gn.call(this))||""),b=Sd(b,c),b.length&&b[0].b!=d.b&&(c="+"+d.b+c.substr(b[0].b.length+1),yj(Gn.call(this),c))),b=Td(this.wa),this.wa=a,a=K(this,"firebaseui-id-country-selector-flag"),b&&xj(a,Nn(b)),wj(a,Nn(d)),pc(K(this,"firebaseui-id-country-selector-code"),"\u200e+"+d.b))}function Pn(a,b,c,d,e,f,g,h,k,l){O.call(this,xl,{tb:b,va:k||null,Qa:!!c,ha:!!f},
l,"phoneSignInStart",{H:d,G:e});this.J=h||null;this.L=b;this.a=a;this.A=c||null;this.ba=g||null}t(Pn,O);Pn.prototype.u=function(){this.da(this.ba,this.J);this.P(this.a,this.A||void 0);this.L||Vk(this,this.K(),this.i());Wk(this,this.i(),this.a);this.K().focus();Wm(this.K(),(this.K().value||"").length);Pn.o.u.call(this)};Pn.prototype.l=function(){this.A=this.a=null;Pn.o.l.call(this)};r(Pn.prototype,{qb:Ok,K:Gn,D:In,da:function(a,b,c){var d=this,e=Gn.call(this),f=Hn.call(this),g=In.call(this),h=a||Yd,
k=h.a;if(0==k.length)throw Error("No available countries provided.");Jn.call(d,h,b);M(this,f,function(){On.call(d,h)});lk(this,e,function(){qk(g)&&(L(e,!0),pk(g));var l=Xa(J(e)||""),v=Td(this.wa),ya=Sd(h,l);l=Kn("1-US-0",k);ya.length&&ya[0].b!=v.b&&(v=ya[0],Ln.call(d,"1"==v.b&&l?"1-US-0":v.c,h))});c&&mk(this,e,function(){c()})},R:function(a){var b=Xa(J(Gn.call(this))||"");a=a||Yd;var c=a.a,d=Sd(Yd,b);if(d.length&&!Oa(c,d[0]))throw yj(Gn.call(this)),Gn.call(this).focus(),N(In.call(this),z("The country code provided is not supported.").toString()),
Error("The country code provided is not supported.");c=Td(this.wa);d.length&&d[0].b!=c.b&&Ln.call(this,d[0].c,a);d.length&&(b=b.substr(d[0].b.length+1));return b?new Zd(this.wa,b):null},sa:Hn,U:function(){return K(this,"firebaseui-recaptcha-container")},s:function(){return K(this,"firebaseui-id-recaptcha-error")},i:zl,ra:Q,P:Al});function Qn(a,b,c,d){try{var e=b.R(ej)}catch(f){return}e?cj?(b.X("mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active firebaseui-progress-dialog-loading-icon",
z("Verifying...").toString()),W(a,b.M(q(a.Qb,a),[ae(e),c],function(f){var g=P(b);b.X("firebaseui-icon-done",z("Code sent!").toString());var h=setTimeout(function(){b.h();b.m();I("phoneSignInFinish",a,g,e,15,f)},1E3);W(a,function(){b&&b.h();clearTimeout(h)})},function(f){b.h();if(!f.name||"cancel"!=f.name){grecaptcha.reset(fj);cj=null;var g=f&&f.message||"";if(f.code)switch(f.code){case "auth/too-many-requests":g=z("This phone number has been used too many times").toString();break;case "auth/invalid-phone-number":case "auth/missing-phone-number":b.K().focus();
N(b.D(),Dd().toString());return;default:g=U(f)}b.f(g)}}))):dj?N(b.s(),z("Solve the reCAPTCHA").toString()):!dj&&d&&b.i().click():(b.K().focus(),N(b.D(),Dd().toString()))}H.phoneSignInStart=function(a,b,c,d){var e=Dg(S(a))||{};cj=null;dj=!(e&&"invisible"===e.size);var f=qm(a),g=Hg(S(a)),h=f?Gg(S(a)):null;g=c&&c.a||g&&g.c||null;c=c&&c.va||h;(h=Ig(S(a)))&&Xd(h);ej=h?new Rd(Ig(S(a))):Yd;var k=new Pn(function(v){Qn(a,k,l,!(!v||!v.keyCode))},dj,f?null:function(){l.clear();k.m();V(a,b)},C(S(a)),D(S(a)),
f,ej,g,c);k.render(b);Z(a,k);d&&k.f(d);e.callback=function(v){k.s()&&pk(k.s());cj=v;dj||Qn(a,k,l)};e["expired-callback"]=function(){cj=null};var l=new firebase.auth.RecaptchaVerifier(dj?k.U():k.i(),e,Bn(a).app);W(a,k.M(q(l.render,l),[],function(v){fj=v},function(v){v.name&&"cancel"==v.name||(v=U(v),k.m(),V(a,b,void 0,v))}))};function Rn(a,b,c,d,e){O.call(this,wl,{Ib:b},e,"providerSignIn",{H:c,G:d});this.a=a}t(Rn,O);Rn.prototype.u=function(){this.i(this.a);Rn.o.u.call(this)};Rn.prototype.l=function(){this.a=
null;Rn.o.l.call(this)};r(Rn.prototype,{i:function(a){function b(g){a(g)}for(var c=this.j?ic("firebaseui-id-idp-button",this.j||this.w.a):[],d=0;d<c.length;d++){var e=c[d],f=Dn(e,"providerId");M(this,e,xa(b,f))}}});H.providerSignIn=function(a,b,c){var d=new Rn(function(e){e==firebase.auth.EmailAuthProvider.PROVIDER_ID?(d.m(),rm(a,b)):e==firebase.auth.PhoneAuthProvider.PROVIDER_ID?(d.m(),I("phoneSignInStart",a,b)):"anonymous"==e?nm(a,d):km(a,d,e);Y(a);a.O.cancel()},zg(S(a)),C(S(a)),D(S(a)));d.render(b);
Z(a,d);c&&d.f(c);Sn(a)};H.sendEmailLinkForSignIn=function(a,b,c,d){var e=new Cm;e.render(b);Z(a,e);tm(a,e,c,d,function(f){e.m();f=U(f);I("signIn",a,b,c,f)})};function Tn(a,b,c,d,e,f,g){O.call(this,Xk,{email:c,Qa:!!b,ha:!!f},g,"signIn",{H:d,G:e});this.a=a;this.s=b}t(Tn,O);Tn.prototype.u=function(){this.D(this.a);this.J(this.a,this.s||void 0);this.i().focus();Wm(this.i(),(this.i().value||"").length);Tn.o.u.call(this)};Tn.prototype.l=function(){this.s=this.a=null;Tn.o.l.call(this)};r(Tn.prototype,{i:Hl,
P:Il,D:Jl,L:Kl,A:Ll,U:zl,R:Q,J:Al});H.signIn=function(a,b,c,d){var e=am(a),f=e&&Bg(S(a))!=ig,g=new Tn(function(){var h=g,k=h.A()||"";k&&sm(a,h,k)},f?null:function(){g.m();V(a,b,c)},c,C(S(a)),D(S(a)),e);g.render(b);Z(a,g);d&&g.f(d)};function Un(a,b,c,d,e,f){O.call(this,ml,{email:a},f,"unsupportedProvider",{H:d,G:e});this.a=b;this.i=c}t(Un,O);Un.prototype.u=function(){this.A(this.a,this.i);this.s().focus();Un.o.u.call(this)};Un.prototype.l=function(){this.i=this.a=null;Un.o.l.call(this)};r(Un.prototype,
{s:zl,D:Q,A:Al});H.unsupportedProvider=function(a,b,c){var d=new Un(c,function(){d.m();I("passwordRecovery",a,b,c)},function(){d.m();V(a,b,c)},C(S(a)),D(S(a)));d.render(b);Z(a,d)};function Vn(a,b){this.aa=!1;var c=Wn(b);if(Xn[c])throw Error('An AuthUI instance already exists for the key "'+c+'"');Xn[c]=this;this.f=a;this.A=null;this.s=!1;Yn(this.f);this.a=firebase.initializeApp({apiKey:a.app.options.apiKey,authDomain:a.app.options.authDomain},a.app.name+"-firebaseui-temp").auth();Yn(this.a);this.a.setPersistence&&
this.a.setPersistence(firebase.auth.Auth.Persistence.SESSION);this.fa=b;this.X=new hg;this.h=this.K=this.v=this.F=null;this.i=[];this.$=!1;this.O=wh.Sa();this.j=this.C=null;this.ca=this.w=!1}function Yn(a){a&&a.INTERNAL&&a.INTERNAL.logFramework&&a.INTERNAL.logFramework("FirebaseUI-web")}var Xn={};function Wn(a){return a||"[DEFAULT]"}function lm(a){Y(a);a.v||(a.v=Zn(a,function(b){return b&&!Oi(T(a))?B(Bn(a).getRedirectResult().then(function(c){return c},function(c){if(c&&"auth/email-already-in-use"==
c.code&&c.email&&c.credential)throw c;return $n(a,c)})):B(X(a).getRedirectResult().then(function(c){return tg(S(a))&&!c.user&&a.j&&!a.j.isAnonymous?Bn(a).getRedirectResult():c}))}));return a.v}function Z(a,b){Y(a);a.h=b}var ao=null;function um(){return ao}function X(a){Y(a);return a.a}function Bn(a){Y(a);return a.f}function T(a){Y(a);return a.fa}m=Vn.prototype;m.gb=function(){Y(this);return!!Ri(T(this))||bo(eg())};function bo(a){a=new Tg(a);return"signIn"===(a.a.a.get(E.lb)||null)&&!!a.a.a.get(E.Va)}
m.start=function(a,b){Y(this);var c=this;"undefined"!==typeof this.f.languageCode&&(this.A=this.f.languageCode);var d="en".replace(/_/g,"-");this.f.languageCode=d;this.a.languageCode=d;this.s=!0;"undefined"!==typeof this.f.tenantId&&(this.a.tenantId=this.f.tenantId);this.cb(b);var e=n.document;this.C?this.C.then(function(){"complete"==e.readyState?co(c,a):Of(window,"load",function(){co(c,a)})}):"complete"==e.readyState?co(c,a):Of(window,"load",function(){co(c,a)})};function co(a,b){var c=dg(b);c.setAttribute("lang",
"en".replace(/_/g,"-"));if(ao){var d=ao;Y(d);Oi(T(d))&&Ge("UI Widget is already rendered on the page and is pending some user interaction. Only one widget instance can be rendered per page. The previous instance has been automatically reset.");ao.reset()}ao=a;a.K=c;eo(a,c);qi(new ri)&&qi(new si)?zm(a,b):(b=dg(b),c=new Tl(z("The browser you are using does not support Web Storage. Please try again in a different browser.").toString()),c.render(b),Z(a,c));Ri(T(a))&&(b=Ri(T(a)),an(a,b.a),G(Bi,T(a)))}
function Zn(a,b){if(a.w)return b(fo(a));W(a,function(){a.w=!1});if(tg(S(a))){var c=new Xe(function(d){W(a,a.f.onAuthStateChanged(function(e){a.j=e;a.w||(a.w=!0,d(b(fo(a))))}))});W(a,c);return c}a.w=!0;return b(null)}function fo(a){Y(a);return tg(S(a))&&a.j&&a.j.isAnonymous?a.j:null}function W(a,b){Y(a);if(b){a.i.push(b);var c=function(){Sa(a.i,function(d){return d==b})};"function"!=typeof b&&b.then(c,c)}}m.disableAutoSignIn=function(){Y(this);this.$=!0};function go(a){Y(a);var b;(b=a.$)||(a=S(a),
a=Fg(a,firebase.auth.GoogleAuthProvider.PROVIDER_ID),b=!(!a||"select_account"!==a.prompt));return b}function fm(a){"undefined"!==typeof a.f.languageCode&&a.s&&(a.s=!1,a.f.languageCode=a.A)}function an(a,b){a.f.tenantId=b;a.a.tenantId=b}m.reset=function(){Y(this);var a=this;this.K&&this.K.removeAttribute("lang");this.F&&dh(this.F);fm(this);Am();G(Bi,T(this));Y(this);this.O.cancel();this.v=B({user:null,credential:null});ao==this&&(ao=null);this.K=null;for(var b=0;b<this.i.length;b++)if("function"==
typeof this.i[b])this.i[b]();else this.i[b].cancel&&this.i[b].cancel();this.i=[];Pi(T(this));this.h&&(this.h.m(),this.h=null);this.I=null;this.a&&(this.C=Jm(this).then(function(){a.C=null},function(){a.C=null}))};function eo(a,b){a.I=null;a.F=new eh(b);a.F.register();Nf(a.F,"pageEnter",function(c){c=c&&c.pageId;if(a.I!=c){var d=S(a);(d=Qg(d).uiChanged||null)&&d(a.I,c);a.I=c}})}m.cb=function(a){Y(this);var b=this.X,c;for(c in a)try{Ld(b.a,c,a[c])}catch(d){Be('Invalid config: "'+c+'"',void 0)}wb&&Ld(b.a,
"popupMode",!1);Ig(b);!this.ca&&Rg(S(this))&&(Ge("signInSuccess callback is deprecated. Please use signInSuccessWithAuthResult callback instead."),this.ca=!0)};function S(a){Y(a);return a.X}m.Kb=function(){Y(this);var a=S(this),b=Md(a.a,"widgetUrl");var c=rg(a,b);S(this).a.get("popupMode")?(a=(window.screen.availHeight-600)/2,b=(window.screen.availWidth-500)/2,c=c||"about:blank",a={width:500,height:600,top:0<a?a:0,left:0<b?b:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1},a.target=a.target||c.target||
"google_popup",a.width=a.width||690,a.height=a.height||500,(a=$f(c,a))&&a.focus()):ag(c)};function Y(a){if(a.aa)throw Error("AuthUI instance is deleted!");}m.vb=function(){var a=this;Y(this);return this.a.app.delete().then(function(){var b=Wn(T(a));delete Xn[b];a.reset();a.aa=!0})};function Sn(a){Y(a);try{yh(a.O,Ag(S(a)),go(a)).then(function(b){return a.h?om(a,a.h,b):!1})}catch(b){}}m.wb=function(a,b){Y(this);var c=this,d=gg();if(!Kg(S(this)))throw Error("Email link sign-in should be enabled to trigger email sending.");
var e=Mg(S(this)),f=new Tg(e.url);Ug(f,d);b&&b.a&&(Vi(d,b,T(this)),Xg(f,b.a.providerId));Vg(f,Lg(S(this)));return Zn(this,function(g){g&&((g=g.uid)?f.a.a.set(E.Ja,g):Zc(f.a.a,E.Ja));e.url=f.toString();return X(c).sendSignInLinkToEmail(a,e)}).then(function(){var g=T(c),h={};h.email=a;Ii(Fi,ei(d,JSON.stringify(h)),g)},function(g){G(Gi,T(c));G(Fi,T(c));throw g;})};function bn(a,b){var c=Wg(new Tg(b));if(!c)return B(null);b=new Xe(function(d,e){var f=Bn(a).onAuthStateChanged(function(g){f();g&&g.isAnonymous&&
g.uid===c?d(g):g&&g.isAnonymous&&g.uid!==c?e(Error("anonymous-user-mismatch")):e(Error("anonymous-user-not-found"))});W(a,f)});W(a,b);return b}function fn(a,b,c,d,e){Y(a);var f=e||null,g=firebase.auth.EmailAuthProvider.credentialWithLink(c,d);c=f?X(a).signInWithEmailLink(c,d).then(function(h){return h.user.linkWithCredential(f)}).then(function(){return Jm(a)}).then(function(){return $n(a,{code:"auth/email-already-in-use"},f)}):X(a).fetchSignInMethodsForEmail(c).then(function(h){return h.length?$n(a,
{code:"auth/email-already-in-use"},g):b.linkWithCredential(g)});W(a,c);return c}function gn(a,b,c,d){Y(a);var e=d||null,f;b=X(a).signInWithEmailLink(b,c).then(function(g){f={user:g.user,credential:null,operationType:g.operationType,additionalUserInfo:g.additionalUserInfo};if(e)return g.user.linkWithCredential(e).then(function(h){f={user:h.user,credential:e,operationType:f.operationType,additionalUserInfo:h.additionalUserInfo}})}).then(function(){Jm(a)}).then(function(){return Bn(a).updateCurrentUser(f.user)}).then(function(){f.user=
Bn(a).currentUser;return f});W(a,b);return b}function Am(){var a=eg();if(bo(a)){a=new Tg(a);for(var b in E)E.hasOwnProperty(b)&&Zc(a.a.a,E[b]);b={state:"signIn",mode:"emailLink",operation:"clear"};var c=n.document.title;n.history&&n.history.replaceState&&n.history.replaceState(b,c,a.toString())}}m.Pb=function(a,b){Y(this);var c=this;return X(this).signInWithEmailAndPassword(a,b).then(function(d){return Zn(c,function(e){return e?Jm(c).then(function(){return $n(c,{code:"auth/email-already-in-use"},
firebase.auth.EmailAuthProvider.credential(a,b))}):d})})};m.Mb=function(a,b){Y(this);var c=this;return Zn(this,function(d){if(d){var e=firebase.auth.EmailAuthProvider.credential(a,b);return d.linkWithCredential(e)}return X(c).createUserWithEmailAndPassword(a,b)})};m.Ob=function(a){Y(this);var b=this;return Zn(this,function(c){return c?c.linkWithCredential(a).then(function(d){return d},function(d){if(d&&"auth/email-already-in-use"==d.code&&d.email&&d.credential)throw d;return $n(b,d,a)}):X(b).signInWithCredential(a)})};
function mm(a,b){Y(a);return Zn(a,function(c){return c&&!Oi(T(a))?c.linkWithPopup(b).then(function(d){return d},function(d){if(d&&"auth/email-already-in-use"==d.code&&d.email&&d.credential)throw d;return $n(a,d)}):X(a).signInWithPopup(b)})}m.Rb=function(a){Y(this);var b=this,c=this.v;this.v=null;return Zn(this,function(d){return d&&!Oi(T(b))?d.linkWithRedirect(a):X(b).signInWithRedirect(a)}).then(function(){},function(d){b.v=c;throw d;})};m.Qb=function(a,b){Y(this);var c=this;return Zn(this,function(d){return d?
d.linkWithPhoneNumber(a,b).then(function(e){return new Ah(e,function(f){if("auth/credential-already-in-use"==f.code)return $n(c,f);throw f;})}):Bn(c).signInWithPhoneNumber(a,b).then(function(e){return new Ah(e)})})};m.Nb=function(){Y(this);return Bn(this).signInAnonymously()};function hm(a,b){Y(a);return Zn(a,function(c){if(a.j&&!a.j.isAnonymous&&tg(S(a))&&!X(a).currentUser)return Jm(a).then(function(){"password"==b.credential.providerId&&(b.credential=null);return b});if(c)return Jm(a).then(function(){return c.linkWithCredential(b.credential)}).then(function(d){b.user=
d.user;b.credential=d.credential;b.operationType=d.operationType;b.additionalUserInfo=d.additionalUserInfo;return b},function(d){if(d&&"auth/email-already-in-use"==d.code&&d.email&&d.credential)throw d;return $n(a,d,b.credential)});if(!b.user)throw Error('Internal error: An incompatible or outdated version of "firebase.js" may be used.');return Jm(a).then(function(){return Bn(a).updateCurrentUser(b.user)}).then(function(){b.user=Bn(a).currentUser;b.operationType="signIn";b.credential&&b.credential.providerId&&
"password"==b.credential.providerId&&(b.credential=null);return b})})}m.Lb=function(a,b){Y(this);return X(this).signInWithEmailAndPassword(a,b)};function Jm(a){Y(a);return X(a).signOut()}function $n(a,b,c){Y(a);if(b&&b.code&&("auth/email-already-in-use"==b.code||"auth/credential-already-in-use"==b.code)){var d=ug(S(a));return B().then(function(){return d(new Hd("anonymous-upgrade-merge-conflict",null,c||b.credential))}).then(function(){a.h&&(a.h.m(),a.h=null);throw b;})}return ff(b)}Aa("firebaseui.auth.AuthUI",
Vn);Aa("firebaseui.auth.AuthUI.getInstance",function(a){a=Wn(a);return Xn[a]?Xn[a]:null});Aa("firebaseui.auth.AuthUI.prototype.disableAutoSignIn",Vn.prototype.disableAutoSignIn);Aa("firebaseui.auth.AuthUI.prototype.start",Vn.prototype.start);Aa("firebaseui.auth.AuthUI.prototype.setConfig",Vn.prototype.cb);Aa("firebaseui.auth.AuthUI.prototype.signIn",Vn.prototype.Kb);Aa("firebaseui.auth.AuthUI.prototype.reset",Vn.prototype.reset);Aa("firebaseui.auth.AuthUI.prototype.delete",Vn.prototype.vb);Aa("firebaseui.auth.AuthUI.prototype.isPendingRedirect",
Vn.prototype.gb);Aa("firebaseui.auth.AuthUIError",Hd);Aa("firebaseui.auth.AuthUIError.prototype.toJSON",Hd.prototype.toJSON);Aa("firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM",ig);Aa("firebaseui.auth.CredentialHelper.GOOGLE_YOLO","googleyolo");Aa("firebaseui.auth.CredentialHelper.NONE","none");Aa("firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID","anonymous")}).apply(typeof global!=="undefined"?global:typeof self!=="undefined"?self:window); if(typeof window!=='undefined'){window.dialogPolyfill=require('dialog-polyfill');}})();module.exports=firebaseui;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"dialog-polyfill":158,"firebase/app":163,"firebase/auth":164}],167:[function(require,module,exports){
var noCase = require('no-case')
var upperCase = require('upper-case')

/**
 * Header case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '-').replace(/^.|-./g, function (m) {
    return upperCase(m, locale)
  })
}

},{"no-case":176,"upper-case":192}],168:[function(require,module,exports){
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.idb = {}));
}(this, function (exports) { 'use strict';

  function toArray(arr) {
    return Array.prototype.slice.call(arr);
  }

  function promisifyRequest(request) {
    return new Promise(function(resolve, reject) {
      request.onsuccess = function() {
        resolve(request.result);
      };

      request.onerror = function() {
        reject(request.error);
      };
    });
  }

  function promisifyRequestCall(obj, method, args) {
    var request;
    var p = new Promise(function(resolve, reject) {
      request = obj[method].apply(obj, args);
      promisifyRequest(request).then(resolve, reject);
    });

    p.request = request;
    return p;
  }

  function promisifyCursorRequestCall(obj, method, args) {
    var p = promisifyRequestCall(obj, method, args);
    return p.then(function(value) {
      if (!value) return;
      return new Cursor(value, p.request);
    });
  }

  function proxyProperties(ProxyClass, targetProp, properties) {
    properties.forEach(function(prop) {
      Object.defineProperty(ProxyClass.prototype, prop, {
        get: function() {
          return this[targetProp][prop];
        },
        set: function(val) {
          this[targetProp][prop] = val;
        }
      });
    });
  }

  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function(prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function() {
        return promisifyRequestCall(this[targetProp], prop, arguments);
      };
    });
  }

  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function(prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function() {
        return this[targetProp][prop].apply(this[targetProp], arguments);
      };
    });
  }

  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function(prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function() {
        return promisifyCursorRequestCall(this[targetProp], prop, arguments);
      };
    });
  }

  function Index(index) {
    this._index = index;
  }

  proxyProperties(Index, '_index', [
    'name',
    'keyPath',
    'multiEntry',
    'unique'
  ]);

  proxyRequestMethods(Index, '_index', IDBIndex, [
    'get',
    'getKey',
    'getAll',
    'getAllKeys',
    'count'
  ]);

  proxyCursorRequestMethods(Index, '_index', IDBIndex, [
    'openCursor',
    'openKeyCursor'
  ]);

  function Cursor(cursor, request) {
    this._cursor = cursor;
    this._request = request;
  }

  proxyProperties(Cursor, '_cursor', [
    'direction',
    'key',
    'primaryKey',
    'value'
  ]);

  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [
    'update',
    'delete'
  ]);

  // proxy 'next' methods
  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {
    if (!(methodName in IDBCursor.prototype)) return;
    Cursor.prototype[methodName] = function() {
      var cursor = this;
      var args = arguments;
      return Promise.resolve().then(function() {
        cursor._cursor[methodName].apply(cursor._cursor, args);
        return promisifyRequest(cursor._request).then(function(value) {
          if (!value) return;
          return new Cursor(value, cursor._request);
        });
      });
    };
  });

  function ObjectStore(store) {
    this._store = store;
  }

  ObjectStore.prototype.createIndex = function() {
    return new Index(this._store.createIndex.apply(this._store, arguments));
  };

  ObjectStore.prototype.index = function() {
    return new Index(this._store.index.apply(this._store, arguments));
  };

  proxyProperties(ObjectStore, '_store', [
    'name',
    'keyPath',
    'indexNames',
    'autoIncrement'
  ]);

  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [
    'put',
    'add',
    'delete',
    'clear',
    'get',
    'getAll',
    'getKey',
    'getAllKeys',
    'count'
  ]);

  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [
    'openCursor',
    'openKeyCursor'
  ]);

  proxyMethods(ObjectStore, '_store', IDBObjectStore, [
    'deleteIndex'
  ]);

  function Transaction(idbTransaction) {
    this._tx = idbTransaction;
    this.complete = new Promise(function(resolve, reject) {
      idbTransaction.oncomplete = function() {
        resolve();
      };
      idbTransaction.onerror = function() {
        reject(idbTransaction.error);
      };
      idbTransaction.onabort = function() {
        reject(idbTransaction.error);
      };
    });
  }

  Transaction.prototype.objectStore = function() {
    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));
  };

  proxyProperties(Transaction, '_tx', [
    'objectStoreNames',
    'mode'
  ]);

  proxyMethods(Transaction, '_tx', IDBTransaction, [
    'abort'
  ]);

  function UpgradeDB(db, oldVersion, transaction) {
    this._db = db;
    this.oldVersion = oldVersion;
    this.transaction = new Transaction(transaction);
  }

  UpgradeDB.prototype.createObjectStore = function() {
    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));
  };

  proxyProperties(UpgradeDB, '_db', [
    'name',
    'version',
    'objectStoreNames'
  ]);

  proxyMethods(UpgradeDB, '_db', IDBDatabase, [
    'deleteObjectStore',
    'close'
  ]);

  function DB(db) {
    this._db = db;
  }

  DB.prototype.transaction = function() {
    return new Transaction(this._db.transaction.apply(this._db, arguments));
  };

  proxyProperties(DB, '_db', [
    'name',
    'version',
    'objectStoreNames'
  ]);

  proxyMethods(DB, '_db', IDBDatabase, [
    'close'
  ]);

  // Add cursor iterators
  // TODO: remove this once browsers do the right thing with promises
  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {
    [ObjectStore, Index].forEach(function(Constructor) {
      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.
      if (!(funcName in Constructor.prototype)) return;

      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {
        var args = toArray(arguments);
        var callback = args[args.length - 1];
        var nativeObject = this._store || this._index;
        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));
        request.onsuccess = function() {
          callback(request.result);
        };
      };
    });
  });

  // polyfill getAll
  [Index, ObjectStore].forEach(function(Constructor) {
    if (Constructor.prototype.getAll) return;
    Constructor.prototype.getAll = function(query, count) {
      var instance = this;
      var items = [];

      return new Promise(function(resolve) {
        instance.iterateCursor(query, function(cursor) {
          if (!cursor) {
            resolve(items);
            return;
          }
          items.push(cursor.value);

          if (count !== undefined && items.length == count) {
            resolve(items);
            return;
          }
          cursor.continue();
        });
      });
    };
  });

  function openDb(name, version, upgradeCallback) {
    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);
    var request = p.request;

    if (request) {
      request.onupgradeneeded = function(event) {
        if (upgradeCallback) {
          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));
        }
      };
    }

    return p.then(function(db) {
      return new DB(db);
    });
  }

  function deleteDb(name) {
    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);
  }

  exports.openDb = openDb;
  exports.deleteDb = deleteDb;

  Object.defineProperty(exports, '__esModule', { value: true });

}));

},{}],169:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],170:[function(require,module,exports){
var lowerCase = require('lower-case')

/**
 * Check if a string is lower case.
 *
 * @param  {String}  string
 * @param  {String}  [locale]
 * @return {Boolean}
 */
module.exports = function (string, locale) {
  return lowerCase(string, locale) === string
}

},{"lower-case":175}],171:[function(require,module,exports){
var upperCase = require('upper-case')

/**
 * Check if a string is upper case.
 *
 * @param  {String}  string
 * @param  {String}  [locale]
 * @return {Boolean}
 */
module.exports = function (string, locale) {
  return upperCase(string, locale) === string
}

},{"upper-case":192}],172:[function(require,module,exports){
/*!
 * JavaScript Cookie v2.2.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function (factory) {
	var registeredInModuleLoader;
	if (typeof define === 'function' && define.amd) {
		define(factory);
		registeredInModuleLoader = true;
	}
	if (typeof exports === 'object') {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function decode (s) {
		return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
	}

	function init (converter) {
		function api() {}

		function set (key, value, attributes) {
			if (typeof document === 'undefined') {
				return;
			}

			attributes = extend({
				path: '/'
			}, api.defaults, attributes);

			if (typeof attributes.expires === 'number') {
				attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);
			}

			// We're using "expires" because "max-age" is not supported by IE
			attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

			try {
				var result = JSON.stringify(value);
				if (/^[\{\[]/.test(result)) {
					value = result;
				}
			} catch (e) {}

			value = converter.write ?
				converter.write(value, key) :
				encodeURIComponent(String(value))
					.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);

			key = encodeURIComponent(String(key))
				.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)
				.replace(/[\(\)]/g, escape);

			var stringifiedAttributes = '';
			for (var attributeName in attributes) {
				if (!attributes[attributeName]) {
					continue;
				}
				stringifiedAttributes += '; ' + attributeName;
				if (attributes[attributeName] === true) {
					continue;
				}

				// Considers RFC 6265 section 5.2:
				// ...
				// 3.  If the remaining unparsed-attributes contains a %x3B (";")
				//     character:
				// Consume the characters of the unparsed-attributes up to,
				// not including, the first %x3B (";") character.
				// ...
				stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
			}

			return (document.cookie = key + '=' + value + stringifiedAttributes);
		}

		function get (key, json) {
			if (typeof document === 'undefined') {
				return;
			}

			var jar = {};
			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all.
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (!json && cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = decode(parts[0]);
					cookie = (converter.read || converter)(cookie, name) ||
						decode(cookie);

					if (json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					jar[name] = cookie;

					if (key === name) {
						break;
					}
				} catch (e) {}
			}

			return key ? jar[key] : jar;
		}

		api.set = set;
		api.get = function (key) {
			return get(key, false /* read as raw */);
		};
		api.getJSON = function (key) {
			return get(key, true /* read as json */);
		};
		api.remove = function (key, attributes) {
			set(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.defaults = {};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));

},{}],173:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.4';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],174:[function(require,module,exports){
var lowerCase = require('lower-case')

/**
 * Lower case the first character of a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  if (str == null) {
    return ''
  }

  str = String(str)

  return lowerCase(str.charAt(0), locale) + str.substr(1)
}

},{"lower-case":175}],175:[function(require,module,exports){
/**
 * Special language-specific overrides.
 *
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 *
 * @type {Object}
 */
var LANGUAGES = {
  tr: {
    regexp: /\u0130|\u0049|\u0049\u0307/g,
    map: {
      '\u0130': '\u0069',
      '\u0049': '\u0131',
      '\u0049\u0307': '\u0069'
    }
  },
  az: {
    regexp: /[\u0130]/g,
    map: {
      '\u0130': '\u0069',
      '\u0049': '\u0131',
      '\u0049\u0307': '\u0069'
    }
  },
  lt: {
    regexp: /[\u0049\u004A\u012E\u00CC\u00CD\u0128]/g,
    map: {
      '\u0049': '\u0069\u0307',
      '\u004A': '\u006A\u0307',
      '\u012E': '\u012F\u0307',
      '\u00CC': '\u0069\u0307\u0300',
      '\u00CD': '\u0069\u0307\u0301',
      '\u0128': '\u0069\u0307\u0303'
    }
  }
}

/**
 * Lowercase a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  var lang = LANGUAGES[locale]

  str = str == null ? '' : String(str)

  if (lang) {
    str = str.replace(lang.regexp, function (m) { return lang.map[m] })
  }

  return str.toLowerCase()
}

},{}],176:[function(require,module,exports){
var lowerCase = require('lower-case')

var NON_WORD_REGEXP = require('./vendor/non-word-regexp')
var CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')
var CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp')

/**
 * Sentence case a string.
 *
 * @param  {string} str
 * @param  {string} locale
 * @param  {string} replacement
 * @return {string}
 */
module.exports = function (str, locale, replacement) {
  if (str == null) {
    return ''
  }

  replacement = typeof replacement !== 'string' ? ' ' : replacement

  function replace (match, index, value) {
    if (index === 0 || index === (value.length - match.length)) {
      return ''
    }

    return replacement
  }

  str = String(str)
    // Support camel case ("camelCase" -> "camel Case").
    .replace(CAMEL_CASE_REGEXP, '$1 $2')
    // Support odd camel case ("CAMELCase" -> "CAMEL Case").
    .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')
    // Remove all non-word characters and replace with a single space.
    .replace(NON_WORD_REGEXP, replace)

  // Lower case the entire string.
  return lowerCase(str, locale)
}

},{"./vendor/camel-case-regexp":177,"./vendor/camel-case-upper-regexp":178,"./vendor/non-word-regexp":179,"lower-case":175}],177:[function(require,module,exports){
module.exports = /([a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])/g

},{}],178:[function(require,module,exports){
module.exports = /([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]+)([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A][a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A])/g

},{}],179:[function(require,module,exports){
module.exports = /[^A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]+/g

},{}],180:[function(require,module,exports){
var noCase = require('no-case')

/**
 * Param case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '-')
}

},{"no-case":176}],181:[function(require,module,exports){
var camelCase = require('camel-case')
var upperCaseFirst = require('upper-case-first')

/**
 * Pascal case a string.
 *
 * @param  {string}  value
 * @param  {string}  [locale]
 * @param  {boolean} [mergeNumbers]
 * @return {string}
 */
module.exports = function (value, locale, mergeNumbers) {
  return upperCaseFirst(camelCase(value, locale, mergeNumbers), locale)
}

},{"camel-case":154,"upper-case-first":191}],182:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":185}],183:[function(require,module,exports){
var noCase = require('no-case')

/**
 * Path case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '/')
}

},{"no-case":176}],184:[function(require,module,exports){
!function() {
    'use strict';
    function h(nodeName, attributes) {
        var lastSimple, child, simple, i, children = EMPTY_CHILDREN;
        for (i = arguments.length; i-- > 2; ) stack.push(arguments[i]);
        if (attributes && null != attributes.children) {
            if (!stack.length) stack.push(attributes.children);
            delete attributes.children;
        }
        while (stack.length) if ((child = stack.pop()) && void 0 !== child.pop) for (i = child.length; i--; ) stack.push(child[i]); else {
            if ('boolean' == typeof child) child = null;
            if (simple = 'function' != typeof nodeName) if (null == child) child = ''; else if ('number' == typeof child) child = String(child); else if ('string' != typeof child) simple = !1;
            if (simple && lastSimple) children[children.length - 1] += child; else if (children === EMPTY_CHILDREN) children = [ child ]; else children.push(child);
            lastSimple = simple;
        }
        var p = new VNode();
        p.nodeName = nodeName;
        p.children = children;
        p.attributes = null == attributes ? void 0 : attributes;
        p.key = null == attributes ? void 0 : attributes.key;
        if (void 0 !== options.vnode) options.vnode(p);
        return p;
    }
    function extend(obj, props) {
        for (var i in props) obj[i] = props[i];
        return obj;
    }
    function applyRef(ref, value) {
        if (null != ref) if ('function' == typeof ref) ref(value); else ref.current = value;
    }
    function cloneElement(vnode, props) {
        return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);
    }
    function enqueueRender(component) {
        if (!component.__d && (component.__d = !0) && 1 == items.push(component)) (options.debounceRendering || defer)(rerender);
    }
    function rerender() {
        var p;
        while (p = items.pop()) if (p.__d) renderComponent(p);
    }
    function isSameNodeType(node, vnode, hydrating) {
        if ('string' == typeof vnode || 'number' == typeof vnode) return void 0 !== node.splitText;
        if ('string' == typeof vnode.nodeName) return !node._componentConstructor && isNamedNode(node, vnode.nodeName); else return hydrating || node._componentConstructor === vnode.nodeName;
    }
    function isNamedNode(node, nodeName) {
        return node.__n === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();
    }
    function getNodeProps(vnode) {
        var props = extend({}, vnode.attributes);
        props.children = vnode.children;
        var defaultProps = vnode.nodeName.defaultProps;
        if (void 0 !== defaultProps) for (var i in defaultProps) if (void 0 === props[i]) props[i] = defaultProps[i];
        return props;
    }
    function createNode(nodeName, isSvg) {
        var node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);
        node.__n = nodeName;
        return node;
    }
    function removeNode(node) {
        var parentNode = node.parentNode;
        if (parentNode) parentNode.removeChild(node);
    }
    function setAccessor(node, name, old, value, isSvg) {
        if ('className' === name) name = 'class';
        if ('key' === name) ; else if ('ref' === name) {
            applyRef(old, null);
            applyRef(value, node);
        } else if ('class' === name && !isSvg) node.className = value || ''; else if ('style' === name) {
            if (!value || 'string' == typeof value || 'string' == typeof old) node.style.cssText = value || '';
            if (value && 'object' == typeof value) {
                if ('string' != typeof old) for (var i in old) if (!(i in value)) node.style[i] = '';
                for (var i in value) node.style[i] = 'number' == typeof value[i] && !1 === IS_NON_DIMENSIONAL.test(i) ? value[i] + 'px' : value[i];
            }
        } else if ('dangerouslySetInnerHTML' === name) {
            if (value) node.innerHTML = value.__html || '';
        } else if ('o' == name[0] && 'n' == name[1]) {
            var useCapture = name !== (name = name.replace(/Capture$/, ''));
            name = name.toLowerCase().substring(2);
            if (value) {
                if (!old) node.addEventListener(name, eventProxy, useCapture);
            } else node.removeEventListener(name, eventProxy, useCapture);
            (node.__l || (node.__l = {}))[name] = value;
        } else if ('list' !== name && 'type' !== name && !isSvg && name in node) {
            try {
                node[name] = null == value ? '' : value;
            } catch (e) {}
            if ((null == value || !1 === value) && 'spellcheck' != name) node.removeAttribute(name);
        } else {
            var ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));
            if (null == value || !1 === value) if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase()); else node.removeAttribute(name); else if ('function' != typeof value) if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value); else node.setAttribute(name, value);
        }
    }
    function eventProxy(e) {
        return this.__l[e.type](options.event && options.event(e) || e);
    }
    function flushMounts() {
        var c;
        while (c = mounts.shift()) {
            if (options.afterMount) options.afterMount(c);
            if (c.componentDidMount) c.componentDidMount();
        }
    }
    function diff(dom, vnode, context, mountAll, parent, componentRoot) {
        if (!diffLevel++) {
            isSvgMode = null != parent && void 0 !== parent.ownerSVGElement;
            hydrating = null != dom && !('__preactattr_' in dom);
        }
        var ret = idiff(dom, vnode, context, mountAll, componentRoot);
        if (parent && ret.parentNode !== parent) parent.appendChild(ret);
        if (!--diffLevel) {
            hydrating = !1;
            if (!componentRoot) flushMounts();
        }
        return ret;
    }
    function idiff(dom, vnode, context, mountAll, componentRoot) {
        var out = dom, prevSvgMode = isSvgMode;
        if (null == vnode || 'boolean' == typeof vnode) vnode = '';
        if ('string' == typeof vnode || 'number' == typeof vnode) {
            if (dom && void 0 !== dom.splitText && dom.parentNode && (!dom._component || componentRoot)) {
                if (dom.nodeValue != vnode) dom.nodeValue = vnode;
            } else {
                out = document.createTextNode(vnode);
                if (dom) {
                    if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
                    recollectNodeTree(dom, !0);
                }
            }
            out.__preactattr_ = !0;
            return out;
        }
        var vnodeName = vnode.nodeName;
        if ('function' == typeof vnodeName) return buildComponentFromVNode(dom, vnode, context, mountAll);
        isSvgMode = 'svg' === vnodeName ? !0 : 'foreignObject' === vnodeName ? !1 : isSvgMode;
        vnodeName = String(vnodeName);
        if (!dom || !isNamedNode(dom, vnodeName)) {
            out = createNode(vnodeName, isSvgMode);
            if (dom) {
                while (dom.firstChild) out.appendChild(dom.firstChild);
                if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
                recollectNodeTree(dom, !0);
            }
        }
        var fc = out.firstChild, props = out.__preactattr_, vchildren = vnode.children;
        if (null == props) {
            props = out.__preactattr_ = {};
            for (var a = out.attributes, i = a.length; i--; ) props[a[i].name] = a[i].value;
        }
        if (!hydrating && vchildren && 1 === vchildren.length && 'string' == typeof vchildren[0] && null != fc && void 0 !== fc.splitText && null == fc.nextSibling) {
            if (fc.nodeValue != vchildren[0]) fc.nodeValue = vchildren[0];
        } else if (vchildren && vchildren.length || null != fc) innerDiffNode(out, vchildren, context, mountAll, hydrating || null != props.dangerouslySetInnerHTML);
        diffAttributes(out, vnode.attributes, props);
        isSvgMode = prevSvgMode;
        return out;
    }
    function innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {
        var j, c, f, vchild, child, originalChildren = dom.childNodes, children = [], keyed = {}, keyedLen = 0, min = 0, len = originalChildren.length, childrenLen = 0, vlen = vchildren ? vchildren.length : 0;
        if (0 !== len) for (var i = 0; i < len; i++) {
            var _child = originalChildren[i], props = _child.__preactattr_, key = vlen && props ? _child._component ? _child._component.__k : props.key : null;
            if (null != key) {
                keyedLen++;
                keyed[key] = _child;
            } else if (props || (void 0 !== _child.splitText ? isHydrating ? _child.nodeValue.trim() : !0 : isHydrating)) children[childrenLen++] = _child;
        }
        if (0 !== vlen) for (var i = 0; i < vlen; i++) {
            vchild = vchildren[i];
            child = null;
            var key = vchild.key;
            if (null != key) {
                if (keyedLen && void 0 !== keyed[key]) {
                    child = keyed[key];
                    keyed[key] = void 0;
                    keyedLen--;
                }
            } else if (min < childrenLen) for (j = min; j < childrenLen; j++) if (void 0 !== children[j] && isSameNodeType(c = children[j], vchild, isHydrating)) {
                child = c;
                children[j] = void 0;
                if (j === childrenLen - 1) childrenLen--;
                if (j === min) min++;
                break;
            }
            child = idiff(child, vchild, context, mountAll);
            f = originalChildren[i];
            if (child && child !== dom && child !== f) if (null == f) dom.appendChild(child); else if (child === f.nextSibling) removeNode(f); else dom.insertBefore(child, f);
        }
        if (keyedLen) for (var i in keyed) if (void 0 !== keyed[i]) recollectNodeTree(keyed[i], !1);
        while (min <= childrenLen) if (void 0 !== (child = children[childrenLen--])) recollectNodeTree(child, !1);
    }
    function recollectNodeTree(node, unmountOnly) {
        var component = node._component;
        if (component) unmountComponent(component); else {
            if (null != node.__preactattr_) applyRef(node.__preactattr_.ref, null);
            if (!1 === unmountOnly || null == node.__preactattr_) removeNode(node);
            removeChildren(node);
        }
    }
    function removeChildren(node) {
        node = node.lastChild;
        while (node) {
            var next = node.previousSibling;
            recollectNodeTree(node, !0);
            node = next;
        }
    }
    function diffAttributes(dom, attrs, old) {
        var name;
        for (name in old) if ((!attrs || null == attrs[name]) && null != old[name]) setAccessor(dom, name, old[name], old[name] = void 0, isSvgMode);
        for (name in attrs) if (!('children' === name || 'innerHTML' === name || name in old && attrs[name] === ('value' === name || 'checked' === name ? dom[name] : old[name]))) setAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);
    }
    function createComponent(Ctor, props, context) {
        var inst, i = recyclerComponents.length;
        if (Ctor.prototype && Ctor.prototype.render) {
            inst = new Ctor(props, context);
            Component.call(inst, props, context);
        } else {
            inst = new Component(props, context);
            inst.constructor = Ctor;
            inst.render = doRender;
        }
        while (i--) if (recyclerComponents[i].constructor === Ctor) {
            inst.__b = recyclerComponents[i].__b;
            recyclerComponents.splice(i, 1);
            return inst;
        }
        return inst;
    }
    function doRender(props, state, context) {
        return this.constructor(props, context);
    }
    function setComponentProps(component, props, renderMode, context, mountAll) {
        if (!component.__x) {
            component.__x = !0;
            component.__r = props.ref;
            component.__k = props.key;
            delete props.ref;
            delete props.key;
            if (void 0 === component.constructor.getDerivedStateFromProps) if (!component.base || mountAll) {
                if (component.componentWillMount) component.componentWillMount();
            } else if (component.componentWillReceiveProps) component.componentWillReceiveProps(props, context);
            if (context && context !== component.context) {
                if (!component.__c) component.__c = component.context;
                component.context = context;
            }
            if (!component.__p) component.__p = component.props;
            component.props = props;
            component.__x = !1;
            if (0 !== renderMode) if (1 === renderMode || !1 !== options.syncComponentUpdates || !component.base) renderComponent(component, 1, mountAll); else enqueueRender(component);
            applyRef(component.__r, component);
        }
    }
    function renderComponent(component, renderMode, mountAll, isChild) {
        if (!component.__x) {
            var rendered, inst, cbase, props = component.props, state = component.state, context = component.context, previousProps = component.__p || props, previousState = component.__s || state, previousContext = component.__c || context, isUpdate = component.base, nextBase = component.__b, initialBase = isUpdate || nextBase, initialChildComponent = component._component, skip = !1, snapshot = previousContext;
            if (component.constructor.getDerivedStateFromProps) {
                state = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));
                component.state = state;
            }
            if (isUpdate) {
                component.props = previousProps;
                component.state = previousState;
                component.context = previousContext;
                if (2 !== renderMode && component.shouldComponentUpdate && !1 === component.shouldComponentUpdate(props, state, context)) skip = !0; else if (component.componentWillUpdate) component.componentWillUpdate(props, state, context);
                component.props = props;
                component.state = state;
                component.context = context;
            }
            component.__p = component.__s = component.__c = component.__b = null;
            component.__d = !1;
            if (!skip) {
                rendered = component.render(props, state, context);
                if (component.getChildContext) context = extend(extend({}, context), component.getChildContext());
                if (isUpdate && component.getSnapshotBeforeUpdate) snapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);
                var toUnmount, base, childComponent = rendered && rendered.nodeName;
                if ('function' == typeof childComponent) {
                    var childProps = getNodeProps(rendered);
                    inst = initialChildComponent;
                    if (inst && inst.constructor === childComponent && childProps.key == inst.__k) setComponentProps(inst, childProps, 1, context, !1); else {
                        toUnmount = inst;
                        component._component = inst = createComponent(childComponent, childProps, context);
                        inst.__b = inst.__b || nextBase;
                        inst.__u = component;
                        setComponentProps(inst, childProps, 0, context, !1);
                        renderComponent(inst, 1, mountAll, !0);
                    }
                    base = inst.base;
                } else {
                    cbase = initialBase;
                    toUnmount = initialChildComponent;
                    if (toUnmount) cbase = component._component = null;
                    if (initialBase || 1 === renderMode) {
                        if (cbase) cbase._component = null;
                        base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, !0);
                    }
                }
                if (initialBase && base !== initialBase && inst !== initialChildComponent) {
                    var baseParent = initialBase.parentNode;
                    if (baseParent && base !== baseParent) {
                        baseParent.replaceChild(base, initialBase);
                        if (!toUnmount) {
                            initialBase._component = null;
                            recollectNodeTree(initialBase, !1);
                        }
                    }
                }
                if (toUnmount) unmountComponent(toUnmount);
                component.base = base;
                if (base && !isChild) {
                    var componentRef = component, t = component;
                    while (t = t.__u) (componentRef = t).base = base;
                    base._component = componentRef;
                    base._componentConstructor = componentRef.constructor;
                }
            }
            if (!isUpdate || mountAll) mounts.push(component); else if (!skip) {
                if (component.componentDidUpdate) component.componentDidUpdate(previousProps, previousState, snapshot);
                if (options.afterUpdate) options.afterUpdate(component);
            }
            while (component.__h.length) component.__h.pop().call(component);
            if (!diffLevel && !isChild) flushMounts();
        }
    }
    function buildComponentFromVNode(dom, vnode, context, mountAll) {
        var c = dom && dom._component, originalComponent = c, oldDom = dom, isDirectOwner = c && dom._componentConstructor === vnode.nodeName, isOwner = isDirectOwner, props = getNodeProps(vnode);
        while (c && !isOwner && (c = c.__u)) isOwner = c.constructor === vnode.nodeName;
        if (c && isOwner && (!mountAll || c._component)) {
            setComponentProps(c, props, 3, context, mountAll);
            dom = c.base;
        } else {
            if (originalComponent && !isDirectOwner) {
                unmountComponent(originalComponent);
                dom = oldDom = null;
            }
            c = createComponent(vnode.nodeName, props, context);
            if (dom && !c.__b) {
                c.__b = dom;
                oldDom = null;
            }
            setComponentProps(c, props, 1, context, mountAll);
            dom = c.base;
            if (oldDom && dom !== oldDom) {
                oldDom._component = null;
                recollectNodeTree(oldDom, !1);
            }
        }
        return dom;
    }
    function unmountComponent(component) {
        if (options.beforeUnmount) options.beforeUnmount(component);
        var base = component.base;
        component.__x = !0;
        if (component.componentWillUnmount) component.componentWillUnmount();
        component.base = null;
        var inner = component._component;
        if (inner) unmountComponent(inner); else if (base) {
            if (null != base.__preactattr_) applyRef(base.__preactattr_.ref, null);
            component.__b = base;
            removeNode(base);
            recyclerComponents.push(component);
            removeChildren(base);
        }
        applyRef(component.__r, null);
    }
    function Component(props, context) {
        this.__d = !0;
        this.context = context;
        this.props = props;
        this.state = this.state || {};
        this.__h = [];
    }
    function render(vnode, parent, merge) {
        return diff(merge, vnode, {}, !1, parent, !1);
    }
    function createRef() {
        return {};
    }
    var VNode = function() {};
    var options = {};
    var stack = [];
    var EMPTY_CHILDREN = [];
    var defer = 'function' == typeof Promise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;
    var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
    var items = [];
    var mounts = [];
    var diffLevel = 0;
    var isSvgMode = !1;
    var hydrating = !1;
    var recyclerComponents = [];
    extend(Component.prototype, {
        setState: function(state, callback) {
            if (!this.__s) this.__s = this.state;
            this.state = extend(extend({}, this.state), 'function' == typeof state ? state(this.state, this.props) : state);
            if (callback) this.__h.push(callback);
            enqueueRender(this);
        },
        forceUpdate: function(callback) {
            if (callback) this.__h.push(callback);
            renderComponent(this, 2);
        },
        render: function() {}
    });
    var preact = {
        h: h,
        createElement: h,
        cloneElement: cloneElement,
        createRef: createRef,
        Component: Component,
        render: render,
        rerender: rerender,
        options: options
    };
    if ('undefined' != typeof module) module.exports = preact; else self.preact = preact;
}();

},{}],185:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],186:[function(require,module,exports){
var noCase = require('no-case')
var upperCaseFirst = require('upper-case-first')

/**
 * Sentence case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return upperCaseFirst(noCase(value, locale), locale)
}

},{"no-case":176,"upper-case-first":191}],187:[function(require,module,exports){
var noCase = require('no-case')

/**
 * Snake case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale, '_')
}

},{"no-case":176}],188:[function(require,module,exports){
var upperCase = require('upper-case')
var lowerCase = require('lower-case')

/**
 * Swap the case of a string. Manually iterate over every character and check
 * instead of replacing certain characters for better unicode support.
 *
 * @param  {String} str
 * @param  {String} [locale]
 * @return {String}
 */
module.exports = function (str, locale) {
  if (str == null) {
    return ''
  }

  var result = ''

  for (var i = 0; i < str.length; i++) {
    var c = str[i]
    var u = upperCase(c, locale)

    result += u === c ? lowerCase(c, locale) : u
  }

  return result
}

},{"lower-case":175,"upper-case":192}],189:[function(require,module,exports){
var noCase = require('no-case')
var upperCase = require('upper-case')

/**
 * Title case a string.
 *
 * @param  {string} value
 * @param  {string} [locale]
 * @return {string}
 */
module.exports = function (value, locale) {
  return noCase(value, locale).replace(/^.| ./g, function (m) {
    return upperCase(m, locale)
  })
}

},{"no-case":176,"upper-case":192}],190:[function(require,module,exports){
(function (global){
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global global, define, System, Reflect, Promise */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

    __extends = function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function (m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    };

    __values = function (o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result["default"] = mod;
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],191:[function(require,module,exports){
var upperCase = require('upper-case')

/**
 * Upper case the first character of a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  if (str == null) {
    return ''
  }

  str = String(str)

  return upperCase(str.charAt(0), locale) + str.substr(1)
}

},{"upper-case":192}],192:[function(require,module,exports){
/**
 * Special language-specific overrides.
 *
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 *
 * @type {Object}
 */
var LANGUAGES = {
  tr: {
    regexp: /[\u0069]/g,
    map: {
      '\u0069': '\u0130'
    }
  },
  az: {
    regexp: /[\u0069]/g,
    map: {
      '\u0069': '\u0130'
    }
  },
  lt: {
    regexp: /[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,
    map: {
      '\u0069\u0307': '\u0049',
      '\u006A\u0307': '\u004A',
      '\u012F\u0307': '\u012E',
      '\u0069\u0307\u0300': '\u00CC',
      '\u0069\u0307\u0301': '\u00CD',
      '\u0069\u0307\u0303': '\u0128'
    }
  }
}

/**
 * Upper case a string.
 *
 * @param  {String} str
 * @return {String}
 */
module.exports = function (str, locale) {
  var lang = LANGUAGES[locale]

  str = str == null ? '' : String(str)

  if (lang) {
    str = str.replace(lang.regexp, function (m) { return lang.map[m] })
  }

  return str.toUpperCase()
}

},{}]},{},[117]);
